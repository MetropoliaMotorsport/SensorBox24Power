
SensorBox24Power.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000071a8  080001d8  080001d8  000011d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  08007380  08007380  00008380  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080073a0  080073a0  0000900c  2**0
                  CONTENTS
  4 .ARM          00000000  080073a0  080073a0  0000900c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080073a0  080073a0  0000900c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080073a0  080073a0  000083a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080073a4  080073a4  000083a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  080073a8  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000694  2000000c  080073b4  0000900c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200006a0  080073b4  000096a0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000900c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00015576  00000000  00000000  0000903c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000029ad  00000000  00000000  0001e5b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001408  00000000  00000000  00020f60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000f6a  00000000  00000000  00022368  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00020752  00000000  00000000  000232d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001518b  00000000  00000000  00043a24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000da59c  00000000  00000000  00058baf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0013314b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000055fc  00000000  00000000  00133190  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005b  00000000  00000000  0013878c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c05      	ldr	r4, [pc, #20]	@ (80001f0 <__do_global_dtors_aux+0x18>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b933      	cbnz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e0:	4b04      	ldr	r3, [pc, #16]	@ (80001f4 <__do_global_dtors_aux+0x1c>)
 80001e2:	b113      	cbz	r3, 80001ea <__do_global_dtors_aux+0x12>
 80001e4:	4804      	ldr	r0, [pc, #16]	@ (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	f3af 8000 	nop.w
 80001ea:	2301      	movs	r3, #1
 80001ec:	7023      	strb	r3, [r4, #0]
 80001ee:	bd10      	pop	{r4, pc}
 80001f0:	2000000c 	.word	0x2000000c
 80001f4:	00000000 	.word	0x00000000
 80001f8:	08007368 	.word	0x08007368

080001fc <frame_dummy>:
 80001fc:	b508      	push	{r3, lr}
 80001fe:	4b03      	ldr	r3, [pc, #12]	@ (800020c <frame_dummy+0x10>)
 8000200:	b11b      	cbz	r3, 800020a <frame_dummy+0xe>
 8000202:	4903      	ldr	r1, [pc, #12]	@ (8000210 <frame_dummy+0x14>)
 8000204:	4803      	ldr	r0, [pc, #12]	@ (8000214 <frame_dummy+0x18>)
 8000206:	f3af 8000 	nop.w
 800020a:	bd08      	pop	{r3, pc}
 800020c:	00000000 	.word	0x00000000
 8000210:	20000010 	.word	0x20000010
 8000214:	08007368 	.word	0x08007368

08000218 <set_pwm_duty_cycle>:
#include "main.h"
#include "functions.h"
#include "string.h"


void set_pwm_duty_cycle(TIM_HandleTypeDef *htim){
 8000218:	b580      	push	{r7, lr}
 800021a:	b082      	sub	sp, #8
 800021c:	af00      	add	r7, sp, #0
 800021e:	6078      	str	r0, [r7, #4]
	if(check_bit(PWM_out_enable,1) != 0){
 8000220:	4b1e      	ldr	r3, [pc, #120]	@ (800029c <set_pwm_duty_cycle+0x84>)
 8000222:	781b      	ldrb	r3, [r3, #0]
 8000224:	2101      	movs	r1, #1
 8000226:	4618      	mov	r0, r3
 8000228:	f000 fe22 	bl	8000e70 <check_bit>
 800022c:	4603      	mov	r3, r0
 800022e:	2b00      	cmp	r3, #0
 8000230:	d010      	beq.n	8000254 <set_pwm_duty_cycle+0x3c>
		PWM_speed[0] = (PWM_width[0] * 40)/100;
 8000232:	4b1b      	ldr	r3, [pc, #108]	@ (80002a0 <set_pwm_duty_cycle+0x88>)
 8000234:	881b      	ldrh	r3, [r3, #0]
 8000236:	461a      	mov	r2, r3
 8000238:	4613      	mov	r3, r2
 800023a:	009b      	lsls	r3, r3, #2
 800023c:	4413      	add	r3, r2
 800023e:	00db      	lsls	r3, r3, #3
 8000240:	4a18      	ldr	r2, [pc, #96]	@ (80002a4 <set_pwm_duty_cycle+0x8c>)
 8000242:	fb82 1203 	smull	r1, r2, r2, r3
 8000246:	1152      	asrs	r2, r2, #5
 8000248:	17db      	asrs	r3, r3, #31
 800024a:	1ad3      	subs	r3, r2, r3
 800024c:	b29a      	uxth	r2, r3
 800024e:	4b16      	ldr	r3, [pc, #88]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000250:	801a      	strh	r2, [r3, #0]
 8000252:	e002      	b.n	800025a <set_pwm_duty_cycle+0x42>
	}else{
		PWM_speed[0] = 0;
 8000254:	4b14      	ldr	r3, [pc, #80]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000256:	2200      	movs	r2, #0
 8000258:	801a      	strh	r2, [r3, #0]
	}
	if(check_bit(PWM_out_enable,0) != 0){
 800025a:	4b10      	ldr	r3, [pc, #64]	@ (800029c <set_pwm_duty_cycle+0x84>)
 800025c:	781b      	ldrb	r3, [r3, #0]
 800025e:	2100      	movs	r1, #0
 8000260:	4618      	mov	r0, r3
 8000262:	f000 fe05 	bl	8000e70 <check_bit>
 8000266:	4603      	mov	r3, r0
 8000268:	2b00      	cmp	r3, #0
 800026a:	d010      	beq.n	800028e <set_pwm_duty_cycle+0x76>
		PWM_speed[1] = (PWM_width[1] * 40)/100;
 800026c:	4b0c      	ldr	r3, [pc, #48]	@ (80002a0 <set_pwm_duty_cycle+0x88>)
 800026e:	885b      	ldrh	r3, [r3, #2]
 8000270:	461a      	mov	r2, r3
 8000272:	4613      	mov	r3, r2
 8000274:	009b      	lsls	r3, r3, #2
 8000276:	4413      	add	r3, r2
 8000278:	00db      	lsls	r3, r3, #3
 800027a:	4a0a      	ldr	r2, [pc, #40]	@ (80002a4 <set_pwm_duty_cycle+0x8c>)
 800027c:	fb82 1203 	smull	r1, r2, r2, r3
 8000280:	1152      	asrs	r2, r2, #5
 8000282:	17db      	asrs	r3, r3, #31
 8000284:	1ad3      	subs	r3, r2, r3
 8000286:	b29a      	uxth	r2, r3
 8000288:	4b07      	ldr	r3, [pc, #28]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 800028a:	805a      	strh	r2, [r3, #2]
	}else{
		PWM_speed[1] = 0;
	}
}
 800028c:	e002      	b.n	8000294 <set_pwm_duty_cycle+0x7c>
		PWM_speed[1] = 0;
 800028e:	4b06      	ldr	r3, [pc, #24]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000290:	2200      	movs	r2, #0
 8000292:	805a      	strh	r2, [r3, #2]
}
 8000294:	bf00      	nop
 8000296:	3708      	adds	r7, #8
 8000298:	46bd      	mov	sp, r7
 800029a:	bd80      	pop	{r7, pc}
 800029c:	2000063c 	.word	0x2000063c
 80002a0:	20000640 	.word	0x20000640
 80002a4:	51eb851f 	.word	0x51eb851f
 80002a8:	20000644 	.word	0x20000644

080002ac <Config_Setup>:
#include "functions.h"
#include "commands.h"
#include "config.h"

void Config_Setup(void)
{
 80002ac:	b580      	push	{r7, lr}
 80002ae:	af00      	add	r7, sp, #0
#if ID == 1

		Config_1();
 80002b0:	f000 f802 	bl	80002b8 <Config_1>
#else //catch everything that is not a proper ID, give it settings that the debug board would get

		Config_3();

#endif
}
 80002b4:	bf00      	nop
 80002b6:	bd80      	pop	{r7, pc}

080002b8 <Config_1>:

void Config_1(void){
 80002b8:	b580      	push	{r7, lr}
 80002ba:	af00      	add	r7, sp, #0

	CAN_ID = 17;
 80002bc:	4b48      	ldr	r3, [pc, #288]	@ (80003e0 <Config_1+0x128>)
 80002be:	2211      	movs	r2, #17
 80002c0:	701a      	strb	r2, [r3, #0]
	CAN_interval = 1000; //in ms
 80002c2:	4b48      	ldr	r3, [pc, #288]	@ (80003e4 <Config_1+0x12c>)
 80002c4:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80002c8:	801a      	strh	r2, [r3, #0]

	//OUTPUT 1 in mA
	Warning_Current[0] = 1900;
 80002ca:	4b47      	ldr	r3, [pc, #284]	@ (80003e8 <Config_1+0x130>)
 80002cc:	f240 726c 	movw	r2, #1900	@ 0x76c
 80002d0:	801a      	strh	r2, [r3, #0]
	Over_Current[0] = 2050;
 80002d2:	4b46      	ldr	r3, [pc, #280]	@ (80003ec <Config_1+0x134>)
 80002d4:	f640 0202 	movw	r2, #2050	@ 0x802
 80002d8:	801a      	strh	r2, [r3, #0]
	Under_Current[0] = 00;
 80002da:	4b45      	ldr	r3, [pc, #276]	@ (80003f0 <Config_1+0x138>)
 80002dc:	2200      	movs	r2, #0
 80002de:	801a      	strh	r2, [r3, #0]

	//OUTPUT 2 in mA
	Warning_Current[1] = 1900;
 80002e0:	4b41      	ldr	r3, [pc, #260]	@ (80003e8 <Config_1+0x130>)
 80002e2:	f240 726c 	movw	r2, #1900	@ 0x76c
 80002e6:	805a      	strh	r2, [r3, #2]
	Over_Current[1] = 2050;
 80002e8:	4b40      	ldr	r3, [pc, #256]	@ (80003ec <Config_1+0x134>)
 80002ea:	f640 0202 	movw	r2, #2050	@ 0x802
 80002ee:	805a      	strh	r2, [r3, #2]
	Under_Current[1] = 00;
 80002f0:	4b3f      	ldr	r3, [pc, #252]	@ (80003f0 <Config_1+0x138>)
 80002f2:	2200      	movs	r2, #0
 80002f4:	805a      	strh	r2, [r3, #2]

	//OUTPUT 3 in mA
	Warning_Current[2] = 1900;
 80002f6:	4b3c      	ldr	r3, [pc, #240]	@ (80003e8 <Config_1+0x130>)
 80002f8:	f240 726c 	movw	r2, #1900	@ 0x76c
 80002fc:	809a      	strh	r2, [r3, #4]
	Over_Current[2] = 2050;
 80002fe:	4b3b      	ldr	r3, [pc, #236]	@ (80003ec <Config_1+0x134>)
 8000300:	f640 0202 	movw	r2, #2050	@ 0x802
 8000304:	809a      	strh	r2, [r3, #4]
	Under_Current[2] = 00;
 8000306:	4b3a      	ldr	r3, [pc, #232]	@ (80003f0 <Config_1+0x138>)
 8000308:	2200      	movs	r2, #0
 800030a:	809a      	strh	r2, [r3, #4]

	//OUTPUT 4 in mA
	Warning_Current[3] = 1900;
 800030c:	4b36      	ldr	r3, [pc, #216]	@ (80003e8 <Config_1+0x130>)
 800030e:	f240 726c 	movw	r2, #1900	@ 0x76c
 8000312:	80da      	strh	r2, [r3, #6]
	Over_Current[3] = 2050;
 8000314:	4b35      	ldr	r3, [pc, #212]	@ (80003ec <Config_1+0x134>)
 8000316:	f640 0202 	movw	r2, #2050	@ 0x802
 800031a:	80da      	strh	r2, [r3, #6]
	Under_Current[3] = 00;
 800031c:	4b34      	ldr	r3, [pc, #208]	@ (80003f0 <Config_1+0x138>)
 800031e:	2200      	movs	r2, #0
 8000320:	80da      	strh	r2, [r3, #6]

	//OUTPUT 5 in mA
	Warning_Current[4] = 1900;
 8000322:	4b31      	ldr	r3, [pc, #196]	@ (80003e8 <Config_1+0x130>)
 8000324:	f240 726c 	movw	r2, #1900	@ 0x76c
 8000328:	811a      	strh	r2, [r3, #8]
	Over_Current[4] = 2050;
 800032a:	4b30      	ldr	r3, [pc, #192]	@ (80003ec <Config_1+0x134>)
 800032c:	f640 0202 	movw	r2, #2050	@ 0x802
 8000330:	811a      	strh	r2, [r3, #8]
	Under_Current[4] = 00;
 8000332:	4b2f      	ldr	r3, [pc, #188]	@ (80003f0 <Config_1+0x138>)
 8000334:	2200      	movs	r2, #0
 8000336:	811a      	strh	r2, [r3, #8]

	//OUTPUT 6 in mA
	Warning_Current[5] = 1900;
 8000338:	4b2b      	ldr	r3, [pc, #172]	@ (80003e8 <Config_1+0x130>)
 800033a:	f240 726c 	movw	r2, #1900	@ 0x76c
 800033e:	815a      	strh	r2, [r3, #10]
	Over_Current[5] = 2050;
 8000340:	4b2a      	ldr	r3, [pc, #168]	@ (80003ec <Config_1+0x134>)
 8000342:	f640 0202 	movw	r2, #2050	@ 0x802
 8000346:	815a      	strh	r2, [r3, #10]
	Under_Current[5] = 00;
 8000348:	4b29      	ldr	r3, [pc, #164]	@ (80003f0 <Config_1+0x138>)
 800034a:	2200      	movs	r2, #0
 800034c:	815a      	strh	r2, [r3, #10]

	//OUTPUT 7 in mA
	Warning_Current[6] = 1900;
 800034e:	4b26      	ldr	r3, [pc, #152]	@ (80003e8 <Config_1+0x130>)
 8000350:	f240 726c 	movw	r2, #1900	@ 0x76c
 8000354:	819a      	strh	r2, [r3, #12]
	Over_Current[6] = 2050;
 8000356:	4b25      	ldr	r3, [pc, #148]	@ (80003ec <Config_1+0x134>)
 8000358:	f640 0202 	movw	r2, #2050	@ 0x802
 800035c:	819a      	strh	r2, [r3, #12]
	Under_Current[6] = 00;
 800035e:	4b24      	ldr	r3, [pc, #144]	@ (80003f0 <Config_1+0x138>)
 8000360:	2200      	movs	r2, #0
 8000362:	819a      	strh	r2, [r3, #12]

	//OUTPUT 8 in mA
	Warning_Current[7] = 1900;
 8000364:	4b20      	ldr	r3, [pc, #128]	@ (80003e8 <Config_1+0x130>)
 8000366:	f240 726c 	movw	r2, #1900	@ 0x76c
 800036a:	81da      	strh	r2, [r3, #14]
	Over_Current[7] = 2050;
 800036c:	4b1f      	ldr	r3, [pc, #124]	@ (80003ec <Config_1+0x134>)
 800036e:	f640 0202 	movw	r2, #2050	@ 0x802
 8000372:	81da      	strh	r2, [r3, #14]
	Under_Current[7] = 00;
 8000374:	4b1e      	ldr	r3, [pc, #120]	@ (80003f0 <Config_1+0x138>)
 8000376:	2200      	movs	r2, #0
 8000378:	81da      	strh	r2, [r3, #14]

	//For analog node
	Warning_Current[8] = 2000;
 800037a:	4b1b      	ldr	r3, [pc, #108]	@ (80003e8 <Config_1+0x130>)
 800037c:	f44f 62fa 	mov.w	r2, #2000	@ 0x7d0
 8000380:	821a      	strh	r2, [r3, #16]
	Over_Current[8] = 2000;
 8000382:	4b1a      	ldr	r3, [pc, #104]	@ (80003ec <Config_1+0x134>)
 8000384:	f44f 62fa 	mov.w	r2, #2000	@ 0x7d0
 8000388:	821a      	strh	r2, [r3, #16]
	Under_Current[8] = 0;
 800038a:	4b19      	ldr	r3, [pc, #100]	@ (80003f0 <Config_1+0x138>)
 800038c:	2200      	movs	r2, #0
 800038e:	821a      	strh	r2, [r3, #16]

	Default_Switch_State = 0b00001111; //each bit represent one output [8,7,6,5,4,3,2,1]
 8000390:	4b18      	ldr	r3, [pc, #96]	@ (80003f4 <Config_1+0x13c>)
 8000392:	220f      	movs	r2, #15
 8000394:	701a      	strb	r2, [r3, #0]

	output_list[0] = BRAKE_LIGHT;
 8000396:	4b18      	ldr	r3, [pc, #96]	@ (80003f8 <Config_1+0x140>)
 8000398:	2201      	movs	r2, #1
 800039a:	701a      	strb	r2, [r3, #0]
	output_list[1] = FAN;
 800039c:	4b16      	ldr	r3, [pc, #88]	@ (80003f8 <Config_1+0x140>)
 800039e:	2203      	movs	r2, #3
 80003a0:	705a      	strb	r2, [r3, #1]
	output_list[2] = FAN;
 80003a2:	4b15      	ldr	r3, [pc, #84]	@ (80003f8 <Config_1+0x140>)
 80003a4:	2203      	movs	r2, #3
 80003a6:	709a      	strb	r2, [r3, #2]
	output_list[3] = PUMP;
 80003a8:	4b13      	ldr	r3, [pc, #76]	@ (80003f8 <Config_1+0x140>)
 80003aa:	2204      	movs	r2, #4
 80003ac:	70da      	strb	r2, [r3, #3]
	output_list[4] = 0;	//NC
 80003ae:	4b12      	ldr	r3, [pc, #72]	@ (80003f8 <Config_1+0x140>)
 80003b0:	2200      	movs	r2, #0
 80003b2:	711a      	strb	r2, [r3, #4]
	output_list[5] = 0;	//NC
 80003b4:	4b10      	ldr	r3, [pc, #64]	@ (80003f8 <Config_1+0x140>)
 80003b6:	2200      	movs	r2, #0
 80003b8:	715a      	strb	r2, [r3, #5]
	output_list[6] = 0;	//NC
 80003ba:	4b0f      	ldr	r3, [pc, #60]	@ (80003f8 <Config_1+0x140>)
 80003bc:	2200      	movs	r2, #0
 80003be:	719a      	strb	r2, [r3, #6]
	output_list[7] = 0;	//NC
 80003c0:	4b0d      	ldr	r3, [pc, #52]	@ (80003f8 <Config_1+0x140>)
 80003c2:	2200      	movs	r2, #0
 80003c4:	71da      	strb	r2, [r3, #7]

	PWM_out_enable = 0b11;
 80003c6:	4b0d      	ldr	r3, [pc, #52]	@ (80003fc <Config_1+0x144>)
 80003c8:	2203      	movs	r2, #3
 80003ca:	701a      	strb	r2, [r3, #0]

	//Duty cycle 0-100%
	PWM_width[0] = 10;
 80003cc:	4b0c      	ldr	r3, [pc, #48]	@ (8000400 <Config_1+0x148>)
 80003ce:	220a      	movs	r2, #10
 80003d0:	801a      	strh	r2, [r3, #0]
	PWM_width[1] = 10;
 80003d2:	4b0b      	ldr	r3, [pc, #44]	@ (8000400 <Config_1+0x148>)
 80003d4:	220a      	movs	r2, #10
 80003d6:	805a      	strh	r2, [r3, #2]

	output();
 80003d8:	f000 f86a 	bl	80004b0 <output>
}
 80003dc:	bf00      	nop
 80003de:	bd80      	pop	{r7, pc}
 80003e0:	20000648 	.word	0x20000648
 80003e4:	2000064a 	.word	0x2000064a
 80003e8:	200005fc 	.word	0x200005fc
 80003ec:	2000060c 	.word	0x2000060c
 80003f0:	2000061c 	.word	0x2000061c
 80003f4:	20000632 	.word	0x20000632
 80003f8:	20000634 	.word	0x20000634
 80003fc:	2000063c 	.word	0x2000063c
 8000400:	20000640 	.word	0x20000640

08000404 <HAL_FDCAN_RxFifo0Callback>:
uint8_t TxData[8];
uint8_t toggle = 0;


void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo0ITs)
{
 8000404:	b580      	push	{r7, lr}
 8000406:	b082      	sub	sp, #8
 8000408:	af00      	add	r7, sp, #0
 800040a:	6078      	str	r0, [r7, #4]
 800040c:	6039      	str	r1, [r7, #0]
	if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 800040e:	683b      	ldr	r3, [r7, #0]
 8000410:	f003 0301 	and.w	r3, r3, #1
 8000414:	2b00      	cmp	r3, #0
 8000416:	d01d      	beq.n	8000454 <HAL_FDCAN_RxFifo0Callback+0x50>
	{
		/* Retreive Rx messages from RX FIFO0 */
		if (HAL_FDCAN_GetRxMessage(hfdcan, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK)
 8000418:	4b10      	ldr	r3, [pc, #64]	@ (800045c <HAL_FDCAN_RxFifo0Callback+0x58>)
 800041a:	4a11      	ldr	r2, [pc, #68]	@ (8000460 <HAL_FDCAN_RxFifo0Callback+0x5c>)
 800041c:	2140      	movs	r1, #64	@ 0x40
 800041e:	6878      	ldr	r0, [r7, #4]
 8000420:	f003 fe86 	bl	8004130 <HAL_FDCAN_GetRxMessage>
 8000424:	4603      	mov	r3, r0
 8000426:	2b00      	cmp	r3, #0
 8000428:	d002      	beq.n	8000430 <HAL_FDCAN_RxFifo0Callback+0x2c>
		{
			/* Reception Error */
			Error_Handler();
 800042a:	f001 fa9b 	bl	8001964 <Error_Handler>
 800042e:	e007      	b.n	8000440 <HAL_FDCAN_RxFifo0Callback+0x3c>
		}else{
			if(RxHeader.Identifier == CAN_ID){
 8000430:	4b0b      	ldr	r3, [pc, #44]	@ (8000460 <HAL_FDCAN_RxFifo0Callback+0x5c>)
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	4a0b      	ldr	r2, [pc, #44]	@ (8000464 <HAL_FDCAN_RxFifo0Callback+0x60>)
 8000436:	7812      	ldrb	r2, [r2, #0]
 8000438:	4293      	cmp	r3, r2
 800043a:	d101      	bne.n	8000440 <HAL_FDCAN_RxFifo0Callback+0x3c>
				decode();
 800043c:	f000 f8dc 	bl	80005f8 <decode>
			}
		}

		if (HAL_FDCAN_ActivateNotification(hfdcan, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK)
 8000440:	2200      	movs	r2, #0
 8000442:	2101      	movs	r1, #1
 8000444:	6878      	ldr	r0, [r7, #4]
 8000446:	f003 ff8d 	bl	8004364 <HAL_FDCAN_ActivateNotification>
 800044a:	4603      	mov	r3, r0
 800044c:	2b00      	cmp	r3, #0
 800044e:	d001      	beq.n	8000454 <HAL_FDCAN_RxFifo0Callback+0x50>
		{
			/* Notification Error */
			Error_Handler();
 8000450:	f001 fa88 	bl	8001964 <Error_Handler>
		}
	}
}
 8000454:	bf00      	nop
 8000456:	3708      	adds	r7, #8
 8000458:	46bd      	mov	sp, r7
 800045a:	bd80      	pop	{r7, pc}
 800045c:	20000028 	.word	0x20000028
 8000460:	20000670 	.word	0x20000670
 8000464:	20000648 	.word	0x20000648

08000468 <CanSend>:

void CanSend(uint8_t *TxData){
 8000468:	b580      	push	{r7, lr}
 800046a:	b082      	sub	sp, #8
 800046c:	af00      	add	r7, sp, #0
 800046e:	6078      	str	r0, [r7, #4]
	while(HAL_FDCAN_GetTxFifoFreeLevel(&hfdcan1) != 0 && HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK){
 8000470:	e006      	b.n	8000480 <CanSend+0x18>
		Error_Handler();
 8000472:	f001 fa77 	bl	8001964 <Error_Handler>
		HAL_GPIO_WritePin(GPIOB,LED1_Pin,0);
 8000476:	2200      	movs	r2, #0
 8000478:	2101      	movs	r1, #1
 800047a:	480a      	ldr	r0, [pc, #40]	@ (80004a4 <CanSend+0x3c>)
 800047c:	f004 fc3a 	bl	8004cf4 <HAL_GPIO_WritePin>
	while(HAL_FDCAN_GetTxFifoFreeLevel(&hfdcan1) != 0 && HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK){
 8000480:	4809      	ldr	r0, [pc, #36]	@ (80004a8 <CanSend+0x40>)
 8000482:	f003 ff5d 	bl	8004340 <HAL_FDCAN_GetTxFifoFreeLevel>
 8000486:	4603      	mov	r3, r0
 8000488:	2b00      	cmp	r3, #0
 800048a:	d007      	beq.n	800049c <CanSend+0x34>
 800048c:	687a      	ldr	r2, [r7, #4]
 800048e:	4907      	ldr	r1, [pc, #28]	@ (80004ac <CanSend+0x44>)
 8000490:	4805      	ldr	r0, [pc, #20]	@ (80004a8 <CanSend+0x40>)
 8000492:	f003 fe09 	bl	80040a8 <HAL_FDCAN_AddMessageToTxFifoQ>
 8000496:	4603      	mov	r3, r0
 8000498:	2b00      	cmp	r3, #0
 800049a:	d1ea      	bne.n	8000472 <CanSend+0xa>
	}
}
 800049c:	bf00      	nop
 800049e:	3708      	adds	r7, #8
 80004a0:	46bd      	mov	sp, r7
 80004a2:	bd80      	pop	{r7, pc}
 80004a4:	48000400 	.word	0x48000400
 80004a8:	20000110 	.word	0x20000110
 80004ac:	2000064c 	.word	0x2000064c

080004b0 <output>:
	}
}



void output(){
 80004b0:	b580      	push	{r7, lr}
 80004b2:	b082      	sub	sp, #8
 80004b4:	af00      	add	r7, sp, #0
	uint8_t i = 0;
 80004b6:	2300      	movs	r3, #0
 80004b8:	71fb      	strb	r3, [r7, #7]
	uint8_t bit = 0;
 80004ba:	2300      	movs	r3, #0
 80004bc:	71bb      	strb	r3, [r7, #6]
	for(i = 0; i < 8;i++){
 80004be:	2300      	movs	r3, #0
 80004c0:	71fb      	strb	r3, [r7, #7]
 80004c2:	e065      	b.n	8000590 <output+0xe0>
		bit = check_bit(Default_Switch_State, i);
 80004c4:	4b36      	ldr	r3, [pc, #216]	@ (80005a0 <output+0xf0>)
 80004c6:	781b      	ldrb	r3, [r3, #0]
 80004c8:	79fa      	ldrb	r2, [r7, #7]
 80004ca:	4611      	mov	r1, r2
 80004cc:	4618      	mov	r0, r3
 80004ce:	f000 fccf 	bl	8000e70 <check_bit>
 80004d2:	4603      	mov	r3, r0
 80004d4:	71bb      	strb	r3, [r7, #6]
		switch(i){
 80004d6:	79fb      	ldrb	r3, [r7, #7]
 80004d8:	2b07      	cmp	r3, #7
 80004da:	d853      	bhi.n	8000584 <output+0xd4>
 80004dc:	a201      	add	r2, pc, #4	@ (adr r2, 80004e4 <output+0x34>)
 80004de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004e2:	bf00      	nop
 80004e4:	08000505 	.word	0x08000505
 80004e8:	08000513 	.word	0x08000513
 80004ec:	08000525 	.word	0x08000525
 80004f0:	08000537 	.word	0x08000537
 80004f4:	08000549 	.word	0x08000549
 80004f8:	08000559 	.word	0x08000559
 80004fc:	08000569 	.word	0x08000569
 8000500:	08000577 	.word	0x08000577
		case 0:
			HAL_GPIO_WritePin(GPIOB,IN0_Pin,bit);
 8000504:	79bb      	ldrb	r3, [r7, #6]
 8000506:	461a      	mov	r2, r3
 8000508:	2108      	movs	r1, #8
 800050a:	4826      	ldr	r0, [pc, #152]	@ (80005a4 <output+0xf4>)
 800050c:	f004 fbf2 	bl	8004cf4 <HAL_GPIO_WritePin>
			break;
 8000510:	e03b      	b.n	800058a <output+0xda>
		case 1:
			HAL_GPIO_WritePin(GPIOA,IN1_Pin,bit);
 8000512:	79bb      	ldrb	r3, [r7, #6]
 8000514:	461a      	mov	r2, r3
 8000516:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800051a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800051e:	f004 fbe9 	bl	8004cf4 <HAL_GPIO_WritePin>
			break;
 8000522:	e032      	b.n	800058a <output+0xda>
		case 2:
			HAL_GPIO_WritePin(GPIOA,IN2_Pin,bit);
 8000524:	79bb      	ldrb	r3, [r7, #6]
 8000526:	461a      	mov	r2, r3
 8000528:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800052c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000530:	f004 fbe0 	bl	8004cf4 <HAL_GPIO_WritePin>
			break;
 8000534:	e029      	b.n	800058a <output+0xda>
		case 3:
			HAL_GPIO_WritePin(GPIOA,IN3_Pin,bit);
 8000536:	79bb      	ldrb	r3, [r7, #6]
 8000538:	461a      	mov	r2, r3
 800053a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800053e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000542:	f004 fbd7 	bl	8004cf4 <HAL_GPIO_WritePin>
			break;
 8000546:	e020      	b.n	800058a <output+0xda>
		case 4:
			HAL_GPIO_WritePin(GPIOA,IN0_2_Pin,bit);
 8000548:	79bb      	ldrb	r3, [r7, #6]
 800054a:	461a      	mov	r2, r3
 800054c:	2110      	movs	r1, #16
 800054e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000552:	f004 fbcf 	bl	8004cf4 <HAL_GPIO_WritePin>
			break;
 8000556:	e018      	b.n	800058a <output+0xda>
		case 5:
			HAL_GPIO_WritePin(GPIOA,IN1_2_Pin,bit);
 8000558:	79bb      	ldrb	r3, [r7, #6]
 800055a:	461a      	mov	r2, r3
 800055c:	2102      	movs	r1, #2
 800055e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000562:	f004 fbc7 	bl	8004cf4 <HAL_GPIO_WritePin>
			break;
 8000566:	e010      	b.n	800058a <output+0xda>
		case 6:
			HAL_GPIO_WritePin(GPIOB,IN2_2_Pin,bit);
 8000568:	79bb      	ldrb	r3, [r7, #6]
 800056a:	461a      	mov	r2, r3
 800056c:	2180      	movs	r1, #128	@ 0x80
 800056e:	480d      	ldr	r0, [pc, #52]	@ (80005a4 <output+0xf4>)
 8000570:	f004 fbc0 	bl	8004cf4 <HAL_GPIO_WritePin>
			break;
 8000574:	e009      	b.n	800058a <output+0xda>
		case 7:
			HAL_GPIO_WritePin(GPIOB,IN3_2_Pin,bit);
 8000576:	79bb      	ldrb	r3, [r7, #6]
 8000578:	461a      	mov	r2, r3
 800057a:	2110      	movs	r1, #16
 800057c:	4809      	ldr	r0, [pc, #36]	@ (80005a4 <output+0xf4>)
 800057e:	f004 fbb9 	bl	8004cf4 <HAL_GPIO_WritePin>
			break;
 8000582:	e002      	b.n	800058a <output+0xda>
		default:
			Error_Handler();
 8000584:	f001 f9ee 	bl	8001964 <Error_Handler>
			break;
 8000588:	bf00      	nop
	for(i = 0; i < 8;i++){
 800058a:	79fb      	ldrb	r3, [r7, #7]
 800058c:	3301      	adds	r3, #1
 800058e:	71fb      	strb	r3, [r7, #7]
 8000590:	79fb      	ldrb	r3, [r7, #7]
 8000592:	2b07      	cmp	r3, #7
 8000594:	d996      	bls.n	80004c4 <output+0x14>
		}
	}
}
 8000596:	bf00      	nop
 8000598:	bf00      	nop
 800059a:	3708      	adds	r7, #8
 800059c:	46bd      	mov	sp, r7
 800059e:	bd80      	pop	{r7, pc}
 80005a0:	20000632 	.word	0x20000632
 80005a4:	48000400 	.word	0x48000400

080005a8 <Over_current>:

void Over_current(uint8_t output_pin){
 80005a8:	b580      	push	{r7, lr}
 80005aa:	b082      	sub	sp, #8
 80005ac:	af00      	add	r7, sp, #0
 80005ae:	4603      	mov	r3, r0
 80005b0:	71fb      	strb	r3, [r7, #7]
	TxData[0] = 15;
 80005b2:	4b06      	ldr	r3, [pc, #24]	@ (80005cc <Over_current+0x24>)
 80005b4:	220f      	movs	r2, #15
 80005b6:	701a      	strb	r2, [r3, #0]
	TxData[1] = output_pin;
 80005b8:	4a04      	ldr	r2, [pc, #16]	@ (80005cc <Over_current+0x24>)
 80005ba:	79fb      	ldrb	r3, [r7, #7]
 80005bc:	7053      	strb	r3, [r2, #1]
	CanSend(TxData);
 80005be:	4803      	ldr	r0, [pc, #12]	@ (80005cc <Over_current+0x24>)
 80005c0:	f7ff ff52 	bl	8000468 <CanSend>
}
 80005c4:	bf00      	nop
 80005c6:	3708      	adds	r7, #8
 80005c8:	46bd      	mov	sp, r7
 80005ca:	bd80      	pop	{r7, pc}
 80005cc:	20000030 	.word	0x20000030

080005d0 <Warning_current>:

void Warning_current(uint8_t output_pin){
 80005d0:	b580      	push	{r7, lr}
 80005d2:	b082      	sub	sp, #8
 80005d4:	af00      	add	r7, sp, #0
 80005d6:	4603      	mov	r3, r0
 80005d8:	71fb      	strb	r3, [r7, #7]
	TxData[0] = 14;
 80005da:	4b06      	ldr	r3, [pc, #24]	@ (80005f4 <Warning_current+0x24>)
 80005dc:	220e      	movs	r2, #14
 80005de:	701a      	strb	r2, [r3, #0]
	TxData[1] = output_pin;
 80005e0:	4a04      	ldr	r2, [pc, #16]	@ (80005f4 <Warning_current+0x24>)
 80005e2:	79fb      	ldrb	r3, [r7, #7]
 80005e4:	7053      	strb	r3, [r2, #1]
	CanSend(TxData);
 80005e6:	4803      	ldr	r0, [pc, #12]	@ (80005f4 <Warning_current+0x24>)
 80005e8:	f7ff ff3e 	bl	8000468 <CanSend>
}
 80005ec:	bf00      	nop
 80005ee:	3708      	adds	r7, #8
 80005f0:	46bd      	mov	sp, r7
 80005f2:	bd80      	pop	{r7, pc}
 80005f4:	20000030 	.word	0x20000030

080005f8 <decode>:
	TxData[0] = 13;
	TxData[1] = output_pin;
	CanSend(TxData);
}

void decode(){
 80005f8:	b580      	push	{r7, lr}
 80005fa:	b082      	sub	sp, #8
 80005fc:	af00      	add	r7, sp, #0
	switch(RxData[0]){
 80005fe:	4b36      	ldr	r3, [pc, #216]	@ (80006d8 <decode+0xe0>)
 8000600:	781b      	ldrb	r3, [r3, #0]
 8000602:	3b01      	subs	r3, #1
 8000604:	2b03      	cmp	r3, #3
 8000606:	d860      	bhi.n	80006ca <decode+0xd2>
 8000608:	a201      	add	r2, pc, #4	@ (adr r2, 8000610 <decode+0x18>)
 800060a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800060e:	bf00      	nop
 8000610:	08000621 	.word	0x08000621
 8000614:	0800065b 	.word	0x0800065b
 8000618:	0800067b 	.word	0x0800067b
 800061c:	0800068d 	.word	0x0800068d
	case 1:							//Set PWM RxData[1] -> which PWM, RxData[2] = 1 -> Duty Cycle || RxData[2] = 2 -> Frequency, RxData[3] -> value
		switch(RxData[1]){
 8000620:	4b2d      	ldr	r3, [pc, #180]	@ (80006d8 <decode+0xe0>)
 8000622:	785b      	ldrb	r3, [r3, #1]
 8000624:	2b01      	cmp	r3, #1
 8000626:	d002      	beq.n	800062e <decode+0x36>
 8000628:	2b02      	cmp	r3, #2
 800062a:	d009      	beq.n	8000640 <decode+0x48>
 800062c:	e011      	b.n	8000652 <decode+0x5a>
		case 1:										//PUMPS
			PWM_width[0] = RxData[2];
 800062e:	4b2a      	ldr	r3, [pc, #168]	@ (80006d8 <decode+0xe0>)
 8000630:	789b      	ldrb	r3, [r3, #2]
 8000632:	461a      	mov	r2, r3
 8000634:	4b29      	ldr	r3, [pc, #164]	@ (80006dc <decode+0xe4>)
 8000636:	801a      	strh	r2, [r3, #0]
			set_pwm_duty_cycle(&htim1);
 8000638:	4829      	ldr	r0, [pc, #164]	@ (80006e0 <decode+0xe8>)
 800063a:	f7ff fded 	bl	8000218 <set_pwm_duty_cycle>
			break;
 800063e:	e00b      	b.n	8000658 <decode+0x60>
		case 2:										//FANS
			PWM_width[1] = RxData[2];
 8000640:	4b25      	ldr	r3, [pc, #148]	@ (80006d8 <decode+0xe0>)
 8000642:	789b      	ldrb	r3, [r3, #2]
 8000644:	461a      	mov	r2, r3
 8000646:	4b25      	ldr	r3, [pc, #148]	@ (80006dc <decode+0xe4>)
 8000648:	805a      	strh	r2, [r3, #2]
			set_pwm_duty_cycle(&htim2);
 800064a:	4826      	ldr	r0, [pc, #152]	@ (80006e4 <decode+0xec>)
 800064c:	f7ff fde4 	bl	8000218 <set_pwm_duty_cycle>
			break;
 8000650:	e002      	b.n	8000658 <decode+0x60>
		default:
			Error_Handler();
 8000652:	f001 f987 	bl	8001964 <Error_Handler>
			break;
 8000656:	bf00      	nop
		}
		break;
 8000658:	e03a      	b.n	80006d0 <decode+0xd8>
	case 2:							//Switch output on/off
		Default_Switch_State = set_bit(Default_Switch_State,RxData[1],RxData[2]); //if RxData[2] is 0 -> OFF, if RxData[2] is 1 -> ON
 800065a:	4b23      	ldr	r3, [pc, #140]	@ (80006e8 <decode+0xf0>)
 800065c:	781b      	ldrb	r3, [r3, #0]
 800065e:	4a1e      	ldr	r2, [pc, #120]	@ (80006d8 <decode+0xe0>)
 8000660:	7851      	ldrb	r1, [r2, #1]
 8000662:	4a1d      	ldr	r2, [pc, #116]	@ (80006d8 <decode+0xe0>)
 8000664:	7892      	ldrb	r2, [r2, #2]
 8000666:	4618      	mov	r0, r3
 8000668:	f000 fc1e 	bl	8000ea8 <set_bit>
 800066c:	4603      	mov	r3, r0
 800066e:	461a      	mov	r2, r3
 8000670:	4b1d      	ldr	r3, [pc, #116]	@ (80006e8 <decode+0xf0>)
 8000672:	701a      	strb	r2, [r3, #0]
		output();
 8000674:	f7ff ff1c 	bl	80004b0 <output>
		break;
 8000678:	e02a      	b.n	80006d0 <decode+0xd8>
	case 3:							// turning analog node on and off, RxData[1] -> 0 is off 1 is on
		HAL_GPIO_WritePin(GPIOA,LED2_Pin,RxData[1]);
 800067a:	4b17      	ldr	r3, [pc, #92]	@ (80006d8 <decode+0xe0>)
 800067c:	785b      	ldrb	r3, [r3, #1]
 800067e:	461a      	mov	r2, r3
 8000680:	2180      	movs	r1, #128	@ 0x80
 8000682:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000686:	f004 fb35 	bl	8004cf4 <HAL_GPIO_WritePin>
		break;
 800068a:	e021      	b.n	80006d0 <decode+0xd8>
	case 4:							//switch BRAKE_LIGHT	RxData[1] --> 0 for off and 1 for on
		for(int i = 0; i < 8; i++){
 800068c:	2300      	movs	r3, #0
 800068e:	607b      	str	r3, [r7, #4]
 8000690:	e017      	b.n	80006c2 <decode+0xca>
			if(output_list[i] == BRAKE_LIGHT){
 8000692:	4a16      	ldr	r2, [pc, #88]	@ (80006ec <decode+0xf4>)
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	4413      	add	r3, r2
 8000698:	781b      	ldrb	r3, [r3, #0]
 800069a:	2b01      	cmp	r3, #1
 800069c:	d10e      	bne.n	80006bc <decode+0xc4>
				Default_Switch_State = set_bit(Default_Switch_State,i,RxData[1]);
 800069e:	4b12      	ldr	r3, [pc, #72]	@ (80006e8 <decode+0xf0>)
 80006a0:	781b      	ldrb	r3, [r3, #0]
 80006a2:	687a      	ldr	r2, [r7, #4]
 80006a4:	b2d1      	uxtb	r1, r2
 80006a6:	4a0c      	ldr	r2, [pc, #48]	@ (80006d8 <decode+0xe0>)
 80006a8:	7852      	ldrb	r2, [r2, #1]
 80006aa:	4618      	mov	r0, r3
 80006ac:	f000 fbfc 	bl	8000ea8 <set_bit>
 80006b0:	4603      	mov	r3, r0
 80006b2:	461a      	mov	r2, r3
 80006b4:	4b0c      	ldr	r3, [pc, #48]	@ (80006e8 <decode+0xf0>)
 80006b6:	701a      	strb	r2, [r3, #0]
				output();
 80006b8:	f7ff fefa 	bl	80004b0 <output>
		for(int i = 0; i < 8; i++){
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	3301      	adds	r3, #1
 80006c0:	607b      	str	r3, [r7, #4]
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	2b07      	cmp	r3, #7
 80006c6:	dde4      	ble.n	8000692 <decode+0x9a>
			}
		}
		break;
 80006c8:	e002      	b.n	80006d0 <decode+0xd8>
	default:
		//decode_error(); //TODO: IMPLEMENT
		Error_Handler();
 80006ca:	f001 f94b 	bl	8001964 <Error_Handler>
		break;
 80006ce:	bf00      	nop
	}
}
 80006d0:	bf00      	nop
 80006d2:	3708      	adds	r7, #8
 80006d4:	46bd      	mov	sp, r7
 80006d6:	bd80      	pop	{r7, pc}
 80006d8:	20000028 	.word	0x20000028
 80006dc:	20000640 	.word	0x20000640
 80006e0:	20000174 	.word	0x20000174
 80006e4:	200001c0 	.word	0x200001c0
 80006e8:	20000632 	.word	0x20000632
 80006ec:	20000634 	.word	0x20000634

080006f0 <Current_Sense_process>:



void Current_Sense_process(){
 80006f0:	b580      	push	{r7, lr}
 80006f2:	b082      	sub	sp, #8
 80006f4:	af00      	add	r7, sp, #0
	//4031 == 3.3V since 12bit, have to pick shunt resistor according to this
	PROC[0] = IN1_1_Current_Sense[0];
 80006f6:	4b86      	ldr	r3, [pc, #536]	@ (8000910 <Current_Sense_process+0x220>)
 80006f8:	881a      	ldrh	r2, [r3, #0]
 80006fa:	4b86      	ldr	r3, [pc, #536]	@ (8000914 <Current_Sense_process+0x224>)
 80006fc:	801a      	strh	r2, [r3, #0]
	PROC[1] = IN2_1_Current_Sense[0];
 80006fe:	4b86      	ldr	r3, [pc, #536]	@ (8000918 <Current_Sense_process+0x228>)
 8000700:	881a      	ldrh	r2, [r3, #0]
 8000702:	4b84      	ldr	r3, [pc, #528]	@ (8000914 <Current_Sense_process+0x224>)
 8000704:	805a      	strh	r2, [r3, #2]
	PROC[2] = IN3_1_Current_Sense[0];
 8000706:	4b85      	ldr	r3, [pc, #532]	@ (800091c <Current_Sense_process+0x22c>)
 8000708:	881a      	ldrh	r2, [r3, #0]
 800070a:	4b82      	ldr	r3, [pc, #520]	@ (8000914 <Current_Sense_process+0x224>)
 800070c:	809a      	strh	r2, [r3, #4]
	PROC[3] = IN4_1_Current_Sense[0];
 800070e:	4b84      	ldr	r3, [pc, #528]	@ (8000920 <Current_Sense_process+0x230>)
 8000710:	881a      	ldrh	r2, [r3, #0]
 8000712:	4b80      	ldr	r3, [pc, #512]	@ (8000914 <Current_Sense_process+0x224>)
 8000714:	80da      	strh	r2, [r3, #6]
	PROC[4] = IN1_2_Current_Sense[0];
 8000716:	4b83      	ldr	r3, [pc, #524]	@ (8000924 <Current_Sense_process+0x234>)
 8000718:	881a      	ldrh	r2, [r3, #0]
 800071a:	4b7e      	ldr	r3, [pc, #504]	@ (8000914 <Current_Sense_process+0x224>)
 800071c:	811a      	strh	r2, [r3, #8]
	PROC[5] = IN2_2_Current_Sense[0];
 800071e:	4b82      	ldr	r3, [pc, #520]	@ (8000928 <Current_Sense_process+0x238>)
 8000720:	881a      	ldrh	r2, [r3, #0]
 8000722:	4b7c      	ldr	r3, [pc, #496]	@ (8000914 <Current_Sense_process+0x224>)
 8000724:	815a      	strh	r2, [r3, #10]
	PROC[6] = IN3_2_Current_Sense[0];
 8000726:	4b81      	ldr	r3, [pc, #516]	@ (800092c <Current_Sense_process+0x23c>)
 8000728:	881a      	ldrh	r2, [r3, #0]
 800072a:	4b7a      	ldr	r3, [pc, #488]	@ (8000914 <Current_Sense_process+0x224>)
 800072c:	819a      	strh	r2, [r3, #12]
	PROC[7] = IN4_2_Current_Sense[0];
 800072e:	4b80      	ldr	r3, [pc, #512]	@ (8000930 <Current_Sense_process+0x240>)
 8000730:	881a      	ldrh	r2, [r3, #0]
 8000732:	4b78      	ldr	r3, [pc, #480]	@ (8000914 <Current_Sense_process+0x224>)
 8000734:	81da      	strh	r2, [r3, #14]
	PROC[8] = Analog_Current_Sense[0];
 8000736:	4b7f      	ldr	r3, [pc, #508]	@ (8000934 <Current_Sense_process+0x244>)
 8000738:	881a      	ldrh	r2, [r3, #0]
 800073a:	4b76      	ldr	r3, [pc, #472]	@ (8000914 <Current_Sense_process+0x224>)
 800073c:	821a      	strh	r2, [r3, #16]
	for(int i = 1; i < I_AVERAGE; i++){
 800073e:	2301      	movs	r3, #1
 8000740:	607b      	str	r3, [r7, #4]
 8000742:	e089      	b.n	8000858 <Current_Sense_process+0x168>
		PROC[0] = (PROC[0] + IN1_1_Current_Sense[i])/2;
 8000744:	4b73      	ldr	r3, [pc, #460]	@ (8000914 <Current_Sense_process+0x224>)
 8000746:	881b      	ldrh	r3, [r3, #0]
 8000748:	4619      	mov	r1, r3
 800074a:	4a71      	ldr	r2, [pc, #452]	@ (8000910 <Current_Sense_process+0x220>)
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000752:	440b      	add	r3, r1
 8000754:	0fda      	lsrs	r2, r3, #31
 8000756:	4413      	add	r3, r2
 8000758:	105b      	asrs	r3, r3, #1
 800075a:	b29a      	uxth	r2, r3
 800075c:	4b6d      	ldr	r3, [pc, #436]	@ (8000914 <Current_Sense_process+0x224>)
 800075e:	801a      	strh	r2, [r3, #0]
		PROC[1] = (PROC[1] + IN2_1_Current_Sense[i])/2;
 8000760:	4b6c      	ldr	r3, [pc, #432]	@ (8000914 <Current_Sense_process+0x224>)
 8000762:	885b      	ldrh	r3, [r3, #2]
 8000764:	4619      	mov	r1, r3
 8000766:	4a6c      	ldr	r2, [pc, #432]	@ (8000918 <Current_Sense_process+0x228>)
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800076e:	440b      	add	r3, r1
 8000770:	0fda      	lsrs	r2, r3, #31
 8000772:	4413      	add	r3, r2
 8000774:	105b      	asrs	r3, r3, #1
 8000776:	b29a      	uxth	r2, r3
 8000778:	4b66      	ldr	r3, [pc, #408]	@ (8000914 <Current_Sense_process+0x224>)
 800077a:	805a      	strh	r2, [r3, #2]
		PROC[2] = (PROC[2] + IN3_1_Current_Sense[i])/2;
 800077c:	4b65      	ldr	r3, [pc, #404]	@ (8000914 <Current_Sense_process+0x224>)
 800077e:	889b      	ldrh	r3, [r3, #4]
 8000780:	4619      	mov	r1, r3
 8000782:	4a66      	ldr	r2, [pc, #408]	@ (800091c <Current_Sense_process+0x22c>)
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800078a:	440b      	add	r3, r1
 800078c:	0fda      	lsrs	r2, r3, #31
 800078e:	4413      	add	r3, r2
 8000790:	105b      	asrs	r3, r3, #1
 8000792:	b29a      	uxth	r2, r3
 8000794:	4b5f      	ldr	r3, [pc, #380]	@ (8000914 <Current_Sense_process+0x224>)
 8000796:	809a      	strh	r2, [r3, #4]
		PROC[3] = (PROC[3] + IN4_1_Current_Sense[i])/2;
 8000798:	4b5e      	ldr	r3, [pc, #376]	@ (8000914 <Current_Sense_process+0x224>)
 800079a:	88db      	ldrh	r3, [r3, #6]
 800079c:	4619      	mov	r1, r3
 800079e:	4a60      	ldr	r2, [pc, #384]	@ (8000920 <Current_Sense_process+0x230>)
 80007a0:	687b      	ldr	r3, [r7, #4]
 80007a2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80007a6:	440b      	add	r3, r1
 80007a8:	0fda      	lsrs	r2, r3, #31
 80007aa:	4413      	add	r3, r2
 80007ac:	105b      	asrs	r3, r3, #1
 80007ae:	b29a      	uxth	r2, r3
 80007b0:	4b58      	ldr	r3, [pc, #352]	@ (8000914 <Current_Sense_process+0x224>)
 80007b2:	80da      	strh	r2, [r3, #6]
		PROC[4] = (PROC[4] + IN1_2_Current_Sense[i])/2;
 80007b4:	4b57      	ldr	r3, [pc, #348]	@ (8000914 <Current_Sense_process+0x224>)
 80007b6:	891b      	ldrh	r3, [r3, #8]
 80007b8:	4619      	mov	r1, r3
 80007ba:	4a5a      	ldr	r2, [pc, #360]	@ (8000924 <Current_Sense_process+0x234>)
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80007c2:	440b      	add	r3, r1
 80007c4:	0fda      	lsrs	r2, r3, #31
 80007c6:	4413      	add	r3, r2
 80007c8:	105b      	asrs	r3, r3, #1
 80007ca:	b29a      	uxth	r2, r3
 80007cc:	4b51      	ldr	r3, [pc, #324]	@ (8000914 <Current_Sense_process+0x224>)
 80007ce:	811a      	strh	r2, [r3, #8]
		PROC[5] = (PROC[5] + IN2_2_Current_Sense[i])/2;
 80007d0:	4b50      	ldr	r3, [pc, #320]	@ (8000914 <Current_Sense_process+0x224>)
 80007d2:	895b      	ldrh	r3, [r3, #10]
 80007d4:	4619      	mov	r1, r3
 80007d6:	4a54      	ldr	r2, [pc, #336]	@ (8000928 <Current_Sense_process+0x238>)
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80007de:	440b      	add	r3, r1
 80007e0:	0fda      	lsrs	r2, r3, #31
 80007e2:	4413      	add	r3, r2
 80007e4:	105b      	asrs	r3, r3, #1
 80007e6:	b29a      	uxth	r2, r3
 80007e8:	4b4a      	ldr	r3, [pc, #296]	@ (8000914 <Current_Sense_process+0x224>)
 80007ea:	815a      	strh	r2, [r3, #10]
		PROC[6] = (PROC[6] + IN3_2_Current_Sense[i])/2;
 80007ec:	4b49      	ldr	r3, [pc, #292]	@ (8000914 <Current_Sense_process+0x224>)
 80007ee:	899b      	ldrh	r3, [r3, #12]
 80007f0:	4619      	mov	r1, r3
 80007f2:	4a4e      	ldr	r2, [pc, #312]	@ (800092c <Current_Sense_process+0x23c>)
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80007fa:	440b      	add	r3, r1
 80007fc:	0fda      	lsrs	r2, r3, #31
 80007fe:	4413      	add	r3, r2
 8000800:	105b      	asrs	r3, r3, #1
 8000802:	b29a      	uxth	r2, r3
 8000804:	4b43      	ldr	r3, [pc, #268]	@ (8000914 <Current_Sense_process+0x224>)
 8000806:	819a      	strh	r2, [r3, #12]
		PROC[7] = (PROC[7] + IN4_2_Current_Sense[i])/2;
 8000808:	4b42      	ldr	r3, [pc, #264]	@ (8000914 <Current_Sense_process+0x224>)
 800080a:	89db      	ldrh	r3, [r3, #14]
 800080c:	4619      	mov	r1, r3
 800080e:	4a48      	ldr	r2, [pc, #288]	@ (8000930 <Current_Sense_process+0x240>)
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000816:	440b      	add	r3, r1
 8000818:	0fda      	lsrs	r2, r3, #31
 800081a:	4413      	add	r3, r2
 800081c:	105b      	asrs	r3, r3, #1
 800081e:	b29a      	uxth	r2, r3
 8000820:	4b3c      	ldr	r3, [pc, #240]	@ (8000914 <Current_Sense_process+0x224>)
 8000822:	81da      	strh	r2, [r3, #14]
		if(i % 2 == 0){
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	f003 0301 	and.w	r3, r3, #1
 800082a:	2b00      	cmp	r3, #0
 800082c:	d111      	bne.n	8000852 <Current_Sense_process+0x162>
			PROC[8] = (PROC[8] + Analog_Current_Sense[i/2])/2;
 800082e:	4b39      	ldr	r3, [pc, #228]	@ (8000914 <Current_Sense_process+0x224>)
 8000830:	8a1b      	ldrh	r3, [r3, #16]
 8000832:	4619      	mov	r1, r3
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	0fda      	lsrs	r2, r3, #31
 8000838:	4413      	add	r3, r2
 800083a:	105b      	asrs	r3, r3, #1
 800083c:	461a      	mov	r2, r3
 800083e:	4b3d      	ldr	r3, [pc, #244]	@ (8000934 <Current_Sense_process+0x244>)
 8000840:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8000844:	440b      	add	r3, r1
 8000846:	0fda      	lsrs	r2, r3, #31
 8000848:	4413      	add	r3, r2
 800084a:	105b      	asrs	r3, r3, #1
 800084c:	b29a      	uxth	r2, r3
 800084e:	4b31      	ldr	r3, [pc, #196]	@ (8000914 <Current_Sense_process+0x224>)
 8000850:	821a      	strh	r2, [r3, #16]
	for(int i = 1; i < I_AVERAGE; i++){
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	3301      	adds	r3, #1
 8000856:	607b      	str	r3, [r7, #4]
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	2b1f      	cmp	r3, #31
 800085c:	f77f af72 	ble.w	8000744 <Current_Sense_process+0x54>
		}
	}
	PROC[0] = Current_Sense_Raw_to_mA(PROC[0]);
 8000860:	4b2c      	ldr	r3, [pc, #176]	@ (8000914 <Current_Sense_process+0x224>)
 8000862:	881b      	ldrh	r3, [r3, #0]
 8000864:	4618      	mov	r0, r3
 8000866:	f000 fb45 	bl	8000ef4 <Current_Sense_Raw_to_mA>
 800086a:	4603      	mov	r3, r0
 800086c:	461a      	mov	r2, r3
 800086e:	4b29      	ldr	r3, [pc, #164]	@ (8000914 <Current_Sense_process+0x224>)
 8000870:	801a      	strh	r2, [r3, #0]
	PROC[1] = Current_Sense_Raw_to_mA(PROC[1]);
 8000872:	4b28      	ldr	r3, [pc, #160]	@ (8000914 <Current_Sense_process+0x224>)
 8000874:	885b      	ldrh	r3, [r3, #2]
 8000876:	4618      	mov	r0, r3
 8000878:	f000 fb3c 	bl	8000ef4 <Current_Sense_Raw_to_mA>
 800087c:	4603      	mov	r3, r0
 800087e:	461a      	mov	r2, r3
 8000880:	4b24      	ldr	r3, [pc, #144]	@ (8000914 <Current_Sense_process+0x224>)
 8000882:	805a      	strh	r2, [r3, #2]
	PROC[2] = Current_Sense_Raw_to_mA(PROC[2]);
 8000884:	4b23      	ldr	r3, [pc, #140]	@ (8000914 <Current_Sense_process+0x224>)
 8000886:	889b      	ldrh	r3, [r3, #4]
 8000888:	4618      	mov	r0, r3
 800088a:	f000 fb33 	bl	8000ef4 <Current_Sense_Raw_to_mA>
 800088e:	4603      	mov	r3, r0
 8000890:	461a      	mov	r2, r3
 8000892:	4b20      	ldr	r3, [pc, #128]	@ (8000914 <Current_Sense_process+0x224>)
 8000894:	809a      	strh	r2, [r3, #4]
	PROC[3] = Current_Sense_Raw_to_mA(PROC[3]);
 8000896:	4b1f      	ldr	r3, [pc, #124]	@ (8000914 <Current_Sense_process+0x224>)
 8000898:	88db      	ldrh	r3, [r3, #6]
 800089a:	4618      	mov	r0, r3
 800089c:	f000 fb2a 	bl	8000ef4 <Current_Sense_Raw_to_mA>
 80008a0:	4603      	mov	r3, r0
 80008a2:	461a      	mov	r2, r3
 80008a4:	4b1b      	ldr	r3, [pc, #108]	@ (8000914 <Current_Sense_process+0x224>)
 80008a6:	80da      	strh	r2, [r3, #6]
	PROC[4] = Current_Sense_Raw_to_mA(PROC[4]);
 80008a8:	4b1a      	ldr	r3, [pc, #104]	@ (8000914 <Current_Sense_process+0x224>)
 80008aa:	891b      	ldrh	r3, [r3, #8]
 80008ac:	4618      	mov	r0, r3
 80008ae:	f000 fb21 	bl	8000ef4 <Current_Sense_Raw_to_mA>
 80008b2:	4603      	mov	r3, r0
 80008b4:	461a      	mov	r2, r3
 80008b6:	4b17      	ldr	r3, [pc, #92]	@ (8000914 <Current_Sense_process+0x224>)
 80008b8:	811a      	strh	r2, [r3, #8]
	PROC[5] = Current_Sense_Raw_to_mA(PROC[5]);
 80008ba:	4b16      	ldr	r3, [pc, #88]	@ (8000914 <Current_Sense_process+0x224>)
 80008bc:	895b      	ldrh	r3, [r3, #10]
 80008be:	4618      	mov	r0, r3
 80008c0:	f000 fb18 	bl	8000ef4 <Current_Sense_Raw_to_mA>
 80008c4:	4603      	mov	r3, r0
 80008c6:	461a      	mov	r2, r3
 80008c8:	4b12      	ldr	r3, [pc, #72]	@ (8000914 <Current_Sense_process+0x224>)
 80008ca:	815a      	strh	r2, [r3, #10]
	PROC[6] = Current_Sense_Raw_to_mA(PROC[6]);
 80008cc:	4b11      	ldr	r3, [pc, #68]	@ (8000914 <Current_Sense_process+0x224>)
 80008ce:	899b      	ldrh	r3, [r3, #12]
 80008d0:	4618      	mov	r0, r3
 80008d2:	f000 fb0f 	bl	8000ef4 <Current_Sense_Raw_to_mA>
 80008d6:	4603      	mov	r3, r0
 80008d8:	461a      	mov	r2, r3
 80008da:	4b0e      	ldr	r3, [pc, #56]	@ (8000914 <Current_Sense_process+0x224>)
 80008dc:	819a      	strh	r2, [r3, #12]
	PROC[7] = Current_Sense_Raw_to_mA(PROC[7]);
 80008de:	4b0d      	ldr	r3, [pc, #52]	@ (8000914 <Current_Sense_process+0x224>)
 80008e0:	89db      	ldrh	r3, [r3, #14]
 80008e2:	4618      	mov	r0, r3
 80008e4:	f000 fb06 	bl	8000ef4 <Current_Sense_Raw_to_mA>
 80008e8:	4603      	mov	r3, r0
 80008ea:	461a      	mov	r2, r3
 80008ec:	4b09      	ldr	r3, [pc, #36]	@ (8000914 <Current_Sense_process+0x224>)
 80008ee:	81da      	strh	r2, [r3, #14]
	PROC[8] = Current_Sense_Raw_to_mA(PROC[8]);
 80008f0:	4b08      	ldr	r3, [pc, #32]	@ (8000914 <Current_Sense_process+0x224>)
 80008f2:	8a1b      	ldrh	r3, [r3, #16]
 80008f4:	4618      	mov	r0, r3
 80008f6:	f000 fafd 	bl	8000ef4 <Current_Sense_Raw_to_mA>
 80008fa:	4603      	mov	r3, r0
 80008fc:	461a      	mov	r2, r3
 80008fe:	4b05      	ldr	r3, [pc, #20]	@ (8000914 <Current_Sense_process+0x224>)
 8000900:	821a      	strh	r2, [r3, #16]
	check_warnings();
 8000902:	f000 f819 	bl	8000938 <check_warnings>
}
 8000906:	bf00      	nop
 8000908:	3708      	adds	r7, #8
 800090a:	46bd      	mov	sp, r7
 800090c:	bd80      	pop	{r7, pc}
 800090e:	bf00      	nop
 8000910:	20000388 	.word	0x20000388
 8000914:	200005e8 	.word	0x200005e8
 8000918:	200003c8 	.word	0x200003c8
 800091c:	20000408 	.word	0x20000408
 8000920:	20000448 	.word	0x20000448
 8000924:	20000488 	.word	0x20000488
 8000928:	200004c8 	.word	0x200004c8
 800092c:	20000508 	.word	0x20000508
 8000930:	20000548 	.word	0x20000548
 8000934:	200005c8 	.word	0x200005c8

08000938 <check_warnings>:

void check_warnings(){
 8000938:	b580      	push	{r7, lr}
 800093a:	b082      	sub	sp, #8
 800093c:	af00      	add	r7, sp, #0
	for(uint8_t x = 0; x < 7; x++){
 800093e:	2300      	movs	r3, #0
 8000940:	71fb      	strb	r3, [r7, #7]
 8000942:	e02a      	b.n	800099a <check_warnings+0x62>
		if(PROC[x] >= Warning_Current[x]){
 8000944:	79fb      	ldrb	r3, [r7, #7]
 8000946:	4a23      	ldr	r2, [pc, #140]	@ (80009d4 <check_warnings+0x9c>)
 8000948:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 800094c:	79fb      	ldrb	r3, [r7, #7]
 800094e:	4922      	ldr	r1, [pc, #136]	@ (80009d8 <check_warnings+0xa0>)
 8000950:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000954:	429a      	cmp	r2, r3
 8000956:	d31d      	bcc.n	8000994 <check_warnings+0x5c>
			if(PROC[x] >= Over_Current[x]){
 8000958:	79fb      	ldrb	r3, [r7, #7]
 800095a:	4a1e      	ldr	r2, [pc, #120]	@ (80009d4 <check_warnings+0x9c>)
 800095c:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000960:	79fb      	ldrb	r3, [r7, #7]
 8000962:	491e      	ldr	r1, [pc, #120]	@ (80009dc <check_warnings+0xa4>)
 8000964:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000968:	429a      	cmp	r2, r3
 800096a:	d30f      	bcc.n	800098c <check_warnings+0x54>
				Default_Switch_State = set_bit(Default_Switch_State, x, 0);
 800096c:	4b1c      	ldr	r3, [pc, #112]	@ (80009e0 <check_warnings+0xa8>)
 800096e:	781b      	ldrb	r3, [r3, #0]
 8000970:	79f9      	ldrb	r1, [r7, #7]
 8000972:	2200      	movs	r2, #0
 8000974:	4618      	mov	r0, r3
 8000976:	f000 fa97 	bl	8000ea8 <set_bit>
 800097a:	4603      	mov	r3, r0
 800097c:	461a      	mov	r2, r3
 800097e:	4b18      	ldr	r3, [pc, #96]	@ (80009e0 <check_warnings+0xa8>)
 8000980:	701a      	strb	r2, [r3, #0]
				Over_current(x);
 8000982:	79fb      	ldrb	r3, [r7, #7]
 8000984:	4618      	mov	r0, r3
 8000986:	f7ff fe0f 	bl	80005a8 <Over_current>
 800098a:	e003      	b.n	8000994 <check_warnings+0x5c>
			}else{
				Warning_current(x);
 800098c:	79fb      	ldrb	r3, [r7, #7]
 800098e:	4618      	mov	r0, r3
 8000990:	f7ff fe1e 	bl	80005d0 <Warning_current>
	for(uint8_t x = 0; x < 7; x++){
 8000994:	79fb      	ldrb	r3, [r7, #7]
 8000996:	3301      	adds	r3, #1
 8000998:	71fb      	strb	r3, [r7, #7]
 800099a:	79fb      	ldrb	r3, [r7, #7]
 800099c:	2b06      	cmp	r3, #6
 800099e:	d9d1      	bls.n	8000944 <check_warnings+0xc>
		}
	/*	if(PROC[x] < Under_Current[x]){
			Under_current(x);
		}*/
	}
	if(PROC[8] >= Warning_Current[8]){
 80009a0:	4b0c      	ldr	r3, [pc, #48]	@ (80009d4 <check_warnings+0x9c>)
 80009a2:	8a1a      	ldrh	r2, [r3, #16]
 80009a4:	4b0c      	ldr	r3, [pc, #48]	@ (80009d8 <check_warnings+0xa0>)
 80009a6:	8a1b      	ldrh	r3, [r3, #16]
 80009a8:	429a      	cmp	r2, r3
 80009aa:	d30c      	bcc.n	80009c6 <check_warnings+0x8e>
		if(PROC[8] >= Over_Current[8]){
 80009ac:	4b09      	ldr	r3, [pc, #36]	@ (80009d4 <check_warnings+0x9c>)
 80009ae:	8a1a      	ldrh	r2, [r3, #16]
 80009b0:	4b0a      	ldr	r3, [pc, #40]	@ (80009dc <check_warnings+0xa4>)
 80009b2:	8a1b      	ldrh	r3, [r3, #16]
 80009b4:	429a      	cmp	r2, r3
 80009b6:	d303      	bcc.n	80009c0 <check_warnings+0x88>
			Over_current(8);
 80009b8:	2008      	movs	r0, #8
 80009ba:	f7ff fdf5 	bl	80005a8 <Over_current>
 80009be:	e002      	b.n	80009c6 <check_warnings+0x8e>
			//HAL_GPIO_WritePin(GPIOB,AnalogPower_EN_Pin,0);
		}else{
			Warning_current(8);
 80009c0:	2008      	movs	r0, #8
 80009c2:	f7ff fe05 	bl	80005d0 <Warning_current>
		}
	}
	/*if(PROC[8] < Under_Current[8]){
		Under_current(8);
	}*/
	output();
 80009c6:	f7ff fd73 	bl	80004b0 <output>

}
 80009ca:	bf00      	nop
 80009cc:	3708      	adds	r7, #8
 80009ce:	46bd      	mov	sp, r7
 80009d0:	bd80      	pop	{r7, pc}
 80009d2:	bf00      	nop
 80009d4:	200005e8 	.word	0x200005e8
 80009d8:	200005fc 	.word	0x200005fc
 80009dc:	2000060c 	.word	0x2000060c
 80009e0:	20000632 	.word	0x20000632

080009e4 <Current_Sense_read>:

void Current_Sense_read(){
 80009e4:	b580      	push	{r7, lr}
 80009e6:	b088      	sub	sp, #32
 80009e8:	af00      	add	r7, sp, #0
	for(int x = 0; x < 5; x++){
 80009ea:	2300      	movs	r3, #0
 80009ec:	61fb      	str	r3, [r7, #28]
 80009ee:	e226      	b.n	8000e3e <Current_Sense_read+0x45a>
		switch(x){
 80009f0:	69fb      	ldr	r3, [r7, #28]
 80009f2:	2b04      	cmp	r3, #4
 80009f4:	f200 8220 	bhi.w	8000e38 <Current_Sense_read+0x454>
 80009f8:	a201      	add	r2, pc, #4	@ (adr r2, 8000a00 <Current_Sense_read+0x1c>)
 80009fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80009fe:	bf00      	nop
 8000a00:	08000a15 	.word	0x08000a15
 8000a04:	08000ad9 	.word	0x08000ad9
 8000a08:	08000b9d 	.word	0x08000b9d
 8000a0c:	08000c61 	.word	0x08000c61
 8000a10:	08000d4f 	.word	0x08000d4f
		case 0:
			//chip_select_read();
			Current_Sense_SEL[0] = 0;
 8000a14:	4b9e      	ldr	r3, [pc, #632]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000a16:	2200      	movs	r2, #0
 8000a18:	701a      	strb	r2, [r3, #0]
			Current_Sense_SEL[1] = 0;
 8000a1a:	4b9d      	ldr	r3, [pc, #628]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000a1c:	2200      	movs	r2, #0
 8000a1e:	705a      	strb	r2, [r3, #1]
			HAL_GPIO_WritePin(GPIOB,SEL0_Pin,Current_Sense_SEL[0]);
 8000a20:	4b9b      	ldr	r3, [pc, #620]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000a22:	781b      	ldrb	r3, [r3, #0]
 8000a24:	461a      	mov	r2, r3
 8000a26:	2140      	movs	r1, #64	@ 0x40
 8000a28:	489a      	ldr	r0, [pc, #616]	@ (8000c94 <Current_Sense_read+0x2b0>)
 8000a2a:	f004 f963 	bl	8004cf4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB,SEL1_Pin,Current_Sense_SEL[1]);
 8000a2e:	4b98      	ldr	r3, [pc, #608]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000a30:	785b      	ldrb	r3, [r3, #1]
 8000a32:	461a      	mov	r2, r3
 8000a34:	2120      	movs	r1, #32
 8000a36:	4897      	ldr	r0, [pc, #604]	@ (8000c94 <Current_Sense_read+0x2b0>)
 8000a38:	f004 f95c 	bl	8004cf4 <HAL_GPIO_WritePin>
			for(int i = 0; i < I_AVERAGE; i++){
 8000a3c:	2300      	movs	r3, #0
 8000a3e:	61bb      	str	r3, [r7, #24]
 8000a40:	e046      	b.n	8000ad0 <Current_Sense_read+0xec>
				if(HAL_ADC_Start(&hadc1)!=HAL_OK){Error_Handler();}
 8000a42:	4895      	ldr	r0, [pc, #596]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000a44:	f001 ff02 	bl	800284c <HAL_ADC_Start>
 8000a48:	4603      	mov	r3, r0
 8000a4a:	2b00      	cmp	r3, #0
 8000a4c:	d001      	beq.n	8000a52 <Current_Sense_read+0x6e>
 8000a4e:	f000 ff89 	bl	8001964 <Error_Handler>
				if(HAL_ADC_Start(&hadc2)!=HAL_OK){Error_Handler();}
 8000a52:	4892      	ldr	r0, [pc, #584]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000a54:	f001 fefa 	bl	800284c <HAL_ADC_Start>
 8000a58:	4603      	mov	r3, r0
 8000a5a:	2b00      	cmp	r3, #0
 8000a5c:	d001      	beq.n	8000a62 <Current_Sense_read+0x7e>
 8000a5e:	f000 ff81 	bl	8001964 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();}
 8000a62:	2164      	movs	r1, #100	@ 0x64
 8000a64:	488c      	ldr	r0, [pc, #560]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000a66:	f001 ffe1 	bl	8002a2c <HAL_ADC_PollForConversion>
 8000a6a:	4603      	mov	r3, r0
 8000a6c:	2b00      	cmp	r3, #0
 8000a6e:	d001      	beq.n	8000a74 <Current_Sense_read+0x90>
 8000a70:	f000 ff78 	bl	8001964 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc2,100)!=HAL_OK){Error_Handler();}
 8000a74:	2164      	movs	r1, #100	@ 0x64
 8000a76:	4889      	ldr	r0, [pc, #548]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000a78:	f001 ffd8 	bl	8002a2c <HAL_ADC_PollForConversion>
 8000a7c:	4603      	mov	r3, r0
 8000a7e:	2b00      	cmp	r3, #0
 8000a80:	d001      	beq.n	8000a86 <Current_Sense_read+0xa2>
 8000a82:	f000 ff6f 	bl	8001964 <Error_Handler>
				IN1_1_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc1);
 8000a86:	4884      	ldr	r0, [pc, #528]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000a88:	f002 fa13 	bl	8002eb2 <HAL_ADC_GetValue>
 8000a8c:	4603      	mov	r3, r0
 8000a8e:	b299      	uxth	r1, r3
 8000a90:	4a83      	ldr	r2, [pc, #524]	@ (8000ca0 <Current_Sense_read+0x2bc>)
 8000a92:	69bb      	ldr	r3, [r7, #24]
 8000a94:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				IN1_2_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc2);
 8000a98:	4880      	ldr	r0, [pc, #512]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000a9a:	f002 fa0a 	bl	8002eb2 <HAL_ADC_GetValue>
 8000a9e:	4603      	mov	r3, r0
 8000aa0:	b299      	uxth	r1, r3
 8000aa2:	4a80      	ldr	r2, [pc, #512]	@ (8000ca4 <Current_Sense_read+0x2c0>)
 8000aa4:	69bb      	ldr	r3, [r7, #24]
 8000aa6:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop(&hadc1)!=HAL_OK){Error_Handler();}
 8000aaa:	487b      	ldr	r0, [pc, #492]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000aac:	f001 ff8a 	bl	80029c4 <HAL_ADC_Stop>
 8000ab0:	4603      	mov	r3, r0
 8000ab2:	2b00      	cmp	r3, #0
 8000ab4:	d001      	beq.n	8000aba <Current_Sense_read+0xd6>
 8000ab6:	f000 ff55 	bl	8001964 <Error_Handler>
				if(HAL_ADC_Stop(&hadc2)!=HAL_OK){Error_Handler();}
 8000aba:	4878      	ldr	r0, [pc, #480]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000abc:	f001 ff82 	bl	80029c4 <HAL_ADC_Stop>
 8000ac0:	4603      	mov	r3, r0
 8000ac2:	2b00      	cmp	r3, #0
 8000ac4:	d001      	beq.n	8000aca <Current_Sense_read+0xe6>
 8000ac6:	f000 ff4d 	bl	8001964 <Error_Handler>
			for(int i = 0; i < I_AVERAGE; i++){
 8000aca:	69bb      	ldr	r3, [r7, #24]
 8000acc:	3301      	adds	r3, #1
 8000ace:	61bb      	str	r3, [r7, #24]
 8000ad0:	69bb      	ldr	r3, [r7, #24]
 8000ad2:	2b1f      	cmp	r3, #31
 8000ad4:	ddb5      	ble.n	8000a42 <Current_Sense_read+0x5e>
			}
			break;
 8000ad6:	e1af      	b.n	8000e38 <Current_Sense_read+0x454>
		case 1:
			//chip_select_read();
			Current_Sense_SEL[0] = 0;
 8000ad8:	4b6d      	ldr	r3, [pc, #436]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000ada:	2200      	movs	r2, #0
 8000adc:	701a      	strb	r2, [r3, #0]
			Current_Sense_SEL[1] = 1;
 8000ade:	4b6c      	ldr	r3, [pc, #432]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000ae0:	2201      	movs	r2, #1
 8000ae2:	705a      	strb	r2, [r3, #1]
			HAL_GPIO_WritePin(GPIOB,SEL0_Pin,Current_Sense_SEL[0]);
 8000ae4:	4b6a      	ldr	r3, [pc, #424]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000ae6:	781b      	ldrb	r3, [r3, #0]
 8000ae8:	461a      	mov	r2, r3
 8000aea:	2140      	movs	r1, #64	@ 0x40
 8000aec:	4869      	ldr	r0, [pc, #420]	@ (8000c94 <Current_Sense_read+0x2b0>)
 8000aee:	f004 f901 	bl	8004cf4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB,SEL1_Pin,Current_Sense_SEL[1]);
 8000af2:	4b67      	ldr	r3, [pc, #412]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000af4:	785b      	ldrb	r3, [r3, #1]
 8000af6:	461a      	mov	r2, r3
 8000af8:	2120      	movs	r1, #32
 8000afa:	4866      	ldr	r0, [pc, #408]	@ (8000c94 <Current_Sense_read+0x2b0>)
 8000afc:	f004 f8fa 	bl	8004cf4 <HAL_GPIO_WritePin>
			for(int i = 0; i < I_AVERAGE; i++){
 8000b00:	2300      	movs	r3, #0
 8000b02:	617b      	str	r3, [r7, #20]
 8000b04:	e046      	b.n	8000b94 <Current_Sense_read+0x1b0>
				if(HAL_ADC_Start(&hadc1)!=HAL_OK){Error_Handler();}
 8000b06:	4864      	ldr	r0, [pc, #400]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000b08:	f001 fea0 	bl	800284c <HAL_ADC_Start>
 8000b0c:	4603      	mov	r3, r0
 8000b0e:	2b00      	cmp	r3, #0
 8000b10:	d001      	beq.n	8000b16 <Current_Sense_read+0x132>
 8000b12:	f000 ff27 	bl	8001964 <Error_Handler>
				if(HAL_ADC_Start(&hadc2)!=HAL_OK){Error_Handler();}
 8000b16:	4861      	ldr	r0, [pc, #388]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000b18:	f001 fe98 	bl	800284c <HAL_ADC_Start>
 8000b1c:	4603      	mov	r3, r0
 8000b1e:	2b00      	cmp	r3, #0
 8000b20:	d001      	beq.n	8000b26 <Current_Sense_read+0x142>
 8000b22:	f000 ff1f 	bl	8001964 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();}
 8000b26:	2164      	movs	r1, #100	@ 0x64
 8000b28:	485b      	ldr	r0, [pc, #364]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000b2a:	f001 ff7f 	bl	8002a2c <HAL_ADC_PollForConversion>
 8000b2e:	4603      	mov	r3, r0
 8000b30:	2b00      	cmp	r3, #0
 8000b32:	d001      	beq.n	8000b38 <Current_Sense_read+0x154>
 8000b34:	f000 ff16 	bl	8001964 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc2,100)!=HAL_OK){Error_Handler();}
 8000b38:	2164      	movs	r1, #100	@ 0x64
 8000b3a:	4858      	ldr	r0, [pc, #352]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000b3c:	f001 ff76 	bl	8002a2c <HAL_ADC_PollForConversion>
 8000b40:	4603      	mov	r3, r0
 8000b42:	2b00      	cmp	r3, #0
 8000b44:	d001      	beq.n	8000b4a <Current_Sense_read+0x166>
 8000b46:	f000 ff0d 	bl	8001964 <Error_Handler>
				IN2_1_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc1);
 8000b4a:	4853      	ldr	r0, [pc, #332]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000b4c:	f002 f9b1 	bl	8002eb2 <HAL_ADC_GetValue>
 8000b50:	4603      	mov	r3, r0
 8000b52:	b299      	uxth	r1, r3
 8000b54:	4a54      	ldr	r2, [pc, #336]	@ (8000ca8 <Current_Sense_read+0x2c4>)
 8000b56:	697b      	ldr	r3, [r7, #20]
 8000b58:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				IN2_2_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc2);
 8000b5c:	484f      	ldr	r0, [pc, #316]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000b5e:	f002 f9a8 	bl	8002eb2 <HAL_ADC_GetValue>
 8000b62:	4603      	mov	r3, r0
 8000b64:	b299      	uxth	r1, r3
 8000b66:	4a51      	ldr	r2, [pc, #324]	@ (8000cac <Current_Sense_read+0x2c8>)
 8000b68:	697b      	ldr	r3, [r7, #20]
 8000b6a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop(&hadc1)!=HAL_OK){Error_Handler();}
 8000b6e:	484a      	ldr	r0, [pc, #296]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000b70:	f001 ff28 	bl	80029c4 <HAL_ADC_Stop>
 8000b74:	4603      	mov	r3, r0
 8000b76:	2b00      	cmp	r3, #0
 8000b78:	d001      	beq.n	8000b7e <Current_Sense_read+0x19a>
 8000b7a:	f000 fef3 	bl	8001964 <Error_Handler>
				if(HAL_ADC_Stop(&hadc2)!=HAL_OK){Error_Handler();}
 8000b7e:	4847      	ldr	r0, [pc, #284]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000b80:	f001 ff20 	bl	80029c4 <HAL_ADC_Stop>
 8000b84:	4603      	mov	r3, r0
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	d001      	beq.n	8000b8e <Current_Sense_read+0x1aa>
 8000b8a:	f000 feeb 	bl	8001964 <Error_Handler>
			for(int i = 0; i < I_AVERAGE; i++){
 8000b8e:	697b      	ldr	r3, [r7, #20]
 8000b90:	3301      	adds	r3, #1
 8000b92:	617b      	str	r3, [r7, #20]
 8000b94:	697b      	ldr	r3, [r7, #20]
 8000b96:	2b1f      	cmp	r3, #31
 8000b98:	ddb5      	ble.n	8000b06 <Current_Sense_read+0x122>
			}
			break;
 8000b9a:	e14d      	b.n	8000e38 <Current_Sense_read+0x454>
		case 2:
			//chip_select_read();
			Current_Sense_SEL[0] = 1;
 8000b9c:	4b3c      	ldr	r3, [pc, #240]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000b9e:	2201      	movs	r2, #1
 8000ba0:	701a      	strb	r2, [r3, #0]
			Current_Sense_SEL[1] = 0;
 8000ba2:	4b3b      	ldr	r3, [pc, #236]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	705a      	strb	r2, [r3, #1]
			HAL_GPIO_WritePin(GPIOB,SEL0_Pin,Current_Sense_SEL[0]);
 8000ba8:	4b39      	ldr	r3, [pc, #228]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000baa:	781b      	ldrb	r3, [r3, #0]
 8000bac:	461a      	mov	r2, r3
 8000bae:	2140      	movs	r1, #64	@ 0x40
 8000bb0:	4838      	ldr	r0, [pc, #224]	@ (8000c94 <Current_Sense_read+0x2b0>)
 8000bb2:	f004 f89f 	bl	8004cf4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB,SEL1_Pin,Current_Sense_SEL[1]);
 8000bb6:	4b36      	ldr	r3, [pc, #216]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000bb8:	785b      	ldrb	r3, [r3, #1]
 8000bba:	461a      	mov	r2, r3
 8000bbc:	2120      	movs	r1, #32
 8000bbe:	4835      	ldr	r0, [pc, #212]	@ (8000c94 <Current_Sense_read+0x2b0>)
 8000bc0:	f004 f898 	bl	8004cf4 <HAL_GPIO_WritePin>
			for(int i = 0; i < I_AVERAGE; i++){
 8000bc4:	2300      	movs	r3, #0
 8000bc6:	613b      	str	r3, [r7, #16]
 8000bc8:	e046      	b.n	8000c58 <Current_Sense_read+0x274>
				if(HAL_ADC_Start_IT(&hadc1)!=HAL_OK){Error_Handler();}
 8000bca:	4833      	ldr	r0, [pc, #204]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000bcc:	f002 f806 	bl	8002bdc <HAL_ADC_Start_IT>
 8000bd0:	4603      	mov	r3, r0
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d001      	beq.n	8000bda <Current_Sense_read+0x1f6>
 8000bd6:	f000 fec5 	bl	8001964 <Error_Handler>
				if(HAL_ADC_Start_IT(&hadc2)!=HAL_OK){Error_Handler();}
 8000bda:	4830      	ldr	r0, [pc, #192]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000bdc:	f001 fffe 	bl	8002bdc <HAL_ADC_Start_IT>
 8000be0:	4603      	mov	r3, r0
 8000be2:	2b00      	cmp	r3, #0
 8000be4:	d001      	beq.n	8000bea <Current_Sense_read+0x206>
 8000be6:	f000 febd 	bl	8001964 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();}
 8000bea:	2164      	movs	r1, #100	@ 0x64
 8000bec:	482a      	ldr	r0, [pc, #168]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000bee:	f001 ff1d 	bl	8002a2c <HAL_ADC_PollForConversion>
 8000bf2:	4603      	mov	r3, r0
 8000bf4:	2b00      	cmp	r3, #0
 8000bf6:	d001      	beq.n	8000bfc <Current_Sense_read+0x218>
 8000bf8:	f000 feb4 	bl	8001964 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc2,100)!=HAL_OK){Error_Handler();}
 8000bfc:	2164      	movs	r1, #100	@ 0x64
 8000bfe:	4827      	ldr	r0, [pc, #156]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000c00:	f001 ff14 	bl	8002a2c <HAL_ADC_PollForConversion>
 8000c04:	4603      	mov	r3, r0
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	d001      	beq.n	8000c0e <Current_Sense_read+0x22a>
 8000c0a:	f000 feab 	bl	8001964 <Error_Handler>
				IN3_1_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc1);
 8000c0e:	4822      	ldr	r0, [pc, #136]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000c10:	f002 f94f 	bl	8002eb2 <HAL_ADC_GetValue>
 8000c14:	4603      	mov	r3, r0
 8000c16:	b299      	uxth	r1, r3
 8000c18:	4a25      	ldr	r2, [pc, #148]	@ (8000cb0 <Current_Sense_read+0x2cc>)
 8000c1a:	693b      	ldr	r3, [r7, #16]
 8000c1c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				IN3_2_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc2);
 8000c20:	481e      	ldr	r0, [pc, #120]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000c22:	f002 f946 	bl	8002eb2 <HAL_ADC_GetValue>
 8000c26:	4603      	mov	r3, r0
 8000c28:	b299      	uxth	r1, r3
 8000c2a:	4a22      	ldr	r2, [pc, #136]	@ (8000cb4 <Current_Sense_read+0x2d0>)
 8000c2c:	693b      	ldr	r3, [r7, #16]
 8000c2e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop_IT(&hadc1)!=HAL_OK){Error_Handler();}
 8000c32:	4819      	ldr	r0, [pc, #100]	@ (8000c98 <Current_Sense_read+0x2b4>)
 8000c34:	f002 f902 	bl	8002e3c <HAL_ADC_Stop_IT>
 8000c38:	4603      	mov	r3, r0
 8000c3a:	2b00      	cmp	r3, #0
 8000c3c:	d001      	beq.n	8000c42 <Current_Sense_read+0x25e>
 8000c3e:	f000 fe91 	bl	8001964 <Error_Handler>
				if(HAL_ADC_Stop_IT(&hadc2)!=HAL_OK){Error_Handler();}
 8000c42:	4816      	ldr	r0, [pc, #88]	@ (8000c9c <Current_Sense_read+0x2b8>)
 8000c44:	f002 f8fa 	bl	8002e3c <HAL_ADC_Stop_IT>
 8000c48:	4603      	mov	r3, r0
 8000c4a:	2b00      	cmp	r3, #0
 8000c4c:	d001      	beq.n	8000c52 <Current_Sense_read+0x26e>
 8000c4e:	f000 fe89 	bl	8001964 <Error_Handler>
			for(int i = 0; i < I_AVERAGE; i++){
 8000c52:	693b      	ldr	r3, [r7, #16]
 8000c54:	3301      	adds	r3, #1
 8000c56:	613b      	str	r3, [r7, #16]
 8000c58:	693b      	ldr	r3, [r7, #16]
 8000c5a:	2b1f      	cmp	r3, #31
 8000c5c:	ddb5      	ble.n	8000bca <Current_Sense_read+0x1e6>
			}
			break;
 8000c5e:	e0eb      	b.n	8000e38 <Current_Sense_read+0x454>
		case 3:
			//chip_select_read();
			Current_Sense_SEL[0] = 1;
 8000c60:	4b0b      	ldr	r3, [pc, #44]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000c62:	2201      	movs	r2, #1
 8000c64:	701a      	strb	r2, [r3, #0]
			Current_Sense_SEL[1] = 1;
 8000c66:	4b0a      	ldr	r3, [pc, #40]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000c68:	2201      	movs	r2, #1
 8000c6a:	705a      	strb	r2, [r3, #1]
			HAL_GPIO_WritePin(GPIOB,SEL0_Pin,Current_Sense_SEL[0]);
 8000c6c:	4b08      	ldr	r3, [pc, #32]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000c6e:	781b      	ldrb	r3, [r3, #0]
 8000c70:	461a      	mov	r2, r3
 8000c72:	2140      	movs	r1, #64	@ 0x40
 8000c74:	4807      	ldr	r0, [pc, #28]	@ (8000c94 <Current_Sense_read+0x2b0>)
 8000c76:	f004 f83d 	bl	8004cf4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB,SEL1_Pin,Current_Sense_SEL[1]);
 8000c7a:	4b05      	ldr	r3, [pc, #20]	@ (8000c90 <Current_Sense_read+0x2ac>)
 8000c7c:	785b      	ldrb	r3, [r3, #1]
 8000c7e:	461a      	mov	r2, r3
 8000c80:	2120      	movs	r1, #32
 8000c82:	4804      	ldr	r0, [pc, #16]	@ (8000c94 <Current_Sense_read+0x2b0>)
 8000c84:	f004 f836 	bl	8004cf4 <HAL_GPIO_WritePin>
			for(int i = 0; i < I_AVERAGE; i++){
 8000c88:	2300      	movs	r3, #0
 8000c8a:	60fb      	str	r3, [r7, #12]
 8000c8c:	e05b      	b.n	8000d46 <Current_Sense_read+0x362>
 8000c8e:	bf00      	nop
 8000c90:	20000630 	.word	0x20000630
 8000c94:	48000400 	.word	0x48000400
 8000c98:	20000038 	.word	0x20000038
 8000c9c:	200000a4 	.word	0x200000a4
 8000ca0:	20000388 	.word	0x20000388
 8000ca4:	20000488 	.word	0x20000488
 8000ca8:	200003c8 	.word	0x200003c8
 8000cac:	200004c8 	.word	0x200004c8
 8000cb0:	20000408 	.word	0x20000408
 8000cb4:	20000508 	.word	0x20000508
				if(HAL_ADC_Start_IT(&hadc1)!=HAL_OK){Error_Handler();}
 8000cb8:	4866      	ldr	r0, [pc, #408]	@ (8000e54 <Current_Sense_read+0x470>)
 8000cba:	f001 ff8f 	bl	8002bdc <HAL_ADC_Start_IT>
 8000cbe:	4603      	mov	r3, r0
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d001      	beq.n	8000cc8 <Current_Sense_read+0x2e4>
 8000cc4:	f000 fe4e 	bl	8001964 <Error_Handler>
				if(HAL_ADC_Start_IT(&hadc2)!=HAL_OK){Error_Handler();}
 8000cc8:	4863      	ldr	r0, [pc, #396]	@ (8000e58 <Current_Sense_read+0x474>)
 8000cca:	f001 ff87 	bl	8002bdc <HAL_ADC_Start_IT>
 8000cce:	4603      	mov	r3, r0
 8000cd0:	2b00      	cmp	r3, #0
 8000cd2:	d001      	beq.n	8000cd8 <Current_Sense_read+0x2f4>
 8000cd4:	f000 fe46 	bl	8001964 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();}
 8000cd8:	2164      	movs	r1, #100	@ 0x64
 8000cda:	485e      	ldr	r0, [pc, #376]	@ (8000e54 <Current_Sense_read+0x470>)
 8000cdc:	f001 fea6 	bl	8002a2c <HAL_ADC_PollForConversion>
 8000ce0:	4603      	mov	r3, r0
 8000ce2:	2b00      	cmp	r3, #0
 8000ce4:	d001      	beq.n	8000cea <Current_Sense_read+0x306>
 8000ce6:	f000 fe3d 	bl	8001964 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc2,100)!=HAL_OK){Error_Handler();}
 8000cea:	2164      	movs	r1, #100	@ 0x64
 8000cec:	485a      	ldr	r0, [pc, #360]	@ (8000e58 <Current_Sense_read+0x474>)
 8000cee:	f001 fe9d 	bl	8002a2c <HAL_ADC_PollForConversion>
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	d001      	beq.n	8000cfc <Current_Sense_read+0x318>
 8000cf8:	f000 fe34 	bl	8001964 <Error_Handler>
				IN4_1_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc1);
 8000cfc:	4855      	ldr	r0, [pc, #340]	@ (8000e54 <Current_Sense_read+0x470>)
 8000cfe:	f002 f8d8 	bl	8002eb2 <HAL_ADC_GetValue>
 8000d02:	4603      	mov	r3, r0
 8000d04:	b299      	uxth	r1, r3
 8000d06:	4a55      	ldr	r2, [pc, #340]	@ (8000e5c <Current_Sense_read+0x478>)
 8000d08:	68fb      	ldr	r3, [r7, #12]
 8000d0a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				IN4_2_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc2);
 8000d0e:	4852      	ldr	r0, [pc, #328]	@ (8000e58 <Current_Sense_read+0x474>)
 8000d10:	f002 f8cf 	bl	8002eb2 <HAL_ADC_GetValue>
 8000d14:	4603      	mov	r3, r0
 8000d16:	b299      	uxth	r1, r3
 8000d18:	4a51      	ldr	r2, [pc, #324]	@ (8000e60 <Current_Sense_read+0x47c>)
 8000d1a:	68fb      	ldr	r3, [r7, #12]
 8000d1c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop_IT(&hadc1)!=HAL_OK){Error_Handler();}
 8000d20:	484c      	ldr	r0, [pc, #304]	@ (8000e54 <Current_Sense_read+0x470>)
 8000d22:	f002 f88b 	bl	8002e3c <HAL_ADC_Stop_IT>
 8000d26:	4603      	mov	r3, r0
 8000d28:	2b00      	cmp	r3, #0
 8000d2a:	d001      	beq.n	8000d30 <Current_Sense_read+0x34c>
 8000d2c:	f000 fe1a 	bl	8001964 <Error_Handler>
				if(HAL_ADC_Stop_IT(&hadc2)!=HAL_OK){Error_Handler();}
 8000d30:	4849      	ldr	r0, [pc, #292]	@ (8000e58 <Current_Sense_read+0x474>)
 8000d32:	f002 f883 	bl	8002e3c <HAL_ADC_Stop_IT>
 8000d36:	4603      	mov	r3, r0
 8000d38:	2b00      	cmp	r3, #0
 8000d3a:	d001      	beq.n	8000d40 <Current_Sense_read+0x35c>
 8000d3c:	f000 fe12 	bl	8001964 <Error_Handler>
			for(int i = 0; i < I_AVERAGE; i++){
 8000d40:	68fb      	ldr	r3, [r7, #12]
 8000d42:	3301      	adds	r3, #1
 8000d44:	60fb      	str	r3, [r7, #12]
 8000d46:	68fb      	ldr	r3, [r7, #12]
 8000d48:	2b1f      	cmp	r3, #31
 8000d4a:	ddb5      	ble.n	8000cb8 <Current_Sense_read+0x2d4>
			}
			break;
 8000d4c:	e074      	b.n	8000e38 <Current_Sense_read+0x454>
		case 4:
			//analog_read();
			for(int i = 0; i < I_AVERAGE/2; i++){
 8000d4e:	2300      	movs	r3, #0
 8000d50:	60bb      	str	r3, [r7, #8]
 8000d52:	e024      	b.n	8000d9e <Current_Sense_read+0x3ba>
				if(HAL_ADC_Start(&hadc1)!=HAL_OK){Error_Handler();}
 8000d54:	483f      	ldr	r0, [pc, #252]	@ (8000e54 <Current_Sense_read+0x470>)
 8000d56:	f001 fd79 	bl	800284c <HAL_ADC_Start>
 8000d5a:	4603      	mov	r3, r0
 8000d5c:	2b00      	cmp	r3, #0
 8000d5e:	d001      	beq.n	8000d64 <Current_Sense_read+0x380>
 8000d60:	f000 fe00 	bl	8001964 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();} //have to repeat this in all loops, so that the rank 2 ADC gets emptied as well
 8000d64:	2164      	movs	r1, #100	@ 0x64
 8000d66:	483b      	ldr	r0, [pc, #236]	@ (8000e54 <Current_Sense_read+0x470>)
 8000d68:	f001 fe60 	bl	8002a2c <HAL_ADC_PollForConversion>
 8000d6c:	4603      	mov	r3, r0
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	d001      	beq.n	8000d76 <Current_Sense_read+0x392>
 8000d72:	f000 fdf7 	bl	8001964 <Error_Handler>
				Analog_Current_Sense_1[i] = (uint16_t)HAL_ADC_GetValue(&hadc1); //have to repeat this in all loops, so that the rank 2 ADC gets emptied as well
 8000d76:	4837      	ldr	r0, [pc, #220]	@ (8000e54 <Current_Sense_read+0x470>)
 8000d78:	f002 f89b 	bl	8002eb2 <HAL_ADC_GetValue>
 8000d7c:	4603      	mov	r3, r0
 8000d7e:	b299      	uxth	r1, r3
 8000d80:	4a38      	ldr	r2, [pc, #224]	@ (8000e64 <Current_Sense_read+0x480>)
 8000d82:	68bb      	ldr	r3, [r7, #8]
 8000d84:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop(&hadc1)!=HAL_OK){Error_Handler();}
 8000d88:	4832      	ldr	r0, [pc, #200]	@ (8000e54 <Current_Sense_read+0x470>)
 8000d8a:	f001 fe1b 	bl	80029c4 <HAL_ADC_Stop>
 8000d8e:	4603      	mov	r3, r0
 8000d90:	2b00      	cmp	r3, #0
 8000d92:	d001      	beq.n	8000d98 <Current_Sense_read+0x3b4>
 8000d94:	f000 fde6 	bl	8001964 <Error_Handler>
			for(int i = 0; i < I_AVERAGE/2; i++){
 8000d98:	68bb      	ldr	r3, [r7, #8]
 8000d9a:	3301      	adds	r3, #1
 8000d9c:	60bb      	str	r3, [r7, #8]
 8000d9e:	68bb      	ldr	r3, [r7, #8]
 8000da0:	2b0f      	cmp	r3, #15
 8000da2:	ddd7      	ble.n	8000d54 <Current_Sense_read+0x370>
			}
			//analog_read();
			for(int i = 0; i < I_AVERAGE/2; i++){
 8000da4:	2300      	movs	r3, #0
 8000da6:	607b      	str	r3, [r7, #4]
 8000da8:	e042      	b.n	8000e30 <Current_Sense_read+0x44c>
				if(HAL_ADC_Start(&hadc1)!=HAL_OK){Error_Handler();}
 8000daa:	482a      	ldr	r0, [pc, #168]	@ (8000e54 <Current_Sense_read+0x470>)
 8000dac:	f001 fd4e 	bl	800284c <HAL_ADC_Start>
 8000db0:	4603      	mov	r3, r0
 8000db2:	2b00      	cmp	r3, #0
 8000db4:	d001      	beq.n	8000dba <Current_Sense_read+0x3d6>
 8000db6:	f000 fdd5 	bl	8001964 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();} //have to repeat this in all loops, so that the rank 2 ADC gets emptied as well
 8000dba:	2164      	movs	r1, #100	@ 0x64
 8000dbc:	4825      	ldr	r0, [pc, #148]	@ (8000e54 <Current_Sense_read+0x470>)
 8000dbe:	f001 fe35 	bl	8002a2c <HAL_ADC_PollForConversion>
 8000dc2:	4603      	mov	r3, r0
 8000dc4:	2b00      	cmp	r3, #0
 8000dc6:	d001      	beq.n	8000dcc <Current_Sense_read+0x3e8>
 8000dc8:	f000 fdcc 	bl	8001964 <Error_Handler>
				Analog_Current_Sense_2[i] = (uint16_t)HAL_ADC_GetValue(&hadc1); //have to repeat this in all loops, so that the rank 2 ADC gets emptied as well
 8000dcc:	4821      	ldr	r0, [pc, #132]	@ (8000e54 <Current_Sense_read+0x470>)
 8000dce:	f002 f870 	bl	8002eb2 <HAL_ADC_GetValue>
 8000dd2:	4603      	mov	r3, r0
 8000dd4:	b299      	uxth	r1, r3
 8000dd6:	4a24      	ldr	r2, [pc, #144]	@ (8000e68 <Current_Sense_read+0x484>)
 8000dd8:	687b      	ldr	r3, [r7, #4]
 8000dda:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop(&hadc1)!=HAL_OK){Error_Handler();}
 8000dde:	481d      	ldr	r0, [pc, #116]	@ (8000e54 <Current_Sense_read+0x470>)
 8000de0:	f001 fdf0 	bl	80029c4 <HAL_ADC_Stop>
 8000de4:	4603      	mov	r3, r0
 8000de6:	2b00      	cmp	r3, #0
 8000de8:	d001      	beq.n	8000dee <Current_Sense_read+0x40a>
 8000dea:	f000 fdbb 	bl	8001964 <Error_Handler>
				if(Analog_Current_Sense_1[i]>Analog_Current_Sense_2[i]){
 8000dee:	4a1d      	ldr	r2, [pc, #116]	@ (8000e64 <Current_Sense_read+0x480>)
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000df6:	491c      	ldr	r1, [pc, #112]	@ (8000e68 <Current_Sense_read+0x484>)
 8000df8:	687b      	ldr	r3, [r7, #4]
 8000dfa:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000dfe:	429a      	cmp	r2, r3
 8000e00:	d90e      	bls.n	8000e20 <Current_Sense_read+0x43c>
					Analog_Current_Sense[i] = Analog_Current_Sense_1[i] - Analog_Current_Sense_2[i];
 8000e02:	4a18      	ldr	r2, [pc, #96]	@ (8000e64 <Current_Sense_read+0x480>)
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000e0a:	4917      	ldr	r1, [pc, #92]	@ (8000e68 <Current_Sense_read+0x484>)
 8000e0c:	687b      	ldr	r3, [r7, #4]
 8000e0e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000e12:	1ad3      	subs	r3, r2, r3
 8000e14:	b299      	uxth	r1, r3
 8000e16:	4a15      	ldr	r2, [pc, #84]	@ (8000e6c <Current_Sense_read+0x488>)
 8000e18:	687b      	ldr	r3, [r7, #4]
 8000e1a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000e1e:	e004      	b.n	8000e2a <Current_Sense_read+0x446>
				}else{
					Analog_Current_Sense[i] = 0;
 8000e20:	4a12      	ldr	r2, [pc, #72]	@ (8000e6c <Current_Sense_read+0x488>)
 8000e22:	687b      	ldr	r3, [r7, #4]
 8000e24:	2100      	movs	r1, #0
 8000e26:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int i = 0; i < I_AVERAGE/2; i++){
 8000e2a:	687b      	ldr	r3, [r7, #4]
 8000e2c:	3301      	adds	r3, #1
 8000e2e:	607b      	str	r3, [r7, #4]
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	2b0f      	cmp	r3, #15
 8000e34:	ddb9      	ble.n	8000daa <Current_Sense_read+0x3c6>
				}
			}
			break;
 8000e36:	bf00      	nop
	for(int x = 0; x < 5; x++){
 8000e38:	69fb      	ldr	r3, [r7, #28]
 8000e3a:	3301      	adds	r3, #1
 8000e3c:	61fb      	str	r3, [r7, #28]
 8000e3e:	69fb      	ldr	r3, [r7, #28]
 8000e40:	2b04      	cmp	r3, #4
 8000e42:	f77f add5 	ble.w	80009f0 <Current_Sense_read+0xc>
		}else{
			print_out(1,"S1: ",data_output_switch);
		}*/
//------------------------------------------------------
	}
	Current_Sense_process();
 8000e46:	f7ff fc53 	bl	80006f0 <Current_Sense_process>
}
 8000e4a:	bf00      	nop
 8000e4c:	3720      	adds	r7, #32
 8000e4e:	46bd      	mov	sp, r7
 8000e50:	bd80      	pop	{r7, pc}
 8000e52:	bf00      	nop
 8000e54:	20000038 	.word	0x20000038
 8000e58:	200000a4 	.word	0x200000a4
 8000e5c:	20000448 	.word	0x20000448
 8000e60:	20000548 	.word	0x20000548
 8000e64:	20000588 	.word	0x20000588
 8000e68:	200005a8 	.word	0x200005a8
 8000e6c:	200005c8 	.word	0x200005c8

08000e70 <check_bit>:


uint8_t check_bit(uint8_t byte, uint8_t bitn){
 8000e70:	b480      	push	{r7}
 8000e72:	b085      	sub	sp, #20
 8000e74:	af00      	add	r7, sp, #0
 8000e76:	4603      	mov	r3, r0
 8000e78:	460a      	mov	r2, r1
 8000e7a:	71fb      	strb	r3, [r7, #7]
 8000e7c:	4613      	mov	r3, r2
 8000e7e:	71bb      	strb	r3, [r7, #6]
	uint8_t buffer = 1<<bitn;
 8000e80:	79bb      	ldrb	r3, [r7, #6]
 8000e82:	2201      	movs	r2, #1
 8000e84:	fa02 f303 	lsl.w	r3, r2, r3
 8000e88:	73fb      	strb	r3, [r7, #15]
	if (byte & buffer){
 8000e8a:	79fa      	ldrb	r2, [r7, #7]
 8000e8c:	7bfb      	ldrb	r3, [r7, #15]
 8000e8e:	4013      	ands	r3, r2
 8000e90:	b2db      	uxtb	r3, r3
 8000e92:	2b00      	cmp	r3, #0
 8000e94:	d001      	beq.n	8000e9a <check_bit+0x2a>
		return 1;
 8000e96:	2301      	movs	r3, #1
 8000e98:	e000      	b.n	8000e9c <check_bit+0x2c>
	}else{
		return 0;
 8000e9a:	2300      	movs	r3, #0
	}
}
 8000e9c:	4618      	mov	r0, r3
 8000e9e:	3714      	adds	r7, #20
 8000ea0:	46bd      	mov	sp, r7
 8000ea2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ea6:	4770      	bx	lr

08000ea8 <set_bit>:

uint8_t set_bit(uint8_t byte, uint8_t pos, uint8_t new_bit){
 8000ea8:	b480      	push	{r7}
 8000eaa:	b085      	sub	sp, #20
 8000eac:	af00      	add	r7, sp, #0
 8000eae:	4603      	mov	r3, r0
 8000eb0:	71fb      	strb	r3, [r7, #7]
 8000eb2:	460b      	mov	r3, r1
 8000eb4:	71bb      	strb	r3, [r7, #6]
 8000eb6:	4613      	mov	r3, r2
 8000eb8:	717b      	strb	r3, [r7, #5]
	uint8_t mask = 1 << pos;
 8000eba:	79bb      	ldrb	r3, [r7, #6]
 8000ebc:	2201      	movs	r2, #1
 8000ebe:	fa02 f303 	lsl.w	r3, r2, r3
 8000ec2:	73fb      	strb	r3, [r7, #15]
	if(new_bit == 1){
 8000ec4:	797b      	ldrb	r3, [r7, #5]
 8000ec6:	2b01      	cmp	r3, #1
 8000ec8:	d104      	bne.n	8000ed4 <set_bit+0x2c>
		byte |= mask;
 8000eca:	79fa      	ldrb	r2, [r7, #7]
 8000ecc:	7bfb      	ldrb	r3, [r7, #15]
 8000ece:	4313      	orrs	r3, r2
 8000ed0:	71fb      	strb	r3, [r7, #7]
 8000ed2:	e008      	b.n	8000ee6 <set_bit+0x3e>
	}else{
		byte &= ~mask;
 8000ed4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000ed8:	43db      	mvns	r3, r3
 8000eda:	b25a      	sxtb	r2, r3
 8000edc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ee0:	4013      	ands	r3, r2
 8000ee2:	b25b      	sxtb	r3, r3
 8000ee4:	71fb      	strb	r3, [r7, #7]
	}
	return byte;
 8000ee6:	79fb      	ldrb	r3, [r7, #7]
}
 8000ee8:	4618      	mov	r0, r3
 8000eea:	3714      	adds	r7, #20
 8000eec:	46bd      	mov	sp, r7
 8000eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ef2:	4770      	bx	lr

08000ef4 <Current_Sense_Raw_to_mA>:

uint16_t Current_Sense_Raw_to_mA(uint16_t raw){
 8000ef4:	b480      	push	{r7}
 8000ef6:	b085      	sub	sp, #20
 8000ef8:	af00      	add	r7, sp, #0
 8000efa:	4603      	mov	r3, r0
 8000efc:	80fb      	strh	r3, [r7, #6]
	//4095 is the max, depending on resistors we will find the current values		3.3 V == 4,95 A
	uint32_t max_mA = 4950;
 8000efe:	f241 3356 	movw	r3, #4950	@ 0x1356
 8000f02:	60fb      	str	r3, [r7, #12]
	uint16_t current = 0;
 8000f04:	2300      	movs	r3, #0
 8000f06:	817b      	strh	r3, [r7, #10]

	//current = raw*max_mA / 4095;
	current = raw*3300 / 4095;
 8000f08:	88fb      	ldrh	r3, [r7, #6]
 8000f0a:	f640 42e4 	movw	r2, #3300	@ 0xce4
 8000f0e:	fb02 f303 	mul.w	r3, r2, r3
 8000f12:	4a07      	ldr	r2, [pc, #28]	@ (8000f30 <Current_Sense_Raw_to_mA+0x3c>)
 8000f14:	fb82 1203 	smull	r1, r2, r2, r3
 8000f18:	441a      	add	r2, r3
 8000f1a:	12d2      	asrs	r2, r2, #11
 8000f1c:	17db      	asrs	r3, r3, #31
 8000f1e:	1ad3      	subs	r3, r2, r3
 8000f20:	817b      	strh	r3, [r7, #10]

	return current;
 8000f22:	897b      	ldrh	r3, [r7, #10]
}
 8000f24:	4618      	mov	r0, r3
 8000f26:	3714      	adds	r7, #20
 8000f28:	46bd      	mov	sp, r7
 8000f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f2e:	4770      	bx	lr
 8000f30:	80080081 	.word	0x80080081

08000f34 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000f34:	b580      	push	{r7, lr}
 8000f36:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000f38:	f000 fff7 	bl	8001f2a <HAL_Init>

  /* USER CODE BEGIN Init */
  Config_Setup();
 8000f3c:	f7ff f9b6 	bl	80002ac <Config_Setup>
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000f40:	f000 f880 	bl	8001044 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000f44:	f000 fcac 	bl	80018a0 <MX_GPIO_Init>
  MX_ADC1_Init();
 8000f48:	f000 f8c6 	bl	80010d8 <MX_ADC1_Init>
  MX_FDCAN1_Init();
 8000f4c:	f000 f9c6 	bl	80012dc <MX_FDCAN1_Init>
  MX_TIM1_Init();
 8000f50:	f000 fa2c 	bl	80013ac <MX_TIM1_Init>
  MX_TIM2_Init();
 8000f54:	f000 fada 	bl	800150c <MX_TIM2_Init>
  MX_TIM3_Init();
 8000f58:	f000 fb4e 	bl	80015f8 <MX_TIM3_Init>
  MX_TIM4_Init();
 8000f5c:	f000 fb9a 	bl	8001694 <MX_TIM4_Init>
  MX_TIM6_Init();
 8000f60:	f000 fc0c 	bl	800177c <MX_TIM6_Init>
  MX_TIM7_Init();
 8000f64:	f000 fc40 	bl	80017e8 <MX_TIM7_Init>
  MX_TIM16_Init();
 8000f68:	f000 fc74 	bl	8001854 <MX_TIM16_Init>
  MX_ADC2_Init();
 8000f6c:	f000 f950 	bl	8001210 <MX_ADC2_Init>
  /* USER CODE BEGIN 2 */
  HAL_GPIO_WritePin(GPIOA,LED2_Pin,0);
 8000f70:	2200      	movs	r2, #0
 8000f72:	2180      	movs	r1, #128	@ 0x80
 8000f74:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000f78:	f003 febc 	bl	8004cf4 <HAL_GPIO_WritePin>

  HAL_TIM_PWM_Init(&htim1);
 8000f7c:	4829      	ldr	r0, [pc, #164]	@ (8001024 <main+0xf0>)
 8000f7e:	f004 ff2d 	bl	8005ddc <HAL_TIM_PWM_Init>
  HAL_TIM_PWM_Init(&htim2);
 8000f82:	4829      	ldr	r0, [pc, #164]	@ (8001028 <main+0xf4>)
 8000f84:	f004 ff2a 	bl	8005ddc <HAL_TIM_PWM_Init>
  HAL_TIM_Base_Start_IT(&htim3);
 8000f88:	4828      	ldr	r0, [pc, #160]	@ (800102c <main+0xf8>)
 8000f8a:	f004 febd 	bl	8005d08 <HAL_TIM_Base_Start_IT>

  HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 8000f8e:	2100      	movs	r1, #0
 8000f90:	4824      	ldr	r0, [pc, #144]	@ (8001024 <main+0xf0>)
 8000f92:	f004 ff85 	bl	8005ea0 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 8000f96:	2100      	movs	r1, #0
 8000f98:	4823      	ldr	r0, [pc, #140]	@ (8001028 <main+0xf4>)
 8000f9a:	f004 ff81 	bl	8005ea0 <HAL_TIM_PWM_Start>

  set_pwm_duty_cycle(&htim1);
 8000f9e:	4821      	ldr	r0, [pc, #132]	@ (8001024 <main+0xf0>)
 8000fa0:	f7ff f93a 	bl	8000218 <set_pwm_duty_cycle>
  set_pwm_duty_cycle(&htim2);
 8000fa4:	4820      	ldr	r0, [pc, #128]	@ (8001028 <main+0xf4>)
 8000fa6:	f7ff f937 	bl	8000218 <set_pwm_duty_cycle>

  if(HAL_FDCAN_Start(&hfdcan1)!= HAL_OK){ Error_Handler(); }else{HAL_GPIO_WritePin(GPIOB,LED1_Pin,1); }
 8000faa:	4821      	ldr	r0, [pc, #132]	@ (8001030 <main+0xfc>)
 8000fac:	f003 f854 	bl	8004058 <HAL_FDCAN_Start>
 8000fb0:	4603      	mov	r3, r0
 8000fb2:	2b00      	cmp	r3, #0
 8000fb4:	d002      	beq.n	8000fbc <main+0x88>
 8000fb6:	f000 fcd5 	bl	8001964 <Error_Handler>
 8000fba:	e004      	b.n	8000fc6 <main+0x92>
 8000fbc:	2201      	movs	r2, #1
 8000fbe:	2101      	movs	r1, #1
 8000fc0:	481c      	ldr	r0, [pc, #112]	@ (8001034 <main+0x100>)
 8000fc2:	f003 fe97 	bl	8004cf4 <HAL_GPIO_WritePin>
  if(HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE,0) != HAL_OK) { Error_Handler(); }
 8000fc6:	2200      	movs	r2, #0
 8000fc8:	2101      	movs	r1, #1
 8000fca:	4819      	ldr	r0, [pc, #100]	@ (8001030 <main+0xfc>)
 8000fcc:	f003 f9ca 	bl	8004364 <HAL_FDCAN_ActivateNotification>
 8000fd0:	4603      	mov	r3, r0
 8000fd2:	2b00      	cmp	r3, #0
 8000fd4:	d001      	beq.n	8000fda <main+0xa6>
 8000fd6:	f000 fcc5 	bl	8001964 <Error_Handler>
  HAL_Delay(100);
 8000fda:	2064      	movs	r0, #100	@ 0x64
 8000fdc:	f001 f816 	bl	800200c <HAL_Delay>
  HAL_GPIO_WritePin(GPIOA,LED2_Pin,1);
 8000fe0:	2201      	movs	r2, #1
 8000fe2:	2180      	movs	r1, #128	@ 0x80
 8000fe4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000fe8:	f003 fe84 	bl	8004cf4 <HAL_GPIO_WritePin>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
		 __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1,PWM_speed[0]);
 8000fec:	4b12      	ldr	r3, [pc, #72]	@ (8001038 <main+0x104>)
 8000fee:	881a      	ldrh	r2, [r3, #0]
 8000ff0:	4b0c      	ldr	r3, [pc, #48]	@ (8001024 <main+0xf0>)
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	635a      	str	r2, [r3, #52]	@ 0x34

		 __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1,PWM_speed[1]);
 8000ff6:	4b10      	ldr	r3, [pc, #64]	@ (8001038 <main+0x104>)
 8000ff8:	885a      	ldrh	r2, [r3, #2]
 8000ffa:	4b0b      	ldr	r3, [pc, #44]	@ (8001028 <main+0xf4>)
 8000ffc:	681b      	ldr	r3, [r3, #0]
 8000ffe:	635a      	str	r2, [r3, #52]	@ 0x34
	  if(millis % 20 == 0){
 8001000:	4b0e      	ldr	r3, [pc, #56]	@ (800103c <main+0x108>)
 8001002:	881a      	ldrh	r2, [r3, #0]
 8001004:	4b0e      	ldr	r3, [pc, #56]	@ (8001040 <main+0x10c>)
 8001006:	fba3 1302 	umull	r1, r3, r3, r2
 800100a:	0919      	lsrs	r1, r3, #4
 800100c:	460b      	mov	r3, r1
 800100e:	009b      	lsls	r3, r3, #2
 8001010:	440b      	add	r3, r1
 8001012:	009b      	lsls	r3, r3, #2
 8001014:	1ad3      	subs	r3, r2, r3
 8001016:	b29b      	uxth	r3, r3
 8001018:	2b00      	cmp	r3, #0
 800101a:	d1e7      	bne.n	8000fec <main+0xb8>
		  Current_Sense_read();
 800101c:	f7ff fce2 	bl	80009e4 <Current_Sense_read>
		 __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1,PWM_speed[0]);
 8001020:	e7e4      	b.n	8000fec <main+0xb8>
 8001022:	bf00      	nop
 8001024:	20000174 	.word	0x20000174
 8001028:	200001c0 	.word	0x200001c0
 800102c:	2000020c 	.word	0x2000020c
 8001030:	20000110 	.word	0x20000110
 8001034:	48000400 	.word	0x48000400
 8001038:	20000644 	.word	0x20000644
 800103c:	2000062c 	.word	0x2000062c
 8001040:	cccccccd 	.word	0xcccccccd

08001044 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001044:	b580      	push	{r7, lr}
 8001046:	b094      	sub	sp, #80	@ 0x50
 8001048:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800104a:	f107 0318 	add.w	r3, r7, #24
 800104e:	2238      	movs	r2, #56	@ 0x38
 8001050:	2100      	movs	r1, #0
 8001052:	4618      	mov	r0, r3
 8001054:	f006 f95c 	bl	8007310 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001058:	1d3b      	adds	r3, r7, #4
 800105a:	2200      	movs	r2, #0
 800105c:	601a      	str	r2, [r3, #0]
 800105e:	605a      	str	r2, [r3, #4]
 8001060:	609a      	str	r2, [r3, #8]
 8001062:	60da      	str	r2, [r3, #12]
 8001064:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001066:	f44f 7000 	mov.w	r0, #512	@ 0x200
 800106a:	f003 fe5b 	bl	8004d24 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800106e:	2301      	movs	r3, #1
 8001070:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001072:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001076:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001078:	2302      	movs	r3, #2
 800107a:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800107c:	2303      	movs	r3, #3
 800107e:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 8001080:	2301      	movs	r3, #1
 8001082:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 12;
 8001084:	230c      	movs	r3, #12
 8001086:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001088:	2302      	movs	r3, #2
 800108a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV6;
 800108c:	2306      	movs	r3, #6
 800108e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001090:	2302      	movs	r3, #2
 8001092:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001094:	f107 0318 	add.w	r3, r7, #24
 8001098:	4618      	mov	r0, r3
 800109a:	f003 fef7 	bl	8004e8c <HAL_RCC_OscConfig>
 800109e:	4603      	mov	r3, r0
 80010a0:	2b00      	cmp	r3, #0
 80010a2:	d001      	beq.n	80010a8 <SystemClock_Config+0x64>
  {
    Error_Handler();
 80010a4:	f000 fc5e 	bl	8001964 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80010a8:	230f      	movs	r3, #15
 80010aa:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80010ac:	2303      	movs	r3, #3
 80010ae:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80010b0:	2300      	movs	r3, #0
 80010b2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80010b4:	2300      	movs	r3, #0
 80010b6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80010b8:	2300      	movs	r3, #0
 80010ba:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80010bc:	1d3b      	adds	r3, r7, #4
 80010be:	2101      	movs	r1, #1
 80010c0:	4618      	mov	r0, r3
 80010c2:	f004 f9f5 	bl	80054b0 <HAL_RCC_ClockConfig>
 80010c6:	4603      	mov	r3, r0
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d001      	beq.n	80010d0 <SystemClock_Config+0x8c>
  {
    Error_Handler();
 80010cc:	f000 fc4a 	bl	8001964 <Error_Handler>
  }
}
 80010d0:	bf00      	nop
 80010d2:	3750      	adds	r7, #80	@ 0x50
 80010d4:	46bd      	mov	sp, r7
 80010d6:	bd80      	pop	{r7, pc}

080010d8 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80010d8:	b580      	push	{r7, lr}
 80010da:	b08c      	sub	sp, #48	@ 0x30
 80010dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 80010de:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80010e2:	2200      	movs	r2, #0
 80010e4:	601a      	str	r2, [r3, #0]
 80010e6:	605a      	str	r2, [r3, #4]
 80010e8:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 80010ea:	1d3b      	adds	r3, r7, #4
 80010ec:	2220      	movs	r2, #32
 80010ee:	2100      	movs	r1, #0
 80010f0:	4618      	mov	r0, r3
 80010f2:	f006 f90d 	bl	8007310 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 80010f6:	4b42      	ldr	r3, [pc, #264]	@ (8001200 <MX_ADC1_Init+0x128>)
 80010f8:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 80010fc:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80010fe:	4b40      	ldr	r3, [pc, #256]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001100:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001104:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001106:	4b3e      	ldr	r3, [pc, #248]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001108:	2200      	movs	r2, #0
 800110a:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800110c:	4b3c      	ldr	r3, [pc, #240]	@ (8001200 <MX_ADC1_Init+0x128>)
 800110e:	2200      	movs	r2, #0
 8001110:	60da      	str	r2, [r3, #12]
  hadc1.Init.GainCompensation = 0;
 8001112:	4b3b      	ldr	r3, [pc, #236]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001114:	2200      	movs	r2, #0
 8001116:	611a      	str	r2, [r3, #16]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8001118:	4b39      	ldr	r3, [pc, #228]	@ (8001200 <MX_ADC1_Init+0x128>)
 800111a:	2201      	movs	r2, #1
 800111c:	615a      	str	r2, [r3, #20]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800111e:	4b38      	ldr	r3, [pc, #224]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001120:	2204      	movs	r2, #4
 8001122:	619a      	str	r2, [r3, #24]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8001124:	4b36      	ldr	r3, [pc, #216]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001126:	2200      	movs	r2, #0
 8001128:	771a      	strb	r2, [r3, #28]
  hadc1.Init.ContinuousConvMode = DISABLE;
 800112a:	4b35      	ldr	r3, [pc, #212]	@ (8001200 <MX_ADC1_Init+0x128>)
 800112c:	2200      	movs	r2, #0
 800112e:	775a      	strb	r2, [r3, #29]
  hadc1.Init.NbrOfConversion = 3;
 8001130:	4b33      	ldr	r3, [pc, #204]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001132:	2203      	movs	r2, #3
 8001134:	621a      	str	r2, [r3, #32]
  hadc1.Init.DiscontinuousConvMode = ENABLE;
 8001136:	4b32      	ldr	r3, [pc, #200]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001138:	2201      	movs	r2, #1
 800113a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc1.Init.NbrOfDiscConversion = 1;
 800113e:	4b30      	ldr	r3, [pc, #192]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001140:	2201      	movs	r2, #1
 8001142:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001144:	4b2e      	ldr	r3, [pc, #184]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001146:	2200      	movs	r2, #0
 8001148:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800114a:	4b2d      	ldr	r3, [pc, #180]	@ (8001200 <MX_ADC1_Init+0x128>)
 800114c:	2200      	movs	r2, #0
 800114e:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001150:	4b2b      	ldr	r3, [pc, #172]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001152:	2200      	movs	r2, #0
 8001154:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8001158:	4b29      	ldr	r3, [pc, #164]	@ (8001200 <MX_ADC1_Init+0x128>)
 800115a:	2200      	movs	r2, #0
 800115c:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc1.Init.OversamplingMode = DISABLE;
 800115e:	4b28      	ldr	r3, [pc, #160]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001160:	2200      	movs	r2, #0
 8001162:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001166:	4826      	ldr	r0, [pc, #152]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001168:	f001 f9ec 	bl	8002544 <HAL_ADC_Init>
 800116c:	4603      	mov	r3, r0
 800116e:	2b00      	cmp	r3, #0
 8001170:	d001      	beq.n	8001176 <MX_ADC1_Init+0x9e>
  {
    Error_Handler();
 8001172:	f000 fbf7 	bl	8001964 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8001176:	2300      	movs	r3, #0
 8001178:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 800117a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800117e:	4619      	mov	r1, r3
 8001180:	481f      	ldr	r0, [pc, #124]	@ (8001200 <MX_ADC1_Init+0x128>)
 8001182:	f002 fc5b 	bl	8003a3c <HAL_ADCEx_MultiModeConfigChannel>
 8001186:	4603      	mov	r3, r0
 8001188:	2b00      	cmp	r3, #0
 800118a:	d001      	beq.n	8001190 <MX_ADC1_Init+0xb8>
  {
    Error_Handler();
 800118c:	f000 fbea 	bl	8001964 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 8001190:	4b1c      	ldr	r3, [pc, #112]	@ (8001204 <MX_ADC1_Init+0x12c>)
 8001192:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8001194:	2306      	movs	r3, #6
 8001196:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 8001198:	2302      	movs	r3, #2
 800119a:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 800119c:	237f      	movs	r3, #127	@ 0x7f
 800119e:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80011a0:	2304      	movs	r3, #4
 80011a2:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 80011a4:	2300      	movs	r3, #0
 80011a6:	61bb      	str	r3, [r7, #24]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80011a8:	1d3b      	adds	r3, r7, #4
 80011aa:	4619      	mov	r1, r3
 80011ac:	4814      	ldr	r0, [pc, #80]	@ (8001200 <MX_ADC1_Init+0x128>)
 80011ae:	f001 fe8d 	bl	8002ecc <HAL_ADC_ConfigChannel>
 80011b2:	4603      	mov	r3, r0
 80011b4:	2b00      	cmp	r3, #0
 80011b6:	d001      	beq.n	80011bc <MX_ADC1_Init+0xe4>
  {
    Error_Handler();
 80011b8:	f000 fbd4 	bl	8001964 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 80011bc:	4b12      	ldr	r3, [pc, #72]	@ (8001208 <MX_ADC1_Init+0x130>)
 80011be:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80011c0:	230c      	movs	r3, #12
 80011c2:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80011c4:	1d3b      	adds	r3, r7, #4
 80011c6:	4619      	mov	r1, r3
 80011c8:	480d      	ldr	r0, [pc, #52]	@ (8001200 <MX_ADC1_Init+0x128>)
 80011ca:	f001 fe7f 	bl	8002ecc <HAL_ADC_ConfigChannel>
 80011ce:	4603      	mov	r3, r0
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	d001      	beq.n	80011d8 <MX_ADC1_Init+0x100>
  {
    Error_Handler();
 80011d4:	f000 fbc6 	bl	8001964 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_4;
 80011d8:	4b0c      	ldr	r3, [pc, #48]	@ (800120c <MX_ADC1_Init+0x134>)
 80011da:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 80011dc:	2312      	movs	r3, #18
 80011de:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 80011e0:	2300      	movs	r3, #0
 80011e2:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80011e4:	1d3b      	adds	r3, r7, #4
 80011e6:	4619      	mov	r1, r3
 80011e8:	4805      	ldr	r0, [pc, #20]	@ (8001200 <MX_ADC1_Init+0x128>)
 80011ea:	f001 fe6f 	bl	8002ecc <HAL_ADC_ConfigChannel>
 80011ee:	4603      	mov	r3, r0
 80011f0:	2b00      	cmp	r3, #0
 80011f2:	d001      	beq.n	80011f8 <MX_ADC1_Init+0x120>
  {
    Error_Handler();
 80011f4:	f000 fbb6 	bl	8001964 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */
  //if (HAL_ADCEx_Calibration_Start(&hadc1, ADC_DIFFERENTIAL_ENDED)!= HAL_OK){ Error_Handler(); }
  /* USER CODE END ADC1_Init 2 */

}
 80011f8:	bf00      	nop
 80011fa:	3730      	adds	r7, #48	@ 0x30
 80011fc:	46bd      	mov	sp, r7
 80011fe:	bd80      	pop	{r7, pc}
 8001200:	20000038 	.word	0x20000038
 8001204:	04300002 	.word	0x04300002
 8001208:	0c900008 	.word	0x0c900008
 800120c:	10c00010 	.word	0x10c00010

08001210 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8001210:	b580      	push	{r7, lr}
 8001212:	b088      	sub	sp, #32
 8001214:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001216:	463b      	mov	r3, r7
 8001218:	2220      	movs	r2, #32
 800121a:	2100      	movs	r1, #0
 800121c:	4618      	mov	r0, r3
 800121e:	f006 f877 	bl	8007310 <memset>

  /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 8001222:	4b2b      	ldr	r3, [pc, #172]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 8001224:	4a2b      	ldr	r2, [pc, #172]	@ (80012d4 <MX_ADC2_Init+0xc4>)
 8001226:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001228:	4b29      	ldr	r3, [pc, #164]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 800122a:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 800122e:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8001230:	4b27      	ldr	r3, [pc, #156]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 8001232:	2200      	movs	r2, #0
 8001234:	609a      	str	r2, [r3, #8]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001236:	4b26      	ldr	r3, [pc, #152]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 8001238:	2200      	movs	r2, #0
 800123a:	60da      	str	r2, [r3, #12]
  hadc2.Init.GainCompensation = 0;
 800123c:	4b24      	ldr	r3, [pc, #144]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 800123e:	2200      	movs	r2, #0
 8001240:	611a      	str	r2, [r3, #16]
  hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8001242:	4b23      	ldr	r3, [pc, #140]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 8001244:	2200      	movs	r2, #0
 8001246:	615a      	str	r2, [r3, #20]
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001248:	4b21      	ldr	r3, [pc, #132]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 800124a:	2204      	movs	r2, #4
 800124c:	619a      	str	r2, [r3, #24]
  hadc2.Init.LowPowerAutoWait = DISABLE;
 800124e:	4b20      	ldr	r3, [pc, #128]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 8001250:	2200      	movs	r2, #0
 8001252:	771a      	strb	r2, [r3, #28]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8001254:	4b1e      	ldr	r3, [pc, #120]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 8001256:	2200      	movs	r2, #0
 8001258:	775a      	strb	r2, [r3, #29]
  hadc2.Init.NbrOfConversion = 1;
 800125a:	4b1d      	ldr	r3, [pc, #116]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 800125c:	2201      	movs	r2, #1
 800125e:	621a      	str	r2, [r3, #32]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8001260:	4b1b      	ldr	r3, [pc, #108]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 8001262:	2200      	movs	r2, #0
 8001264:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001268:	4b19      	ldr	r3, [pc, #100]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 800126a:	2200      	movs	r2, #0
 800126c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800126e:	4b18      	ldr	r3, [pc, #96]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 8001270:	2200      	movs	r2, #0
 8001272:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8001274:	4b16      	ldr	r3, [pc, #88]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 8001276:	2200      	movs	r2, #0
 8001278:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 800127c:	4b14      	ldr	r3, [pc, #80]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 800127e:	2200      	movs	r2, #0
 8001280:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc2.Init.OversamplingMode = DISABLE;
 8001282:	4b13      	ldr	r3, [pc, #76]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 8001284:	2200      	movs	r2, #0
 8001286:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 800128a:	4811      	ldr	r0, [pc, #68]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 800128c:	f001 f95a 	bl	8002544 <HAL_ADC_Init>
 8001290:	4603      	mov	r3, r0
 8001292:	2b00      	cmp	r3, #0
 8001294:	d001      	beq.n	800129a <MX_ADC2_Init+0x8a>
  {
    Error_Handler();
 8001296:	f000 fb65 	bl	8001964 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 800129a:	4b0f      	ldr	r3, [pc, #60]	@ (80012d8 <MX_ADC2_Init+0xc8>)
 800129c:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800129e:	2306      	movs	r3, #6
 80012a0:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 80012a2:	2302      	movs	r3, #2
 80012a4:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80012a6:	237f      	movs	r3, #127	@ 0x7f
 80012a8:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80012aa:	2304      	movs	r3, #4
 80012ac:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 80012ae:	2300      	movs	r3, #0
 80012b0:	617b      	str	r3, [r7, #20]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80012b2:	463b      	mov	r3, r7
 80012b4:	4619      	mov	r1, r3
 80012b6:	4806      	ldr	r0, [pc, #24]	@ (80012d0 <MX_ADC2_Init+0xc0>)
 80012b8:	f001 fe08 	bl	8002ecc <HAL_ADC_ConfigChannel>
 80012bc:	4603      	mov	r3, r0
 80012be:	2b00      	cmp	r3, #0
 80012c0:	d001      	beq.n	80012c6 <MX_ADC2_Init+0xb6>
  {
    Error_Handler();
 80012c2:	f000 fb4f 	bl	8001964 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */
  //if (HAL_ADCEx_Calibration_Start(&hadc2, ADC_DIFFERENTIAL_ENDED)!= HAL_OK){ Error_Handler(); }
  /* USER CODE END ADC2_Init 2 */

}
 80012c6:	bf00      	nop
 80012c8:	3720      	adds	r7, #32
 80012ca:	46bd      	mov	sp, r7
 80012cc:	bd80      	pop	{r7, pc}
 80012ce:	bf00      	nop
 80012d0:	200000a4 	.word	0x200000a4
 80012d4:	50000100 	.word	0x50000100
 80012d8:	0c900008 	.word	0x0c900008

080012dc <MX_FDCAN1_Init>:
  * @brief FDCAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_FDCAN1_Init(void)
{
 80012dc:	b580      	push	{r7, lr}
 80012de:	af00      	add	r7, sp, #0
  /* USER CODE END FDCAN1_Init 0 */

  /* USER CODE BEGIN FDCAN1_Init 1 */

  /* USER CODE END FDCAN1_Init 1 */
  hfdcan1.Instance = FDCAN1;
 80012e0:	4b2e      	ldr	r3, [pc, #184]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 80012e2:	4a2f      	ldr	r2, [pc, #188]	@ (80013a0 <MX_FDCAN1_Init+0xc4>)
 80012e4:	601a      	str	r2, [r3, #0]
  hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 80012e6:	4b2d      	ldr	r3, [pc, #180]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 80012e8:	2200      	movs	r2, #0
 80012ea:	605a      	str	r2, [r3, #4]
  hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 80012ec:	4b2b      	ldr	r3, [pc, #172]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 80012ee:	2200      	movs	r2, #0
 80012f0:	609a      	str	r2, [r3, #8]
  hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 80012f2:	4b2a      	ldr	r3, [pc, #168]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 80012f4:	2200      	movs	r2, #0
 80012f6:	60da      	str	r2, [r3, #12]
  hfdcan1.Init.AutoRetransmission = DISABLE;
 80012f8:	4b28      	ldr	r3, [pc, #160]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 80012fa:	2200      	movs	r2, #0
 80012fc:	741a      	strb	r2, [r3, #16]
  hfdcan1.Init.TransmitPause = DISABLE;
 80012fe:	4b27      	ldr	r3, [pc, #156]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 8001300:	2200      	movs	r2, #0
 8001302:	745a      	strb	r2, [r3, #17]
  hfdcan1.Init.ProtocolException = DISABLE;
 8001304:	4b25      	ldr	r3, [pc, #148]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 8001306:	2200      	movs	r2, #0
 8001308:	749a      	strb	r2, [r3, #18]
  hfdcan1.Init.NominalPrescaler = 1;
 800130a:	4b24      	ldr	r3, [pc, #144]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 800130c:	2201      	movs	r2, #1
 800130e:	615a      	str	r2, [r3, #20]
  hfdcan1.Init.NominalSyncJumpWidth = 1;
 8001310:	4b22      	ldr	r3, [pc, #136]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 8001312:	2201      	movs	r2, #1
 8001314:	619a      	str	r2, [r3, #24]
  hfdcan1.Init.NominalTimeSeg1 = 13;
 8001316:	4b21      	ldr	r3, [pc, #132]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 8001318:	220d      	movs	r2, #13
 800131a:	61da      	str	r2, [r3, #28]
  hfdcan1.Init.NominalTimeSeg2 = 2;
 800131c:	4b1f      	ldr	r3, [pc, #124]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 800131e:	2202      	movs	r2, #2
 8001320:	621a      	str	r2, [r3, #32]
  hfdcan1.Init.DataPrescaler = 1;
 8001322:	4b1e      	ldr	r3, [pc, #120]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 8001324:	2201      	movs	r2, #1
 8001326:	625a      	str	r2, [r3, #36]	@ 0x24
  hfdcan1.Init.DataSyncJumpWidth = 1;
 8001328:	4b1c      	ldr	r3, [pc, #112]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 800132a:	2201      	movs	r2, #1
 800132c:	629a      	str	r2, [r3, #40]	@ 0x28
  hfdcan1.Init.DataTimeSeg1 = 1;
 800132e:	4b1b      	ldr	r3, [pc, #108]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 8001330:	2201      	movs	r2, #1
 8001332:	62da      	str	r2, [r3, #44]	@ 0x2c
  hfdcan1.Init.DataTimeSeg2 = 1;
 8001334:	4b19      	ldr	r3, [pc, #100]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 8001336:	2201      	movs	r2, #1
 8001338:	631a      	str	r2, [r3, #48]	@ 0x30
  hfdcan1.Init.StdFiltersNbr = 28;
 800133a:	4b18      	ldr	r3, [pc, #96]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 800133c:	221c      	movs	r2, #28
 800133e:	635a      	str	r2, [r3, #52]	@ 0x34
  hfdcan1.Init.ExtFiltersNbr = 0;
 8001340:	4b16      	ldr	r3, [pc, #88]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 8001342:	2200      	movs	r2, #0
 8001344:	639a      	str	r2, [r3, #56]	@ 0x38
  hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 8001346:	4b15      	ldr	r3, [pc, #84]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 8001348:	2200      	movs	r2, #0
 800134a:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 800134c:	4813      	ldr	r0, [pc, #76]	@ (800139c <MX_FDCAN1_Init+0xc0>)
 800134e:	f002 fd29 	bl	8003da4 <HAL_FDCAN_Init>
 8001352:	4603      	mov	r3, r0
 8001354:	2b00      	cmp	r3, #0
 8001356:	d001      	beq.n	800135c <MX_FDCAN1_Init+0x80>
  {
    Error_Handler();
 8001358:	f000 fb04 	bl	8001964 <Error_Handler>
  }
  /* USER CODE BEGIN FDCAN1_Init 2 */
  TxHeader.Identifier = CAN_ID; // Modify this with your identifier
 800135c:	4b11      	ldr	r3, [pc, #68]	@ (80013a4 <MX_FDCAN1_Init+0xc8>)
 800135e:	781b      	ldrb	r3, [r3, #0]
 8001360:	461a      	mov	r2, r3
 8001362:	4b11      	ldr	r3, [pc, #68]	@ (80013a8 <MX_FDCAN1_Init+0xcc>)
 8001364:	601a      	str	r2, [r3, #0]
  TxHeader.IdType = FDCAN_STANDARD_ID;
 8001366:	4b10      	ldr	r3, [pc, #64]	@ (80013a8 <MX_FDCAN1_Init+0xcc>)
 8001368:	2200      	movs	r2, #0
 800136a:	605a      	str	r2, [r3, #4]
  TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 800136c:	4b0e      	ldr	r3, [pc, #56]	@ (80013a8 <MX_FDCAN1_Init+0xcc>)
 800136e:	2200      	movs	r2, #0
 8001370:	609a      	str	r2, [r3, #8]
  TxHeader.DataLength = 5;
 8001372:	4b0d      	ldr	r3, [pc, #52]	@ (80013a8 <MX_FDCAN1_Init+0xcc>)
 8001374:	2205      	movs	r2, #5
 8001376:	60da      	str	r2, [r3, #12]
  TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 8001378:	4b0b      	ldr	r3, [pc, #44]	@ (80013a8 <MX_FDCAN1_Init+0xcc>)
 800137a:	2200      	movs	r2, #0
 800137c:	611a      	str	r2, [r3, #16]
  TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 800137e:	4b0a      	ldr	r3, [pc, #40]	@ (80013a8 <MX_FDCAN1_Init+0xcc>)
 8001380:	2200      	movs	r2, #0
 8001382:	615a      	str	r2, [r3, #20]
  TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
 8001384:	4b08      	ldr	r3, [pc, #32]	@ (80013a8 <MX_FDCAN1_Init+0xcc>)
 8001386:	2200      	movs	r2, #0
 8001388:	619a      	str	r2, [r3, #24]
  TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 800138a:	4b07      	ldr	r3, [pc, #28]	@ (80013a8 <MX_FDCAN1_Init+0xcc>)
 800138c:	2200      	movs	r2, #0
 800138e:	61da      	str	r2, [r3, #28]
  TxHeader.MessageMarker = 0;
 8001390:	4b05      	ldr	r3, [pc, #20]	@ (80013a8 <MX_FDCAN1_Init+0xcc>)
 8001392:	2200      	movs	r2, #0
 8001394:	621a      	str	r2, [r3, #32]
  /* USER CODE END FDCAN1_Init 2 */

}
 8001396:	bf00      	nop
 8001398:	bd80      	pop	{r7, pc}
 800139a:	bf00      	nop
 800139c:	20000110 	.word	0x20000110
 80013a0:	40006400 	.word	0x40006400
 80013a4:	20000648 	.word	0x20000648
 80013a8:	2000064c 	.word	0x2000064c

080013ac <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80013ac:	b580      	push	{r7, lr}
 80013ae:	b09c      	sub	sp, #112	@ 0x70
 80013b0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80013b2:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 80013b6:	2200      	movs	r2, #0
 80013b8:	601a      	str	r2, [r3, #0]
 80013ba:	605a      	str	r2, [r3, #4]
 80013bc:	609a      	str	r2, [r3, #8]
 80013be:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80013c0:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80013c4:	2200      	movs	r2, #0
 80013c6:	601a      	str	r2, [r3, #0]
 80013c8:	605a      	str	r2, [r3, #4]
 80013ca:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80013cc:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80013d0:	2200      	movs	r2, #0
 80013d2:	601a      	str	r2, [r3, #0]
 80013d4:	605a      	str	r2, [r3, #4]
 80013d6:	609a      	str	r2, [r3, #8]
 80013d8:	60da      	str	r2, [r3, #12]
 80013da:	611a      	str	r2, [r3, #16]
 80013dc:	615a      	str	r2, [r3, #20]
 80013de:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80013e0:	1d3b      	adds	r3, r7, #4
 80013e2:	2234      	movs	r2, #52	@ 0x34
 80013e4:	2100      	movs	r1, #0
 80013e6:	4618      	mov	r0, r3
 80013e8:	f005 ff92 	bl	8007310 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80013ec:	4b45      	ldr	r3, [pc, #276]	@ (8001504 <MX_TIM1_Init+0x158>)
 80013ee:	4a46      	ldr	r2, [pc, #280]	@ (8001508 <MX_TIM1_Init+0x15c>)
 80013f0:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 15;
 80013f2:	4b44      	ldr	r3, [pc, #272]	@ (8001504 <MX_TIM1_Init+0x158>)
 80013f4:	220f      	movs	r2, #15
 80013f6:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80013f8:	4b42      	ldr	r3, [pc, #264]	@ (8001504 <MX_TIM1_Init+0x158>)
 80013fa:	2200      	movs	r2, #0
 80013fc:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 39;
 80013fe:	4b41      	ldr	r3, [pc, #260]	@ (8001504 <MX_TIM1_Init+0x158>)
 8001400:	2227      	movs	r2, #39	@ 0x27
 8001402:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001404:	4b3f      	ldr	r3, [pc, #252]	@ (8001504 <MX_TIM1_Init+0x158>)
 8001406:	2200      	movs	r2, #0
 8001408:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800140a:	4b3e      	ldr	r3, [pc, #248]	@ (8001504 <MX_TIM1_Init+0x158>)
 800140c:	2200      	movs	r2, #0
 800140e:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001410:	4b3c      	ldr	r3, [pc, #240]	@ (8001504 <MX_TIM1_Init+0x158>)
 8001412:	2200      	movs	r2, #0
 8001414:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001416:	483b      	ldr	r0, [pc, #236]	@ (8001504 <MX_TIM1_Init+0x158>)
 8001418:	f004 fc1e 	bl	8005c58 <HAL_TIM_Base_Init>
 800141c:	4603      	mov	r3, r0
 800141e:	2b00      	cmp	r3, #0
 8001420:	d001      	beq.n	8001426 <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 8001422:	f000 fa9f 	bl	8001964 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001426:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800142a:	663b      	str	r3, [r7, #96]	@ 0x60
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 800142c:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8001430:	4619      	mov	r1, r3
 8001432:	4834      	ldr	r0, [pc, #208]	@ (8001504 <MX_TIM1_Init+0x158>)
 8001434:	f005 f898 	bl	8006568 <HAL_TIM_ConfigClockSource>
 8001438:	4603      	mov	r3, r0
 800143a:	2b00      	cmp	r3, #0
 800143c:	d001      	beq.n	8001442 <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 800143e:	f000 fa91 	bl	8001964 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8001442:	4830      	ldr	r0, [pc, #192]	@ (8001504 <MX_TIM1_Init+0x158>)
 8001444:	f004 fcca 	bl	8005ddc <HAL_TIM_PWM_Init>
 8001448:	4603      	mov	r3, r0
 800144a:	2b00      	cmp	r3, #0
 800144c:	d001      	beq.n	8001452 <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 800144e:	f000 fa89 	bl	8001964 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001452:	2300      	movs	r3, #0
 8001454:	657b      	str	r3, [r7, #84]	@ 0x54
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001456:	2300      	movs	r3, #0
 8001458:	65bb      	str	r3, [r7, #88]	@ 0x58
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800145a:	2300      	movs	r3, #0
 800145c:	65fb      	str	r3, [r7, #92]	@ 0x5c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800145e:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001462:	4619      	mov	r1, r3
 8001464:	4827      	ldr	r0, [pc, #156]	@ (8001504 <MX_TIM1_Init+0x158>)
 8001466:	f005 fdff 	bl	8007068 <HAL_TIMEx_MasterConfigSynchronization>
 800146a:	4603      	mov	r3, r0
 800146c:	2b00      	cmp	r3, #0
 800146e:	d001      	beq.n	8001474 <MX_TIM1_Init+0xc8>
  {
    Error_Handler();
 8001470:	f000 fa78 	bl	8001964 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001474:	2360      	movs	r3, #96	@ 0x60
 8001476:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.Pulse = 0;
 8001478:	2300      	movs	r3, #0
 800147a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800147c:	2300      	movs	r3, #0
 800147e:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001480:	2300      	movs	r3, #0
 8001482:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001484:	2300      	movs	r3, #0
 8001486:	64bb      	str	r3, [r7, #72]	@ 0x48
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001488:	2300      	movs	r3, #0
 800148a:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 800148c:	2300      	movs	r3, #0
 800148e:	653b      	str	r3, [r7, #80]	@ 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001490:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001494:	2200      	movs	r2, #0
 8001496:	4619      	mov	r1, r3
 8001498:	481a      	ldr	r0, [pc, #104]	@ (8001504 <MX_TIM1_Init+0x158>)
 800149a:	f004 ff51 	bl	8006340 <HAL_TIM_PWM_ConfigChannel>
 800149e:	4603      	mov	r3, r0
 80014a0:	2b00      	cmp	r3, #0
 80014a2:	d001      	beq.n	80014a8 <MX_TIM1_Init+0xfc>
  {
    Error_Handler();
 80014a4:	f000 fa5e 	bl	8001964 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80014a8:	2300      	movs	r3, #0
 80014aa:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80014ac:	2300      	movs	r3, #0
 80014ae:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80014b0:	2300      	movs	r3, #0
 80014b2:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80014b4:	2300      	movs	r3, #0
 80014b6:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80014b8:	2300      	movs	r3, #0
 80014ba:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80014bc:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80014c0:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 80014c2:	2300      	movs	r3, #0
 80014c4:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 80014c6:	2300      	movs	r3, #0
 80014c8:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 80014ca:	2300      	movs	r3, #0
 80014cc:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 80014ce:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80014d2:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.Break2Filter = 0;
 80014d4:	2300      	movs	r3, #0
 80014d6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 80014d8:	2300      	movs	r3, #0
 80014da:	633b      	str	r3, [r7, #48]	@ 0x30
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 80014dc:	2300      	movs	r3, #0
 80014de:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 80014e0:	1d3b      	adds	r3, r7, #4
 80014e2:	4619      	mov	r1, r3
 80014e4:	4807      	ldr	r0, [pc, #28]	@ (8001504 <MX_TIM1_Init+0x158>)
 80014e6:	f005 fe41 	bl	800716c <HAL_TIMEx_ConfigBreakDeadTime>
 80014ea:	4603      	mov	r3, r0
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	d001      	beq.n	80014f4 <MX_TIM1_Init+0x148>
  {
    Error_Handler();
 80014f0:	f000 fa38 	bl	8001964 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80014f4:	4803      	ldr	r0, [pc, #12]	@ (8001504 <MX_TIM1_Init+0x158>)
 80014f6:	f000 fc19 	bl	8001d2c <HAL_TIM_MspPostInit>

}
 80014fa:	bf00      	nop
 80014fc:	3770      	adds	r7, #112	@ 0x70
 80014fe:	46bd      	mov	sp, r7
 8001500:	bd80      	pop	{r7, pc}
 8001502:	bf00      	nop
 8001504:	20000174 	.word	0x20000174
 8001508:	40012c00 	.word	0x40012c00

0800150c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800150c:	b580      	push	{r7, lr}
 800150e:	b08e      	sub	sp, #56	@ 0x38
 8001510:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001512:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001516:	2200      	movs	r2, #0
 8001518:	601a      	str	r2, [r3, #0]
 800151a:	605a      	str	r2, [r3, #4]
 800151c:	609a      	str	r2, [r3, #8]
 800151e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001520:	f107 031c 	add.w	r3, r7, #28
 8001524:	2200      	movs	r2, #0
 8001526:	601a      	str	r2, [r3, #0]
 8001528:	605a      	str	r2, [r3, #4]
 800152a:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800152c:	463b      	mov	r3, r7
 800152e:	2200      	movs	r2, #0
 8001530:	601a      	str	r2, [r3, #0]
 8001532:	605a      	str	r2, [r3, #4]
 8001534:	609a      	str	r2, [r3, #8]
 8001536:	60da      	str	r2, [r3, #12]
 8001538:	611a      	str	r2, [r3, #16]
 800153a:	615a      	str	r2, [r3, #20]
 800153c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800153e:	4b2d      	ldr	r3, [pc, #180]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 8001540:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001544:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 15;
 8001546:	4b2b      	ldr	r3, [pc, #172]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 8001548:	220f      	movs	r2, #15
 800154a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800154c:	4b29      	ldr	r3, [pc, #164]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 800154e:	2200      	movs	r2, #0
 8001550:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 39;
 8001552:	4b28      	ldr	r3, [pc, #160]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 8001554:	2227      	movs	r2, #39	@ 0x27
 8001556:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001558:	4b26      	ldr	r3, [pc, #152]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 800155a:	2200      	movs	r2, #0
 800155c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800155e:	4b25      	ldr	r3, [pc, #148]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 8001560:	2200      	movs	r2, #0
 8001562:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001564:	4823      	ldr	r0, [pc, #140]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 8001566:	f004 fb77 	bl	8005c58 <HAL_TIM_Base_Init>
 800156a:	4603      	mov	r3, r0
 800156c:	2b00      	cmp	r3, #0
 800156e:	d001      	beq.n	8001574 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8001570:	f000 f9f8 	bl	8001964 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001574:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001578:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800157a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800157e:	4619      	mov	r1, r3
 8001580:	481c      	ldr	r0, [pc, #112]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 8001582:	f004 fff1 	bl	8006568 <HAL_TIM_ConfigClockSource>
 8001586:	4603      	mov	r3, r0
 8001588:	2b00      	cmp	r3, #0
 800158a:	d001      	beq.n	8001590 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 800158c:	f000 f9ea 	bl	8001964 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001590:	4818      	ldr	r0, [pc, #96]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 8001592:	f004 fc23 	bl	8005ddc <HAL_TIM_PWM_Init>
 8001596:	4603      	mov	r3, r0
 8001598:	2b00      	cmp	r3, #0
 800159a:	d001      	beq.n	80015a0 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 800159c:	f000 f9e2 	bl	8001964 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015a0:	2300      	movs	r3, #0
 80015a2:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80015a4:	2300      	movs	r3, #0
 80015a6:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80015a8:	f107 031c 	add.w	r3, r7, #28
 80015ac:	4619      	mov	r1, r3
 80015ae:	4811      	ldr	r0, [pc, #68]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 80015b0:	f005 fd5a 	bl	8007068 <HAL_TIMEx_MasterConfigSynchronization>
 80015b4:	4603      	mov	r3, r0
 80015b6:	2b00      	cmp	r3, #0
 80015b8:	d001      	beq.n	80015be <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80015ba:	f000 f9d3 	bl	8001964 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80015be:	2360      	movs	r3, #96	@ 0x60
 80015c0:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80015c2:	2300      	movs	r3, #0
 80015c4:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80015c6:	2300      	movs	r3, #0
 80015c8:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80015ca:	2300      	movs	r3, #0
 80015cc:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80015ce:	463b      	mov	r3, r7
 80015d0:	2200      	movs	r2, #0
 80015d2:	4619      	mov	r1, r3
 80015d4:	4807      	ldr	r0, [pc, #28]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 80015d6:	f004 feb3 	bl	8006340 <HAL_TIM_PWM_ConfigChannel>
 80015da:	4603      	mov	r3, r0
 80015dc:	2b00      	cmp	r3, #0
 80015de:	d001      	beq.n	80015e4 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 80015e0:	f000 f9c0 	bl	8001964 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80015e4:	4803      	ldr	r0, [pc, #12]	@ (80015f4 <MX_TIM2_Init+0xe8>)
 80015e6:	f000 fba1 	bl	8001d2c <HAL_TIM_MspPostInit>

}
 80015ea:	bf00      	nop
 80015ec:	3738      	adds	r7, #56	@ 0x38
 80015ee:	46bd      	mov	sp, r7
 80015f0:	bd80      	pop	{r7, pc}
 80015f2:	bf00      	nop
 80015f4:	200001c0 	.word	0x200001c0

080015f8 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80015f8:	b580      	push	{r7, lr}
 80015fa:	b088      	sub	sp, #32
 80015fc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80015fe:	f107 0310 	add.w	r3, r7, #16
 8001602:	2200      	movs	r2, #0
 8001604:	601a      	str	r2, [r3, #0]
 8001606:	605a      	str	r2, [r3, #4]
 8001608:	609a      	str	r2, [r3, #8]
 800160a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800160c:	1d3b      	adds	r3, r7, #4
 800160e:	2200      	movs	r2, #0
 8001610:	601a      	str	r2, [r3, #0]
 8001612:	605a      	str	r2, [r3, #4]
 8001614:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001616:	4b1d      	ldr	r3, [pc, #116]	@ (800168c <MX_TIM3_Init+0x94>)
 8001618:	4a1d      	ldr	r2, [pc, #116]	@ (8001690 <MX_TIM3_Init+0x98>)
 800161a:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 800161c:	4b1b      	ldr	r3, [pc, #108]	@ (800168c <MX_TIM3_Init+0x94>)
 800161e:	223f      	movs	r2, #63	@ 0x3f
 8001620:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001622:	4b1a      	ldr	r3, [pc, #104]	@ (800168c <MX_TIM3_Init+0x94>)
 8001624:	2200      	movs	r2, #0
 8001626:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 8001628:	4b18      	ldr	r3, [pc, #96]	@ (800168c <MX_TIM3_Init+0x94>)
 800162a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800162e:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001630:	4b16      	ldr	r3, [pc, #88]	@ (800168c <MX_TIM3_Init+0x94>)
 8001632:	2200      	movs	r2, #0
 8001634:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001636:	4b15      	ldr	r3, [pc, #84]	@ (800168c <MX_TIM3_Init+0x94>)
 8001638:	2200      	movs	r2, #0
 800163a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800163c:	4813      	ldr	r0, [pc, #76]	@ (800168c <MX_TIM3_Init+0x94>)
 800163e:	f004 fb0b 	bl	8005c58 <HAL_TIM_Base_Init>
 8001642:	4603      	mov	r3, r0
 8001644:	2b00      	cmp	r3, #0
 8001646:	d001      	beq.n	800164c <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 8001648:	f000 f98c 	bl	8001964 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800164c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001650:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001652:	f107 0310 	add.w	r3, r7, #16
 8001656:	4619      	mov	r1, r3
 8001658:	480c      	ldr	r0, [pc, #48]	@ (800168c <MX_TIM3_Init+0x94>)
 800165a:	f004 ff85 	bl	8006568 <HAL_TIM_ConfigClockSource>
 800165e:	4603      	mov	r3, r0
 8001660:	2b00      	cmp	r3, #0
 8001662:	d001      	beq.n	8001668 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 8001664:	f000 f97e 	bl	8001964 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001668:	2300      	movs	r3, #0
 800166a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800166c:	2300      	movs	r3, #0
 800166e:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001670:	1d3b      	adds	r3, r7, #4
 8001672:	4619      	mov	r1, r3
 8001674:	4805      	ldr	r0, [pc, #20]	@ (800168c <MX_TIM3_Init+0x94>)
 8001676:	f005 fcf7 	bl	8007068 <HAL_TIMEx_MasterConfigSynchronization>
 800167a:	4603      	mov	r3, r0
 800167c:	2b00      	cmp	r3, #0
 800167e:	d001      	beq.n	8001684 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 8001680:	f000 f970 	bl	8001964 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8001684:	bf00      	nop
 8001686:	3720      	adds	r7, #32
 8001688:	46bd      	mov	sp, r7
 800168a:	bd80      	pop	{r7, pc}
 800168c:	2000020c 	.word	0x2000020c
 8001690:	40000400 	.word	0x40000400

08001694 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8001694:	b580      	push	{r7, lr}
 8001696:	b08e      	sub	sp, #56	@ 0x38
 8001698:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800169a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800169e:	2200      	movs	r2, #0
 80016a0:	601a      	str	r2, [r3, #0]
 80016a2:	605a      	str	r2, [r3, #4]
 80016a4:	609a      	str	r2, [r3, #8]
 80016a6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016a8:	f107 031c 	add.w	r3, r7, #28
 80016ac:	2200      	movs	r2, #0
 80016ae:	601a      	str	r2, [r3, #0]
 80016b0:	605a      	str	r2, [r3, #4]
 80016b2:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80016b4:	463b      	mov	r3, r7
 80016b6:	2200      	movs	r2, #0
 80016b8:	601a      	str	r2, [r3, #0]
 80016ba:	605a      	str	r2, [r3, #4]
 80016bc:	609a      	str	r2, [r3, #8]
 80016be:	60da      	str	r2, [r3, #12]
 80016c0:	611a      	str	r2, [r3, #16]
 80016c2:	615a      	str	r2, [r3, #20]
 80016c4:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80016c6:	4b2b      	ldr	r3, [pc, #172]	@ (8001774 <MX_TIM4_Init+0xe0>)
 80016c8:	4a2b      	ldr	r2, [pc, #172]	@ (8001778 <MX_TIM4_Init+0xe4>)
 80016ca:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 80016cc:	4b29      	ldr	r3, [pc, #164]	@ (8001774 <MX_TIM4_Init+0xe0>)
 80016ce:	2200      	movs	r2, #0
 80016d0:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016d2:	4b28      	ldr	r3, [pc, #160]	@ (8001774 <MX_TIM4_Init+0xe0>)
 80016d4:	2200      	movs	r2, #0
 80016d6:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 80016d8:	4b26      	ldr	r3, [pc, #152]	@ (8001774 <MX_TIM4_Init+0xe0>)
 80016da:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80016de:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80016e0:	4b24      	ldr	r3, [pc, #144]	@ (8001774 <MX_TIM4_Init+0xe0>)
 80016e2:	2200      	movs	r2, #0
 80016e4:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016e6:	4b23      	ldr	r3, [pc, #140]	@ (8001774 <MX_TIM4_Init+0xe0>)
 80016e8:	2200      	movs	r2, #0
 80016ea:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 80016ec:	4821      	ldr	r0, [pc, #132]	@ (8001774 <MX_TIM4_Init+0xe0>)
 80016ee:	f004 fab3 	bl	8005c58 <HAL_TIM_Base_Init>
 80016f2:	4603      	mov	r3, r0
 80016f4:	2b00      	cmp	r3, #0
 80016f6:	d001      	beq.n	80016fc <MX_TIM4_Init+0x68>
  {
    Error_Handler();
 80016f8:	f000 f934 	bl	8001964 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80016fc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001700:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001702:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001706:	4619      	mov	r1, r3
 8001708:	481a      	ldr	r0, [pc, #104]	@ (8001774 <MX_TIM4_Init+0xe0>)
 800170a:	f004 ff2d 	bl	8006568 <HAL_TIM_ConfigClockSource>
 800170e:	4603      	mov	r3, r0
 8001710:	2b00      	cmp	r3, #0
 8001712:	d001      	beq.n	8001718 <MX_TIM4_Init+0x84>
  {
    Error_Handler();
 8001714:	f000 f926 	bl	8001964 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001718:	4816      	ldr	r0, [pc, #88]	@ (8001774 <MX_TIM4_Init+0xe0>)
 800171a:	f004 fb5f 	bl	8005ddc <HAL_TIM_PWM_Init>
 800171e:	4603      	mov	r3, r0
 8001720:	2b00      	cmp	r3, #0
 8001722:	d001      	beq.n	8001728 <MX_TIM4_Init+0x94>
  {
    Error_Handler();
 8001724:	f000 f91e 	bl	8001964 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001728:	2300      	movs	r3, #0
 800172a:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800172c:	2300      	movs	r3, #0
 800172e:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001730:	f107 031c 	add.w	r3, r7, #28
 8001734:	4619      	mov	r1, r3
 8001736:	480f      	ldr	r0, [pc, #60]	@ (8001774 <MX_TIM4_Init+0xe0>)
 8001738:	f005 fc96 	bl	8007068 <HAL_TIMEx_MasterConfigSynchronization>
 800173c:	4603      	mov	r3, r0
 800173e:	2b00      	cmp	r3, #0
 8001740:	d001      	beq.n	8001746 <MX_TIM4_Init+0xb2>
  {
    Error_Handler();
 8001742:	f000 f90f 	bl	8001964 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001746:	2360      	movs	r3, #96	@ 0x60
 8001748:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 800174a:	2300      	movs	r3, #0
 800174c:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800174e:	2300      	movs	r3, #0
 8001750:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001752:	2300      	movs	r3, #0
 8001754:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001756:	463b      	mov	r3, r7
 8001758:	2200      	movs	r2, #0
 800175a:	4619      	mov	r1, r3
 800175c:	4805      	ldr	r0, [pc, #20]	@ (8001774 <MX_TIM4_Init+0xe0>)
 800175e:	f004 fdef 	bl	8006340 <HAL_TIM_PWM_ConfigChannel>
 8001762:	4603      	mov	r3, r0
 8001764:	2b00      	cmp	r3, #0
 8001766:	d001      	beq.n	800176c <MX_TIM4_Init+0xd8>
  {
    Error_Handler();
 8001768:	f000 f8fc 	bl	8001964 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 800176c:	bf00      	nop
 800176e:	3738      	adds	r7, #56	@ 0x38
 8001770:	46bd      	mov	sp, r7
 8001772:	bd80      	pop	{r7, pc}
 8001774:	20000258 	.word	0x20000258
 8001778:	40000800 	.word	0x40000800

0800177c <MX_TIM6_Init>:
  * @brief TIM6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM6_Init(void)
{
 800177c:	b580      	push	{r7, lr}
 800177e:	b084      	sub	sp, #16
 8001780:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001782:	1d3b      	adds	r3, r7, #4
 8001784:	2200      	movs	r2, #0
 8001786:	601a      	str	r2, [r3, #0]
 8001788:	605a      	str	r2, [r3, #4]
 800178a:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 800178c:	4b14      	ldr	r3, [pc, #80]	@ (80017e0 <MX_TIM6_Init+0x64>)
 800178e:	4a15      	ldr	r2, [pc, #84]	@ (80017e4 <MX_TIM6_Init+0x68>)
 8001790:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 0;
 8001792:	4b13      	ldr	r3, [pc, #76]	@ (80017e0 <MX_TIM6_Init+0x64>)
 8001794:	2200      	movs	r2, #0
 8001796:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001798:	4b11      	ldr	r3, [pc, #68]	@ (80017e0 <MX_TIM6_Init+0x64>)
 800179a:	2200      	movs	r2, #0
 800179c:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65535;
 800179e:	4b10      	ldr	r3, [pc, #64]	@ (80017e0 <MX_TIM6_Init+0x64>)
 80017a0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80017a4:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017a6:	4b0e      	ldr	r3, [pc, #56]	@ (80017e0 <MX_TIM6_Init+0x64>)
 80017a8:	2200      	movs	r2, #0
 80017aa:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 80017ac:	480c      	ldr	r0, [pc, #48]	@ (80017e0 <MX_TIM6_Init+0x64>)
 80017ae:	f004 fa53 	bl	8005c58 <HAL_TIM_Base_Init>
 80017b2:	4603      	mov	r3, r0
 80017b4:	2b00      	cmp	r3, #0
 80017b6:	d001      	beq.n	80017bc <MX_TIM6_Init+0x40>
  {
    Error_Handler();
 80017b8:	f000 f8d4 	bl	8001964 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80017bc:	2300      	movs	r3, #0
 80017be:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017c0:	2300      	movs	r3, #0
 80017c2:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 80017c4:	1d3b      	adds	r3, r7, #4
 80017c6:	4619      	mov	r1, r3
 80017c8:	4805      	ldr	r0, [pc, #20]	@ (80017e0 <MX_TIM6_Init+0x64>)
 80017ca:	f005 fc4d 	bl	8007068 <HAL_TIMEx_MasterConfigSynchronization>
 80017ce:	4603      	mov	r3, r0
 80017d0:	2b00      	cmp	r3, #0
 80017d2:	d001      	beq.n	80017d8 <MX_TIM6_Init+0x5c>
  {
    Error_Handler();
 80017d4:	f000 f8c6 	bl	8001964 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 80017d8:	bf00      	nop
 80017da:	3710      	adds	r7, #16
 80017dc:	46bd      	mov	sp, r7
 80017de:	bd80      	pop	{r7, pc}
 80017e0:	200002a4 	.word	0x200002a4
 80017e4:	40001000 	.word	0x40001000

080017e8 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 80017e8:	b580      	push	{r7, lr}
 80017ea:	b084      	sub	sp, #16
 80017ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017ee:	1d3b      	adds	r3, r7, #4
 80017f0:	2200      	movs	r2, #0
 80017f2:	601a      	str	r2, [r3, #0]
 80017f4:	605a      	str	r2, [r3, #4]
 80017f6:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 80017f8:	4b14      	ldr	r3, [pc, #80]	@ (800184c <MX_TIM7_Init+0x64>)
 80017fa:	4a15      	ldr	r2, [pc, #84]	@ (8001850 <MX_TIM7_Init+0x68>)
 80017fc:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 0;
 80017fe:	4b13      	ldr	r3, [pc, #76]	@ (800184c <MX_TIM7_Init+0x64>)
 8001800:	2200      	movs	r2, #0
 8001802:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001804:	4b11      	ldr	r3, [pc, #68]	@ (800184c <MX_TIM7_Init+0x64>)
 8001806:	2200      	movs	r2, #0
 8001808:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 65535;
 800180a:	4b10      	ldr	r3, [pc, #64]	@ (800184c <MX_TIM7_Init+0x64>)
 800180c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001810:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001812:	4b0e      	ldr	r3, [pc, #56]	@ (800184c <MX_TIM7_Init+0x64>)
 8001814:	2200      	movs	r2, #0
 8001816:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001818:	480c      	ldr	r0, [pc, #48]	@ (800184c <MX_TIM7_Init+0x64>)
 800181a:	f004 fa1d 	bl	8005c58 <HAL_TIM_Base_Init>
 800181e:	4603      	mov	r3, r0
 8001820:	2b00      	cmp	r3, #0
 8001822:	d001      	beq.n	8001828 <MX_TIM7_Init+0x40>
  {
    Error_Handler();
 8001824:	f000 f89e 	bl	8001964 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001828:	2300      	movs	r3, #0
 800182a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800182c:	2300      	movs	r3, #0
 800182e:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001830:	1d3b      	adds	r3, r7, #4
 8001832:	4619      	mov	r1, r3
 8001834:	4805      	ldr	r0, [pc, #20]	@ (800184c <MX_TIM7_Init+0x64>)
 8001836:	f005 fc17 	bl	8007068 <HAL_TIMEx_MasterConfigSynchronization>
 800183a:	4603      	mov	r3, r0
 800183c:	2b00      	cmp	r3, #0
 800183e:	d001      	beq.n	8001844 <MX_TIM7_Init+0x5c>
  {
    Error_Handler();
 8001840:	f000 f890 	bl	8001964 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 8001844:	bf00      	nop
 8001846:	3710      	adds	r7, #16
 8001848:	46bd      	mov	sp, r7
 800184a:	bd80      	pop	{r7, pc}
 800184c:	200002f0 	.word	0x200002f0
 8001850:	40001400 	.word	0x40001400

08001854 <MX_TIM16_Init>:
  * @brief TIM16 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM16_Init(void)
{
 8001854:	b580      	push	{r7, lr}
 8001856:	af00      	add	r7, sp, #0
  /* USER CODE END TIM16_Init 0 */

  /* USER CODE BEGIN TIM16_Init 1 */

  /* USER CODE END TIM16_Init 1 */
  htim16.Instance = TIM16;
 8001858:	4b0f      	ldr	r3, [pc, #60]	@ (8001898 <MX_TIM16_Init+0x44>)
 800185a:	4a10      	ldr	r2, [pc, #64]	@ (800189c <MX_TIM16_Init+0x48>)
 800185c:	601a      	str	r2, [r3, #0]
  htim16.Init.Prescaler = 0;
 800185e:	4b0e      	ldr	r3, [pc, #56]	@ (8001898 <MX_TIM16_Init+0x44>)
 8001860:	2200      	movs	r2, #0
 8001862:	605a      	str	r2, [r3, #4]
  htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001864:	4b0c      	ldr	r3, [pc, #48]	@ (8001898 <MX_TIM16_Init+0x44>)
 8001866:	2200      	movs	r2, #0
 8001868:	609a      	str	r2, [r3, #8]
  htim16.Init.Period = 65535;
 800186a:	4b0b      	ldr	r3, [pc, #44]	@ (8001898 <MX_TIM16_Init+0x44>)
 800186c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001870:	60da      	str	r2, [r3, #12]
  htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001872:	4b09      	ldr	r3, [pc, #36]	@ (8001898 <MX_TIM16_Init+0x44>)
 8001874:	2200      	movs	r2, #0
 8001876:	611a      	str	r2, [r3, #16]
  htim16.Init.RepetitionCounter = 0;
 8001878:	4b07      	ldr	r3, [pc, #28]	@ (8001898 <MX_TIM16_Init+0x44>)
 800187a:	2200      	movs	r2, #0
 800187c:	615a      	str	r2, [r3, #20]
  htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800187e:	4b06      	ldr	r3, [pc, #24]	@ (8001898 <MX_TIM16_Init+0x44>)
 8001880:	2200      	movs	r2, #0
 8001882:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 8001884:	4804      	ldr	r0, [pc, #16]	@ (8001898 <MX_TIM16_Init+0x44>)
 8001886:	f004 f9e7 	bl	8005c58 <HAL_TIM_Base_Init>
 800188a:	4603      	mov	r3, r0
 800188c:	2b00      	cmp	r3, #0
 800188e:	d001      	beq.n	8001894 <MX_TIM16_Init+0x40>
  {
    Error_Handler();
 8001890:	f000 f868 	bl	8001964 <Error_Handler>
  }
  /* USER CODE BEGIN TIM16_Init 2 */

  /* USER CODE END TIM16_Init 2 */

}
 8001894:	bf00      	nop
 8001896:	bd80      	pop	{r7, pc}
 8001898:	2000033c 	.word	0x2000033c
 800189c:	40014400 	.word	0x40014400

080018a0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80018a0:	b580      	push	{r7, lr}
 80018a2:	b088      	sub	sp, #32
 80018a4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018a6:	f107 030c 	add.w	r3, r7, #12
 80018aa:	2200      	movs	r2, #0
 80018ac:	601a      	str	r2, [r3, #0]
 80018ae:	605a      	str	r2, [r3, #4]
 80018b0:	609a      	str	r2, [r3, #8]
 80018b2:	60da      	str	r2, [r3, #12]
 80018b4:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80018b6:	4b29      	ldr	r3, [pc, #164]	@ (800195c <MX_GPIO_Init+0xbc>)
 80018b8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018ba:	4a28      	ldr	r2, [pc, #160]	@ (800195c <MX_GPIO_Init+0xbc>)
 80018bc:	f043 0320 	orr.w	r3, r3, #32
 80018c0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80018c2:	4b26      	ldr	r3, [pc, #152]	@ (800195c <MX_GPIO_Init+0xbc>)
 80018c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018c6:	f003 0320 	and.w	r3, r3, #32
 80018ca:	60bb      	str	r3, [r7, #8]
 80018cc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80018ce:	4b23      	ldr	r3, [pc, #140]	@ (800195c <MX_GPIO_Init+0xbc>)
 80018d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018d2:	4a22      	ldr	r2, [pc, #136]	@ (800195c <MX_GPIO_Init+0xbc>)
 80018d4:	f043 0301 	orr.w	r3, r3, #1
 80018d8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80018da:	4b20      	ldr	r3, [pc, #128]	@ (800195c <MX_GPIO_Init+0xbc>)
 80018dc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018de:	f003 0301 	and.w	r3, r3, #1
 80018e2:	607b      	str	r3, [r7, #4]
 80018e4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80018e6:	4b1d      	ldr	r3, [pc, #116]	@ (800195c <MX_GPIO_Init+0xbc>)
 80018e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018ea:	4a1c      	ldr	r2, [pc, #112]	@ (800195c <MX_GPIO_Init+0xbc>)
 80018ec:	f043 0302 	orr.w	r3, r3, #2
 80018f0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80018f2:	4b1a      	ldr	r3, [pc, #104]	@ (800195c <MX_GPIO_Init+0xbc>)
 80018f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018f6:	f003 0302 	and.w	r3, r3, #2
 80018fa:	603b      	str	r3, [r7, #0]
 80018fc:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, IN1_2_Pin|IN0_2_Pin|LED2_Pin|IN3_Pin
 80018fe:	2200      	movs	r2, #0
 8001900:	f248 6192 	movw	r1, #34450	@ 0x8692
 8001904:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001908:	f003 f9f4 	bl	8004cf4 <HAL_GPIO_WritePin>
                          |IN2_Pin|IN1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED1_Pin|IN0_Pin|IN3_2_Pin|SEL1_Pin
 800190c:	2200      	movs	r2, #0
 800190e:	21f9      	movs	r1, #249	@ 0xf9
 8001910:	4813      	ldr	r0, [pc, #76]	@ (8001960 <MX_GPIO_Init+0xc0>)
 8001912:	f003 f9ef 	bl	8004cf4 <HAL_GPIO_WritePin>
                          |SEL0_Pin|IN2_2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : IN1_2_Pin IN0_2_Pin LED2_Pin IN3_Pin
                           IN2_Pin IN1_Pin */
  GPIO_InitStruct.Pin = IN1_2_Pin|IN0_2_Pin|LED2_Pin|IN3_Pin
 8001916:	f248 6392 	movw	r3, #34450	@ 0x8692
 800191a:	60fb      	str	r3, [r7, #12]
                          |IN2_Pin|IN1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800191c:	2301      	movs	r3, #1
 800191e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001920:	2300      	movs	r3, #0
 8001922:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001924:	2300      	movs	r3, #0
 8001926:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001928:	f107 030c 	add.w	r3, r7, #12
 800192c:	4619      	mov	r1, r3
 800192e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001932:	f003 f85d 	bl	80049f0 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED1_Pin IN0_Pin IN3_2_Pin SEL1_Pin
                           SEL0_Pin IN2_2_Pin */
  GPIO_InitStruct.Pin = LED1_Pin|IN0_Pin|IN3_2_Pin|SEL1_Pin
 8001936:	23f9      	movs	r3, #249	@ 0xf9
 8001938:	60fb      	str	r3, [r7, #12]
                          |SEL0_Pin|IN2_2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800193a:	2301      	movs	r3, #1
 800193c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800193e:	2300      	movs	r3, #0
 8001940:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001942:	2300      	movs	r3, #0
 8001944:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001946:	f107 030c 	add.w	r3, r7, #12
 800194a:	4619      	mov	r1, r3
 800194c:	4804      	ldr	r0, [pc, #16]	@ (8001960 <MX_GPIO_Init+0xc0>)
 800194e:	f003 f84f 	bl	80049f0 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001952:	bf00      	nop
 8001954:	3720      	adds	r7, #32
 8001956:	46bd      	mov	sp, r7
 8001958:	bd80      	pop	{r7, pc}
 800195a:	bf00      	nop
 800195c:	40021000 	.word	0x40021000
 8001960:	48000400 	.word	0x48000400

08001964 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001964:	b480      	push	{r7}
 8001966:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001968:	b672      	cpsid	i
}
 800196a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800196c:	bf00      	nop
 800196e:	e7fd      	b.n	800196c <Error_Handler+0x8>

08001970 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001970:	b580      	push	{r7, lr}
 8001972:	b082      	sub	sp, #8
 8001974:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001976:	4b0f      	ldr	r3, [pc, #60]	@ (80019b4 <HAL_MspInit+0x44>)
 8001978:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800197a:	4a0e      	ldr	r2, [pc, #56]	@ (80019b4 <HAL_MspInit+0x44>)
 800197c:	f043 0301 	orr.w	r3, r3, #1
 8001980:	6613      	str	r3, [r2, #96]	@ 0x60
 8001982:	4b0c      	ldr	r3, [pc, #48]	@ (80019b4 <HAL_MspInit+0x44>)
 8001984:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001986:	f003 0301 	and.w	r3, r3, #1
 800198a:	607b      	str	r3, [r7, #4]
 800198c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800198e:	4b09      	ldr	r3, [pc, #36]	@ (80019b4 <HAL_MspInit+0x44>)
 8001990:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001992:	4a08      	ldr	r2, [pc, #32]	@ (80019b4 <HAL_MspInit+0x44>)
 8001994:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001998:	6593      	str	r3, [r2, #88]	@ 0x58
 800199a:	4b06      	ldr	r3, [pc, #24]	@ (80019b4 <HAL_MspInit+0x44>)
 800199c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800199e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80019a2:	603b      	str	r3, [r7, #0]
 80019a4:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_PWREx_DisableUCPDDeadBattery();
 80019a6:	f003 fa61 	bl	8004e6c <HAL_PWREx_DisableUCPDDeadBattery>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019aa:	bf00      	nop
 80019ac:	3708      	adds	r7, #8
 80019ae:	46bd      	mov	sp, r7
 80019b0:	bd80      	pop	{r7, pc}
 80019b2:	bf00      	nop
 80019b4:	40021000 	.word	0x40021000

080019b8 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80019b8:	b580      	push	{r7, lr}
 80019ba:	b09c      	sub	sp, #112	@ 0x70
 80019bc:	af00      	add	r7, sp, #0
 80019be:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019c0:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 80019c4:	2200      	movs	r2, #0
 80019c6:	601a      	str	r2, [r3, #0]
 80019c8:	605a      	str	r2, [r3, #4]
 80019ca:	609a      	str	r2, [r3, #8]
 80019cc:	60da      	str	r2, [r3, #12]
 80019ce:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80019d0:	f107 0318 	add.w	r3, r7, #24
 80019d4:	2244      	movs	r2, #68	@ 0x44
 80019d6:	2100      	movs	r1, #0
 80019d8:	4618      	mov	r0, r3
 80019da:	f005 fc99 	bl	8007310 <memset>
  if(hadc->Instance==ADC1)
 80019de:	687b      	ldr	r3, [r7, #4]
 80019e0:	681b      	ldr	r3, [r3, #0]
 80019e2:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80019e6:	d13e      	bne.n	8001a66 <HAL_ADC_MspInit+0xae>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 80019e8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80019ec:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 80019ee:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 80019f2:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80019f4:	f107 0318 	add.w	r3, r7, #24
 80019f8:	4618      	mov	r0, r3
 80019fa:	f003 ff3d 	bl	8005878 <HAL_RCCEx_PeriphCLKConfig>
 80019fe:	4603      	mov	r3, r0
 8001a00:	2b00      	cmp	r3, #0
 8001a02:	d001      	beq.n	8001a08 <HAL_ADC_MspInit+0x50>
    {
      Error_Handler();
 8001a04:	f7ff ffae 	bl	8001964 <Error_Handler>
    }

    /* Peripheral clock enable */
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001a08:	4b3a      	ldr	r3, [pc, #232]	@ (8001af4 <HAL_ADC_MspInit+0x13c>)
 8001a0a:	681b      	ldr	r3, [r3, #0]
 8001a0c:	3301      	adds	r3, #1
 8001a0e:	4a39      	ldr	r2, [pc, #228]	@ (8001af4 <HAL_ADC_MspInit+0x13c>)
 8001a10:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 8001a12:	4b38      	ldr	r3, [pc, #224]	@ (8001af4 <HAL_ADC_MspInit+0x13c>)
 8001a14:	681b      	ldr	r3, [r3, #0]
 8001a16:	2b01      	cmp	r3, #1
 8001a18:	d10b      	bne.n	8001a32 <HAL_ADC_MspInit+0x7a>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001a1a:	4b37      	ldr	r3, [pc, #220]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001a1c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001a1e:	4a36      	ldr	r2, [pc, #216]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001a20:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001a24:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001a26:	4b34      	ldr	r3, [pc, #208]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001a28:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001a2a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001a2e:	617b      	str	r3, [r7, #20]
 8001a30:	697b      	ldr	r3, [r7, #20]
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a32:	4b31      	ldr	r3, [pc, #196]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001a34:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001a36:	4a30      	ldr	r2, [pc, #192]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001a38:	f043 0301 	orr.w	r3, r3, #1
 8001a3c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001a3e:	4b2e      	ldr	r3, [pc, #184]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001a40:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001a42:	f003 0301 	and.w	r3, r3, #1
 8001a46:	613b      	str	r3, [r7, #16]
 8001a48:	693b      	ldr	r3, [r7, #16]
    /**ADC1 GPIO Configuration
    PA0     ------> ADC1_IN1
    PA2     ------> ADC1_IN3
    PA3     ------> ADC1_IN4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;
 8001a4a:	230d      	movs	r3, #13
 8001a4c:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a4e:	2303      	movs	r3, #3
 8001a50:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a52:	2300      	movs	r3, #0
 8001a54:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a56:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001a5a:	4619      	mov	r1, r3
 8001a5c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001a60:	f002 ffc6 	bl	80049f0 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8001a64:	e042      	b.n	8001aec <HAL_ADC_MspInit+0x134>
  else if(hadc->Instance==ADC2)
 8001a66:	687b      	ldr	r3, [r7, #4]
 8001a68:	681b      	ldr	r3, [r3, #0]
 8001a6a:	4a24      	ldr	r2, [pc, #144]	@ (8001afc <HAL_ADC_MspInit+0x144>)
 8001a6c:	4293      	cmp	r3, r2
 8001a6e:	d13d      	bne.n	8001aec <HAL_ADC_MspInit+0x134>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 8001a70:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8001a74:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 8001a76:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 8001a7a:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001a7c:	f107 0318 	add.w	r3, r7, #24
 8001a80:	4618      	mov	r0, r3
 8001a82:	f003 fef9 	bl	8005878 <HAL_RCCEx_PeriphCLKConfig>
 8001a86:	4603      	mov	r3, r0
 8001a88:	2b00      	cmp	r3, #0
 8001a8a:	d001      	beq.n	8001a90 <HAL_ADC_MspInit+0xd8>
      Error_Handler();
 8001a8c:	f7ff ff6a 	bl	8001964 <Error_Handler>
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001a90:	4b18      	ldr	r3, [pc, #96]	@ (8001af4 <HAL_ADC_MspInit+0x13c>)
 8001a92:	681b      	ldr	r3, [r3, #0]
 8001a94:	3301      	adds	r3, #1
 8001a96:	4a17      	ldr	r2, [pc, #92]	@ (8001af4 <HAL_ADC_MspInit+0x13c>)
 8001a98:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 8001a9a:	4b16      	ldr	r3, [pc, #88]	@ (8001af4 <HAL_ADC_MspInit+0x13c>)
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	2b01      	cmp	r3, #1
 8001aa0:	d10b      	bne.n	8001aba <HAL_ADC_MspInit+0x102>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001aa2:	4b15      	ldr	r3, [pc, #84]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001aa4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001aa6:	4a14      	ldr	r2, [pc, #80]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001aa8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001aac:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001aae:	4b12      	ldr	r3, [pc, #72]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001ab0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001ab2:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001ab6:	60fb      	str	r3, [r7, #12]
 8001ab8:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001aba:	4b0f      	ldr	r3, [pc, #60]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001abc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001abe:	4a0e      	ldr	r2, [pc, #56]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001ac0:	f043 0301 	orr.w	r3, r3, #1
 8001ac4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001ac6:	4b0c      	ldr	r3, [pc, #48]	@ (8001af8 <HAL_ADC_MspInit+0x140>)
 8001ac8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001aca:	f003 0301 	and.w	r3, r3, #1
 8001ace:	60bb      	str	r3, [r7, #8]
 8001ad0:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001ad2:	2340      	movs	r3, #64	@ 0x40
 8001ad4:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001ad6:	2303      	movs	r3, #3
 8001ad8:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ada:	2300      	movs	r3, #0
 8001adc:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ade:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001ae2:	4619      	mov	r1, r3
 8001ae4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001ae8:	f002 ff82 	bl	80049f0 <HAL_GPIO_Init>
}
 8001aec:	bf00      	nop
 8001aee:	3770      	adds	r7, #112	@ 0x70
 8001af0:	46bd      	mov	sp, r7
 8001af2:	bd80      	pop	{r7, pc}
 8001af4:	20000698 	.word	0x20000698
 8001af8:	40021000 	.word	0x40021000
 8001afc:	50000100 	.word	0x50000100

08001b00 <HAL_FDCAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hfdcan: FDCAN handle pointer
* @retval None
*/
void HAL_FDCAN_MspInit(FDCAN_HandleTypeDef* hfdcan)
{
 8001b00:	b580      	push	{r7, lr}
 8001b02:	b09a      	sub	sp, #104	@ 0x68
 8001b04:	af00      	add	r7, sp, #0
 8001b06:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b08:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001b0c:	2200      	movs	r2, #0
 8001b0e:	601a      	str	r2, [r3, #0]
 8001b10:	605a      	str	r2, [r3, #4]
 8001b12:	609a      	str	r2, [r3, #8]
 8001b14:	60da      	str	r2, [r3, #12]
 8001b16:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001b18:	f107 0310 	add.w	r3, r7, #16
 8001b1c:	2244      	movs	r2, #68	@ 0x44
 8001b1e:	2100      	movs	r1, #0
 8001b20:	4618      	mov	r0, r3
 8001b22:	f005 fbf5 	bl	8007310 <memset>
  if(hfdcan->Instance==FDCAN1)
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	681b      	ldr	r3, [r3, #0]
 8001b2a:	4a24      	ldr	r2, [pc, #144]	@ (8001bbc <HAL_FDCAN_MspInit+0xbc>)
 8001b2c:	4293      	cmp	r3, r2
 8001b2e:	d141      	bne.n	8001bb4 <HAL_FDCAN_MspInit+0xb4>

  /* USER CODE END FDCAN1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_FDCAN;
 8001b30:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001b34:	613b      	str	r3, [r7, #16]
    PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PLL;
 8001b36:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8001b3a:	643b      	str	r3, [r7, #64]	@ 0x40
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001b3c:	f107 0310 	add.w	r3, r7, #16
 8001b40:	4618      	mov	r0, r3
 8001b42:	f003 fe99 	bl	8005878 <HAL_RCCEx_PeriphCLKConfig>
 8001b46:	4603      	mov	r3, r0
 8001b48:	2b00      	cmp	r3, #0
 8001b4a:	d001      	beq.n	8001b50 <HAL_FDCAN_MspInit+0x50>
    {
      Error_Handler();
 8001b4c:	f7ff ff0a 	bl	8001964 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_FDCAN_CLK_ENABLE();
 8001b50:	4b1b      	ldr	r3, [pc, #108]	@ (8001bc0 <HAL_FDCAN_MspInit+0xc0>)
 8001b52:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001b54:	4a1a      	ldr	r2, [pc, #104]	@ (8001bc0 <HAL_FDCAN_MspInit+0xc0>)
 8001b56:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001b5a:	6593      	str	r3, [r2, #88]	@ 0x58
 8001b5c:	4b18      	ldr	r3, [pc, #96]	@ (8001bc0 <HAL_FDCAN_MspInit+0xc0>)
 8001b5e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001b60:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001b64:	60fb      	str	r3, [r7, #12]
 8001b66:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b68:	4b15      	ldr	r3, [pc, #84]	@ (8001bc0 <HAL_FDCAN_MspInit+0xc0>)
 8001b6a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b6c:	4a14      	ldr	r2, [pc, #80]	@ (8001bc0 <HAL_FDCAN_MspInit+0xc0>)
 8001b6e:	f043 0301 	orr.w	r3, r3, #1
 8001b72:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001b74:	4b12      	ldr	r3, [pc, #72]	@ (8001bc0 <HAL_FDCAN_MspInit+0xc0>)
 8001b76:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b78:	f003 0301 	and.w	r3, r3, #1
 8001b7c:	60bb      	str	r3, [r7, #8]
 8001b7e:	68bb      	ldr	r3, [r7, #8]
    /**FDCAN1 GPIO Configuration
    PA11     ------> FDCAN1_RX
    PA12     ------> FDCAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 8001b80:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 8001b84:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b86:	2302      	movs	r3, #2
 8001b88:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b8a:	2300      	movs	r3, #0
 8001b8c:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b8e:	2300      	movs	r3, #0
 8001b90:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF9_FDCAN1;
 8001b92:	2309      	movs	r3, #9
 8001b94:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b96:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001b9a:	4619      	mov	r1, r3
 8001b9c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001ba0:	f002 ff26 	bl	80049f0 <HAL_GPIO_Init>

    /* FDCAN1 interrupt Init */
    HAL_NVIC_SetPriority(FDCAN1_IT0_IRQn, 0, 0);
 8001ba4:	2200      	movs	r2, #0
 8001ba6:	2100      	movs	r1, #0
 8001ba8:	2015      	movs	r0, #21
 8001baa:	f002 f8c6 	bl	8003d3a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(FDCAN1_IT0_IRQn);
 8001bae:	2015      	movs	r0, #21
 8001bb0:	f002 f8dd 	bl	8003d6e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN FDCAN1_MspInit 1 */

  /* USER CODE END FDCAN1_MspInit 1 */
  }

}
 8001bb4:	bf00      	nop
 8001bb6:	3768      	adds	r7, #104	@ 0x68
 8001bb8:	46bd      	mov	sp, r7
 8001bba:	bd80      	pop	{r7, pc}
 8001bbc:	40006400 	.word	0x40006400
 8001bc0:	40021000 	.word	0x40021000

08001bc4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001bc4:	b580      	push	{r7, lr}
 8001bc6:	b08a      	sub	sp, #40	@ 0x28
 8001bc8:	af00      	add	r7, sp, #0
 8001bca:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	4a4f      	ldr	r2, [pc, #316]	@ (8001d10 <HAL_TIM_Base_MspInit+0x14c>)
 8001bd2:	4293      	cmp	r3, r2
 8001bd4:	d10c      	bne.n	8001bf0 <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001bd6:	4b4f      	ldr	r3, [pc, #316]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001bd8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001bda:	4a4e      	ldr	r2, [pc, #312]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001bdc:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001be0:	6613      	str	r3, [r2, #96]	@ 0x60
 8001be2:	4b4c      	ldr	r3, [pc, #304]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001be4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001be6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001bea:	627b      	str	r3, [r7, #36]	@ 0x24
 8001bec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
  /* USER CODE BEGIN TIM16_MspInit 1 */

  /* USER CODE END TIM16_MspInit 1 */
  }

}
 8001bee:	e08a      	b.n	8001d06 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM2)
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001bf8:	d114      	bne.n	8001c24 <HAL_TIM_Base_MspInit+0x60>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001bfa:	4b46      	ldr	r3, [pc, #280]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001bfc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001bfe:	4a45      	ldr	r2, [pc, #276]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001c00:	f043 0301 	orr.w	r3, r3, #1
 8001c04:	6593      	str	r3, [r2, #88]	@ 0x58
 8001c06:	4b43      	ldr	r3, [pc, #268]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001c08:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c0a:	f003 0301 	and.w	r3, r3, #1
 8001c0e:	623b      	str	r3, [r7, #32]
 8001c10:	6a3b      	ldr	r3, [r7, #32]
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001c12:	2200      	movs	r2, #0
 8001c14:	2100      	movs	r1, #0
 8001c16:	201c      	movs	r0, #28
 8001c18:	f002 f88f 	bl	8003d3a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001c1c:	201c      	movs	r0, #28
 8001c1e:	f002 f8a6 	bl	8003d6e <HAL_NVIC_EnableIRQ>
}
 8001c22:	e070      	b.n	8001d06 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM3)
 8001c24:	687b      	ldr	r3, [r7, #4]
 8001c26:	681b      	ldr	r3, [r3, #0]
 8001c28:	4a3b      	ldr	r2, [pc, #236]	@ (8001d18 <HAL_TIM_Base_MspInit+0x154>)
 8001c2a:	4293      	cmp	r3, r2
 8001c2c:	d114      	bne.n	8001c58 <HAL_TIM_Base_MspInit+0x94>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001c2e:	4b39      	ldr	r3, [pc, #228]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001c30:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c32:	4a38      	ldr	r2, [pc, #224]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001c34:	f043 0302 	orr.w	r3, r3, #2
 8001c38:	6593      	str	r3, [r2, #88]	@ 0x58
 8001c3a:	4b36      	ldr	r3, [pc, #216]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001c3c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c3e:	f003 0302 	and.w	r3, r3, #2
 8001c42:	61fb      	str	r3, [r7, #28]
 8001c44:	69fb      	ldr	r3, [r7, #28]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001c46:	2200      	movs	r2, #0
 8001c48:	2100      	movs	r1, #0
 8001c4a:	201d      	movs	r0, #29
 8001c4c:	f002 f875 	bl	8003d3a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001c50:	201d      	movs	r0, #29
 8001c52:	f002 f88c 	bl	8003d6e <HAL_NVIC_EnableIRQ>
}
 8001c56:	e056      	b.n	8001d06 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM4)
 8001c58:	687b      	ldr	r3, [r7, #4]
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	4a2f      	ldr	r2, [pc, #188]	@ (8001d1c <HAL_TIM_Base_MspInit+0x158>)
 8001c5e:	4293      	cmp	r3, r2
 8001c60:	d114      	bne.n	8001c8c <HAL_TIM_Base_MspInit+0xc8>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001c62:	4b2c      	ldr	r3, [pc, #176]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001c64:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c66:	4a2b      	ldr	r2, [pc, #172]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001c68:	f043 0304 	orr.w	r3, r3, #4
 8001c6c:	6593      	str	r3, [r2, #88]	@ 0x58
 8001c6e:	4b29      	ldr	r3, [pc, #164]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001c70:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c72:	f003 0304 	and.w	r3, r3, #4
 8001c76:	61bb      	str	r3, [r7, #24]
 8001c78:	69bb      	ldr	r3, [r7, #24]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001c7a:	2200      	movs	r2, #0
 8001c7c:	2100      	movs	r1, #0
 8001c7e:	201e      	movs	r0, #30
 8001c80:	f002 f85b 	bl	8003d3a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001c84:	201e      	movs	r0, #30
 8001c86:	f002 f872 	bl	8003d6e <HAL_NVIC_EnableIRQ>
}
 8001c8a:	e03c      	b.n	8001d06 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM6)
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	4a23      	ldr	r2, [pc, #140]	@ (8001d20 <HAL_TIM_Base_MspInit+0x15c>)
 8001c92:	4293      	cmp	r3, r2
 8001c94:	d10c      	bne.n	8001cb0 <HAL_TIM_Base_MspInit+0xec>
    __HAL_RCC_TIM6_CLK_ENABLE();
 8001c96:	4b1f      	ldr	r3, [pc, #124]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001c98:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c9a:	4a1e      	ldr	r2, [pc, #120]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001c9c:	f043 0310 	orr.w	r3, r3, #16
 8001ca0:	6593      	str	r3, [r2, #88]	@ 0x58
 8001ca2:	4b1c      	ldr	r3, [pc, #112]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001ca4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001ca6:	f003 0310 	and.w	r3, r3, #16
 8001caa:	617b      	str	r3, [r7, #20]
 8001cac:	697b      	ldr	r3, [r7, #20]
}
 8001cae:	e02a      	b.n	8001d06 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM7)
 8001cb0:	687b      	ldr	r3, [r7, #4]
 8001cb2:	681b      	ldr	r3, [r3, #0]
 8001cb4:	4a1b      	ldr	r2, [pc, #108]	@ (8001d24 <HAL_TIM_Base_MspInit+0x160>)
 8001cb6:	4293      	cmp	r3, r2
 8001cb8:	d114      	bne.n	8001ce4 <HAL_TIM_Base_MspInit+0x120>
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001cba:	4b16      	ldr	r3, [pc, #88]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001cbc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001cbe:	4a15      	ldr	r2, [pc, #84]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001cc0:	f043 0320 	orr.w	r3, r3, #32
 8001cc4:	6593      	str	r3, [r2, #88]	@ 0x58
 8001cc6:	4b13      	ldr	r3, [pc, #76]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001cc8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001cca:	f003 0320 	and.w	r3, r3, #32
 8001cce:	613b      	str	r3, [r7, #16]
 8001cd0:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
 8001cd2:	2200      	movs	r2, #0
 8001cd4:	2100      	movs	r1, #0
 8001cd6:	2037      	movs	r0, #55	@ 0x37
 8001cd8:	f002 f82f 	bl	8003d3a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001cdc:	2037      	movs	r0, #55	@ 0x37
 8001cde:	f002 f846 	bl	8003d6e <HAL_NVIC_EnableIRQ>
}
 8001ce2:	e010      	b.n	8001d06 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM16)
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	4a0f      	ldr	r2, [pc, #60]	@ (8001d28 <HAL_TIM_Base_MspInit+0x164>)
 8001cea:	4293      	cmp	r3, r2
 8001cec:	d10b      	bne.n	8001d06 <HAL_TIM_Base_MspInit+0x142>
    __HAL_RCC_TIM16_CLK_ENABLE();
 8001cee:	4b09      	ldr	r3, [pc, #36]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001cf0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001cf2:	4a08      	ldr	r2, [pc, #32]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001cf4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001cf8:	6613      	str	r3, [r2, #96]	@ 0x60
 8001cfa:	4b06      	ldr	r3, [pc, #24]	@ (8001d14 <HAL_TIM_Base_MspInit+0x150>)
 8001cfc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001cfe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d02:	60fb      	str	r3, [r7, #12]
 8001d04:	68fb      	ldr	r3, [r7, #12]
}
 8001d06:	bf00      	nop
 8001d08:	3728      	adds	r7, #40	@ 0x28
 8001d0a:	46bd      	mov	sp, r7
 8001d0c:	bd80      	pop	{r7, pc}
 8001d0e:	bf00      	nop
 8001d10:	40012c00 	.word	0x40012c00
 8001d14:	40021000 	.word	0x40021000
 8001d18:	40000400 	.word	0x40000400
 8001d1c:	40000800 	.word	0x40000800
 8001d20:	40001000 	.word	0x40001000
 8001d24:	40001400 	.word	0x40001400
 8001d28:	40014400 	.word	0x40014400

08001d2c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001d2c:	b580      	push	{r7, lr}
 8001d2e:	b08a      	sub	sp, #40	@ 0x28
 8001d30:	af00      	add	r7, sp, #0
 8001d32:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d34:	f107 0314 	add.w	r3, r7, #20
 8001d38:	2200      	movs	r2, #0
 8001d3a:	601a      	str	r2, [r3, #0]
 8001d3c:	605a      	str	r2, [r3, #4]
 8001d3e:	609a      	str	r2, [r3, #8]
 8001d40:	60da      	str	r2, [r3, #12]
 8001d42:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	681b      	ldr	r3, [r3, #0]
 8001d48:	4a23      	ldr	r2, [pc, #140]	@ (8001dd8 <HAL_TIM_MspPostInit+0xac>)
 8001d4a:	4293      	cmp	r3, r2
 8001d4c:	d11e      	bne.n	8001d8c <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d4e:	4b23      	ldr	r3, [pc, #140]	@ (8001ddc <HAL_TIM_MspPostInit+0xb0>)
 8001d50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d52:	4a22      	ldr	r2, [pc, #136]	@ (8001ddc <HAL_TIM_MspPostInit+0xb0>)
 8001d54:	f043 0301 	orr.w	r3, r3, #1
 8001d58:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001d5a:	4b20      	ldr	r3, [pc, #128]	@ (8001ddc <HAL_TIM_MspPostInit+0xb0>)
 8001d5c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d5e:	f003 0301 	and.w	r3, r3, #1
 8001d62:	613b      	str	r3, [r7, #16]
 8001d64:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001d66:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001d6a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6c:	2302      	movs	r3, #2
 8001d6e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d70:	2300      	movs	r3, #0
 8001d72:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d74:	2300      	movs	r3, #0
 8001d76:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 8001d78:	2306      	movs	r3, #6
 8001d7a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d7c:	f107 0314 	add.w	r3, r7, #20
 8001d80:	4619      	mov	r1, r3
 8001d82:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001d86:	f002 fe33 	bl	80049f0 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8001d8a:	e021      	b.n	8001dd0 <HAL_TIM_MspPostInit+0xa4>
  else if(htim->Instance==TIM2)
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001d94:	d11c      	bne.n	8001dd0 <HAL_TIM_MspPostInit+0xa4>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d96:	4b11      	ldr	r3, [pc, #68]	@ (8001ddc <HAL_TIM_MspPostInit+0xb0>)
 8001d98:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d9a:	4a10      	ldr	r2, [pc, #64]	@ (8001ddc <HAL_TIM_MspPostInit+0xb0>)
 8001d9c:	f043 0301 	orr.w	r3, r3, #1
 8001da0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001da2:	4b0e      	ldr	r3, [pc, #56]	@ (8001ddc <HAL_TIM_MspPostInit+0xb0>)
 8001da4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001da6:	f003 0301 	and.w	r3, r3, #1
 8001daa:	60fb      	str	r3, [r7, #12]
 8001dac:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8001dae:	2320      	movs	r3, #32
 8001db0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001db2:	2302      	movs	r3, #2
 8001db4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001db6:	2300      	movs	r3, #0
 8001db8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001dba:	2300      	movs	r3, #0
 8001dbc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001dbe:	2301      	movs	r3, #1
 8001dc0:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dc2:	f107 0314 	add.w	r3, r7, #20
 8001dc6:	4619      	mov	r1, r3
 8001dc8:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001dcc:	f002 fe10 	bl	80049f0 <HAL_GPIO_Init>
}
 8001dd0:	bf00      	nop
 8001dd2:	3728      	adds	r7, #40	@ 0x28
 8001dd4:	46bd      	mov	sp, r7
 8001dd6:	bd80      	pop	{r7, pc}
 8001dd8:	40012c00 	.word	0x40012c00
 8001ddc:	40021000 	.word	0x40021000

08001de0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001de0:	b480      	push	{r7}
 8001de2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001de4:	bf00      	nop
 8001de6:	e7fd      	b.n	8001de4 <NMI_Handler+0x4>

08001de8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001de8:	b480      	push	{r7}
 8001dea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001dec:	bf00      	nop
 8001dee:	e7fd      	b.n	8001dec <HardFault_Handler+0x4>

08001df0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001df0:	b480      	push	{r7}
 8001df2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001df4:	bf00      	nop
 8001df6:	e7fd      	b.n	8001df4 <MemManage_Handler+0x4>

08001df8 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001df8:	b480      	push	{r7}
 8001dfa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001dfc:	bf00      	nop
 8001dfe:	e7fd      	b.n	8001dfc <BusFault_Handler+0x4>

08001e00 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001e00:	b480      	push	{r7}
 8001e02:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001e04:	bf00      	nop
 8001e06:	e7fd      	b.n	8001e04 <UsageFault_Handler+0x4>

08001e08 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001e08:	b480      	push	{r7}
 8001e0a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001e0c:	bf00      	nop
 8001e0e:	46bd      	mov	sp, r7
 8001e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e14:	4770      	bx	lr

08001e16 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001e16:	b480      	push	{r7}
 8001e18:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001e1a:	bf00      	nop
 8001e1c:	46bd      	mov	sp, r7
 8001e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e22:	4770      	bx	lr

08001e24 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001e24:	b480      	push	{r7}
 8001e26:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001e28:	bf00      	nop
 8001e2a:	46bd      	mov	sp, r7
 8001e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e30:	4770      	bx	lr

08001e32 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001e32:	b580      	push	{r7, lr}
 8001e34:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001e36:	f000 f8cb 	bl	8001fd0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001e3a:	bf00      	nop
 8001e3c:	bd80      	pop	{r7, pc}
	...

08001e40 <FDCAN1_IT0_IRQHandler>:

/**
  * @brief This function handles FDCAN1 interrupt 0.
  */
void FDCAN1_IT0_IRQHandler(void)
{
 8001e40:	b580      	push	{r7, lr}
 8001e42:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FDCAN1_IT0_IRQn 0 */

  /* USER CODE END FDCAN1_IT0_IRQn 0 */
  HAL_FDCAN_IRQHandler(&hfdcan1);
 8001e44:	4802      	ldr	r0, [pc, #8]	@ (8001e50 <FDCAN1_IT0_IRQHandler+0x10>)
 8001e46:	f002 fb73 	bl	8004530 <HAL_FDCAN_IRQHandler>
  /* USER CODE BEGIN FDCAN1_IT0_IRQn 1 */

  /* USER CODE END FDCAN1_IT0_IRQn 1 */
}
 8001e4a:	bf00      	nop
 8001e4c:	bd80      	pop	{r7, pc}
 8001e4e:	bf00      	nop
 8001e50:	20000110 	.word	0x20000110

08001e54 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001e54:	b580      	push	{r7, lr}
 8001e56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001e58:	4802      	ldr	r0, [pc, #8]	@ (8001e64 <TIM2_IRQHandler+0x10>)
 8001e5a:	f004 f921 	bl	80060a0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001e5e:	bf00      	nop
 8001e60:	bd80      	pop	{r7, pc}
 8001e62:	bf00      	nop
 8001e64:	200001c0 	.word	0x200001c0

08001e68 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001e68:	b580      	push	{r7, lr}
 8001e6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */
	millis++;
 8001e6c:	4b05      	ldr	r3, [pc, #20]	@ (8001e84 <TIM3_IRQHandler+0x1c>)
 8001e6e:	881b      	ldrh	r3, [r3, #0]
 8001e70:	3301      	adds	r3, #1
 8001e72:	b29a      	uxth	r2, r3
 8001e74:	4b03      	ldr	r3, [pc, #12]	@ (8001e84 <TIM3_IRQHandler+0x1c>)
 8001e76:	801a      	strh	r2, [r3, #0]
		  }else{
			  can_select = 0;
		  }*
	}*/
  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001e78:	4803      	ldr	r0, [pc, #12]	@ (8001e88 <TIM3_IRQHandler+0x20>)
 8001e7a:	f004 f911 	bl	80060a0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001e7e:	bf00      	nop
 8001e80:	bd80      	pop	{r7, pc}
 8001e82:	bf00      	nop
 8001e84:	2000062c 	.word	0x2000062c
 8001e88:	2000020c 	.word	0x2000020c

08001e8c <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001e8c:	b580      	push	{r7, lr}
 8001e8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001e90:	4802      	ldr	r0, [pc, #8]	@ (8001e9c <TIM4_IRQHandler+0x10>)
 8001e92:	f004 f905 	bl	80060a0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001e96:	bf00      	nop
 8001e98:	bd80      	pop	{r7, pc}
 8001e9a:	bf00      	nop
 8001e9c:	20000258 	.word	0x20000258

08001ea0 <TIM7_IRQHandler>:

/**
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001ea4:	4802      	ldr	r0, [pc, #8]	@ (8001eb0 <TIM7_IRQHandler+0x10>)
 8001ea6:	f004 f8fb 	bl	80060a0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_IRQn 1 */

  /* USER CODE END TIM7_IRQn 1 */
}
 8001eaa:	bf00      	nop
 8001eac:	bd80      	pop	{r7, pc}
 8001eae:	bf00      	nop
 8001eb0:	200002f0 	.word	0x200002f0

08001eb4 <SystemInit>:
 8001eb4:	b480      	push	{r7}
 8001eb6:	af00      	add	r7, sp, #0
 8001eb8:	4b06      	ldr	r3, [pc, #24]	@ (8001ed4 <SystemInit+0x20>)
 8001eba:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001ebe:	4a05      	ldr	r2, [pc, #20]	@ (8001ed4 <SystemInit+0x20>)
 8001ec0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001ec4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001ec8:	bf00      	nop
 8001eca:	46bd      	mov	sp, r7
 8001ecc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ed0:	4770      	bx	lr
 8001ed2:	bf00      	nop
 8001ed4:	e000ed00 	.word	0xe000ed00

08001ed8 <Reset_Handler>:
 8001ed8:	480d      	ldr	r0, [pc, #52]	@ (8001f10 <LoopForever+0x2>)
 8001eda:	4685      	mov	sp, r0
 8001edc:	480d      	ldr	r0, [pc, #52]	@ (8001f14 <LoopForever+0x6>)
 8001ede:	490e      	ldr	r1, [pc, #56]	@ (8001f18 <LoopForever+0xa>)
 8001ee0:	4a0e      	ldr	r2, [pc, #56]	@ (8001f1c <LoopForever+0xe>)
 8001ee2:	2300      	movs	r3, #0
 8001ee4:	e002      	b.n	8001eec <LoopCopyDataInit>

08001ee6 <CopyDataInit>:
 8001ee6:	58d4      	ldr	r4, [r2, r3]
 8001ee8:	50c4      	str	r4, [r0, r3]
 8001eea:	3304      	adds	r3, #4

08001eec <LoopCopyDataInit>:
 8001eec:	18c4      	adds	r4, r0, r3
 8001eee:	428c      	cmp	r4, r1
 8001ef0:	d3f9      	bcc.n	8001ee6 <CopyDataInit>
 8001ef2:	4a0b      	ldr	r2, [pc, #44]	@ (8001f20 <LoopForever+0x12>)
 8001ef4:	4c0b      	ldr	r4, [pc, #44]	@ (8001f24 <LoopForever+0x16>)
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	e001      	b.n	8001efe <LoopFillZerobss>

08001efa <FillZerobss>:
 8001efa:	6013      	str	r3, [r2, #0]
 8001efc:	3204      	adds	r2, #4

08001efe <LoopFillZerobss>:
 8001efe:	42a2      	cmp	r2, r4
 8001f00:	d3fb      	bcc.n	8001efa <FillZerobss>
 8001f02:	f7ff ffd7 	bl	8001eb4 <SystemInit>
 8001f06:	f005 fa0b 	bl	8007320 <__libc_init_array>
 8001f0a:	f7ff f813 	bl	8000f34 <main>

08001f0e <LoopForever>:
 8001f0e:	e7fe      	b.n	8001f0e <LoopForever>
 8001f10:	20008000 	.word	0x20008000
 8001f14:	20000000 	.word	0x20000000
 8001f18:	2000000c 	.word	0x2000000c
 8001f1c:	080073a8 	.word	0x080073a8
 8001f20:	2000000c 	.word	0x2000000c
 8001f24:	200006a0 	.word	0x200006a0

08001f28 <ADC1_2_IRQHandler>:
 8001f28:	e7fe      	b.n	8001f28 <ADC1_2_IRQHandler>

08001f2a <HAL_Init>:
 8001f2a:	b580      	push	{r7, lr}
 8001f2c:	b082      	sub	sp, #8
 8001f2e:	af00      	add	r7, sp, #0
 8001f30:	2300      	movs	r3, #0
 8001f32:	71fb      	strb	r3, [r7, #7]
 8001f34:	2003      	movs	r0, #3
 8001f36:	f001 fef5 	bl	8003d24 <HAL_NVIC_SetPriorityGrouping>
 8001f3a:	200f      	movs	r0, #15
 8001f3c:	f000 f80e 	bl	8001f5c <HAL_InitTick>
 8001f40:	4603      	mov	r3, r0
 8001f42:	2b00      	cmp	r3, #0
 8001f44:	d002      	beq.n	8001f4c <HAL_Init+0x22>
 8001f46:	2301      	movs	r3, #1
 8001f48:	71fb      	strb	r3, [r7, #7]
 8001f4a:	e001      	b.n	8001f50 <HAL_Init+0x26>
 8001f4c:	f7ff fd10 	bl	8001970 <HAL_MspInit>
 8001f50:	79fb      	ldrb	r3, [r7, #7]
 8001f52:	4618      	mov	r0, r3
 8001f54:	3708      	adds	r7, #8
 8001f56:	46bd      	mov	sp, r7
 8001f58:	bd80      	pop	{r7, pc}
	...

08001f5c <HAL_InitTick>:
 8001f5c:	b580      	push	{r7, lr}
 8001f5e:	b084      	sub	sp, #16
 8001f60:	af00      	add	r7, sp, #0
 8001f62:	6078      	str	r0, [r7, #4]
 8001f64:	2300      	movs	r3, #0
 8001f66:	73fb      	strb	r3, [r7, #15]
 8001f68:	4b16      	ldr	r3, [pc, #88]	@ (8001fc4 <HAL_InitTick+0x68>)
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	2b00      	cmp	r3, #0
 8001f6e:	d022      	beq.n	8001fb6 <HAL_InitTick+0x5a>
 8001f70:	4b15      	ldr	r3, [pc, #84]	@ (8001fc8 <HAL_InitTick+0x6c>)
 8001f72:	681a      	ldr	r2, [r3, #0]
 8001f74:	4b13      	ldr	r3, [pc, #76]	@ (8001fc4 <HAL_InitTick+0x68>)
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001f7c:	fbb1 f3f3 	udiv	r3, r1, r3
 8001f80:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f84:	4618      	mov	r0, r3
 8001f86:	f001 ff00 	bl	8003d8a <HAL_SYSTICK_Config>
 8001f8a:	4603      	mov	r3, r0
 8001f8c:	2b00      	cmp	r3, #0
 8001f8e:	d10f      	bne.n	8001fb0 <HAL_InitTick+0x54>
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	2b0f      	cmp	r3, #15
 8001f94:	d809      	bhi.n	8001faa <HAL_InitTick+0x4e>
 8001f96:	2200      	movs	r2, #0
 8001f98:	6879      	ldr	r1, [r7, #4]
 8001f9a:	f04f 30ff 	mov.w	r0, #4294967295
 8001f9e:	f001 fecc 	bl	8003d3a <HAL_NVIC_SetPriority>
 8001fa2:	4a0a      	ldr	r2, [pc, #40]	@ (8001fcc <HAL_InitTick+0x70>)
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	6013      	str	r3, [r2, #0]
 8001fa8:	e007      	b.n	8001fba <HAL_InitTick+0x5e>
 8001faa:	2301      	movs	r3, #1
 8001fac:	73fb      	strb	r3, [r7, #15]
 8001fae:	e004      	b.n	8001fba <HAL_InitTick+0x5e>
 8001fb0:	2301      	movs	r3, #1
 8001fb2:	73fb      	strb	r3, [r7, #15]
 8001fb4:	e001      	b.n	8001fba <HAL_InitTick+0x5e>
 8001fb6:	2301      	movs	r3, #1
 8001fb8:	73fb      	strb	r3, [r7, #15]
 8001fba:	7bfb      	ldrb	r3, [r7, #15]
 8001fbc:	4618      	mov	r0, r3
 8001fbe:	3710      	adds	r7, #16
 8001fc0:	46bd      	mov	sp, r7
 8001fc2:	bd80      	pop	{r7, pc}
 8001fc4:	20000008 	.word	0x20000008
 8001fc8:	20000000 	.word	0x20000000
 8001fcc:	20000004 	.word	0x20000004

08001fd0 <HAL_IncTick>:
 8001fd0:	b480      	push	{r7}
 8001fd2:	af00      	add	r7, sp, #0
 8001fd4:	4b05      	ldr	r3, [pc, #20]	@ (8001fec <HAL_IncTick+0x1c>)
 8001fd6:	681a      	ldr	r2, [r3, #0]
 8001fd8:	4b05      	ldr	r3, [pc, #20]	@ (8001ff0 <HAL_IncTick+0x20>)
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	4413      	add	r3, r2
 8001fde:	4a03      	ldr	r2, [pc, #12]	@ (8001fec <HAL_IncTick+0x1c>)
 8001fe0:	6013      	str	r3, [r2, #0]
 8001fe2:	bf00      	nop
 8001fe4:	46bd      	mov	sp, r7
 8001fe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fea:	4770      	bx	lr
 8001fec:	2000069c 	.word	0x2000069c
 8001ff0:	20000008 	.word	0x20000008

08001ff4 <HAL_GetTick>:
 8001ff4:	b480      	push	{r7}
 8001ff6:	af00      	add	r7, sp, #0
 8001ff8:	4b03      	ldr	r3, [pc, #12]	@ (8002008 <HAL_GetTick+0x14>)
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	4618      	mov	r0, r3
 8001ffe:	46bd      	mov	sp, r7
 8002000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002004:	4770      	bx	lr
 8002006:	bf00      	nop
 8002008:	2000069c 	.word	0x2000069c

0800200c <HAL_Delay>:
 800200c:	b580      	push	{r7, lr}
 800200e:	b084      	sub	sp, #16
 8002010:	af00      	add	r7, sp, #0
 8002012:	6078      	str	r0, [r7, #4]
 8002014:	f7ff ffee 	bl	8001ff4 <HAL_GetTick>
 8002018:	60b8      	str	r0, [r7, #8]
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	60fb      	str	r3, [r7, #12]
 800201e:	68fb      	ldr	r3, [r7, #12]
 8002020:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002024:	d004      	beq.n	8002030 <HAL_Delay+0x24>
 8002026:	4b09      	ldr	r3, [pc, #36]	@ (800204c <HAL_Delay+0x40>)
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	68fa      	ldr	r2, [r7, #12]
 800202c:	4413      	add	r3, r2
 800202e:	60fb      	str	r3, [r7, #12]
 8002030:	bf00      	nop
 8002032:	f7ff ffdf 	bl	8001ff4 <HAL_GetTick>
 8002036:	4602      	mov	r2, r0
 8002038:	68bb      	ldr	r3, [r7, #8]
 800203a:	1ad3      	subs	r3, r2, r3
 800203c:	68fa      	ldr	r2, [r7, #12]
 800203e:	429a      	cmp	r2, r3
 8002040:	d8f7      	bhi.n	8002032 <HAL_Delay+0x26>
 8002042:	bf00      	nop
 8002044:	bf00      	nop
 8002046:	3710      	adds	r7, #16
 8002048:	46bd      	mov	sp, r7
 800204a:	bd80      	pop	{r7, pc}
 800204c:	20000008 	.word	0x20000008

08002050 <LL_ADC_SetCommonClock>:
 8002050:	b480      	push	{r7}
 8002052:	b083      	sub	sp, #12
 8002054:	af00      	add	r7, sp, #0
 8002056:	6078      	str	r0, [r7, #4]
 8002058:	6039      	str	r1, [r7, #0]
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	689b      	ldr	r3, [r3, #8]
 800205e:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 8002062:	683b      	ldr	r3, [r7, #0]
 8002064:	431a      	orrs	r2, r3
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	609a      	str	r2, [r3, #8]
 800206a:	bf00      	nop
 800206c:	370c      	adds	r7, #12
 800206e:	46bd      	mov	sp, r7
 8002070:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002074:	4770      	bx	lr

08002076 <LL_ADC_SetCommonPathInternalCh>:
 8002076:	b480      	push	{r7}
 8002078:	b083      	sub	sp, #12
 800207a:	af00      	add	r7, sp, #0
 800207c:	6078      	str	r0, [r7, #4]
 800207e:	6039      	str	r1, [r7, #0]
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	689b      	ldr	r3, [r3, #8]
 8002084:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8002088:	683b      	ldr	r3, [r7, #0]
 800208a:	431a      	orrs	r2, r3
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	609a      	str	r2, [r3, #8]
 8002090:	bf00      	nop
 8002092:	370c      	adds	r7, #12
 8002094:	46bd      	mov	sp, r7
 8002096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800209a:	4770      	bx	lr

0800209c <LL_ADC_GetCommonPathInternalCh>:
 800209c:	b480      	push	{r7}
 800209e:	b083      	sub	sp, #12
 80020a0:	af00      	add	r7, sp, #0
 80020a2:	6078      	str	r0, [r7, #4]
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	689b      	ldr	r3, [r3, #8]
 80020a8:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 80020ac:	4618      	mov	r0, r3
 80020ae:	370c      	adds	r7, #12
 80020b0:	46bd      	mov	sp, r7
 80020b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020b6:	4770      	bx	lr

080020b8 <LL_ADC_SetOffset>:
 80020b8:	b480      	push	{r7}
 80020ba:	b087      	sub	sp, #28
 80020bc:	af00      	add	r7, sp, #0
 80020be:	60f8      	str	r0, [r7, #12]
 80020c0:	60b9      	str	r1, [r7, #8]
 80020c2:	607a      	str	r2, [r7, #4]
 80020c4:	603b      	str	r3, [r7, #0]
 80020c6:	68fb      	ldr	r3, [r7, #12]
 80020c8:	3360      	adds	r3, #96	@ 0x60
 80020ca:	461a      	mov	r2, r3
 80020cc:	68bb      	ldr	r3, [r7, #8]
 80020ce:	009b      	lsls	r3, r3, #2
 80020d0:	4413      	add	r3, r2
 80020d2:	617b      	str	r3, [r7, #20]
 80020d4:	697b      	ldr	r3, [r7, #20]
 80020d6:	681a      	ldr	r2, [r3, #0]
 80020d8:	4b08      	ldr	r3, [pc, #32]	@ (80020fc <LL_ADC_SetOffset+0x44>)
 80020da:	4013      	ands	r3, r2
 80020dc:	687a      	ldr	r2, [r7, #4]
 80020de:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 80020e2:	683a      	ldr	r2, [r7, #0]
 80020e4:	430a      	orrs	r2, r1
 80020e6:	4313      	orrs	r3, r2
 80020e8:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 80020ec:	697b      	ldr	r3, [r7, #20]
 80020ee:	601a      	str	r2, [r3, #0]
 80020f0:	bf00      	nop
 80020f2:	371c      	adds	r7, #28
 80020f4:	46bd      	mov	sp, r7
 80020f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020fa:	4770      	bx	lr
 80020fc:	03fff000 	.word	0x03fff000

08002100 <LL_ADC_GetOffsetChannel>:
 8002100:	b480      	push	{r7}
 8002102:	b085      	sub	sp, #20
 8002104:	af00      	add	r7, sp, #0
 8002106:	6078      	str	r0, [r7, #4]
 8002108:	6039      	str	r1, [r7, #0]
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	3360      	adds	r3, #96	@ 0x60
 800210e:	461a      	mov	r2, r3
 8002110:	683b      	ldr	r3, [r7, #0]
 8002112:	009b      	lsls	r3, r3, #2
 8002114:	4413      	add	r3, r2
 8002116:	60fb      	str	r3, [r7, #12]
 8002118:	68fb      	ldr	r3, [r7, #12]
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 8002120:	4618      	mov	r0, r3
 8002122:	3714      	adds	r7, #20
 8002124:	46bd      	mov	sp, r7
 8002126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800212a:	4770      	bx	lr

0800212c <LL_ADC_SetOffsetState>:
 800212c:	b480      	push	{r7}
 800212e:	b087      	sub	sp, #28
 8002130:	af00      	add	r7, sp, #0
 8002132:	60f8      	str	r0, [r7, #12]
 8002134:	60b9      	str	r1, [r7, #8]
 8002136:	607a      	str	r2, [r7, #4]
 8002138:	68fb      	ldr	r3, [r7, #12]
 800213a:	3360      	adds	r3, #96	@ 0x60
 800213c:	461a      	mov	r2, r3
 800213e:	68bb      	ldr	r3, [r7, #8]
 8002140:	009b      	lsls	r3, r3, #2
 8002142:	4413      	add	r3, r2
 8002144:	617b      	str	r3, [r7, #20]
 8002146:	697b      	ldr	r3, [r7, #20]
 8002148:	681b      	ldr	r3, [r3, #0]
 800214a:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	431a      	orrs	r2, r3
 8002152:	697b      	ldr	r3, [r7, #20]
 8002154:	601a      	str	r2, [r3, #0]
 8002156:	bf00      	nop
 8002158:	371c      	adds	r7, #28
 800215a:	46bd      	mov	sp, r7
 800215c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002160:	4770      	bx	lr

08002162 <LL_ADC_SetOffsetSign>:
 8002162:	b480      	push	{r7}
 8002164:	b087      	sub	sp, #28
 8002166:	af00      	add	r7, sp, #0
 8002168:	60f8      	str	r0, [r7, #12]
 800216a:	60b9      	str	r1, [r7, #8]
 800216c:	607a      	str	r2, [r7, #4]
 800216e:	68fb      	ldr	r3, [r7, #12]
 8002170:	3360      	adds	r3, #96	@ 0x60
 8002172:	461a      	mov	r2, r3
 8002174:	68bb      	ldr	r3, [r7, #8]
 8002176:	009b      	lsls	r3, r3, #2
 8002178:	4413      	add	r3, r2
 800217a:	617b      	str	r3, [r7, #20]
 800217c:	697b      	ldr	r3, [r7, #20]
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	431a      	orrs	r2, r3
 8002188:	697b      	ldr	r3, [r7, #20]
 800218a:	601a      	str	r2, [r3, #0]
 800218c:	bf00      	nop
 800218e:	371c      	adds	r7, #28
 8002190:	46bd      	mov	sp, r7
 8002192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002196:	4770      	bx	lr

08002198 <LL_ADC_SetOffsetSaturation>:
 8002198:	b480      	push	{r7}
 800219a:	b087      	sub	sp, #28
 800219c:	af00      	add	r7, sp, #0
 800219e:	60f8      	str	r0, [r7, #12]
 80021a0:	60b9      	str	r1, [r7, #8]
 80021a2:	607a      	str	r2, [r7, #4]
 80021a4:	68fb      	ldr	r3, [r7, #12]
 80021a6:	3360      	adds	r3, #96	@ 0x60
 80021a8:	461a      	mov	r2, r3
 80021aa:	68bb      	ldr	r3, [r7, #8]
 80021ac:	009b      	lsls	r3, r3, #2
 80021ae:	4413      	add	r3, r2
 80021b0:	617b      	str	r3, [r7, #20]
 80021b2:	697b      	ldr	r3, [r7, #20]
 80021b4:	681b      	ldr	r3, [r3, #0]
 80021b6:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	431a      	orrs	r2, r3
 80021be:	697b      	ldr	r3, [r7, #20]
 80021c0:	601a      	str	r2, [r3, #0]
 80021c2:	bf00      	nop
 80021c4:	371c      	adds	r7, #28
 80021c6:	46bd      	mov	sp, r7
 80021c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021cc:	4770      	bx	lr

080021ce <LL_ADC_SetSamplingTimeCommonConfig>:
 80021ce:	b480      	push	{r7}
 80021d0:	b083      	sub	sp, #12
 80021d2:	af00      	add	r7, sp, #0
 80021d4:	6078      	str	r0, [r7, #4]
 80021d6:	6039      	str	r1, [r7, #0]
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	695b      	ldr	r3, [r3, #20]
 80021dc:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80021e0:	683b      	ldr	r3, [r7, #0]
 80021e2:	431a      	orrs	r2, r3
 80021e4:	687b      	ldr	r3, [r7, #4]
 80021e6:	615a      	str	r2, [r3, #20]
 80021e8:	bf00      	nop
 80021ea:	370c      	adds	r7, #12
 80021ec:	46bd      	mov	sp, r7
 80021ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021f2:	4770      	bx	lr

080021f4 <LL_ADC_REG_IsTriggerSourceSWStart>:
 80021f4:	b480      	push	{r7}
 80021f6:	b083      	sub	sp, #12
 80021f8:	af00      	add	r7, sp, #0
 80021fa:	6078      	str	r0, [r7, #4]
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	68db      	ldr	r3, [r3, #12]
 8002200:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8002204:	2b00      	cmp	r3, #0
 8002206:	d101      	bne.n	800220c <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8002208:	2301      	movs	r3, #1
 800220a:	e000      	b.n	800220e <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 800220c:	2300      	movs	r3, #0
 800220e:	4618      	mov	r0, r3
 8002210:	370c      	adds	r7, #12
 8002212:	46bd      	mov	sp, r7
 8002214:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002218:	4770      	bx	lr

0800221a <LL_ADC_REG_SetSequencerRanks>:
 800221a:	b480      	push	{r7}
 800221c:	b087      	sub	sp, #28
 800221e:	af00      	add	r7, sp, #0
 8002220:	60f8      	str	r0, [r7, #12]
 8002222:	60b9      	str	r1, [r7, #8]
 8002224:	607a      	str	r2, [r7, #4]
 8002226:	68fb      	ldr	r3, [r7, #12]
 8002228:	3330      	adds	r3, #48	@ 0x30
 800222a:	461a      	mov	r2, r3
 800222c:	68bb      	ldr	r3, [r7, #8]
 800222e:	0a1b      	lsrs	r3, r3, #8
 8002230:	009b      	lsls	r3, r3, #2
 8002232:	f003 030c 	and.w	r3, r3, #12
 8002236:	4413      	add	r3, r2
 8002238:	617b      	str	r3, [r7, #20]
 800223a:	697b      	ldr	r3, [r7, #20]
 800223c:	681a      	ldr	r2, [r3, #0]
 800223e:	68bb      	ldr	r3, [r7, #8]
 8002240:	f003 031f 	and.w	r3, r3, #31
 8002244:	211f      	movs	r1, #31
 8002246:	fa01 f303 	lsl.w	r3, r1, r3
 800224a:	43db      	mvns	r3, r3
 800224c:	401a      	ands	r2, r3
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	0e9b      	lsrs	r3, r3, #26
 8002252:	f003 011f 	and.w	r1, r3, #31
 8002256:	68bb      	ldr	r3, [r7, #8]
 8002258:	f003 031f 	and.w	r3, r3, #31
 800225c:	fa01 f303 	lsl.w	r3, r1, r3
 8002260:	431a      	orrs	r2, r3
 8002262:	697b      	ldr	r3, [r7, #20]
 8002264:	601a      	str	r2, [r3, #0]
 8002266:	bf00      	nop
 8002268:	371c      	adds	r7, #28
 800226a:	46bd      	mov	sp, r7
 800226c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002270:	4770      	bx	lr

08002272 <LL_ADC_SetChannelSamplingTime>:
 8002272:	b480      	push	{r7}
 8002274:	b087      	sub	sp, #28
 8002276:	af00      	add	r7, sp, #0
 8002278:	60f8      	str	r0, [r7, #12]
 800227a:	60b9      	str	r1, [r7, #8]
 800227c:	607a      	str	r2, [r7, #4]
 800227e:	68fb      	ldr	r3, [r7, #12]
 8002280:	3314      	adds	r3, #20
 8002282:	461a      	mov	r2, r3
 8002284:	68bb      	ldr	r3, [r7, #8]
 8002286:	0e5b      	lsrs	r3, r3, #25
 8002288:	009b      	lsls	r3, r3, #2
 800228a:	f003 0304 	and.w	r3, r3, #4
 800228e:	4413      	add	r3, r2
 8002290:	617b      	str	r3, [r7, #20]
 8002292:	697b      	ldr	r3, [r7, #20]
 8002294:	681a      	ldr	r2, [r3, #0]
 8002296:	68bb      	ldr	r3, [r7, #8]
 8002298:	0d1b      	lsrs	r3, r3, #20
 800229a:	f003 031f 	and.w	r3, r3, #31
 800229e:	2107      	movs	r1, #7
 80022a0:	fa01 f303 	lsl.w	r3, r1, r3
 80022a4:	43db      	mvns	r3, r3
 80022a6:	401a      	ands	r2, r3
 80022a8:	68bb      	ldr	r3, [r7, #8]
 80022aa:	0d1b      	lsrs	r3, r3, #20
 80022ac:	f003 031f 	and.w	r3, r3, #31
 80022b0:	6879      	ldr	r1, [r7, #4]
 80022b2:	fa01 f303 	lsl.w	r3, r1, r3
 80022b6:	431a      	orrs	r2, r3
 80022b8:	697b      	ldr	r3, [r7, #20]
 80022ba:	601a      	str	r2, [r3, #0]
 80022bc:	bf00      	nop
 80022be:	371c      	adds	r7, #28
 80022c0:	46bd      	mov	sp, r7
 80022c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022c6:	4770      	bx	lr

080022c8 <LL_ADC_SetChannelSingleDiff>:
 80022c8:	b480      	push	{r7}
 80022ca:	b085      	sub	sp, #20
 80022cc:	af00      	add	r7, sp, #0
 80022ce:	60f8      	str	r0, [r7, #12]
 80022d0:	60b9      	str	r1, [r7, #8]
 80022d2:	607a      	str	r2, [r7, #4]
 80022d4:	68fb      	ldr	r3, [r7, #12]
 80022d6:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 80022da:	68bb      	ldr	r3, [r7, #8]
 80022dc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80022e0:	43db      	mvns	r3, r3
 80022e2:	401a      	ands	r2, r3
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	f003 0318 	and.w	r3, r3, #24
 80022ea:	4908      	ldr	r1, [pc, #32]	@ (800230c <LL_ADC_SetChannelSingleDiff+0x44>)
 80022ec:	40d9      	lsrs	r1, r3
 80022ee:	68bb      	ldr	r3, [r7, #8]
 80022f0:	400b      	ands	r3, r1
 80022f2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80022f6:	431a      	orrs	r2, r3
 80022f8:	68fb      	ldr	r3, [r7, #12]
 80022fa:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 80022fe:	bf00      	nop
 8002300:	3714      	adds	r7, #20
 8002302:	46bd      	mov	sp, r7
 8002304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002308:	4770      	bx	lr
 800230a:	bf00      	nop
 800230c:	0007ffff 	.word	0x0007ffff

08002310 <LL_ADC_GetMultimode>:
 8002310:	b480      	push	{r7}
 8002312:	b083      	sub	sp, #12
 8002314:	af00      	add	r7, sp, #0
 8002316:	6078      	str	r0, [r7, #4]
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	689b      	ldr	r3, [r3, #8]
 800231c:	f003 031f 	and.w	r3, r3, #31
 8002320:	4618      	mov	r0, r3
 8002322:	370c      	adds	r7, #12
 8002324:	46bd      	mov	sp, r7
 8002326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800232a:	4770      	bx	lr

0800232c <LL_ADC_GetMultiDMATransfer>:
 800232c:	b480      	push	{r7}
 800232e:	b083      	sub	sp, #12
 8002330:	af00      	add	r7, sp, #0
 8002332:	6078      	str	r0, [r7, #4]
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	689b      	ldr	r3, [r3, #8]
 8002338:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 800233c:	4618      	mov	r0, r3
 800233e:	370c      	adds	r7, #12
 8002340:	46bd      	mov	sp, r7
 8002342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002346:	4770      	bx	lr

08002348 <LL_ADC_DisableDeepPowerDown>:
 8002348:	b480      	push	{r7}
 800234a:	b083      	sub	sp, #12
 800234c:	af00      	add	r7, sp, #0
 800234e:	6078      	str	r0, [r7, #4]
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	689b      	ldr	r3, [r3, #8]
 8002354:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 8002358:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 800235c:	687a      	ldr	r2, [r7, #4]
 800235e:	6093      	str	r3, [r2, #8]
 8002360:	bf00      	nop
 8002362:	370c      	adds	r7, #12
 8002364:	46bd      	mov	sp, r7
 8002366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800236a:	4770      	bx	lr

0800236c <LL_ADC_IsDeepPowerDownEnabled>:
 800236c:	b480      	push	{r7}
 800236e:	b083      	sub	sp, #12
 8002370:	af00      	add	r7, sp, #0
 8002372:	6078      	str	r0, [r7, #4]
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	689b      	ldr	r3, [r3, #8]
 8002378:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800237c:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8002380:	d101      	bne.n	8002386 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8002382:	2301      	movs	r3, #1
 8002384:	e000      	b.n	8002388 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8002386:	2300      	movs	r3, #0
 8002388:	4618      	mov	r0, r3
 800238a:	370c      	adds	r7, #12
 800238c:	46bd      	mov	sp, r7
 800238e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002392:	4770      	bx	lr

08002394 <LL_ADC_EnableInternalRegulator>:
 8002394:	b480      	push	{r7}
 8002396:	b083      	sub	sp, #12
 8002398:	af00      	add	r7, sp, #0
 800239a:	6078      	str	r0, [r7, #4]
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	689b      	ldr	r3, [r3, #8]
 80023a0:	f023 4310 	bic.w	r3, r3, #2415919104	@ 0x90000000
 80023a4:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80023a8:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	609a      	str	r2, [r3, #8]
 80023b0:	bf00      	nop
 80023b2:	370c      	adds	r7, #12
 80023b4:	46bd      	mov	sp, r7
 80023b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ba:	4770      	bx	lr

080023bc <LL_ADC_IsInternalRegulatorEnabled>:
 80023bc:	b480      	push	{r7}
 80023be:	b083      	sub	sp, #12
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	6078      	str	r0, [r7, #4]
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	689b      	ldr	r3, [r3, #8]
 80023c8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80023cc:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80023d0:	d101      	bne.n	80023d6 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 80023d2:	2301      	movs	r3, #1
 80023d4:	e000      	b.n	80023d8 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 80023d6:	2300      	movs	r3, #0
 80023d8:	4618      	mov	r0, r3
 80023da:	370c      	adds	r7, #12
 80023dc:	46bd      	mov	sp, r7
 80023de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023e2:	4770      	bx	lr

080023e4 <LL_ADC_Enable>:
 80023e4:	b480      	push	{r7}
 80023e6:	b083      	sub	sp, #12
 80023e8:	af00      	add	r7, sp, #0
 80023ea:	6078      	str	r0, [r7, #4]
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	689b      	ldr	r3, [r3, #8]
 80023f0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80023f4:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80023f8:	f043 0201 	orr.w	r2, r3, #1
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	609a      	str	r2, [r3, #8]
 8002400:	bf00      	nop
 8002402:	370c      	adds	r7, #12
 8002404:	46bd      	mov	sp, r7
 8002406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800240a:	4770      	bx	lr

0800240c <LL_ADC_Disable>:
 800240c:	b480      	push	{r7}
 800240e:	b083      	sub	sp, #12
 8002410:	af00      	add	r7, sp, #0
 8002412:	6078      	str	r0, [r7, #4]
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	689b      	ldr	r3, [r3, #8]
 8002418:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800241c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002420:	f043 0202 	orr.w	r2, r3, #2
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	609a      	str	r2, [r3, #8]
 8002428:	bf00      	nop
 800242a:	370c      	adds	r7, #12
 800242c:	46bd      	mov	sp, r7
 800242e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002432:	4770      	bx	lr

08002434 <LL_ADC_IsEnabled>:
 8002434:	b480      	push	{r7}
 8002436:	b083      	sub	sp, #12
 8002438:	af00      	add	r7, sp, #0
 800243a:	6078      	str	r0, [r7, #4]
 800243c:	687b      	ldr	r3, [r7, #4]
 800243e:	689b      	ldr	r3, [r3, #8]
 8002440:	f003 0301 	and.w	r3, r3, #1
 8002444:	2b01      	cmp	r3, #1
 8002446:	d101      	bne.n	800244c <LL_ADC_IsEnabled+0x18>
 8002448:	2301      	movs	r3, #1
 800244a:	e000      	b.n	800244e <LL_ADC_IsEnabled+0x1a>
 800244c:	2300      	movs	r3, #0
 800244e:	4618      	mov	r0, r3
 8002450:	370c      	adds	r7, #12
 8002452:	46bd      	mov	sp, r7
 8002454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002458:	4770      	bx	lr

0800245a <LL_ADC_IsDisableOngoing>:
 800245a:	b480      	push	{r7}
 800245c:	b083      	sub	sp, #12
 800245e:	af00      	add	r7, sp, #0
 8002460:	6078      	str	r0, [r7, #4]
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	689b      	ldr	r3, [r3, #8]
 8002466:	f003 0302 	and.w	r3, r3, #2
 800246a:	2b02      	cmp	r3, #2
 800246c:	d101      	bne.n	8002472 <LL_ADC_IsDisableOngoing+0x18>
 800246e:	2301      	movs	r3, #1
 8002470:	e000      	b.n	8002474 <LL_ADC_IsDisableOngoing+0x1a>
 8002472:	2300      	movs	r3, #0
 8002474:	4618      	mov	r0, r3
 8002476:	370c      	adds	r7, #12
 8002478:	46bd      	mov	sp, r7
 800247a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800247e:	4770      	bx	lr

08002480 <LL_ADC_REG_StartConversion>:
 8002480:	b480      	push	{r7}
 8002482:	b083      	sub	sp, #12
 8002484:	af00      	add	r7, sp, #0
 8002486:	6078      	str	r0, [r7, #4]
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	689b      	ldr	r3, [r3, #8]
 800248c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002490:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002494:	f043 0204 	orr.w	r2, r3, #4
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	609a      	str	r2, [r3, #8]
 800249c:	bf00      	nop
 800249e:	370c      	adds	r7, #12
 80024a0:	46bd      	mov	sp, r7
 80024a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024a6:	4770      	bx	lr

080024a8 <LL_ADC_REG_StopConversion>:
 80024a8:	b480      	push	{r7}
 80024aa:	b083      	sub	sp, #12
 80024ac:	af00      	add	r7, sp, #0
 80024ae:	6078      	str	r0, [r7, #4]
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	689b      	ldr	r3, [r3, #8]
 80024b4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80024b8:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80024bc:	f043 0210 	orr.w	r2, r3, #16
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	609a      	str	r2, [r3, #8]
 80024c4:	bf00      	nop
 80024c6:	370c      	adds	r7, #12
 80024c8:	46bd      	mov	sp, r7
 80024ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024ce:	4770      	bx	lr

080024d0 <LL_ADC_REG_IsConversionOngoing>:
 80024d0:	b480      	push	{r7}
 80024d2:	b083      	sub	sp, #12
 80024d4:	af00      	add	r7, sp, #0
 80024d6:	6078      	str	r0, [r7, #4]
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	689b      	ldr	r3, [r3, #8]
 80024dc:	f003 0304 	and.w	r3, r3, #4
 80024e0:	2b04      	cmp	r3, #4
 80024e2:	d101      	bne.n	80024e8 <LL_ADC_REG_IsConversionOngoing+0x18>
 80024e4:	2301      	movs	r3, #1
 80024e6:	e000      	b.n	80024ea <LL_ADC_REG_IsConversionOngoing+0x1a>
 80024e8:	2300      	movs	r3, #0
 80024ea:	4618      	mov	r0, r3
 80024ec:	370c      	adds	r7, #12
 80024ee:	46bd      	mov	sp, r7
 80024f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024f4:	4770      	bx	lr

080024f6 <LL_ADC_INJ_StopConversion>:
 80024f6:	b480      	push	{r7}
 80024f8:	b083      	sub	sp, #12
 80024fa:	af00      	add	r7, sp, #0
 80024fc:	6078      	str	r0, [r7, #4]
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	689b      	ldr	r3, [r3, #8]
 8002502:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002506:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 800250a:	f043 0220 	orr.w	r2, r3, #32
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	609a      	str	r2, [r3, #8]
 8002512:	bf00      	nop
 8002514:	370c      	adds	r7, #12
 8002516:	46bd      	mov	sp, r7
 8002518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800251c:	4770      	bx	lr

0800251e <LL_ADC_INJ_IsConversionOngoing>:
 800251e:	b480      	push	{r7}
 8002520:	b083      	sub	sp, #12
 8002522:	af00      	add	r7, sp, #0
 8002524:	6078      	str	r0, [r7, #4]
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	689b      	ldr	r3, [r3, #8]
 800252a:	f003 0308 	and.w	r3, r3, #8
 800252e:	2b08      	cmp	r3, #8
 8002530:	d101      	bne.n	8002536 <LL_ADC_INJ_IsConversionOngoing+0x18>
 8002532:	2301      	movs	r3, #1
 8002534:	e000      	b.n	8002538 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8002536:	2300      	movs	r3, #0
 8002538:	4618      	mov	r0, r3
 800253a:	370c      	adds	r7, #12
 800253c:	46bd      	mov	sp, r7
 800253e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002542:	4770      	bx	lr

08002544 <HAL_ADC_Init>:
 8002544:	b590      	push	{r4, r7, lr}
 8002546:	b089      	sub	sp, #36	@ 0x24
 8002548:	af00      	add	r7, sp, #0
 800254a:	6078      	str	r0, [r7, #4]
 800254c:	2300      	movs	r3, #0
 800254e:	77fb      	strb	r3, [r7, #31]
 8002550:	2300      	movs	r3, #0
 8002552:	60fb      	str	r3, [r7, #12]
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	2b00      	cmp	r3, #0
 8002558:	d101      	bne.n	800255e <HAL_ADC_Init+0x1a>
 800255a:	2301      	movs	r3, #1
 800255c:	e167      	b.n	800282e <HAL_ADC_Init+0x2ea>
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	695b      	ldr	r3, [r3, #20]
 8002562:	2b00      	cmp	r3, #0
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002568:	2b00      	cmp	r3, #0
 800256a:	d109      	bne.n	8002580 <HAL_ADC_Init+0x3c>
 800256c:	6878      	ldr	r0, [r7, #4]
 800256e:	f7ff fa23 	bl	80019b8 <HAL_ADC_MspInit>
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	2200      	movs	r2, #0
 8002576:	661a      	str	r2, [r3, #96]	@ 0x60
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	2200      	movs	r2, #0
 800257c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	4618      	mov	r0, r3
 8002586:	f7ff fef1 	bl	800236c <LL_ADC_IsDeepPowerDownEnabled>
 800258a:	4603      	mov	r3, r0
 800258c:	2b00      	cmp	r3, #0
 800258e:	d004      	beq.n	800259a <HAL_ADC_Init+0x56>
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	4618      	mov	r0, r3
 8002596:	f7ff fed7 	bl	8002348 <LL_ADC_DisableDeepPowerDown>
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	681b      	ldr	r3, [r3, #0]
 800259e:	4618      	mov	r0, r3
 80025a0:	f7ff ff0c 	bl	80023bc <LL_ADC_IsInternalRegulatorEnabled>
 80025a4:	4603      	mov	r3, r0
 80025a6:	2b00      	cmp	r3, #0
 80025a8:	d115      	bne.n	80025d6 <HAL_ADC_Init+0x92>
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	681b      	ldr	r3, [r3, #0]
 80025ae:	4618      	mov	r0, r3
 80025b0:	f7ff fef0 	bl	8002394 <LL_ADC_EnableInternalRegulator>
 80025b4:	4ba0      	ldr	r3, [pc, #640]	@ (8002838 <HAL_ADC_Init+0x2f4>)
 80025b6:	681b      	ldr	r3, [r3, #0]
 80025b8:	099b      	lsrs	r3, r3, #6
 80025ba:	4aa0      	ldr	r2, [pc, #640]	@ (800283c <HAL_ADC_Init+0x2f8>)
 80025bc:	fba2 2303 	umull	r2, r3, r2, r3
 80025c0:	099b      	lsrs	r3, r3, #6
 80025c2:	3301      	adds	r3, #1
 80025c4:	005b      	lsls	r3, r3, #1
 80025c6:	60fb      	str	r3, [r7, #12]
 80025c8:	e002      	b.n	80025d0 <HAL_ADC_Init+0x8c>
 80025ca:	68fb      	ldr	r3, [r7, #12]
 80025cc:	3b01      	subs	r3, #1
 80025ce:	60fb      	str	r3, [r7, #12]
 80025d0:	68fb      	ldr	r3, [r7, #12]
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d1f9      	bne.n	80025ca <HAL_ADC_Init+0x86>
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	681b      	ldr	r3, [r3, #0]
 80025da:	4618      	mov	r0, r3
 80025dc:	f7ff feee 	bl	80023bc <LL_ADC_IsInternalRegulatorEnabled>
 80025e0:	4603      	mov	r3, r0
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	d10d      	bne.n	8002602 <HAL_ADC_Init+0xbe>
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80025ea:	f043 0210 	orr.w	r2, r3, #16
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80025f6:	f043 0201 	orr.w	r2, r3, #1
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	661a      	str	r2, [r3, #96]	@ 0x60
 80025fe:	2301      	movs	r3, #1
 8002600:	77fb      	strb	r3, [r7, #31]
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	681b      	ldr	r3, [r3, #0]
 8002606:	4618      	mov	r0, r3
 8002608:	f7ff ff62 	bl	80024d0 <LL_ADC_REG_IsConversionOngoing>
 800260c:	6178      	str	r0, [r7, #20]
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002612:	f003 0310 	and.w	r3, r3, #16
 8002616:	2b00      	cmp	r3, #0
 8002618:	f040 8100 	bne.w	800281c <HAL_ADC_Init+0x2d8>
 800261c:	697b      	ldr	r3, [r7, #20]
 800261e:	2b00      	cmp	r3, #0
 8002620:	f040 80fc 	bne.w	800281c <HAL_ADC_Init+0x2d8>
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002628:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 800262c:	f043 0202 	orr.w	r2, r3, #2
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	4618      	mov	r0, r3
 800263a:	f7ff fefb 	bl	8002434 <LL_ADC_IsEnabled>
 800263e:	4603      	mov	r3, r0
 8002640:	2b00      	cmp	r3, #0
 8002642:	d111      	bne.n	8002668 <HAL_ADC_Init+0x124>
 8002644:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8002648:	f7ff fef4 	bl	8002434 <LL_ADC_IsEnabled>
 800264c:	4604      	mov	r4, r0
 800264e:	487c      	ldr	r0, [pc, #496]	@ (8002840 <HAL_ADC_Init+0x2fc>)
 8002650:	f7ff fef0 	bl	8002434 <LL_ADC_IsEnabled>
 8002654:	4603      	mov	r3, r0
 8002656:	4323      	orrs	r3, r4
 8002658:	2b00      	cmp	r3, #0
 800265a:	d105      	bne.n	8002668 <HAL_ADC_Init+0x124>
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	685b      	ldr	r3, [r3, #4]
 8002660:	4619      	mov	r1, r3
 8002662:	4878      	ldr	r0, [pc, #480]	@ (8002844 <HAL_ADC_Init+0x300>)
 8002664:	f7ff fcf4 	bl	8002050 <LL_ADC_SetCommonClock>
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	7f5b      	ldrb	r3, [r3, #29]
 800266c:	035a      	lsls	r2, r3, #13
 800266e:	687b      	ldr	r3, [r7, #4]
 8002670:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002672:	431a      	orrs	r2, r3
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	68db      	ldr	r3, [r3, #12]
 8002678:	431a      	orrs	r2, r3
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	689b      	ldr	r3, [r3, #8]
 800267e:	431a      	orrs	r2, r3
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002686:	041b      	lsls	r3, r3, #16
 8002688:	4313      	orrs	r3, r2
 800268a:	61bb      	str	r3, [r7, #24]
 800268c:	687b      	ldr	r3, [r7, #4]
 800268e:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002692:	2b01      	cmp	r3, #1
 8002694:	d106      	bne.n	80026a4 <HAL_ADC_Init+0x160>
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800269a:	3b01      	subs	r3, #1
 800269c:	045b      	lsls	r3, r3, #17
 800269e:	69ba      	ldr	r2, [r7, #24]
 80026a0:	4313      	orrs	r3, r2
 80026a2:	61bb      	str	r3, [r7, #24]
 80026a4:	687b      	ldr	r3, [r7, #4]
 80026a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80026a8:	2b00      	cmp	r3, #0
 80026aa:	d009      	beq.n	80026c0 <HAL_ADC_Init+0x17c>
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80026b0:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026b8:	4313      	orrs	r3, r2
 80026ba:	69ba      	ldr	r2, [r7, #24]
 80026bc:	4313      	orrs	r3, r2
 80026be:	61bb      	str	r3, [r7, #24]
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	681b      	ldr	r3, [r3, #0]
 80026c4:	68da      	ldr	r2, [r3, #12]
 80026c6:	4b60      	ldr	r3, [pc, #384]	@ (8002848 <HAL_ADC_Init+0x304>)
 80026c8:	4013      	ands	r3, r2
 80026ca:	687a      	ldr	r2, [r7, #4]
 80026cc:	6812      	ldr	r2, [r2, #0]
 80026ce:	69b9      	ldr	r1, [r7, #24]
 80026d0:	430b      	orrs	r3, r1
 80026d2:	60d3      	str	r3, [r2, #12]
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	691b      	ldr	r3, [r3, #16]
 80026da:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	430a      	orrs	r2, r1
 80026e8:	611a      	str	r2, [r3, #16]
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	4618      	mov	r0, r3
 80026f0:	f7ff ff15 	bl	800251e <LL_ADC_INJ_IsConversionOngoing>
 80026f4:	6138      	str	r0, [r7, #16]
 80026f6:	697b      	ldr	r3, [r7, #20]
 80026f8:	2b00      	cmp	r3, #0
 80026fa:	d16d      	bne.n	80027d8 <HAL_ADC_Init+0x294>
 80026fc:	693b      	ldr	r3, [r7, #16]
 80026fe:	2b00      	cmp	r3, #0
 8002700:	d16a      	bne.n	80027d8 <HAL_ADC_Init+0x294>
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	7f1b      	ldrb	r3, [r3, #28]
 8002706:	039a      	lsls	r2, r3, #14
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 800270e:	005b      	lsls	r3, r3, #1
 8002710:	4313      	orrs	r3, r2
 8002712:	61bb      	str	r3, [r7, #24]
 8002714:	687b      	ldr	r3, [r7, #4]
 8002716:	681b      	ldr	r3, [r3, #0]
 8002718:	68db      	ldr	r3, [r3, #12]
 800271a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800271e:	f023 0302 	bic.w	r3, r3, #2
 8002722:	687a      	ldr	r2, [r7, #4]
 8002724:	6812      	ldr	r2, [r2, #0]
 8002726:	69b9      	ldr	r1, [r7, #24]
 8002728:	430b      	orrs	r3, r1
 800272a:	60d3      	str	r3, [r2, #12]
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	691b      	ldr	r3, [r3, #16]
 8002730:	2b00      	cmp	r3, #0
 8002732:	d017      	beq.n	8002764 <HAL_ADC_Init+0x220>
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	691a      	ldr	r2, [r3, #16]
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	681b      	ldr	r3, [r3, #0]
 800273e:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8002742:	611a      	str	r2, [r3, #16]
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	681b      	ldr	r3, [r3, #0]
 8002748:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800274c:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8002750:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002754:	687a      	ldr	r2, [r7, #4]
 8002756:	6911      	ldr	r1, [r2, #16]
 8002758:	687a      	ldr	r2, [r7, #4]
 800275a:	6812      	ldr	r2, [r2, #0]
 800275c:	430b      	orrs	r3, r1
 800275e:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 8002762:	e013      	b.n	800278c <HAL_ADC_Init+0x248>
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	691a      	ldr	r2, [r3, #16]
 800276a:	687b      	ldr	r3, [r7, #4]
 800276c:	681b      	ldr	r3, [r3, #0]
 800276e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8002772:	611a      	str	r2, [r3, #16]
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800277c:	687a      	ldr	r2, [r7, #4]
 800277e:	6812      	ldr	r2, [r2, #0]
 8002780:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8002784:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002788:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 800278c:	687b      	ldr	r3, [r7, #4]
 800278e:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8002792:	2b01      	cmp	r3, #1
 8002794:	d118      	bne.n	80027c8 <HAL_ADC_Init+0x284>
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	691b      	ldr	r3, [r3, #16]
 800279c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80027a0:	f023 0304 	bic.w	r3, r3, #4
 80027a4:	687a      	ldr	r2, [r7, #4]
 80027a6:	6c51      	ldr	r1, [r2, #68]	@ 0x44
 80027a8:	687a      	ldr	r2, [r7, #4]
 80027aa:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 80027ac:	4311      	orrs	r1, r2
 80027ae:	687a      	ldr	r2, [r7, #4]
 80027b0:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 80027b2:	4311      	orrs	r1, r2
 80027b4:	687a      	ldr	r2, [r7, #4]
 80027b6:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 80027b8:	430a      	orrs	r2, r1
 80027ba:	431a      	orrs	r2, r3
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	681b      	ldr	r3, [r3, #0]
 80027c0:	f042 0201 	orr.w	r2, r2, #1
 80027c4:	611a      	str	r2, [r3, #16]
 80027c6:	e007      	b.n	80027d8 <HAL_ADC_Init+0x294>
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	681b      	ldr	r3, [r3, #0]
 80027cc:	691a      	ldr	r2, [r3, #16]
 80027ce:	687b      	ldr	r3, [r7, #4]
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	f022 0201 	bic.w	r2, r2, #1
 80027d6:	611a      	str	r2, [r3, #16]
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	695b      	ldr	r3, [r3, #20]
 80027dc:	2b01      	cmp	r3, #1
 80027de:	d10c      	bne.n	80027fa <HAL_ADC_Init+0x2b6>
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	681b      	ldr	r3, [r3, #0]
 80027e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80027e6:	f023 010f 	bic.w	r1, r3, #15
 80027ea:	687b      	ldr	r3, [r7, #4]
 80027ec:	6a1b      	ldr	r3, [r3, #32]
 80027ee:	1e5a      	subs	r2, r3, #1
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	681b      	ldr	r3, [r3, #0]
 80027f4:	430a      	orrs	r2, r1
 80027f6:	631a      	str	r2, [r3, #48]	@ 0x30
 80027f8:	e007      	b.n	800280a <HAL_ADC_Init+0x2c6>
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	681b      	ldr	r3, [r3, #0]
 80027fe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	f022 020f 	bic.w	r2, r2, #15
 8002808:	631a      	str	r2, [r3, #48]	@ 0x30
 800280a:	687b      	ldr	r3, [r7, #4]
 800280c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800280e:	f023 0303 	bic.w	r3, r3, #3
 8002812:	f043 0201 	orr.w	r2, r3, #1
 8002816:	687b      	ldr	r3, [r7, #4]
 8002818:	65da      	str	r2, [r3, #92]	@ 0x5c
 800281a:	e007      	b.n	800282c <HAL_ADC_Init+0x2e8>
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002820:	f043 0210 	orr.w	r2, r3, #16
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002828:	2301      	movs	r3, #1
 800282a:	77fb      	strb	r3, [r7, #31]
 800282c:	7ffb      	ldrb	r3, [r7, #31]
 800282e:	4618      	mov	r0, r3
 8002830:	3724      	adds	r7, #36	@ 0x24
 8002832:	46bd      	mov	sp, r7
 8002834:	bd90      	pop	{r4, r7, pc}
 8002836:	bf00      	nop
 8002838:	20000000 	.word	0x20000000
 800283c:	053e2d63 	.word	0x053e2d63
 8002840:	50000100 	.word	0x50000100
 8002844:	50000300 	.word	0x50000300
 8002848:	fff04007 	.word	0xfff04007

0800284c <HAL_ADC_Start>:
 800284c:	b580      	push	{r7, lr}
 800284e:	b086      	sub	sp, #24
 8002850:	af00      	add	r7, sp, #0
 8002852:	6078      	str	r0, [r7, #4]
 8002854:	4859      	ldr	r0, [pc, #356]	@ (80029bc <HAL_ADC_Start+0x170>)
 8002856:	f7ff fd5b 	bl	8002310 <LL_ADC_GetMultimode>
 800285a:	6138      	str	r0, [r7, #16]
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	4618      	mov	r0, r3
 8002862:	f7ff fe35 	bl	80024d0 <LL_ADC_REG_IsConversionOngoing>
 8002866:	4603      	mov	r3, r0
 8002868:	2b00      	cmp	r3, #0
 800286a:	f040 809f 	bne.w	80029ac <HAL_ADC_Start+0x160>
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002874:	2b01      	cmp	r3, #1
 8002876:	d101      	bne.n	800287c <HAL_ADC_Start+0x30>
 8002878:	2302      	movs	r3, #2
 800287a:	e09a      	b.n	80029b2 <HAL_ADC_Start+0x166>
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	2201      	movs	r2, #1
 8002880:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002884:	6878      	ldr	r0, [r7, #4]
 8002886:	f000 ffcd 	bl	8003824 <ADC_Enable>
 800288a:	4603      	mov	r3, r0
 800288c:	75fb      	strb	r3, [r7, #23]
 800288e:	7dfb      	ldrb	r3, [r7, #23]
 8002890:	2b00      	cmp	r3, #0
 8002892:	f040 8086 	bne.w	80029a2 <HAL_ADC_Start+0x156>
 8002896:	687b      	ldr	r3, [r7, #4]
 8002898:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800289a:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 800289e:	f023 0301 	bic.w	r3, r3, #1
 80028a2:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	65da      	str	r2, [r3, #92]	@ 0x5c
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	4a44      	ldr	r2, [pc, #272]	@ (80029c0 <HAL_ADC_Start+0x174>)
 80028b0:	4293      	cmp	r3, r2
 80028b2:	d002      	beq.n	80028ba <HAL_ADC_Start+0x6e>
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	e001      	b.n	80028be <HAL_ADC_Start+0x72>
 80028ba:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80028be:	687a      	ldr	r2, [r7, #4]
 80028c0:	6812      	ldr	r2, [r2, #0]
 80028c2:	4293      	cmp	r3, r2
 80028c4:	d002      	beq.n	80028cc <HAL_ADC_Start+0x80>
 80028c6:	693b      	ldr	r3, [r7, #16]
 80028c8:	2b00      	cmp	r3, #0
 80028ca:	d105      	bne.n	80028d8 <HAL_ADC_Start+0x8c>
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80028d0:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	65da      	str	r2, [r3, #92]	@ 0x5c
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80028dc:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80028e0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80028e4:	d106      	bne.n	80028f4 <HAL_ADC_Start+0xa8>
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80028ea:	f023 0206 	bic.w	r2, r3, #6
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	661a      	str	r2, [r3, #96]	@ 0x60
 80028f2:	e002      	b.n	80028fa <HAL_ADC_Start+0xae>
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	2200      	movs	r2, #0
 80028f8:	661a      	str	r2, [r3, #96]	@ 0x60
 80028fa:	687b      	ldr	r3, [r7, #4]
 80028fc:	681b      	ldr	r3, [r3, #0]
 80028fe:	221c      	movs	r2, #28
 8002900:	601a      	str	r2, [r3, #0]
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	2200      	movs	r2, #0
 8002906:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	681b      	ldr	r3, [r3, #0]
 800290e:	4a2c      	ldr	r2, [pc, #176]	@ (80029c0 <HAL_ADC_Start+0x174>)
 8002910:	4293      	cmp	r3, r2
 8002912:	d002      	beq.n	800291a <HAL_ADC_Start+0xce>
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	e001      	b.n	800291e <HAL_ADC_Start+0xd2>
 800291a:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 800291e:	687a      	ldr	r2, [r7, #4]
 8002920:	6812      	ldr	r2, [r2, #0]
 8002922:	4293      	cmp	r3, r2
 8002924:	d008      	beq.n	8002938 <HAL_ADC_Start+0xec>
 8002926:	693b      	ldr	r3, [r7, #16]
 8002928:	2b00      	cmp	r3, #0
 800292a:	d005      	beq.n	8002938 <HAL_ADC_Start+0xec>
 800292c:	693b      	ldr	r3, [r7, #16]
 800292e:	2b05      	cmp	r3, #5
 8002930:	d002      	beq.n	8002938 <HAL_ADC_Start+0xec>
 8002932:	693b      	ldr	r3, [r7, #16]
 8002934:	2b09      	cmp	r3, #9
 8002936:	d114      	bne.n	8002962 <HAL_ADC_Start+0x116>
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	681b      	ldr	r3, [r3, #0]
 800293c:	68db      	ldr	r3, [r3, #12]
 800293e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002942:	2b00      	cmp	r3, #0
 8002944:	d007      	beq.n	8002956 <HAL_ADC_Start+0x10a>
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800294a:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800294e:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	681b      	ldr	r3, [r3, #0]
 800295a:	4618      	mov	r0, r3
 800295c:	f7ff fd90 	bl	8002480 <LL_ADC_REG_StartConversion>
 8002960:	e026      	b.n	80029b0 <HAL_ADC_Start+0x164>
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002966:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 800296a:	687b      	ldr	r3, [r7, #4]
 800296c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	681b      	ldr	r3, [r3, #0]
 8002972:	4a13      	ldr	r2, [pc, #76]	@ (80029c0 <HAL_ADC_Start+0x174>)
 8002974:	4293      	cmp	r3, r2
 8002976:	d002      	beq.n	800297e <HAL_ADC_Start+0x132>
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	681b      	ldr	r3, [r3, #0]
 800297c:	e001      	b.n	8002982 <HAL_ADC_Start+0x136>
 800297e:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002982:	60fb      	str	r3, [r7, #12]
 8002984:	68fb      	ldr	r3, [r7, #12]
 8002986:	68db      	ldr	r3, [r3, #12]
 8002988:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800298c:	2b00      	cmp	r3, #0
 800298e:	d00f      	beq.n	80029b0 <HAL_ADC_Start+0x164>
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002994:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002998:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	65da      	str	r2, [r3, #92]	@ 0x5c
 80029a0:	e006      	b.n	80029b0 <HAL_ADC_Start+0x164>
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	2200      	movs	r2, #0
 80029a6:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80029aa:	e001      	b.n	80029b0 <HAL_ADC_Start+0x164>
 80029ac:	2302      	movs	r3, #2
 80029ae:	75fb      	strb	r3, [r7, #23]
 80029b0:	7dfb      	ldrb	r3, [r7, #23]
 80029b2:	4618      	mov	r0, r3
 80029b4:	3718      	adds	r7, #24
 80029b6:	46bd      	mov	sp, r7
 80029b8:	bd80      	pop	{r7, pc}
 80029ba:	bf00      	nop
 80029bc:	50000300 	.word	0x50000300
 80029c0:	50000100 	.word	0x50000100

080029c4 <HAL_ADC_Stop>:
 80029c4:	b580      	push	{r7, lr}
 80029c6:	b084      	sub	sp, #16
 80029c8:	af00      	add	r7, sp, #0
 80029ca:	6078      	str	r0, [r7, #4]
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80029d2:	2b01      	cmp	r3, #1
 80029d4:	d101      	bne.n	80029da <HAL_ADC_Stop+0x16>
 80029d6:	2302      	movs	r3, #2
 80029d8:	e023      	b.n	8002a22 <HAL_ADC_Stop+0x5e>
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	2201      	movs	r2, #1
 80029de:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80029e2:	2103      	movs	r1, #3
 80029e4:	6878      	ldr	r0, [r7, #4]
 80029e6:	f000 fe61 	bl	80036ac <ADC_ConversionStop>
 80029ea:	4603      	mov	r3, r0
 80029ec:	73fb      	strb	r3, [r7, #15]
 80029ee:	7bfb      	ldrb	r3, [r7, #15]
 80029f0:	2b00      	cmp	r3, #0
 80029f2:	d111      	bne.n	8002a18 <HAL_ADC_Stop+0x54>
 80029f4:	6878      	ldr	r0, [r7, #4]
 80029f6:	f000 ff9b 	bl	8003930 <ADC_Disable>
 80029fa:	4603      	mov	r3, r0
 80029fc:	73fb      	strb	r3, [r7, #15]
 80029fe:	7bfb      	ldrb	r3, [r7, #15]
 8002a00:	2b00      	cmp	r3, #0
 8002a02:	d109      	bne.n	8002a18 <HAL_ADC_Stop+0x54>
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a08:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002a0c:	f023 0301 	bic.w	r3, r3, #1
 8002a10:	f043 0201 	orr.w	r2, r3, #1
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	2200      	movs	r2, #0
 8002a1c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002a20:	7bfb      	ldrb	r3, [r7, #15]
 8002a22:	4618      	mov	r0, r3
 8002a24:	3710      	adds	r7, #16
 8002a26:	46bd      	mov	sp, r7
 8002a28:	bd80      	pop	{r7, pc}
	...

08002a2c <HAL_ADC_PollForConversion>:
 8002a2c:	b580      	push	{r7, lr}
 8002a2e:	b088      	sub	sp, #32
 8002a30:	af00      	add	r7, sp, #0
 8002a32:	6078      	str	r0, [r7, #4]
 8002a34:	6039      	str	r1, [r7, #0]
 8002a36:	4867      	ldr	r0, [pc, #412]	@ (8002bd4 <HAL_ADC_PollForConversion+0x1a8>)
 8002a38:	f7ff fc6a 	bl	8002310 <LL_ADC_GetMultimode>
 8002a3c:	6178      	str	r0, [r7, #20]
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	699b      	ldr	r3, [r3, #24]
 8002a42:	2b08      	cmp	r3, #8
 8002a44:	d102      	bne.n	8002a4c <HAL_ADC_PollForConversion+0x20>
 8002a46:	2308      	movs	r3, #8
 8002a48:	61fb      	str	r3, [r7, #28]
 8002a4a:	e02a      	b.n	8002aa2 <HAL_ADC_PollForConversion+0x76>
 8002a4c:	697b      	ldr	r3, [r7, #20]
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	d005      	beq.n	8002a5e <HAL_ADC_PollForConversion+0x32>
 8002a52:	697b      	ldr	r3, [r7, #20]
 8002a54:	2b05      	cmp	r3, #5
 8002a56:	d002      	beq.n	8002a5e <HAL_ADC_PollForConversion+0x32>
 8002a58:	697b      	ldr	r3, [r7, #20]
 8002a5a:	2b09      	cmp	r3, #9
 8002a5c:	d111      	bne.n	8002a82 <HAL_ADC_PollForConversion+0x56>
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	68db      	ldr	r3, [r3, #12]
 8002a64:	f003 0301 	and.w	r3, r3, #1
 8002a68:	2b00      	cmp	r3, #0
 8002a6a:	d007      	beq.n	8002a7c <HAL_ADC_PollForConversion+0x50>
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a70:	f043 0220 	orr.w	r2, r3, #32
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002a78:	2301      	movs	r3, #1
 8002a7a:	e0a6      	b.n	8002bca <HAL_ADC_PollForConversion+0x19e>
 8002a7c:	2304      	movs	r3, #4
 8002a7e:	61fb      	str	r3, [r7, #28]
 8002a80:	e00f      	b.n	8002aa2 <HAL_ADC_PollForConversion+0x76>
 8002a82:	4854      	ldr	r0, [pc, #336]	@ (8002bd4 <HAL_ADC_PollForConversion+0x1a8>)
 8002a84:	f7ff fc52 	bl	800232c <LL_ADC_GetMultiDMATransfer>
 8002a88:	4603      	mov	r3, r0
 8002a8a:	2b00      	cmp	r3, #0
 8002a8c:	d007      	beq.n	8002a9e <HAL_ADC_PollForConversion+0x72>
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a92:	f043 0220 	orr.w	r2, r3, #32
 8002a96:	687b      	ldr	r3, [r7, #4]
 8002a98:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002a9a:	2301      	movs	r3, #1
 8002a9c:	e095      	b.n	8002bca <HAL_ADC_PollForConversion+0x19e>
 8002a9e:	2304      	movs	r3, #4
 8002aa0:	61fb      	str	r3, [r7, #28]
 8002aa2:	f7ff faa7 	bl	8001ff4 <HAL_GetTick>
 8002aa6:	6138      	str	r0, [r7, #16]
 8002aa8:	e021      	b.n	8002aee <HAL_ADC_PollForConversion+0xc2>
 8002aaa:	683b      	ldr	r3, [r7, #0]
 8002aac:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ab0:	d01d      	beq.n	8002aee <HAL_ADC_PollForConversion+0xc2>
 8002ab2:	f7ff fa9f 	bl	8001ff4 <HAL_GetTick>
 8002ab6:	4602      	mov	r2, r0
 8002ab8:	693b      	ldr	r3, [r7, #16]
 8002aba:	1ad3      	subs	r3, r2, r3
 8002abc:	683a      	ldr	r2, [r7, #0]
 8002abe:	429a      	cmp	r2, r3
 8002ac0:	d302      	bcc.n	8002ac8 <HAL_ADC_PollForConversion+0x9c>
 8002ac2:	683b      	ldr	r3, [r7, #0]
 8002ac4:	2b00      	cmp	r3, #0
 8002ac6:	d112      	bne.n	8002aee <HAL_ADC_PollForConversion+0xc2>
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	681a      	ldr	r2, [r3, #0]
 8002ace:	69fb      	ldr	r3, [r7, #28]
 8002ad0:	4013      	ands	r3, r2
 8002ad2:	2b00      	cmp	r3, #0
 8002ad4:	d10b      	bne.n	8002aee <HAL_ADC_PollForConversion+0xc2>
 8002ad6:	687b      	ldr	r3, [r7, #4]
 8002ad8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ada:	f043 0204 	orr.w	r2, r3, #4
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	2200      	movs	r2, #0
 8002ae6:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002aea:	2303      	movs	r3, #3
 8002aec:	e06d      	b.n	8002bca <HAL_ADC_PollForConversion+0x19e>
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	681a      	ldr	r2, [r3, #0]
 8002af4:	69fb      	ldr	r3, [r7, #28]
 8002af6:	4013      	ands	r3, r2
 8002af8:	2b00      	cmp	r3, #0
 8002afa:	d0d6      	beq.n	8002aaa <HAL_ADC_PollForConversion+0x7e>
 8002afc:	687b      	ldr	r3, [r7, #4]
 8002afe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b00:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	4618      	mov	r0, r3
 8002b0e:	f7ff fb71 	bl	80021f4 <LL_ADC_REG_IsTriggerSourceSWStart>
 8002b12:	4603      	mov	r3, r0
 8002b14:	2b00      	cmp	r3, #0
 8002b16:	d01c      	beq.n	8002b52 <HAL_ADC_PollForConversion+0x126>
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	7f5b      	ldrb	r3, [r3, #29]
 8002b1c:	2b00      	cmp	r3, #0
 8002b1e:	d118      	bne.n	8002b52 <HAL_ADC_PollForConversion+0x126>
 8002b20:	687b      	ldr	r3, [r7, #4]
 8002b22:	681b      	ldr	r3, [r3, #0]
 8002b24:	681b      	ldr	r3, [r3, #0]
 8002b26:	f003 0308 	and.w	r3, r3, #8
 8002b2a:	2b08      	cmp	r3, #8
 8002b2c:	d111      	bne.n	8002b52 <HAL_ADC_PollForConversion+0x126>
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b32:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b3e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	d105      	bne.n	8002b52 <HAL_ADC_PollForConversion+0x126>
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b4a:	f043 0201 	orr.w	r2, r3, #1
 8002b4e:	687b      	ldr	r3, [r7, #4]
 8002b50:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	681b      	ldr	r3, [r3, #0]
 8002b56:	4a20      	ldr	r2, [pc, #128]	@ (8002bd8 <HAL_ADC_PollForConversion+0x1ac>)
 8002b58:	4293      	cmp	r3, r2
 8002b5a:	d002      	beq.n	8002b62 <HAL_ADC_PollForConversion+0x136>
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	e001      	b.n	8002b66 <HAL_ADC_PollForConversion+0x13a>
 8002b62:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002b66:	687a      	ldr	r2, [r7, #4]
 8002b68:	6812      	ldr	r2, [r2, #0]
 8002b6a:	4293      	cmp	r3, r2
 8002b6c:	d008      	beq.n	8002b80 <HAL_ADC_PollForConversion+0x154>
 8002b6e:	697b      	ldr	r3, [r7, #20]
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	d005      	beq.n	8002b80 <HAL_ADC_PollForConversion+0x154>
 8002b74:	697b      	ldr	r3, [r7, #20]
 8002b76:	2b05      	cmp	r3, #5
 8002b78:	d002      	beq.n	8002b80 <HAL_ADC_PollForConversion+0x154>
 8002b7a:	697b      	ldr	r3, [r7, #20]
 8002b7c:	2b09      	cmp	r3, #9
 8002b7e:	d104      	bne.n	8002b8a <HAL_ADC_PollForConversion+0x15e>
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	68db      	ldr	r3, [r3, #12]
 8002b86:	61bb      	str	r3, [r7, #24]
 8002b88:	e00d      	b.n	8002ba6 <HAL_ADC_PollForConversion+0x17a>
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	4a12      	ldr	r2, [pc, #72]	@ (8002bd8 <HAL_ADC_PollForConversion+0x1ac>)
 8002b90:	4293      	cmp	r3, r2
 8002b92:	d002      	beq.n	8002b9a <HAL_ADC_PollForConversion+0x16e>
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	e001      	b.n	8002b9e <HAL_ADC_PollForConversion+0x172>
 8002b9a:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002b9e:	60fb      	str	r3, [r7, #12]
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	68db      	ldr	r3, [r3, #12]
 8002ba4:	61bb      	str	r3, [r7, #24]
 8002ba6:	69fb      	ldr	r3, [r7, #28]
 8002ba8:	2b08      	cmp	r3, #8
 8002baa:	d104      	bne.n	8002bb6 <HAL_ADC_PollForConversion+0x18a>
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	681b      	ldr	r3, [r3, #0]
 8002bb0:	2208      	movs	r2, #8
 8002bb2:	601a      	str	r2, [r3, #0]
 8002bb4:	e008      	b.n	8002bc8 <HAL_ADC_PollForConversion+0x19c>
 8002bb6:	69bb      	ldr	r3, [r7, #24]
 8002bb8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002bbc:	2b00      	cmp	r3, #0
 8002bbe:	d103      	bne.n	8002bc8 <HAL_ADC_PollForConversion+0x19c>
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	220c      	movs	r2, #12
 8002bc6:	601a      	str	r2, [r3, #0]
 8002bc8:	2300      	movs	r3, #0
 8002bca:	4618      	mov	r0, r3
 8002bcc:	3720      	adds	r7, #32
 8002bce:	46bd      	mov	sp, r7
 8002bd0:	bd80      	pop	{r7, pc}
 8002bd2:	bf00      	nop
 8002bd4:	50000300 	.word	0x50000300
 8002bd8:	50000100 	.word	0x50000100

08002bdc <HAL_ADC_Start_IT>:
 8002bdc:	b580      	push	{r7, lr}
 8002bde:	b086      	sub	sp, #24
 8002be0:	af00      	add	r7, sp, #0
 8002be2:	6078      	str	r0, [r7, #4]
 8002be4:	4893      	ldr	r0, [pc, #588]	@ (8002e34 <HAL_ADC_Start_IT+0x258>)
 8002be6:	f7ff fb93 	bl	8002310 <LL_ADC_GetMultimode>
 8002bea:	6138      	str	r0, [r7, #16]
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	4618      	mov	r0, r3
 8002bf2:	f7ff fc6d 	bl	80024d0 <LL_ADC_REG_IsConversionOngoing>
 8002bf6:	4603      	mov	r3, r0
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	f040 8113 	bne.w	8002e24 <HAL_ADC_Start_IT+0x248>
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002c04:	2b01      	cmp	r3, #1
 8002c06:	d101      	bne.n	8002c0c <HAL_ADC_Start_IT+0x30>
 8002c08:	2302      	movs	r3, #2
 8002c0a:	e10e      	b.n	8002e2a <HAL_ADC_Start_IT+0x24e>
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	2201      	movs	r2, #1
 8002c10:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002c14:	6878      	ldr	r0, [r7, #4]
 8002c16:	f000 fe05 	bl	8003824 <ADC_Enable>
 8002c1a:	4603      	mov	r3, r0
 8002c1c:	75fb      	strb	r3, [r7, #23]
 8002c1e:	7dfb      	ldrb	r3, [r7, #23]
 8002c20:	2b00      	cmp	r3, #0
 8002c22:	f040 80fa 	bne.w	8002e1a <HAL_ADC_Start_IT+0x23e>
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c2a:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8002c2e:	f023 0301 	bic.w	r3, r3, #1
 8002c32:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	681b      	ldr	r3, [r3, #0]
 8002c3e:	4a7e      	ldr	r2, [pc, #504]	@ (8002e38 <HAL_ADC_Start_IT+0x25c>)
 8002c40:	4293      	cmp	r3, r2
 8002c42:	d002      	beq.n	8002c4a <HAL_ADC_Start_IT+0x6e>
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	e001      	b.n	8002c4e <HAL_ADC_Start_IT+0x72>
 8002c4a:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002c4e:	687a      	ldr	r2, [r7, #4]
 8002c50:	6812      	ldr	r2, [r2, #0]
 8002c52:	4293      	cmp	r3, r2
 8002c54:	d002      	beq.n	8002c5c <HAL_ADC_Start_IT+0x80>
 8002c56:	693b      	ldr	r3, [r7, #16]
 8002c58:	2b00      	cmp	r3, #0
 8002c5a:	d105      	bne.n	8002c68 <HAL_ADC_Start_IT+0x8c>
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c60:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c6c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002c70:	2b00      	cmp	r3, #0
 8002c72:	d006      	beq.n	8002c82 <HAL_ADC_Start_IT+0xa6>
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002c78:	f023 0206 	bic.w	r2, r3, #6
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	661a      	str	r2, [r3, #96]	@ 0x60
 8002c80:	e002      	b.n	8002c88 <HAL_ADC_Start_IT+0xac>
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	2200      	movs	r2, #0
 8002c86:	661a      	str	r2, [r3, #96]	@ 0x60
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	221c      	movs	r2, #28
 8002c8e:	601a      	str	r2, [r3, #0]
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	2200      	movs	r2, #0
 8002c94:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	685a      	ldr	r2, [r3, #4]
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	681b      	ldr	r3, [r3, #0]
 8002ca2:	f022 021c 	bic.w	r2, r2, #28
 8002ca6:	605a      	str	r2, [r3, #4]
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	699b      	ldr	r3, [r3, #24]
 8002cac:	2b08      	cmp	r3, #8
 8002cae:	d108      	bne.n	8002cc2 <HAL_ADC_Start_IT+0xe6>
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	685a      	ldr	r2, [r3, #4]
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	f042 0208 	orr.w	r2, r2, #8
 8002cbe:	605a      	str	r2, [r3, #4]
 8002cc0:	e008      	b.n	8002cd4 <HAL_ADC_Start_IT+0xf8>
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	685a      	ldr	r2, [r3, #4]
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	f042 0204 	orr.w	r2, r2, #4
 8002cd0:	605a      	str	r2, [r3, #4]
 8002cd2:	bf00      	nop
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002cd8:	2b00      	cmp	r3, #0
 8002cda:	d107      	bne.n	8002cec <HAL_ADC_Start_IT+0x110>
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	685a      	ldr	r2, [r3, #4]
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	f042 0210 	orr.w	r2, r2, #16
 8002cea:	605a      	str	r2, [r3, #4]
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	4a51      	ldr	r2, [pc, #324]	@ (8002e38 <HAL_ADC_Start_IT+0x25c>)
 8002cf2:	4293      	cmp	r3, r2
 8002cf4:	d002      	beq.n	8002cfc <HAL_ADC_Start_IT+0x120>
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	e001      	b.n	8002d00 <HAL_ADC_Start_IT+0x124>
 8002cfc:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002d00:	687a      	ldr	r2, [r7, #4]
 8002d02:	6812      	ldr	r2, [r2, #0]
 8002d04:	4293      	cmp	r3, r2
 8002d06:	d008      	beq.n	8002d1a <HAL_ADC_Start_IT+0x13e>
 8002d08:	693b      	ldr	r3, [r7, #16]
 8002d0a:	2b00      	cmp	r3, #0
 8002d0c:	d005      	beq.n	8002d1a <HAL_ADC_Start_IT+0x13e>
 8002d0e:	693b      	ldr	r3, [r7, #16]
 8002d10:	2b05      	cmp	r3, #5
 8002d12:	d002      	beq.n	8002d1a <HAL_ADC_Start_IT+0x13e>
 8002d14:	693b      	ldr	r3, [r7, #16]
 8002d16:	2b09      	cmp	r3, #9
 8002d18:	d13a      	bne.n	8002d90 <HAL_ADC_Start_IT+0x1b4>
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	681b      	ldr	r3, [r3, #0]
 8002d1e:	68db      	ldr	r3, [r3, #12]
 8002d20:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d24:	2b00      	cmp	r3, #0
 8002d26:	d02d      	beq.n	8002d84 <HAL_ADC_Start_IT+0x1a8>
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d2c:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002d30:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	699b      	ldr	r3, [r3, #24]
 8002d3c:	2b08      	cmp	r3, #8
 8002d3e:	d110      	bne.n	8002d62 <HAL_ADC_Start_IT+0x186>
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	685a      	ldr	r2, [r3, #4]
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	f022 0220 	bic.w	r2, r2, #32
 8002d4e:	605a      	str	r2, [r3, #4]
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	685a      	ldr	r2, [r3, #4]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	681b      	ldr	r3, [r3, #0]
 8002d5a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002d5e:	605a      	str	r2, [r3, #4]
 8002d60:	e010      	b.n	8002d84 <HAL_ADC_Start_IT+0x1a8>
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	685a      	ldr	r2, [r3, #4]
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	681b      	ldr	r3, [r3, #0]
 8002d6c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002d70:	605a      	str	r2, [r3, #4]
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	681b      	ldr	r3, [r3, #0]
 8002d76:	685a      	ldr	r2, [r3, #4]
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	f042 0220 	orr.w	r2, r2, #32
 8002d80:	605a      	str	r2, [r3, #4]
 8002d82:	bf00      	nop
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	4618      	mov	r0, r3
 8002d8a:	f7ff fb79 	bl	8002480 <LL_ADC_REG_StartConversion>
 8002d8e:	e04b      	b.n	8002e28 <HAL_ADC_Start_IT+0x24c>
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d94:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	4a25      	ldr	r2, [pc, #148]	@ (8002e38 <HAL_ADC_Start_IT+0x25c>)
 8002da2:	4293      	cmp	r3, r2
 8002da4:	d002      	beq.n	8002dac <HAL_ADC_Start_IT+0x1d0>
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	e001      	b.n	8002db0 <HAL_ADC_Start_IT+0x1d4>
 8002dac:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002db0:	60fb      	str	r3, [r7, #12]
 8002db2:	68fb      	ldr	r3, [r7, #12]
 8002db4:	68db      	ldr	r3, [r3, #12]
 8002db6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002dba:	2b00      	cmp	r3, #0
 8002dbc:	d034      	beq.n	8002e28 <HAL_ADC_Start_IT+0x24c>
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002dc2:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002dc6:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002dce:	687b      	ldr	r3, [r7, #4]
 8002dd0:	699b      	ldr	r3, [r3, #24]
 8002dd2:	2b08      	cmp	r3, #8
 8002dd4:	d110      	bne.n	8002df8 <HAL_ADC_Start_IT+0x21c>
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	685a      	ldr	r2, [r3, #4]
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	f022 0220 	bic.w	r2, r2, #32
 8002de4:	605a      	str	r2, [r3, #4]
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	681b      	ldr	r3, [r3, #0]
 8002dea:	685a      	ldr	r2, [r3, #4]
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002df4:	605a      	str	r2, [r3, #4]
 8002df6:	e017      	b.n	8002e28 <HAL_ADC_Start_IT+0x24c>
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	685a      	ldr	r2, [r3, #4]
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002e06:	605a      	str	r2, [r3, #4]
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	685a      	ldr	r2, [r3, #4]
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	f042 0220 	orr.w	r2, r2, #32
 8002e16:	605a      	str	r2, [r3, #4]
 8002e18:	e006      	b.n	8002e28 <HAL_ADC_Start_IT+0x24c>
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	2200      	movs	r2, #0
 8002e1e:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002e22:	e001      	b.n	8002e28 <HAL_ADC_Start_IT+0x24c>
 8002e24:	2302      	movs	r3, #2
 8002e26:	75fb      	strb	r3, [r7, #23]
 8002e28:	7dfb      	ldrb	r3, [r7, #23]
 8002e2a:	4618      	mov	r0, r3
 8002e2c:	3718      	adds	r7, #24
 8002e2e:	46bd      	mov	sp, r7
 8002e30:	bd80      	pop	{r7, pc}
 8002e32:	bf00      	nop
 8002e34:	50000300 	.word	0x50000300
 8002e38:	50000100 	.word	0x50000100

08002e3c <HAL_ADC_Stop_IT>:
 8002e3c:	b580      	push	{r7, lr}
 8002e3e:	b084      	sub	sp, #16
 8002e40:	af00      	add	r7, sp, #0
 8002e42:	6078      	str	r0, [r7, #4]
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002e4a:	2b01      	cmp	r3, #1
 8002e4c:	d101      	bne.n	8002e52 <HAL_ADC_Stop_IT+0x16>
 8002e4e:	2302      	movs	r3, #2
 8002e50:	e02b      	b.n	8002eaa <HAL_ADC_Stop_IT+0x6e>
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	2201      	movs	r2, #1
 8002e56:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002e5a:	2103      	movs	r1, #3
 8002e5c:	6878      	ldr	r0, [r7, #4]
 8002e5e:	f000 fc25 	bl	80036ac <ADC_ConversionStop>
 8002e62:	4603      	mov	r3, r0
 8002e64:	73fb      	strb	r3, [r7, #15]
 8002e66:	7bfb      	ldrb	r3, [r7, #15]
 8002e68:	2b00      	cmp	r3, #0
 8002e6a:	d119      	bne.n	8002ea0 <HAL_ADC_Stop_IT+0x64>
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	685a      	ldr	r2, [r3, #4]
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	f022 021c 	bic.w	r2, r2, #28
 8002e7a:	605a      	str	r2, [r3, #4]
 8002e7c:	6878      	ldr	r0, [r7, #4]
 8002e7e:	f000 fd57 	bl	8003930 <ADC_Disable>
 8002e82:	4603      	mov	r3, r0
 8002e84:	73fb      	strb	r3, [r7, #15]
 8002e86:	7bfb      	ldrb	r3, [r7, #15]
 8002e88:	2b00      	cmp	r3, #0
 8002e8a:	d109      	bne.n	8002ea0 <HAL_ADC_Stop_IT+0x64>
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002e90:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002e94:	f023 0301 	bic.w	r3, r3, #1
 8002e98:	f043 0201 	orr.w	r2, r3, #1
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	2200      	movs	r2, #0
 8002ea4:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002ea8:	7bfb      	ldrb	r3, [r7, #15]
 8002eaa:	4618      	mov	r0, r3
 8002eac:	3710      	adds	r7, #16
 8002eae:	46bd      	mov	sp, r7
 8002eb0:	bd80      	pop	{r7, pc}

08002eb2 <HAL_ADC_GetValue>:
 8002eb2:	b480      	push	{r7}
 8002eb4:	b083      	sub	sp, #12
 8002eb6:	af00      	add	r7, sp, #0
 8002eb8:	6078      	str	r0, [r7, #4]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	681b      	ldr	r3, [r3, #0]
 8002ebe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ec0:	4618      	mov	r0, r3
 8002ec2:	370c      	adds	r7, #12
 8002ec4:	46bd      	mov	sp, r7
 8002ec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eca:	4770      	bx	lr

08002ecc <HAL_ADC_ConfigChannel>:
 8002ecc:	b580      	push	{r7, lr}
 8002ece:	b0b6      	sub	sp, #216	@ 0xd8
 8002ed0:	af00      	add	r7, sp, #0
 8002ed2:	6078      	str	r0, [r7, #4]
 8002ed4:	6039      	str	r1, [r7, #0]
 8002ed6:	2300      	movs	r3, #0
 8002ed8:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8002edc:	2300      	movs	r3, #0
 8002ede:	60fb      	str	r3, [r7, #12]
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002ee6:	2b01      	cmp	r3, #1
 8002ee8:	d101      	bne.n	8002eee <HAL_ADC_ConfigChannel+0x22>
 8002eea:	2302      	movs	r3, #2
 8002eec:	e3c8      	b.n	8003680 <HAL_ADC_ConfigChannel+0x7b4>
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	2201      	movs	r2, #1
 8002ef2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	4618      	mov	r0, r3
 8002efc:	f7ff fae8 	bl	80024d0 <LL_ADC_REG_IsConversionOngoing>
 8002f00:	4603      	mov	r3, r0
 8002f02:	2b00      	cmp	r3, #0
 8002f04:	f040 83ad 	bne.w	8003662 <HAL_ADC_ConfigChannel+0x796>
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	6818      	ldr	r0, [r3, #0]
 8002f0c:	683b      	ldr	r3, [r7, #0]
 8002f0e:	6859      	ldr	r1, [r3, #4]
 8002f10:	683b      	ldr	r3, [r7, #0]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	461a      	mov	r2, r3
 8002f16:	f7ff f980 	bl	800221a <LL_ADC_REG_SetSequencerRanks>
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	4618      	mov	r0, r3
 8002f20:	f7ff fad6 	bl	80024d0 <LL_ADC_REG_IsConversionOngoing>
 8002f24:	f8c7 00d0 	str.w	r0, [r7, #208]	@ 0xd0
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	4618      	mov	r0, r3
 8002f2e:	f7ff faf6 	bl	800251e <LL_ADC_INJ_IsConversionOngoing>
 8002f32:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8002f36:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	f040 81d9 	bne.w	80032f2 <HAL_ADC_ConfigChannel+0x426>
 8002f40:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8002f44:	2b00      	cmp	r3, #0
 8002f46:	f040 81d4 	bne.w	80032f2 <HAL_ADC_ConfigChannel+0x426>
 8002f4a:	683b      	ldr	r3, [r7, #0]
 8002f4c:	689b      	ldr	r3, [r3, #8]
 8002f4e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8002f52:	d10f      	bne.n	8002f74 <HAL_ADC_ConfigChannel+0xa8>
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	6818      	ldr	r0, [r3, #0]
 8002f58:	683b      	ldr	r3, [r7, #0]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	2200      	movs	r2, #0
 8002f5e:	4619      	mov	r1, r3
 8002f60:	f7ff f987 	bl	8002272 <LL_ADC_SetChannelSamplingTime>
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8002f6c:	4618      	mov	r0, r3
 8002f6e:	f7ff f92e 	bl	80021ce <LL_ADC_SetSamplingTimeCommonConfig>
 8002f72:	e00e      	b.n	8002f92 <HAL_ADC_ConfigChannel+0xc6>
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	6818      	ldr	r0, [r3, #0]
 8002f78:	683b      	ldr	r3, [r7, #0]
 8002f7a:	6819      	ldr	r1, [r3, #0]
 8002f7c:	683b      	ldr	r3, [r7, #0]
 8002f7e:	689b      	ldr	r3, [r3, #8]
 8002f80:	461a      	mov	r2, r3
 8002f82:	f7ff f976 	bl	8002272 <LL_ADC_SetChannelSamplingTime>
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	681b      	ldr	r3, [r3, #0]
 8002f8a:	2100      	movs	r1, #0
 8002f8c:	4618      	mov	r0, r3
 8002f8e:	f7ff f91e 	bl	80021ce <LL_ADC_SetSamplingTimeCommonConfig>
 8002f92:	683b      	ldr	r3, [r7, #0]
 8002f94:	695a      	ldr	r2, [r3, #20]
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	68db      	ldr	r3, [r3, #12]
 8002f9c:	08db      	lsrs	r3, r3, #3
 8002f9e:	f003 0303 	and.w	r3, r3, #3
 8002fa2:	005b      	lsls	r3, r3, #1
 8002fa4:	fa02 f303 	lsl.w	r3, r2, r3
 8002fa8:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8002fac:	683b      	ldr	r3, [r7, #0]
 8002fae:	691b      	ldr	r3, [r3, #16]
 8002fb0:	2b04      	cmp	r3, #4
 8002fb2:	d022      	beq.n	8002ffa <HAL_ADC_ConfigChannel+0x12e>
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	6818      	ldr	r0, [r3, #0]
 8002fb8:	683b      	ldr	r3, [r7, #0]
 8002fba:	6919      	ldr	r1, [r3, #16]
 8002fbc:	683b      	ldr	r3, [r7, #0]
 8002fbe:	681a      	ldr	r2, [r3, #0]
 8002fc0:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8002fc4:	f7ff f878 	bl	80020b8 <LL_ADC_SetOffset>
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	6818      	ldr	r0, [r3, #0]
 8002fcc:	683b      	ldr	r3, [r7, #0]
 8002fce:	6919      	ldr	r1, [r3, #16]
 8002fd0:	683b      	ldr	r3, [r7, #0]
 8002fd2:	699b      	ldr	r3, [r3, #24]
 8002fd4:	461a      	mov	r2, r3
 8002fd6:	f7ff f8c4 	bl	8002162 <LL_ADC_SetOffsetSign>
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	6818      	ldr	r0, [r3, #0]
 8002fde:	683b      	ldr	r3, [r7, #0]
 8002fe0:	6919      	ldr	r1, [r3, #16]
 8002fe2:	683b      	ldr	r3, [r7, #0]
 8002fe4:	7f1b      	ldrb	r3, [r3, #28]
 8002fe6:	2b01      	cmp	r3, #1
 8002fe8:	d102      	bne.n	8002ff0 <HAL_ADC_ConfigChannel+0x124>
 8002fea:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8002fee:	e000      	b.n	8002ff2 <HAL_ADC_ConfigChannel+0x126>
 8002ff0:	2300      	movs	r3, #0
 8002ff2:	461a      	mov	r2, r3
 8002ff4:	f7ff f8d0 	bl	8002198 <LL_ADC_SetOffsetSaturation>
 8002ff8:	e17b      	b.n	80032f2 <HAL_ADC_ConfigChannel+0x426>
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	681b      	ldr	r3, [r3, #0]
 8002ffe:	2100      	movs	r1, #0
 8003000:	4618      	mov	r0, r3
 8003002:	f7ff f87d 	bl	8002100 <LL_ADC_GetOffsetChannel>
 8003006:	4603      	mov	r3, r0
 8003008:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800300c:	2b00      	cmp	r3, #0
 800300e:	d10a      	bne.n	8003026 <HAL_ADC_ConfigChannel+0x15a>
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	2100      	movs	r1, #0
 8003016:	4618      	mov	r0, r3
 8003018:	f7ff f872 	bl	8002100 <LL_ADC_GetOffsetChannel>
 800301c:	4603      	mov	r3, r0
 800301e:	0e9b      	lsrs	r3, r3, #26
 8003020:	f003 021f 	and.w	r2, r3, #31
 8003024:	e01e      	b.n	8003064 <HAL_ADC_ConfigChannel+0x198>
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	681b      	ldr	r3, [r3, #0]
 800302a:	2100      	movs	r1, #0
 800302c:	4618      	mov	r0, r3
 800302e:	f7ff f867 	bl	8002100 <LL_ADC_GetOffsetChannel>
 8003032:	4603      	mov	r3, r0
 8003034:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8003038:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800303c:	fa93 f3a3 	rbit	r3, r3
 8003040:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003044:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8003048:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800304c:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8003050:	2b00      	cmp	r3, #0
 8003052:	d101      	bne.n	8003058 <HAL_ADC_ConfigChannel+0x18c>
 8003054:	2320      	movs	r3, #32
 8003056:	e004      	b.n	8003062 <HAL_ADC_ConfigChannel+0x196>
 8003058:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800305c:	fab3 f383 	clz	r3, r3
 8003060:	b2db      	uxtb	r3, r3
 8003062:	461a      	mov	r2, r3
 8003064:	683b      	ldr	r3, [r7, #0]
 8003066:	681b      	ldr	r3, [r3, #0]
 8003068:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800306c:	2b00      	cmp	r3, #0
 800306e:	d105      	bne.n	800307c <HAL_ADC_ConfigChannel+0x1b0>
 8003070:	683b      	ldr	r3, [r7, #0]
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	0e9b      	lsrs	r3, r3, #26
 8003076:	f003 031f 	and.w	r3, r3, #31
 800307a:	e018      	b.n	80030ae <HAL_ADC_ConfigChannel+0x1e2>
 800307c:	683b      	ldr	r3, [r7, #0]
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003084:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8003088:	fa93 f3a3 	rbit	r3, r3
 800308c:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003090:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8003094:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003098:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800309c:	2b00      	cmp	r3, #0
 800309e:	d101      	bne.n	80030a4 <HAL_ADC_ConfigChannel+0x1d8>
 80030a0:	2320      	movs	r3, #32
 80030a2:	e004      	b.n	80030ae <HAL_ADC_ConfigChannel+0x1e2>
 80030a4:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 80030a8:	fab3 f383 	clz	r3, r3
 80030ac:	b2db      	uxtb	r3, r3
 80030ae:	429a      	cmp	r2, r3
 80030b0:	d106      	bne.n	80030c0 <HAL_ADC_ConfigChannel+0x1f4>
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	2200      	movs	r2, #0
 80030b8:	2100      	movs	r1, #0
 80030ba:	4618      	mov	r0, r3
 80030bc:	f7ff f836 	bl	800212c <LL_ADC_SetOffsetState>
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	2101      	movs	r1, #1
 80030c6:	4618      	mov	r0, r3
 80030c8:	f7ff f81a 	bl	8002100 <LL_ADC_GetOffsetChannel>
 80030cc:	4603      	mov	r3, r0
 80030ce:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80030d2:	2b00      	cmp	r3, #0
 80030d4:	d10a      	bne.n	80030ec <HAL_ADC_ConfigChannel+0x220>
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	2101      	movs	r1, #1
 80030dc:	4618      	mov	r0, r3
 80030de:	f7ff f80f 	bl	8002100 <LL_ADC_GetOffsetChannel>
 80030e2:	4603      	mov	r3, r0
 80030e4:	0e9b      	lsrs	r3, r3, #26
 80030e6:	f003 021f 	and.w	r2, r3, #31
 80030ea:	e01e      	b.n	800312a <HAL_ADC_ConfigChannel+0x25e>
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	2101      	movs	r1, #1
 80030f2:	4618      	mov	r0, r3
 80030f4:	f7ff f804 	bl	8002100 <LL_ADC_GetOffsetChannel>
 80030f8:	4603      	mov	r3, r0
 80030fa:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80030fe:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8003102:	fa93 f3a3 	rbit	r3, r3
 8003106:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800310a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800310e:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003112:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8003116:	2b00      	cmp	r3, #0
 8003118:	d101      	bne.n	800311e <HAL_ADC_ConfigChannel+0x252>
 800311a:	2320      	movs	r3, #32
 800311c:	e004      	b.n	8003128 <HAL_ADC_ConfigChannel+0x25c>
 800311e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8003122:	fab3 f383 	clz	r3, r3
 8003126:	b2db      	uxtb	r3, r3
 8003128:	461a      	mov	r2, r3
 800312a:	683b      	ldr	r3, [r7, #0]
 800312c:	681b      	ldr	r3, [r3, #0]
 800312e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003132:	2b00      	cmp	r3, #0
 8003134:	d105      	bne.n	8003142 <HAL_ADC_ConfigChannel+0x276>
 8003136:	683b      	ldr	r3, [r7, #0]
 8003138:	681b      	ldr	r3, [r3, #0]
 800313a:	0e9b      	lsrs	r3, r3, #26
 800313c:	f003 031f 	and.w	r3, r3, #31
 8003140:	e018      	b.n	8003174 <HAL_ADC_ConfigChannel+0x2a8>
 8003142:	683b      	ldr	r3, [r7, #0]
 8003144:	681b      	ldr	r3, [r3, #0]
 8003146:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800314a:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800314e:	fa93 f3a3 	rbit	r3, r3
 8003152:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003156:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800315a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800315e:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8003162:	2b00      	cmp	r3, #0
 8003164:	d101      	bne.n	800316a <HAL_ADC_ConfigChannel+0x29e>
 8003166:	2320      	movs	r3, #32
 8003168:	e004      	b.n	8003174 <HAL_ADC_ConfigChannel+0x2a8>
 800316a:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800316e:	fab3 f383 	clz	r3, r3
 8003172:	b2db      	uxtb	r3, r3
 8003174:	429a      	cmp	r2, r3
 8003176:	d106      	bne.n	8003186 <HAL_ADC_ConfigChannel+0x2ba>
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	2200      	movs	r2, #0
 800317e:	2101      	movs	r1, #1
 8003180:	4618      	mov	r0, r3
 8003182:	f7fe ffd3 	bl	800212c <LL_ADC_SetOffsetState>
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	681b      	ldr	r3, [r3, #0]
 800318a:	2102      	movs	r1, #2
 800318c:	4618      	mov	r0, r3
 800318e:	f7fe ffb7 	bl	8002100 <LL_ADC_GetOffsetChannel>
 8003192:	4603      	mov	r3, r0
 8003194:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003198:	2b00      	cmp	r3, #0
 800319a:	d10a      	bne.n	80031b2 <HAL_ADC_ConfigChannel+0x2e6>
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	2102      	movs	r1, #2
 80031a2:	4618      	mov	r0, r3
 80031a4:	f7fe ffac 	bl	8002100 <LL_ADC_GetOffsetChannel>
 80031a8:	4603      	mov	r3, r0
 80031aa:	0e9b      	lsrs	r3, r3, #26
 80031ac:	f003 021f 	and.w	r2, r3, #31
 80031b0:	e01e      	b.n	80031f0 <HAL_ADC_ConfigChannel+0x324>
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	681b      	ldr	r3, [r3, #0]
 80031b6:	2102      	movs	r1, #2
 80031b8:	4618      	mov	r0, r3
 80031ba:	f7fe ffa1 	bl	8002100 <LL_ADC_GetOffsetChannel>
 80031be:	4603      	mov	r3, r0
 80031c0:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80031c4:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80031c8:	fa93 f3a3 	rbit	r3, r3
 80031cc:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80031d0:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80031d4:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80031d8:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 80031dc:	2b00      	cmp	r3, #0
 80031de:	d101      	bne.n	80031e4 <HAL_ADC_ConfigChannel+0x318>
 80031e0:	2320      	movs	r3, #32
 80031e2:	e004      	b.n	80031ee <HAL_ADC_ConfigChannel+0x322>
 80031e4:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 80031e8:	fab3 f383 	clz	r3, r3
 80031ec:	b2db      	uxtb	r3, r3
 80031ee:	461a      	mov	r2, r3
 80031f0:	683b      	ldr	r3, [r7, #0]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80031f8:	2b00      	cmp	r3, #0
 80031fa:	d105      	bne.n	8003208 <HAL_ADC_ConfigChannel+0x33c>
 80031fc:	683b      	ldr	r3, [r7, #0]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	0e9b      	lsrs	r3, r3, #26
 8003202:	f003 031f 	and.w	r3, r3, #31
 8003206:	e016      	b.n	8003236 <HAL_ADC_ConfigChannel+0x36a>
 8003208:	683b      	ldr	r3, [r7, #0]
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003210:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8003214:	fa93 f3a3 	rbit	r3, r3
 8003218:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800321a:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800321c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003220:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8003224:	2b00      	cmp	r3, #0
 8003226:	d101      	bne.n	800322c <HAL_ADC_ConfigChannel+0x360>
 8003228:	2320      	movs	r3, #32
 800322a:	e004      	b.n	8003236 <HAL_ADC_ConfigChannel+0x36a>
 800322c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8003230:	fab3 f383 	clz	r3, r3
 8003234:	b2db      	uxtb	r3, r3
 8003236:	429a      	cmp	r2, r3
 8003238:	d106      	bne.n	8003248 <HAL_ADC_ConfigChannel+0x37c>
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	681b      	ldr	r3, [r3, #0]
 800323e:	2200      	movs	r2, #0
 8003240:	2102      	movs	r1, #2
 8003242:	4618      	mov	r0, r3
 8003244:	f7fe ff72 	bl	800212c <LL_ADC_SetOffsetState>
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	681b      	ldr	r3, [r3, #0]
 800324c:	2103      	movs	r1, #3
 800324e:	4618      	mov	r0, r3
 8003250:	f7fe ff56 	bl	8002100 <LL_ADC_GetOffsetChannel>
 8003254:	4603      	mov	r3, r0
 8003256:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800325a:	2b00      	cmp	r3, #0
 800325c:	d10a      	bne.n	8003274 <HAL_ADC_ConfigChannel+0x3a8>
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	2103      	movs	r1, #3
 8003264:	4618      	mov	r0, r3
 8003266:	f7fe ff4b 	bl	8002100 <LL_ADC_GetOffsetChannel>
 800326a:	4603      	mov	r3, r0
 800326c:	0e9b      	lsrs	r3, r3, #26
 800326e:	f003 021f 	and.w	r2, r3, #31
 8003272:	e017      	b.n	80032a4 <HAL_ADC_ConfigChannel+0x3d8>
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	2103      	movs	r1, #3
 800327a:	4618      	mov	r0, r3
 800327c:	f7fe ff40 	bl	8002100 <LL_ADC_GetOffsetChannel>
 8003280:	4603      	mov	r3, r0
 8003282:	677b      	str	r3, [r7, #116]	@ 0x74
 8003284:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003286:	fa93 f3a3 	rbit	r3, r3
 800328a:	673b      	str	r3, [r7, #112]	@ 0x70
 800328c:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800328e:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003290:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003292:	2b00      	cmp	r3, #0
 8003294:	d101      	bne.n	800329a <HAL_ADC_ConfigChannel+0x3ce>
 8003296:	2320      	movs	r3, #32
 8003298:	e003      	b.n	80032a2 <HAL_ADC_ConfigChannel+0x3d6>
 800329a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800329c:	fab3 f383 	clz	r3, r3
 80032a0:	b2db      	uxtb	r3, r3
 80032a2:	461a      	mov	r2, r3
 80032a4:	683b      	ldr	r3, [r7, #0]
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80032ac:	2b00      	cmp	r3, #0
 80032ae:	d105      	bne.n	80032bc <HAL_ADC_ConfigChannel+0x3f0>
 80032b0:	683b      	ldr	r3, [r7, #0]
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	0e9b      	lsrs	r3, r3, #26
 80032b6:	f003 031f 	and.w	r3, r3, #31
 80032ba:	e011      	b.n	80032e0 <HAL_ADC_ConfigChannel+0x414>
 80032bc:	683b      	ldr	r3, [r7, #0]
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80032c2:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80032c4:	fa93 f3a3 	rbit	r3, r3
 80032c8:	667b      	str	r3, [r7, #100]	@ 0x64
 80032ca:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80032cc:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80032ce:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80032d0:	2b00      	cmp	r3, #0
 80032d2:	d101      	bne.n	80032d8 <HAL_ADC_ConfigChannel+0x40c>
 80032d4:	2320      	movs	r3, #32
 80032d6:	e003      	b.n	80032e0 <HAL_ADC_ConfigChannel+0x414>
 80032d8:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80032da:	fab3 f383 	clz	r3, r3
 80032de:	b2db      	uxtb	r3, r3
 80032e0:	429a      	cmp	r2, r3
 80032e2:	d106      	bne.n	80032f2 <HAL_ADC_ConfigChannel+0x426>
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	2200      	movs	r2, #0
 80032ea:	2103      	movs	r1, #3
 80032ec:	4618      	mov	r0, r3
 80032ee:	f7fe ff1d 	bl	800212c <LL_ADC_SetOffsetState>
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	4618      	mov	r0, r3
 80032f8:	f7ff f89c 	bl	8002434 <LL_ADC_IsEnabled>
 80032fc:	4603      	mov	r3, r0
 80032fe:	2b00      	cmp	r3, #0
 8003300:	f040 8140 	bne.w	8003584 <HAL_ADC_ConfigChannel+0x6b8>
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	6818      	ldr	r0, [r3, #0]
 8003308:	683b      	ldr	r3, [r7, #0]
 800330a:	6819      	ldr	r1, [r3, #0]
 800330c:	683b      	ldr	r3, [r7, #0]
 800330e:	68db      	ldr	r3, [r3, #12]
 8003310:	461a      	mov	r2, r3
 8003312:	f7fe ffd9 	bl	80022c8 <LL_ADC_SetChannelSingleDiff>
 8003316:	683b      	ldr	r3, [r7, #0]
 8003318:	68db      	ldr	r3, [r3, #12]
 800331a:	4a8f      	ldr	r2, [pc, #572]	@ (8003558 <HAL_ADC_ConfigChannel+0x68c>)
 800331c:	4293      	cmp	r3, r2
 800331e:	f040 8131 	bne.w	8003584 <HAL_ADC_ConfigChannel+0x6b8>
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	6818      	ldr	r0, [r3, #0]
 8003326:	683b      	ldr	r3, [r7, #0]
 8003328:	681b      	ldr	r3, [r3, #0]
 800332a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800332e:	2b00      	cmp	r3, #0
 8003330:	d10b      	bne.n	800334a <HAL_ADC_ConfigChannel+0x47e>
 8003332:	683b      	ldr	r3, [r7, #0]
 8003334:	681b      	ldr	r3, [r3, #0]
 8003336:	0e9b      	lsrs	r3, r3, #26
 8003338:	3301      	adds	r3, #1
 800333a:	f003 031f 	and.w	r3, r3, #31
 800333e:	2b09      	cmp	r3, #9
 8003340:	bf94      	ite	ls
 8003342:	2301      	movls	r3, #1
 8003344:	2300      	movhi	r3, #0
 8003346:	b2db      	uxtb	r3, r3
 8003348:	e019      	b.n	800337e <HAL_ADC_ConfigChannel+0x4b2>
 800334a:	683b      	ldr	r3, [r7, #0]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003350:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003352:	fa93 f3a3 	rbit	r3, r3
 8003356:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003358:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800335a:	663b      	str	r3, [r7, #96]	@ 0x60
 800335c:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800335e:	2b00      	cmp	r3, #0
 8003360:	d101      	bne.n	8003366 <HAL_ADC_ConfigChannel+0x49a>
 8003362:	2320      	movs	r3, #32
 8003364:	e003      	b.n	800336e <HAL_ADC_ConfigChannel+0x4a2>
 8003366:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003368:	fab3 f383 	clz	r3, r3
 800336c:	b2db      	uxtb	r3, r3
 800336e:	3301      	adds	r3, #1
 8003370:	f003 031f 	and.w	r3, r3, #31
 8003374:	2b09      	cmp	r3, #9
 8003376:	bf94      	ite	ls
 8003378:	2301      	movls	r3, #1
 800337a:	2300      	movhi	r3, #0
 800337c:	b2db      	uxtb	r3, r3
 800337e:	2b00      	cmp	r3, #0
 8003380:	d079      	beq.n	8003476 <HAL_ADC_ConfigChannel+0x5aa>
 8003382:	683b      	ldr	r3, [r7, #0]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800338a:	2b00      	cmp	r3, #0
 800338c:	d107      	bne.n	800339e <HAL_ADC_ConfigChannel+0x4d2>
 800338e:	683b      	ldr	r3, [r7, #0]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	0e9b      	lsrs	r3, r3, #26
 8003394:	3301      	adds	r3, #1
 8003396:	069b      	lsls	r3, r3, #26
 8003398:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800339c:	e015      	b.n	80033ca <HAL_ADC_ConfigChannel+0x4fe>
 800339e:	683b      	ldr	r3, [r7, #0]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	653b      	str	r3, [r7, #80]	@ 0x50
 80033a4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80033a6:	fa93 f3a3 	rbit	r3, r3
 80033aa:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80033ac:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80033ae:	657b      	str	r3, [r7, #84]	@ 0x54
 80033b0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80033b2:	2b00      	cmp	r3, #0
 80033b4:	d101      	bne.n	80033ba <HAL_ADC_ConfigChannel+0x4ee>
 80033b6:	2320      	movs	r3, #32
 80033b8:	e003      	b.n	80033c2 <HAL_ADC_ConfigChannel+0x4f6>
 80033ba:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80033bc:	fab3 f383 	clz	r3, r3
 80033c0:	b2db      	uxtb	r3, r3
 80033c2:	3301      	adds	r3, #1
 80033c4:	069b      	lsls	r3, r3, #26
 80033c6:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80033ca:	683b      	ldr	r3, [r7, #0]
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80033d2:	2b00      	cmp	r3, #0
 80033d4:	d109      	bne.n	80033ea <HAL_ADC_ConfigChannel+0x51e>
 80033d6:	683b      	ldr	r3, [r7, #0]
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	0e9b      	lsrs	r3, r3, #26
 80033dc:	3301      	adds	r3, #1
 80033de:	f003 031f 	and.w	r3, r3, #31
 80033e2:	2101      	movs	r1, #1
 80033e4:	fa01 f303 	lsl.w	r3, r1, r3
 80033e8:	e017      	b.n	800341a <HAL_ADC_ConfigChannel+0x54e>
 80033ea:	683b      	ldr	r3, [r7, #0]
 80033ec:	681b      	ldr	r3, [r3, #0]
 80033ee:	647b      	str	r3, [r7, #68]	@ 0x44
 80033f0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80033f2:	fa93 f3a3 	rbit	r3, r3
 80033f6:	643b      	str	r3, [r7, #64]	@ 0x40
 80033f8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80033fa:	64bb      	str	r3, [r7, #72]	@ 0x48
 80033fc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d101      	bne.n	8003406 <HAL_ADC_ConfigChannel+0x53a>
 8003402:	2320      	movs	r3, #32
 8003404:	e003      	b.n	800340e <HAL_ADC_ConfigChannel+0x542>
 8003406:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003408:	fab3 f383 	clz	r3, r3
 800340c:	b2db      	uxtb	r3, r3
 800340e:	3301      	adds	r3, #1
 8003410:	f003 031f 	and.w	r3, r3, #31
 8003414:	2101      	movs	r1, #1
 8003416:	fa01 f303 	lsl.w	r3, r1, r3
 800341a:	ea42 0103 	orr.w	r1, r2, r3
 800341e:	683b      	ldr	r3, [r7, #0]
 8003420:	681b      	ldr	r3, [r3, #0]
 8003422:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003426:	2b00      	cmp	r3, #0
 8003428:	d10a      	bne.n	8003440 <HAL_ADC_ConfigChannel+0x574>
 800342a:	683b      	ldr	r3, [r7, #0]
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	0e9b      	lsrs	r3, r3, #26
 8003430:	3301      	adds	r3, #1
 8003432:	f003 021f 	and.w	r2, r3, #31
 8003436:	4613      	mov	r3, r2
 8003438:	005b      	lsls	r3, r3, #1
 800343a:	4413      	add	r3, r2
 800343c:	051b      	lsls	r3, r3, #20
 800343e:	e018      	b.n	8003472 <HAL_ADC_ConfigChannel+0x5a6>
 8003440:	683b      	ldr	r3, [r7, #0]
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003446:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003448:	fa93 f3a3 	rbit	r3, r3
 800344c:	637b      	str	r3, [r7, #52]	@ 0x34
 800344e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003450:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003452:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003454:	2b00      	cmp	r3, #0
 8003456:	d101      	bne.n	800345c <HAL_ADC_ConfigChannel+0x590>
 8003458:	2320      	movs	r3, #32
 800345a:	e003      	b.n	8003464 <HAL_ADC_ConfigChannel+0x598>
 800345c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800345e:	fab3 f383 	clz	r3, r3
 8003462:	b2db      	uxtb	r3, r3
 8003464:	3301      	adds	r3, #1
 8003466:	f003 021f 	and.w	r2, r3, #31
 800346a:	4613      	mov	r3, r2
 800346c:	005b      	lsls	r3, r3, #1
 800346e:	4413      	add	r3, r2
 8003470:	051b      	lsls	r3, r3, #20
 8003472:	430b      	orrs	r3, r1
 8003474:	e081      	b.n	800357a <HAL_ADC_ConfigChannel+0x6ae>
 8003476:	683b      	ldr	r3, [r7, #0]
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800347e:	2b00      	cmp	r3, #0
 8003480:	d107      	bne.n	8003492 <HAL_ADC_ConfigChannel+0x5c6>
 8003482:	683b      	ldr	r3, [r7, #0]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	0e9b      	lsrs	r3, r3, #26
 8003488:	3301      	adds	r3, #1
 800348a:	069b      	lsls	r3, r3, #26
 800348c:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003490:	e015      	b.n	80034be <HAL_ADC_ConfigChannel+0x5f2>
 8003492:	683b      	ldr	r3, [r7, #0]
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003498:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800349a:	fa93 f3a3 	rbit	r3, r3
 800349e:	62bb      	str	r3, [r7, #40]	@ 0x28
 80034a0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80034a2:	633b      	str	r3, [r7, #48]	@ 0x30
 80034a4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80034a6:	2b00      	cmp	r3, #0
 80034a8:	d101      	bne.n	80034ae <HAL_ADC_ConfigChannel+0x5e2>
 80034aa:	2320      	movs	r3, #32
 80034ac:	e003      	b.n	80034b6 <HAL_ADC_ConfigChannel+0x5ea>
 80034ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80034b0:	fab3 f383 	clz	r3, r3
 80034b4:	b2db      	uxtb	r3, r3
 80034b6:	3301      	adds	r3, #1
 80034b8:	069b      	lsls	r3, r3, #26
 80034ba:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80034be:	683b      	ldr	r3, [r7, #0]
 80034c0:	681b      	ldr	r3, [r3, #0]
 80034c2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80034c6:	2b00      	cmp	r3, #0
 80034c8:	d109      	bne.n	80034de <HAL_ADC_ConfigChannel+0x612>
 80034ca:	683b      	ldr	r3, [r7, #0]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	0e9b      	lsrs	r3, r3, #26
 80034d0:	3301      	adds	r3, #1
 80034d2:	f003 031f 	and.w	r3, r3, #31
 80034d6:	2101      	movs	r1, #1
 80034d8:	fa01 f303 	lsl.w	r3, r1, r3
 80034dc:	e017      	b.n	800350e <HAL_ADC_ConfigChannel+0x642>
 80034de:	683b      	ldr	r3, [r7, #0]
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	623b      	str	r3, [r7, #32]
 80034e4:	6a3b      	ldr	r3, [r7, #32]
 80034e6:	fa93 f3a3 	rbit	r3, r3
 80034ea:	61fb      	str	r3, [r7, #28]
 80034ec:	69fb      	ldr	r3, [r7, #28]
 80034ee:	627b      	str	r3, [r7, #36]	@ 0x24
 80034f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034f2:	2b00      	cmp	r3, #0
 80034f4:	d101      	bne.n	80034fa <HAL_ADC_ConfigChannel+0x62e>
 80034f6:	2320      	movs	r3, #32
 80034f8:	e003      	b.n	8003502 <HAL_ADC_ConfigChannel+0x636>
 80034fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034fc:	fab3 f383 	clz	r3, r3
 8003500:	b2db      	uxtb	r3, r3
 8003502:	3301      	adds	r3, #1
 8003504:	f003 031f 	and.w	r3, r3, #31
 8003508:	2101      	movs	r1, #1
 800350a:	fa01 f303 	lsl.w	r3, r1, r3
 800350e:	ea42 0103 	orr.w	r1, r2, r3
 8003512:	683b      	ldr	r3, [r7, #0]
 8003514:	681b      	ldr	r3, [r3, #0]
 8003516:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800351a:	2b00      	cmp	r3, #0
 800351c:	d10d      	bne.n	800353a <HAL_ADC_ConfigChannel+0x66e>
 800351e:	683b      	ldr	r3, [r7, #0]
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	0e9b      	lsrs	r3, r3, #26
 8003524:	3301      	adds	r3, #1
 8003526:	f003 021f 	and.w	r2, r3, #31
 800352a:	4613      	mov	r3, r2
 800352c:	005b      	lsls	r3, r3, #1
 800352e:	4413      	add	r3, r2
 8003530:	3b1e      	subs	r3, #30
 8003532:	051b      	lsls	r3, r3, #20
 8003534:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003538:	e01e      	b.n	8003578 <HAL_ADC_ConfigChannel+0x6ac>
 800353a:	683b      	ldr	r3, [r7, #0]
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	617b      	str	r3, [r7, #20]
 8003540:	697b      	ldr	r3, [r7, #20]
 8003542:	fa93 f3a3 	rbit	r3, r3
 8003546:	613b      	str	r3, [r7, #16]
 8003548:	693b      	ldr	r3, [r7, #16]
 800354a:	61bb      	str	r3, [r7, #24]
 800354c:	69bb      	ldr	r3, [r7, #24]
 800354e:	2b00      	cmp	r3, #0
 8003550:	d104      	bne.n	800355c <HAL_ADC_ConfigChannel+0x690>
 8003552:	2320      	movs	r3, #32
 8003554:	e006      	b.n	8003564 <HAL_ADC_ConfigChannel+0x698>
 8003556:	bf00      	nop
 8003558:	407f0000 	.word	0x407f0000
 800355c:	69bb      	ldr	r3, [r7, #24]
 800355e:	fab3 f383 	clz	r3, r3
 8003562:	b2db      	uxtb	r3, r3
 8003564:	3301      	adds	r3, #1
 8003566:	f003 021f 	and.w	r2, r3, #31
 800356a:	4613      	mov	r3, r2
 800356c:	005b      	lsls	r3, r3, #1
 800356e:	4413      	add	r3, r2
 8003570:	3b1e      	subs	r3, #30
 8003572:	051b      	lsls	r3, r3, #20
 8003574:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003578:	430b      	orrs	r3, r1
 800357a:	683a      	ldr	r2, [r7, #0]
 800357c:	6892      	ldr	r2, [r2, #8]
 800357e:	4619      	mov	r1, r3
 8003580:	f7fe fe77 	bl	8002272 <LL_ADC_SetChannelSamplingTime>
 8003584:	683b      	ldr	r3, [r7, #0]
 8003586:	681a      	ldr	r2, [r3, #0]
 8003588:	4b3f      	ldr	r3, [pc, #252]	@ (8003688 <HAL_ADC_ConfigChannel+0x7bc>)
 800358a:	4013      	ands	r3, r2
 800358c:	2b00      	cmp	r3, #0
 800358e:	d071      	beq.n	8003674 <HAL_ADC_ConfigChannel+0x7a8>
 8003590:	483e      	ldr	r0, [pc, #248]	@ (800368c <HAL_ADC_ConfigChannel+0x7c0>)
 8003592:	f7fe fd83 	bl	800209c <LL_ADC_GetCommonPathInternalCh>
 8003596:	f8c7 00c4 	str.w	r0, [r7, #196]	@ 0xc4
 800359a:	683b      	ldr	r3, [r7, #0]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	4a3c      	ldr	r2, [pc, #240]	@ (8003690 <HAL_ADC_ConfigChannel+0x7c4>)
 80035a0:	4293      	cmp	r3, r2
 80035a2:	d004      	beq.n	80035ae <HAL_ADC_ConfigChannel+0x6e2>
 80035a4:	683b      	ldr	r3, [r7, #0]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	4a3a      	ldr	r2, [pc, #232]	@ (8003694 <HAL_ADC_ConfigChannel+0x7c8>)
 80035aa:	4293      	cmp	r3, r2
 80035ac:	d127      	bne.n	80035fe <HAL_ADC_ConfigChannel+0x732>
 80035ae:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80035b2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80035b6:	2b00      	cmp	r3, #0
 80035b8:	d121      	bne.n	80035fe <HAL_ADC_ConfigChannel+0x732>
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80035c2:	d157      	bne.n	8003674 <HAL_ADC_ConfigChannel+0x7a8>
 80035c4:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80035c8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80035cc:	4619      	mov	r1, r3
 80035ce:	482f      	ldr	r0, [pc, #188]	@ (800368c <HAL_ADC_ConfigChannel+0x7c0>)
 80035d0:	f7fe fd51 	bl	8002076 <LL_ADC_SetCommonPathInternalCh>
 80035d4:	4b30      	ldr	r3, [pc, #192]	@ (8003698 <HAL_ADC_ConfigChannel+0x7cc>)
 80035d6:	681b      	ldr	r3, [r3, #0]
 80035d8:	099b      	lsrs	r3, r3, #6
 80035da:	4a30      	ldr	r2, [pc, #192]	@ (800369c <HAL_ADC_ConfigChannel+0x7d0>)
 80035dc:	fba2 2303 	umull	r2, r3, r2, r3
 80035e0:	099b      	lsrs	r3, r3, #6
 80035e2:	1c5a      	adds	r2, r3, #1
 80035e4:	4613      	mov	r3, r2
 80035e6:	005b      	lsls	r3, r3, #1
 80035e8:	4413      	add	r3, r2
 80035ea:	009b      	lsls	r3, r3, #2
 80035ec:	60fb      	str	r3, [r7, #12]
 80035ee:	e002      	b.n	80035f6 <HAL_ADC_ConfigChannel+0x72a>
 80035f0:	68fb      	ldr	r3, [r7, #12]
 80035f2:	3b01      	subs	r3, #1
 80035f4:	60fb      	str	r3, [r7, #12]
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	2b00      	cmp	r3, #0
 80035fa:	d1f9      	bne.n	80035f0 <HAL_ADC_ConfigChannel+0x724>
 80035fc:	e03a      	b.n	8003674 <HAL_ADC_ConfigChannel+0x7a8>
 80035fe:	683b      	ldr	r3, [r7, #0]
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	4a27      	ldr	r2, [pc, #156]	@ (80036a0 <HAL_ADC_ConfigChannel+0x7d4>)
 8003604:	4293      	cmp	r3, r2
 8003606:	d113      	bne.n	8003630 <HAL_ADC_ConfigChannel+0x764>
 8003608:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800360c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003610:	2b00      	cmp	r3, #0
 8003612:	d10d      	bne.n	8003630 <HAL_ADC_ConfigChannel+0x764>
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	681b      	ldr	r3, [r3, #0]
 8003618:	4a22      	ldr	r2, [pc, #136]	@ (80036a4 <HAL_ADC_ConfigChannel+0x7d8>)
 800361a:	4293      	cmp	r3, r2
 800361c:	d02a      	beq.n	8003674 <HAL_ADC_ConfigChannel+0x7a8>
 800361e:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003622:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8003626:	4619      	mov	r1, r3
 8003628:	4818      	ldr	r0, [pc, #96]	@ (800368c <HAL_ADC_ConfigChannel+0x7c0>)
 800362a:	f7fe fd24 	bl	8002076 <LL_ADC_SetCommonPathInternalCh>
 800362e:	e021      	b.n	8003674 <HAL_ADC_ConfigChannel+0x7a8>
 8003630:	683b      	ldr	r3, [r7, #0]
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	4a1c      	ldr	r2, [pc, #112]	@ (80036a8 <HAL_ADC_ConfigChannel+0x7dc>)
 8003636:	4293      	cmp	r3, r2
 8003638:	d11c      	bne.n	8003674 <HAL_ADC_ConfigChannel+0x7a8>
 800363a:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800363e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003642:	2b00      	cmp	r3, #0
 8003644:	d116      	bne.n	8003674 <HAL_ADC_ConfigChannel+0x7a8>
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	4a16      	ldr	r2, [pc, #88]	@ (80036a4 <HAL_ADC_ConfigChannel+0x7d8>)
 800364c:	4293      	cmp	r3, r2
 800364e:	d011      	beq.n	8003674 <HAL_ADC_ConfigChannel+0x7a8>
 8003650:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003654:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8003658:	4619      	mov	r1, r3
 800365a:	480c      	ldr	r0, [pc, #48]	@ (800368c <HAL_ADC_ConfigChannel+0x7c0>)
 800365c:	f7fe fd0b 	bl	8002076 <LL_ADC_SetCommonPathInternalCh>
 8003660:	e008      	b.n	8003674 <HAL_ADC_ConfigChannel+0x7a8>
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003666:	f043 0220 	orr.w	r2, r3, #32
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800366e:	2301      	movs	r3, #1
 8003670:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	2200      	movs	r2, #0
 8003678:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800367c:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 8003680:	4618      	mov	r0, r3
 8003682:	37d8      	adds	r7, #216	@ 0xd8
 8003684:	46bd      	mov	sp, r7
 8003686:	bd80      	pop	{r7, pc}
 8003688:	80080000 	.word	0x80080000
 800368c:	50000300 	.word	0x50000300
 8003690:	c3210000 	.word	0xc3210000
 8003694:	90c00010 	.word	0x90c00010
 8003698:	20000000 	.word	0x20000000
 800369c:	053e2d63 	.word	0x053e2d63
 80036a0:	c7520000 	.word	0xc7520000
 80036a4:	50000100 	.word	0x50000100
 80036a8:	cb840000 	.word	0xcb840000

080036ac <ADC_ConversionStop>:
 80036ac:	b580      	push	{r7, lr}
 80036ae:	b088      	sub	sp, #32
 80036b0:	af00      	add	r7, sp, #0
 80036b2:	6078      	str	r0, [r7, #4]
 80036b4:	6039      	str	r1, [r7, #0]
 80036b6:	2300      	movs	r3, #0
 80036b8:	61fb      	str	r3, [r7, #28]
 80036ba:	683b      	ldr	r3, [r7, #0]
 80036bc:	61bb      	str	r3, [r7, #24]
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	4618      	mov	r0, r3
 80036c4:	f7fe ff04 	bl	80024d0 <LL_ADC_REG_IsConversionOngoing>
 80036c8:	6138      	str	r0, [r7, #16]
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	681b      	ldr	r3, [r3, #0]
 80036ce:	4618      	mov	r0, r3
 80036d0:	f7fe ff25 	bl	800251e <LL_ADC_INJ_IsConversionOngoing>
 80036d4:	60f8      	str	r0, [r7, #12]
 80036d6:	693b      	ldr	r3, [r7, #16]
 80036d8:	2b00      	cmp	r3, #0
 80036da:	d103      	bne.n	80036e4 <ADC_ConversionStop+0x38>
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	2b00      	cmp	r3, #0
 80036e0:	f000 8098 	beq.w	8003814 <ADC_ConversionStop+0x168>
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	681b      	ldr	r3, [r3, #0]
 80036e8:	68db      	ldr	r3, [r3, #12]
 80036ea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80036ee:	2b00      	cmp	r3, #0
 80036f0:	d02a      	beq.n	8003748 <ADC_ConversionStop+0x9c>
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	7f5b      	ldrb	r3, [r3, #29]
 80036f6:	2b01      	cmp	r3, #1
 80036f8:	d126      	bne.n	8003748 <ADC_ConversionStop+0x9c>
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	7f1b      	ldrb	r3, [r3, #28]
 80036fe:	2b01      	cmp	r3, #1
 8003700:	d122      	bne.n	8003748 <ADC_ConversionStop+0x9c>
 8003702:	2301      	movs	r3, #1
 8003704:	61bb      	str	r3, [r7, #24]
 8003706:	e014      	b.n	8003732 <ADC_ConversionStop+0x86>
 8003708:	69fb      	ldr	r3, [r7, #28]
 800370a:	4a45      	ldr	r2, [pc, #276]	@ (8003820 <ADC_ConversionStop+0x174>)
 800370c:	4293      	cmp	r3, r2
 800370e:	d90d      	bls.n	800372c <ADC_ConversionStop+0x80>
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003714:	f043 0210 	orr.w	r2, r3, #16
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003720:	f043 0201 	orr.w	r2, r3, #1
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	661a      	str	r2, [r3, #96]	@ 0x60
 8003728:	2301      	movs	r3, #1
 800372a:	e074      	b.n	8003816 <ADC_ConversionStop+0x16a>
 800372c:	69fb      	ldr	r3, [r7, #28]
 800372e:	3301      	adds	r3, #1
 8003730:	61fb      	str	r3, [r7, #28]
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800373c:	2b40      	cmp	r3, #64	@ 0x40
 800373e:	d1e3      	bne.n	8003708 <ADC_ConversionStop+0x5c>
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	681b      	ldr	r3, [r3, #0]
 8003744:	2240      	movs	r2, #64	@ 0x40
 8003746:	601a      	str	r2, [r3, #0]
 8003748:	69bb      	ldr	r3, [r7, #24]
 800374a:	2b02      	cmp	r3, #2
 800374c:	d014      	beq.n	8003778 <ADC_ConversionStop+0xcc>
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	4618      	mov	r0, r3
 8003754:	f7fe febc 	bl	80024d0 <LL_ADC_REG_IsConversionOngoing>
 8003758:	4603      	mov	r3, r0
 800375a:	2b00      	cmp	r3, #0
 800375c:	d00c      	beq.n	8003778 <ADC_ConversionStop+0xcc>
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	4618      	mov	r0, r3
 8003764:	f7fe fe79 	bl	800245a <LL_ADC_IsDisableOngoing>
 8003768:	4603      	mov	r3, r0
 800376a:	2b00      	cmp	r3, #0
 800376c:	d104      	bne.n	8003778 <ADC_ConversionStop+0xcc>
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	4618      	mov	r0, r3
 8003774:	f7fe fe98 	bl	80024a8 <LL_ADC_REG_StopConversion>
 8003778:	69bb      	ldr	r3, [r7, #24]
 800377a:	2b01      	cmp	r3, #1
 800377c:	d014      	beq.n	80037a8 <ADC_ConversionStop+0xfc>
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	4618      	mov	r0, r3
 8003784:	f7fe fecb 	bl	800251e <LL_ADC_INJ_IsConversionOngoing>
 8003788:	4603      	mov	r3, r0
 800378a:	2b00      	cmp	r3, #0
 800378c:	d00c      	beq.n	80037a8 <ADC_ConversionStop+0xfc>
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	681b      	ldr	r3, [r3, #0]
 8003792:	4618      	mov	r0, r3
 8003794:	f7fe fe61 	bl	800245a <LL_ADC_IsDisableOngoing>
 8003798:	4603      	mov	r3, r0
 800379a:	2b00      	cmp	r3, #0
 800379c:	d104      	bne.n	80037a8 <ADC_ConversionStop+0xfc>
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	681b      	ldr	r3, [r3, #0]
 80037a2:	4618      	mov	r0, r3
 80037a4:	f7fe fea7 	bl	80024f6 <LL_ADC_INJ_StopConversion>
 80037a8:	69bb      	ldr	r3, [r7, #24]
 80037aa:	2b02      	cmp	r3, #2
 80037ac:	d005      	beq.n	80037ba <ADC_ConversionStop+0x10e>
 80037ae:	69bb      	ldr	r3, [r7, #24]
 80037b0:	2b03      	cmp	r3, #3
 80037b2:	d105      	bne.n	80037c0 <ADC_ConversionStop+0x114>
 80037b4:	230c      	movs	r3, #12
 80037b6:	617b      	str	r3, [r7, #20]
 80037b8:	e005      	b.n	80037c6 <ADC_ConversionStop+0x11a>
 80037ba:	2308      	movs	r3, #8
 80037bc:	617b      	str	r3, [r7, #20]
 80037be:	e002      	b.n	80037c6 <ADC_ConversionStop+0x11a>
 80037c0:	2304      	movs	r3, #4
 80037c2:	617b      	str	r3, [r7, #20]
 80037c4:	bf00      	nop
 80037c6:	f7fe fc15 	bl	8001ff4 <HAL_GetTick>
 80037ca:	60b8      	str	r0, [r7, #8]
 80037cc:	e01b      	b.n	8003806 <ADC_ConversionStop+0x15a>
 80037ce:	f7fe fc11 	bl	8001ff4 <HAL_GetTick>
 80037d2:	4602      	mov	r2, r0
 80037d4:	68bb      	ldr	r3, [r7, #8]
 80037d6:	1ad3      	subs	r3, r2, r3
 80037d8:	2b05      	cmp	r3, #5
 80037da:	d914      	bls.n	8003806 <ADC_ConversionStop+0x15a>
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	689a      	ldr	r2, [r3, #8]
 80037e2:	697b      	ldr	r3, [r7, #20]
 80037e4:	4013      	ands	r3, r2
 80037e6:	2b00      	cmp	r3, #0
 80037e8:	d00d      	beq.n	8003806 <ADC_ConversionStop+0x15a>
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80037ee:	f043 0210 	orr.w	r2, r3, #16
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80037fa:	f043 0201 	orr.w	r2, r3, #1
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	661a      	str	r2, [r3, #96]	@ 0x60
 8003802:	2301      	movs	r3, #1
 8003804:	e007      	b.n	8003816 <ADC_ConversionStop+0x16a>
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	681b      	ldr	r3, [r3, #0]
 800380a:	689a      	ldr	r2, [r3, #8]
 800380c:	697b      	ldr	r3, [r7, #20]
 800380e:	4013      	ands	r3, r2
 8003810:	2b00      	cmp	r3, #0
 8003812:	d1dc      	bne.n	80037ce <ADC_ConversionStop+0x122>
 8003814:	2300      	movs	r3, #0
 8003816:	4618      	mov	r0, r3
 8003818:	3720      	adds	r7, #32
 800381a:	46bd      	mov	sp, r7
 800381c:	bd80      	pop	{r7, pc}
 800381e:	bf00      	nop
 8003820:	a33fffff 	.word	0xa33fffff

08003824 <ADC_Enable>:
 8003824:	b580      	push	{r7, lr}
 8003826:	b084      	sub	sp, #16
 8003828:	af00      	add	r7, sp, #0
 800382a:	6078      	str	r0, [r7, #4]
 800382c:	2300      	movs	r3, #0
 800382e:	60bb      	str	r3, [r7, #8]
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	4618      	mov	r0, r3
 8003836:	f7fe fdfd 	bl	8002434 <LL_ADC_IsEnabled>
 800383a:	4603      	mov	r3, r0
 800383c:	2b00      	cmp	r3, #0
 800383e:	d169      	bne.n	8003914 <ADC_Enable+0xf0>
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	689a      	ldr	r2, [r3, #8]
 8003846:	4b36      	ldr	r3, [pc, #216]	@ (8003920 <ADC_Enable+0xfc>)
 8003848:	4013      	ands	r3, r2
 800384a:	2b00      	cmp	r3, #0
 800384c:	d00d      	beq.n	800386a <ADC_Enable+0x46>
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003852:	f043 0210 	orr.w	r2, r3, #16
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	65da      	str	r2, [r3, #92]	@ 0x5c
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800385e:	f043 0201 	orr.w	r2, r3, #1
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	661a      	str	r2, [r3, #96]	@ 0x60
 8003866:	2301      	movs	r3, #1
 8003868:	e055      	b.n	8003916 <ADC_Enable+0xf2>
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	4618      	mov	r0, r3
 8003870:	f7fe fdb8 	bl	80023e4 <LL_ADC_Enable>
 8003874:	482b      	ldr	r0, [pc, #172]	@ (8003924 <ADC_Enable+0x100>)
 8003876:	f7fe fc11 	bl	800209c <LL_ADC_GetCommonPathInternalCh>
 800387a:	4603      	mov	r3, r0
 800387c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003880:	2b00      	cmp	r3, #0
 8003882:	d013      	beq.n	80038ac <ADC_Enable+0x88>
 8003884:	4b28      	ldr	r3, [pc, #160]	@ (8003928 <ADC_Enable+0x104>)
 8003886:	681b      	ldr	r3, [r3, #0]
 8003888:	099b      	lsrs	r3, r3, #6
 800388a:	4a28      	ldr	r2, [pc, #160]	@ (800392c <ADC_Enable+0x108>)
 800388c:	fba2 2303 	umull	r2, r3, r2, r3
 8003890:	099b      	lsrs	r3, r3, #6
 8003892:	1c5a      	adds	r2, r3, #1
 8003894:	4613      	mov	r3, r2
 8003896:	005b      	lsls	r3, r3, #1
 8003898:	4413      	add	r3, r2
 800389a:	009b      	lsls	r3, r3, #2
 800389c:	60bb      	str	r3, [r7, #8]
 800389e:	e002      	b.n	80038a6 <ADC_Enable+0x82>
 80038a0:	68bb      	ldr	r3, [r7, #8]
 80038a2:	3b01      	subs	r3, #1
 80038a4:	60bb      	str	r3, [r7, #8]
 80038a6:	68bb      	ldr	r3, [r7, #8]
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	d1f9      	bne.n	80038a0 <ADC_Enable+0x7c>
 80038ac:	f7fe fba2 	bl	8001ff4 <HAL_GetTick>
 80038b0:	60f8      	str	r0, [r7, #12]
 80038b2:	e028      	b.n	8003906 <ADC_Enable+0xe2>
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	4618      	mov	r0, r3
 80038ba:	f7fe fdbb 	bl	8002434 <LL_ADC_IsEnabled>
 80038be:	4603      	mov	r3, r0
 80038c0:	2b00      	cmp	r3, #0
 80038c2:	d104      	bne.n	80038ce <ADC_Enable+0xaa>
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	4618      	mov	r0, r3
 80038ca:	f7fe fd8b 	bl	80023e4 <LL_ADC_Enable>
 80038ce:	f7fe fb91 	bl	8001ff4 <HAL_GetTick>
 80038d2:	4602      	mov	r2, r0
 80038d4:	68fb      	ldr	r3, [r7, #12]
 80038d6:	1ad3      	subs	r3, r2, r3
 80038d8:	2b02      	cmp	r3, #2
 80038da:	d914      	bls.n	8003906 <ADC_Enable+0xe2>
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	681b      	ldr	r3, [r3, #0]
 80038e2:	f003 0301 	and.w	r3, r3, #1
 80038e6:	2b01      	cmp	r3, #1
 80038e8:	d00d      	beq.n	8003906 <ADC_Enable+0xe2>
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038ee:	f043 0210 	orr.w	r2, r3, #16
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80038fa:	f043 0201 	orr.w	r2, r3, #1
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	661a      	str	r2, [r3, #96]	@ 0x60
 8003902:	2301      	movs	r3, #1
 8003904:	e007      	b.n	8003916 <ADC_Enable+0xf2>
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	681b      	ldr	r3, [r3, #0]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	f003 0301 	and.w	r3, r3, #1
 8003910:	2b01      	cmp	r3, #1
 8003912:	d1cf      	bne.n	80038b4 <ADC_Enable+0x90>
 8003914:	2300      	movs	r3, #0
 8003916:	4618      	mov	r0, r3
 8003918:	3710      	adds	r7, #16
 800391a:	46bd      	mov	sp, r7
 800391c:	bd80      	pop	{r7, pc}
 800391e:	bf00      	nop
 8003920:	8000003f 	.word	0x8000003f
 8003924:	50000300 	.word	0x50000300
 8003928:	20000000 	.word	0x20000000
 800392c:	053e2d63 	.word	0x053e2d63

08003930 <ADC_Disable>:
 8003930:	b580      	push	{r7, lr}
 8003932:	b084      	sub	sp, #16
 8003934:	af00      	add	r7, sp, #0
 8003936:	6078      	str	r0, [r7, #4]
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	681b      	ldr	r3, [r3, #0]
 800393c:	4618      	mov	r0, r3
 800393e:	f7fe fd8c 	bl	800245a <LL_ADC_IsDisableOngoing>
 8003942:	60f8      	str	r0, [r7, #12]
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	681b      	ldr	r3, [r3, #0]
 8003948:	4618      	mov	r0, r3
 800394a:	f7fe fd73 	bl	8002434 <LL_ADC_IsEnabled>
 800394e:	4603      	mov	r3, r0
 8003950:	2b00      	cmp	r3, #0
 8003952:	d047      	beq.n	80039e4 <ADC_Disable+0xb4>
 8003954:	68fb      	ldr	r3, [r7, #12]
 8003956:	2b00      	cmp	r3, #0
 8003958:	d144      	bne.n	80039e4 <ADC_Disable+0xb4>
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	689b      	ldr	r3, [r3, #8]
 8003960:	f003 030d 	and.w	r3, r3, #13
 8003964:	2b01      	cmp	r3, #1
 8003966:	d10c      	bne.n	8003982 <ADC_Disable+0x52>
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	681b      	ldr	r3, [r3, #0]
 800396c:	4618      	mov	r0, r3
 800396e:	f7fe fd4d 	bl	800240c <LL_ADC_Disable>
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	2203      	movs	r2, #3
 8003978:	601a      	str	r2, [r3, #0]
 800397a:	f7fe fb3b 	bl	8001ff4 <HAL_GetTick>
 800397e:	60b8      	str	r0, [r7, #8]
 8003980:	e029      	b.n	80039d6 <ADC_Disable+0xa6>
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003986:	f043 0210 	orr.w	r2, r3, #16
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003992:	f043 0201 	orr.w	r2, r3, #1
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	661a      	str	r2, [r3, #96]	@ 0x60
 800399a:	2301      	movs	r3, #1
 800399c:	e023      	b.n	80039e6 <ADC_Disable+0xb6>
 800399e:	f7fe fb29 	bl	8001ff4 <HAL_GetTick>
 80039a2:	4602      	mov	r2, r0
 80039a4:	68bb      	ldr	r3, [r7, #8]
 80039a6:	1ad3      	subs	r3, r2, r3
 80039a8:	2b02      	cmp	r3, #2
 80039aa:	d914      	bls.n	80039d6 <ADC_Disable+0xa6>
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	689b      	ldr	r3, [r3, #8]
 80039b2:	f003 0301 	and.w	r3, r3, #1
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	d00d      	beq.n	80039d6 <ADC_Disable+0xa6>
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039be:	f043 0210 	orr.w	r2, r3, #16
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80039ca:	f043 0201 	orr.w	r2, r3, #1
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	661a      	str	r2, [r3, #96]	@ 0x60
 80039d2:	2301      	movs	r3, #1
 80039d4:	e007      	b.n	80039e6 <ADC_Disable+0xb6>
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	689b      	ldr	r3, [r3, #8]
 80039dc:	f003 0301 	and.w	r3, r3, #1
 80039e0:	2b00      	cmp	r3, #0
 80039e2:	d1dc      	bne.n	800399e <ADC_Disable+0x6e>
 80039e4:	2300      	movs	r3, #0
 80039e6:	4618      	mov	r0, r3
 80039e8:	3710      	adds	r7, #16
 80039ea:	46bd      	mov	sp, r7
 80039ec:	bd80      	pop	{r7, pc}

080039ee <LL_ADC_IsEnabled>:
 80039ee:	b480      	push	{r7}
 80039f0:	b083      	sub	sp, #12
 80039f2:	af00      	add	r7, sp, #0
 80039f4:	6078      	str	r0, [r7, #4]
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	689b      	ldr	r3, [r3, #8]
 80039fa:	f003 0301 	and.w	r3, r3, #1
 80039fe:	2b01      	cmp	r3, #1
 8003a00:	d101      	bne.n	8003a06 <LL_ADC_IsEnabled+0x18>
 8003a02:	2301      	movs	r3, #1
 8003a04:	e000      	b.n	8003a08 <LL_ADC_IsEnabled+0x1a>
 8003a06:	2300      	movs	r3, #0
 8003a08:	4618      	mov	r0, r3
 8003a0a:	370c      	adds	r7, #12
 8003a0c:	46bd      	mov	sp, r7
 8003a0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a12:	4770      	bx	lr

08003a14 <LL_ADC_REG_IsConversionOngoing>:
 8003a14:	b480      	push	{r7}
 8003a16:	b083      	sub	sp, #12
 8003a18:	af00      	add	r7, sp, #0
 8003a1a:	6078      	str	r0, [r7, #4]
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	689b      	ldr	r3, [r3, #8]
 8003a20:	f003 0304 	and.w	r3, r3, #4
 8003a24:	2b04      	cmp	r3, #4
 8003a26:	d101      	bne.n	8003a2c <LL_ADC_REG_IsConversionOngoing+0x18>
 8003a28:	2301      	movs	r3, #1
 8003a2a:	e000      	b.n	8003a2e <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003a2c:	2300      	movs	r3, #0
 8003a2e:	4618      	mov	r0, r3
 8003a30:	370c      	adds	r7, #12
 8003a32:	46bd      	mov	sp, r7
 8003a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a38:	4770      	bx	lr
	...

08003a3c <HAL_ADCEx_MultiModeConfigChannel>:
 8003a3c:	b590      	push	{r4, r7, lr}
 8003a3e:	b0a1      	sub	sp, #132	@ 0x84
 8003a40:	af00      	add	r7, sp, #0
 8003a42:	6078      	str	r0, [r7, #4]
 8003a44:	6039      	str	r1, [r7, #0]
 8003a46:	2300      	movs	r3, #0
 8003a48:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8003a52:	2b01      	cmp	r3, #1
 8003a54:	d101      	bne.n	8003a5a <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 8003a56:	2302      	movs	r3, #2
 8003a58:	e08b      	b.n	8003b72 <HAL_ADCEx_MultiModeConfigChannel+0x136>
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	2201      	movs	r2, #1
 8003a5e:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003a62:	2300      	movs	r3, #0
 8003a64:	667b      	str	r3, [r7, #100]	@ 0x64
 8003a66:	2300      	movs	r3, #0
 8003a68:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003a72:	d102      	bne.n	8003a7a <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 8003a74:	4b41      	ldr	r3, [pc, #260]	@ (8003b7c <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8003a76:	60bb      	str	r3, [r7, #8]
 8003a78:	e001      	b.n	8003a7e <HAL_ADCEx_MultiModeConfigChannel+0x42>
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	60bb      	str	r3, [r7, #8]
 8003a7e:	68bb      	ldr	r3, [r7, #8]
 8003a80:	2b00      	cmp	r3, #0
 8003a82:	d10b      	bne.n	8003a9c <HAL_ADCEx_MultiModeConfigChannel+0x60>
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a88:	f043 0220 	orr.w	r2, r3, #32
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	2200      	movs	r2, #0
 8003a94:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003a98:	2301      	movs	r3, #1
 8003a9a:	e06a      	b.n	8003b72 <HAL_ADCEx_MultiModeConfigChannel+0x136>
 8003a9c:	68bb      	ldr	r3, [r7, #8]
 8003a9e:	4618      	mov	r0, r3
 8003aa0:	f7ff ffb8 	bl	8003a14 <LL_ADC_REG_IsConversionOngoing>
 8003aa4:	67b8      	str	r0, [r7, #120]	@ 0x78
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	681b      	ldr	r3, [r3, #0]
 8003aaa:	4618      	mov	r0, r3
 8003aac:	f7ff ffb2 	bl	8003a14 <LL_ADC_REG_IsConversionOngoing>
 8003ab0:	4603      	mov	r3, r0
 8003ab2:	2b00      	cmp	r3, #0
 8003ab4:	d14c      	bne.n	8003b50 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 8003ab6:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003ab8:	2b00      	cmp	r3, #0
 8003aba:	d149      	bne.n	8003b50 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 8003abc:	4b30      	ldr	r3, [pc, #192]	@ (8003b80 <HAL_ADCEx_MultiModeConfigChannel+0x144>)
 8003abe:	677b      	str	r3, [r7, #116]	@ 0x74
 8003ac0:	683b      	ldr	r3, [r7, #0]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	2b00      	cmp	r3, #0
 8003ac6:	d028      	beq.n	8003b1a <HAL_ADCEx_MultiModeConfigChannel+0xde>
 8003ac8:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003aca:	689b      	ldr	r3, [r3, #8]
 8003acc:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003ad0:	683b      	ldr	r3, [r7, #0]
 8003ad2:	6859      	ldr	r1, [r3, #4]
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8003ada:	035b      	lsls	r3, r3, #13
 8003adc:	430b      	orrs	r3, r1
 8003ade:	431a      	orrs	r2, r3
 8003ae0:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003ae2:	609a      	str	r2, [r3, #8]
 8003ae4:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8003ae8:	f7ff ff81 	bl	80039ee <LL_ADC_IsEnabled>
 8003aec:	4604      	mov	r4, r0
 8003aee:	4823      	ldr	r0, [pc, #140]	@ (8003b7c <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8003af0:	f7ff ff7d 	bl	80039ee <LL_ADC_IsEnabled>
 8003af4:	4603      	mov	r3, r0
 8003af6:	4323      	orrs	r3, r4
 8003af8:	2b00      	cmp	r3, #0
 8003afa:	d133      	bne.n	8003b64 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003afc:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003afe:	689b      	ldr	r3, [r3, #8]
 8003b00:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 8003b04:	f023 030f 	bic.w	r3, r3, #15
 8003b08:	683a      	ldr	r2, [r7, #0]
 8003b0a:	6811      	ldr	r1, [r2, #0]
 8003b0c:	683a      	ldr	r2, [r7, #0]
 8003b0e:	6892      	ldr	r2, [r2, #8]
 8003b10:	430a      	orrs	r2, r1
 8003b12:	431a      	orrs	r2, r3
 8003b14:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003b16:	609a      	str	r2, [r3, #8]
 8003b18:	e024      	b.n	8003b64 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003b1a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003b1c:	689b      	ldr	r3, [r3, #8]
 8003b1e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003b22:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003b24:	609a      	str	r2, [r3, #8]
 8003b26:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8003b2a:	f7ff ff60 	bl	80039ee <LL_ADC_IsEnabled>
 8003b2e:	4604      	mov	r4, r0
 8003b30:	4812      	ldr	r0, [pc, #72]	@ (8003b7c <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8003b32:	f7ff ff5c 	bl	80039ee <LL_ADC_IsEnabled>
 8003b36:	4603      	mov	r3, r0
 8003b38:	4323      	orrs	r3, r4
 8003b3a:	2b00      	cmp	r3, #0
 8003b3c:	d112      	bne.n	8003b64 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003b3e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003b40:	689b      	ldr	r3, [r3, #8]
 8003b42:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 8003b46:	f023 030f 	bic.w	r3, r3, #15
 8003b4a:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8003b4c:	6093      	str	r3, [r2, #8]
 8003b4e:	e009      	b.n	8003b64 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b54:	f043 0220 	orr.w	r2, r3, #32
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003b5c:	2301      	movs	r3, #1
 8003b5e:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8003b62:	e000      	b.n	8003b66 <HAL_ADCEx_MultiModeConfigChannel+0x12a>
 8003b64:	bf00      	nop
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	2200      	movs	r2, #0
 8003b6a:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003b6e:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 8003b72:	4618      	mov	r0, r3
 8003b74:	3784      	adds	r7, #132	@ 0x84
 8003b76:	46bd      	mov	sp, r7
 8003b78:	bd90      	pop	{r4, r7, pc}
 8003b7a:	bf00      	nop
 8003b7c:	50000100 	.word	0x50000100
 8003b80:	50000300 	.word	0x50000300

08003b84 <__NVIC_SetPriorityGrouping>:
 8003b84:	b480      	push	{r7}
 8003b86:	b085      	sub	sp, #20
 8003b88:	af00      	add	r7, sp, #0
 8003b8a:	6078      	str	r0, [r7, #4]
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	f003 0307 	and.w	r3, r3, #7
 8003b92:	60fb      	str	r3, [r7, #12]
 8003b94:	4b0c      	ldr	r3, [pc, #48]	@ (8003bc8 <__NVIC_SetPriorityGrouping+0x44>)
 8003b96:	68db      	ldr	r3, [r3, #12]
 8003b98:	60bb      	str	r3, [r7, #8]
 8003b9a:	68ba      	ldr	r2, [r7, #8]
 8003b9c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003ba0:	4013      	ands	r3, r2
 8003ba2:	60bb      	str	r3, [r7, #8]
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	021a      	lsls	r2, r3, #8
 8003ba8:	68bb      	ldr	r3, [r7, #8]
 8003baa:	4313      	orrs	r3, r2
 8003bac:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003bb0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003bb4:	60bb      	str	r3, [r7, #8]
 8003bb6:	4a04      	ldr	r2, [pc, #16]	@ (8003bc8 <__NVIC_SetPriorityGrouping+0x44>)
 8003bb8:	68bb      	ldr	r3, [r7, #8]
 8003bba:	60d3      	str	r3, [r2, #12]
 8003bbc:	bf00      	nop
 8003bbe:	3714      	adds	r7, #20
 8003bc0:	46bd      	mov	sp, r7
 8003bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bc6:	4770      	bx	lr
 8003bc8:	e000ed00 	.word	0xe000ed00

08003bcc <__NVIC_GetPriorityGrouping>:
 8003bcc:	b480      	push	{r7}
 8003bce:	af00      	add	r7, sp, #0
 8003bd0:	4b04      	ldr	r3, [pc, #16]	@ (8003be4 <__NVIC_GetPriorityGrouping+0x18>)
 8003bd2:	68db      	ldr	r3, [r3, #12]
 8003bd4:	0a1b      	lsrs	r3, r3, #8
 8003bd6:	f003 0307 	and.w	r3, r3, #7
 8003bda:	4618      	mov	r0, r3
 8003bdc:	46bd      	mov	sp, r7
 8003bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003be2:	4770      	bx	lr
 8003be4:	e000ed00 	.word	0xe000ed00

08003be8 <__NVIC_EnableIRQ>:
 8003be8:	b480      	push	{r7}
 8003bea:	b083      	sub	sp, #12
 8003bec:	af00      	add	r7, sp, #0
 8003bee:	4603      	mov	r3, r0
 8003bf0:	71fb      	strb	r3, [r7, #7]
 8003bf2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003bf6:	2b00      	cmp	r3, #0
 8003bf8:	db0b      	blt.n	8003c12 <__NVIC_EnableIRQ+0x2a>
 8003bfa:	79fb      	ldrb	r3, [r7, #7]
 8003bfc:	f003 021f 	and.w	r2, r3, #31
 8003c00:	4907      	ldr	r1, [pc, #28]	@ (8003c20 <__NVIC_EnableIRQ+0x38>)
 8003c02:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003c06:	095b      	lsrs	r3, r3, #5
 8003c08:	2001      	movs	r0, #1
 8003c0a:	fa00 f202 	lsl.w	r2, r0, r2
 8003c0e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003c12:	bf00      	nop
 8003c14:	370c      	adds	r7, #12
 8003c16:	46bd      	mov	sp, r7
 8003c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c1c:	4770      	bx	lr
 8003c1e:	bf00      	nop
 8003c20:	e000e100 	.word	0xe000e100

08003c24 <__NVIC_SetPriority>:
 8003c24:	b480      	push	{r7}
 8003c26:	b083      	sub	sp, #12
 8003c28:	af00      	add	r7, sp, #0
 8003c2a:	4603      	mov	r3, r0
 8003c2c:	6039      	str	r1, [r7, #0]
 8003c2e:	71fb      	strb	r3, [r7, #7]
 8003c30:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003c34:	2b00      	cmp	r3, #0
 8003c36:	db0a      	blt.n	8003c4e <__NVIC_SetPriority+0x2a>
 8003c38:	683b      	ldr	r3, [r7, #0]
 8003c3a:	b2da      	uxtb	r2, r3
 8003c3c:	490c      	ldr	r1, [pc, #48]	@ (8003c70 <__NVIC_SetPriority+0x4c>)
 8003c3e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003c42:	0112      	lsls	r2, r2, #4
 8003c44:	b2d2      	uxtb	r2, r2
 8003c46:	440b      	add	r3, r1
 8003c48:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003c4c:	e00a      	b.n	8003c64 <__NVIC_SetPriority+0x40>
 8003c4e:	683b      	ldr	r3, [r7, #0]
 8003c50:	b2da      	uxtb	r2, r3
 8003c52:	4908      	ldr	r1, [pc, #32]	@ (8003c74 <__NVIC_SetPriority+0x50>)
 8003c54:	79fb      	ldrb	r3, [r7, #7]
 8003c56:	f003 030f 	and.w	r3, r3, #15
 8003c5a:	3b04      	subs	r3, #4
 8003c5c:	0112      	lsls	r2, r2, #4
 8003c5e:	b2d2      	uxtb	r2, r2
 8003c60:	440b      	add	r3, r1
 8003c62:	761a      	strb	r2, [r3, #24]
 8003c64:	bf00      	nop
 8003c66:	370c      	adds	r7, #12
 8003c68:	46bd      	mov	sp, r7
 8003c6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c6e:	4770      	bx	lr
 8003c70:	e000e100 	.word	0xe000e100
 8003c74:	e000ed00 	.word	0xe000ed00

08003c78 <NVIC_EncodePriority>:
 8003c78:	b480      	push	{r7}
 8003c7a:	b089      	sub	sp, #36	@ 0x24
 8003c7c:	af00      	add	r7, sp, #0
 8003c7e:	60f8      	str	r0, [r7, #12]
 8003c80:	60b9      	str	r1, [r7, #8]
 8003c82:	607a      	str	r2, [r7, #4]
 8003c84:	68fb      	ldr	r3, [r7, #12]
 8003c86:	f003 0307 	and.w	r3, r3, #7
 8003c8a:	61fb      	str	r3, [r7, #28]
 8003c8c:	69fb      	ldr	r3, [r7, #28]
 8003c8e:	f1c3 0307 	rsb	r3, r3, #7
 8003c92:	2b04      	cmp	r3, #4
 8003c94:	bf28      	it	cs
 8003c96:	2304      	movcs	r3, #4
 8003c98:	61bb      	str	r3, [r7, #24]
 8003c9a:	69fb      	ldr	r3, [r7, #28]
 8003c9c:	3304      	adds	r3, #4
 8003c9e:	2b06      	cmp	r3, #6
 8003ca0:	d902      	bls.n	8003ca8 <NVIC_EncodePriority+0x30>
 8003ca2:	69fb      	ldr	r3, [r7, #28]
 8003ca4:	3b03      	subs	r3, #3
 8003ca6:	e000      	b.n	8003caa <NVIC_EncodePriority+0x32>
 8003ca8:	2300      	movs	r3, #0
 8003caa:	617b      	str	r3, [r7, #20]
 8003cac:	f04f 32ff 	mov.w	r2, #4294967295
 8003cb0:	69bb      	ldr	r3, [r7, #24]
 8003cb2:	fa02 f303 	lsl.w	r3, r2, r3
 8003cb6:	43da      	mvns	r2, r3
 8003cb8:	68bb      	ldr	r3, [r7, #8]
 8003cba:	401a      	ands	r2, r3
 8003cbc:	697b      	ldr	r3, [r7, #20]
 8003cbe:	409a      	lsls	r2, r3
 8003cc0:	f04f 31ff 	mov.w	r1, #4294967295
 8003cc4:	697b      	ldr	r3, [r7, #20]
 8003cc6:	fa01 f303 	lsl.w	r3, r1, r3
 8003cca:	43d9      	mvns	r1, r3
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	400b      	ands	r3, r1
 8003cd0:	4313      	orrs	r3, r2
 8003cd2:	4618      	mov	r0, r3
 8003cd4:	3724      	adds	r7, #36	@ 0x24
 8003cd6:	46bd      	mov	sp, r7
 8003cd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cdc:	4770      	bx	lr
	...

08003ce0 <SysTick_Config>:
 8003ce0:	b580      	push	{r7, lr}
 8003ce2:	b082      	sub	sp, #8
 8003ce4:	af00      	add	r7, sp, #0
 8003ce6:	6078      	str	r0, [r7, #4]
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	3b01      	subs	r3, #1
 8003cec:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003cf0:	d301      	bcc.n	8003cf6 <SysTick_Config+0x16>
 8003cf2:	2301      	movs	r3, #1
 8003cf4:	e00f      	b.n	8003d16 <SysTick_Config+0x36>
 8003cf6:	4a0a      	ldr	r2, [pc, #40]	@ (8003d20 <SysTick_Config+0x40>)
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	3b01      	subs	r3, #1
 8003cfc:	6053      	str	r3, [r2, #4]
 8003cfe:	210f      	movs	r1, #15
 8003d00:	f04f 30ff 	mov.w	r0, #4294967295
 8003d04:	f7ff ff8e 	bl	8003c24 <__NVIC_SetPriority>
 8003d08:	4b05      	ldr	r3, [pc, #20]	@ (8003d20 <SysTick_Config+0x40>)
 8003d0a:	2200      	movs	r2, #0
 8003d0c:	609a      	str	r2, [r3, #8]
 8003d0e:	4b04      	ldr	r3, [pc, #16]	@ (8003d20 <SysTick_Config+0x40>)
 8003d10:	2207      	movs	r2, #7
 8003d12:	601a      	str	r2, [r3, #0]
 8003d14:	2300      	movs	r3, #0
 8003d16:	4618      	mov	r0, r3
 8003d18:	3708      	adds	r7, #8
 8003d1a:	46bd      	mov	sp, r7
 8003d1c:	bd80      	pop	{r7, pc}
 8003d1e:	bf00      	nop
 8003d20:	e000e010 	.word	0xe000e010

08003d24 <HAL_NVIC_SetPriorityGrouping>:
 8003d24:	b580      	push	{r7, lr}
 8003d26:	b082      	sub	sp, #8
 8003d28:	af00      	add	r7, sp, #0
 8003d2a:	6078      	str	r0, [r7, #4]
 8003d2c:	6878      	ldr	r0, [r7, #4]
 8003d2e:	f7ff ff29 	bl	8003b84 <__NVIC_SetPriorityGrouping>
 8003d32:	bf00      	nop
 8003d34:	3708      	adds	r7, #8
 8003d36:	46bd      	mov	sp, r7
 8003d38:	bd80      	pop	{r7, pc}

08003d3a <HAL_NVIC_SetPriority>:
 8003d3a:	b580      	push	{r7, lr}
 8003d3c:	b086      	sub	sp, #24
 8003d3e:	af00      	add	r7, sp, #0
 8003d40:	4603      	mov	r3, r0
 8003d42:	60b9      	str	r1, [r7, #8]
 8003d44:	607a      	str	r2, [r7, #4]
 8003d46:	73fb      	strb	r3, [r7, #15]
 8003d48:	f7ff ff40 	bl	8003bcc <__NVIC_GetPriorityGrouping>
 8003d4c:	6178      	str	r0, [r7, #20]
 8003d4e:	687a      	ldr	r2, [r7, #4]
 8003d50:	68b9      	ldr	r1, [r7, #8]
 8003d52:	6978      	ldr	r0, [r7, #20]
 8003d54:	f7ff ff90 	bl	8003c78 <NVIC_EncodePriority>
 8003d58:	4602      	mov	r2, r0
 8003d5a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003d5e:	4611      	mov	r1, r2
 8003d60:	4618      	mov	r0, r3
 8003d62:	f7ff ff5f 	bl	8003c24 <__NVIC_SetPriority>
 8003d66:	bf00      	nop
 8003d68:	3718      	adds	r7, #24
 8003d6a:	46bd      	mov	sp, r7
 8003d6c:	bd80      	pop	{r7, pc}

08003d6e <HAL_NVIC_EnableIRQ>:
 8003d6e:	b580      	push	{r7, lr}
 8003d70:	b082      	sub	sp, #8
 8003d72:	af00      	add	r7, sp, #0
 8003d74:	4603      	mov	r3, r0
 8003d76:	71fb      	strb	r3, [r7, #7]
 8003d78:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003d7c:	4618      	mov	r0, r3
 8003d7e:	f7ff ff33 	bl	8003be8 <__NVIC_EnableIRQ>
 8003d82:	bf00      	nop
 8003d84:	3708      	adds	r7, #8
 8003d86:	46bd      	mov	sp, r7
 8003d88:	bd80      	pop	{r7, pc}

08003d8a <HAL_SYSTICK_Config>:
 8003d8a:	b580      	push	{r7, lr}
 8003d8c:	b082      	sub	sp, #8
 8003d8e:	af00      	add	r7, sp, #0
 8003d90:	6078      	str	r0, [r7, #4]
 8003d92:	6878      	ldr	r0, [r7, #4]
 8003d94:	f7ff ffa4 	bl	8003ce0 <SysTick_Config>
 8003d98:	4603      	mov	r3, r0
 8003d9a:	4618      	mov	r0, r3
 8003d9c:	3708      	adds	r7, #8
 8003d9e:	46bd      	mov	sp, r7
 8003da0:	bd80      	pop	{r7, pc}
	...

08003da4 <HAL_FDCAN_Init>:
 8003da4:	b580      	push	{r7, lr}
 8003da6:	b084      	sub	sp, #16
 8003da8:	af00      	add	r7, sp, #0
 8003daa:	6078      	str	r0, [r7, #4]
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	2b00      	cmp	r3, #0
 8003db0:	d101      	bne.n	8003db6 <HAL_FDCAN_Init+0x12>
 8003db2:	2301      	movs	r3, #1
 8003db4:	e147      	b.n	8004046 <HAL_FDCAN_Init+0x2a2>
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003dbc:	b2db      	uxtb	r3, r3
 8003dbe:	2b00      	cmp	r3, #0
 8003dc0:	d106      	bne.n	8003dd0 <HAL_FDCAN_Init+0x2c>
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	2200      	movs	r2, #0
 8003dc6:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8003dca:	6878      	ldr	r0, [r7, #4]
 8003dcc:	f7fd fe98 	bl	8001b00 <HAL_FDCAN_MspInit>
 8003dd0:	687b      	ldr	r3, [r7, #4]
 8003dd2:	681b      	ldr	r3, [r3, #0]
 8003dd4:	699a      	ldr	r2, [r3, #24]
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	f022 0210 	bic.w	r2, r2, #16
 8003dde:	619a      	str	r2, [r3, #24]
 8003de0:	f7fe f908 	bl	8001ff4 <HAL_GetTick>
 8003de4:	60f8      	str	r0, [r7, #12]
 8003de6:	e012      	b.n	8003e0e <HAL_FDCAN_Init+0x6a>
 8003de8:	f7fe f904 	bl	8001ff4 <HAL_GetTick>
 8003dec:	4602      	mov	r2, r0
 8003dee:	68fb      	ldr	r3, [r7, #12]
 8003df0:	1ad3      	subs	r3, r2, r3
 8003df2:	2b0a      	cmp	r3, #10
 8003df4:	d90b      	bls.n	8003e0e <HAL_FDCAN_Init+0x6a>
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003dfa:	f043 0201 	orr.w	r2, r3, #1
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	661a      	str	r2, [r3, #96]	@ 0x60
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	2203      	movs	r2, #3
 8003e06:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8003e0a:	2301      	movs	r3, #1
 8003e0c:	e11b      	b.n	8004046 <HAL_FDCAN_Init+0x2a2>
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	681b      	ldr	r3, [r3, #0]
 8003e12:	699b      	ldr	r3, [r3, #24]
 8003e14:	f003 0308 	and.w	r3, r3, #8
 8003e18:	2b08      	cmp	r3, #8
 8003e1a:	d0e5      	beq.n	8003de8 <HAL_FDCAN_Init+0x44>
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	699a      	ldr	r2, [r3, #24]
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	681b      	ldr	r3, [r3, #0]
 8003e26:	f042 0201 	orr.w	r2, r2, #1
 8003e2a:	619a      	str	r2, [r3, #24]
 8003e2c:	f7fe f8e2 	bl	8001ff4 <HAL_GetTick>
 8003e30:	60f8      	str	r0, [r7, #12]
 8003e32:	e012      	b.n	8003e5a <HAL_FDCAN_Init+0xb6>
 8003e34:	f7fe f8de 	bl	8001ff4 <HAL_GetTick>
 8003e38:	4602      	mov	r2, r0
 8003e3a:	68fb      	ldr	r3, [r7, #12]
 8003e3c:	1ad3      	subs	r3, r2, r3
 8003e3e:	2b0a      	cmp	r3, #10
 8003e40:	d90b      	bls.n	8003e5a <HAL_FDCAN_Init+0xb6>
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003e46:	f043 0201 	orr.w	r2, r3, #1
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	661a      	str	r2, [r3, #96]	@ 0x60
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	2203      	movs	r2, #3
 8003e52:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8003e56:	2301      	movs	r3, #1
 8003e58:	e0f5      	b.n	8004046 <HAL_FDCAN_Init+0x2a2>
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	699b      	ldr	r3, [r3, #24]
 8003e60:	f003 0301 	and.w	r3, r3, #1
 8003e64:	2b00      	cmp	r3, #0
 8003e66:	d0e5      	beq.n	8003e34 <HAL_FDCAN_Init+0x90>
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	699a      	ldr	r2, [r3, #24]
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	f042 0202 	orr.w	r2, r2, #2
 8003e76:	619a      	str	r2, [r3, #24]
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	681b      	ldr	r3, [r3, #0]
 8003e7c:	4a74      	ldr	r2, [pc, #464]	@ (8004050 <HAL_FDCAN_Init+0x2ac>)
 8003e7e:	4293      	cmp	r3, r2
 8003e80:	d103      	bne.n	8003e8a <HAL_FDCAN_Init+0xe6>
 8003e82:	4a74      	ldr	r2, [pc, #464]	@ (8004054 <HAL_FDCAN_Init+0x2b0>)
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	685b      	ldr	r3, [r3, #4]
 8003e88:	6013      	str	r3, [r2, #0]
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	7c1b      	ldrb	r3, [r3, #16]
 8003e8e:	2b01      	cmp	r3, #1
 8003e90:	d108      	bne.n	8003ea4 <HAL_FDCAN_Init+0x100>
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	681b      	ldr	r3, [r3, #0]
 8003e96:	699a      	ldr	r2, [r3, #24]
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003ea0:	619a      	str	r2, [r3, #24]
 8003ea2:	e007      	b.n	8003eb4 <HAL_FDCAN_Init+0x110>
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	699a      	ldr	r2, [r3, #24]
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	681b      	ldr	r3, [r3, #0]
 8003eae:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003eb2:	619a      	str	r2, [r3, #24]
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	7c5b      	ldrb	r3, [r3, #17]
 8003eb8:	2b01      	cmp	r3, #1
 8003eba:	d108      	bne.n	8003ece <HAL_FDCAN_Init+0x12a>
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	699a      	ldr	r2, [r3, #24]
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003eca:	619a      	str	r2, [r3, #24]
 8003ecc:	e007      	b.n	8003ede <HAL_FDCAN_Init+0x13a>
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	681b      	ldr	r3, [r3, #0]
 8003ed2:	699a      	ldr	r2, [r3, #24]
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8003edc:	619a      	str	r2, [r3, #24]
 8003ede:	687b      	ldr	r3, [r7, #4]
 8003ee0:	7c9b      	ldrb	r3, [r3, #18]
 8003ee2:	2b01      	cmp	r3, #1
 8003ee4:	d108      	bne.n	8003ef8 <HAL_FDCAN_Init+0x154>
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	699a      	ldr	r2, [r3, #24]
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003ef4:	619a      	str	r2, [r3, #24]
 8003ef6:	e007      	b.n	8003f08 <HAL_FDCAN_Init+0x164>
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	681b      	ldr	r3, [r3, #0]
 8003efc:	699a      	ldr	r2, [r3, #24]
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8003f06:	619a      	str	r2, [r3, #24]
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	681b      	ldr	r3, [r3, #0]
 8003f0c:	699b      	ldr	r3, [r3, #24]
 8003f0e:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	689a      	ldr	r2, [r3, #8]
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	430a      	orrs	r2, r1
 8003f1c:	619a      	str	r2, [r3, #24]
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	699a      	ldr	r2, [r3, #24]
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	f022 02a4 	bic.w	r2, r2, #164	@ 0xa4
 8003f2c:	619a      	str	r2, [r3, #24]
 8003f2e:	687b      	ldr	r3, [r7, #4]
 8003f30:	681b      	ldr	r3, [r3, #0]
 8003f32:	691a      	ldr	r2, [r3, #16]
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	f022 0210 	bic.w	r2, r2, #16
 8003f3c:	611a      	str	r2, [r3, #16]
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	68db      	ldr	r3, [r3, #12]
 8003f42:	2b01      	cmp	r3, #1
 8003f44:	d108      	bne.n	8003f58 <HAL_FDCAN_Init+0x1b4>
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	699a      	ldr	r2, [r3, #24]
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	681b      	ldr	r3, [r3, #0]
 8003f50:	f042 0204 	orr.w	r2, r2, #4
 8003f54:	619a      	str	r2, [r3, #24]
 8003f56:	e02c      	b.n	8003fb2 <HAL_FDCAN_Init+0x20e>
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	68db      	ldr	r3, [r3, #12]
 8003f5c:	2b00      	cmp	r3, #0
 8003f5e:	d028      	beq.n	8003fb2 <HAL_FDCAN_Init+0x20e>
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	68db      	ldr	r3, [r3, #12]
 8003f64:	2b02      	cmp	r3, #2
 8003f66:	d01c      	beq.n	8003fa2 <HAL_FDCAN_Init+0x1fe>
 8003f68:	687b      	ldr	r3, [r7, #4]
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	699a      	ldr	r2, [r3, #24]
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8003f76:	619a      	str	r2, [r3, #24]
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	691a      	ldr	r2, [r3, #16]
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	681b      	ldr	r3, [r3, #0]
 8003f82:	f042 0210 	orr.w	r2, r2, #16
 8003f86:	611a      	str	r2, [r3, #16]
 8003f88:	687b      	ldr	r3, [r7, #4]
 8003f8a:	68db      	ldr	r3, [r3, #12]
 8003f8c:	2b03      	cmp	r3, #3
 8003f8e:	d110      	bne.n	8003fb2 <HAL_FDCAN_Init+0x20e>
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	699a      	ldr	r2, [r3, #24]
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	f042 0220 	orr.w	r2, r2, #32
 8003f9e:	619a      	str	r2, [r3, #24]
 8003fa0:	e007      	b.n	8003fb2 <HAL_FDCAN_Init+0x20e>
 8003fa2:	687b      	ldr	r3, [r7, #4]
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	699a      	ldr	r2, [r3, #24]
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	681b      	ldr	r3, [r3, #0]
 8003fac:	f042 0220 	orr.w	r2, r2, #32
 8003fb0:	619a      	str	r2, [r3, #24]
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	699b      	ldr	r3, [r3, #24]
 8003fb6:	3b01      	subs	r3, #1
 8003fb8:	065a      	lsls	r2, r3, #25
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	69db      	ldr	r3, [r3, #28]
 8003fbe:	3b01      	subs	r3, #1
 8003fc0:	021b      	lsls	r3, r3, #8
 8003fc2:	431a      	orrs	r2, r3
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	6a1b      	ldr	r3, [r3, #32]
 8003fc8:	3b01      	subs	r3, #1
 8003fca:	ea42 0103 	orr.w	r1, r2, r3
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	695b      	ldr	r3, [r3, #20]
 8003fd2:	3b01      	subs	r3, #1
 8003fd4:	041a      	lsls	r2, r3, #16
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	430a      	orrs	r2, r1
 8003fdc:	61da      	str	r2, [r3, #28]
 8003fde:	687b      	ldr	r3, [r7, #4]
 8003fe0:	689b      	ldr	r3, [r3, #8]
 8003fe2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8003fe6:	d115      	bne.n	8004014 <HAL_FDCAN_Init+0x270>
 8003fe8:	687b      	ldr	r3, [r7, #4]
 8003fea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003fec:	1e5a      	subs	r2, r3, #1
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ff2:	3b01      	subs	r3, #1
 8003ff4:	021b      	lsls	r3, r3, #8
 8003ff6:	431a      	orrs	r2, r3
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003ffc:	3b01      	subs	r3, #1
 8003ffe:	011b      	lsls	r3, r3, #4
 8004000:	ea42 0103 	orr.w	r1, r2, r3
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004008:	3b01      	subs	r3, #1
 800400a:	041a      	lsls	r2, r3, #16
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	430a      	orrs	r2, r1
 8004012:	60da      	str	r2, [r3, #12]
 8004014:	687b      	ldr	r3, [r7, #4]
 8004016:	681b      	ldr	r3, [r3, #0]
 8004018:	f8d3 10c0 	ldr.w	r1, [r3, #192]	@ 0xc0
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004020:	687b      	ldr	r3, [r7, #4]
 8004022:	681b      	ldr	r3, [r3, #0]
 8004024:	430a      	orrs	r2, r1
 8004026:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 800402a:	6878      	ldr	r0, [r7, #4]
 800402c:	f000 fc0e 	bl	800484c <FDCAN_CalcultateRamBlockAddresses>
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	2200      	movs	r2, #0
 8004034:	659a      	str	r2, [r3, #88]	@ 0x58
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	2200      	movs	r2, #0
 800403a:	661a      	str	r2, [r3, #96]	@ 0x60
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	2201      	movs	r2, #1
 8004040:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8004044:	2300      	movs	r3, #0
 8004046:	4618      	mov	r0, r3
 8004048:	3710      	adds	r7, #16
 800404a:	46bd      	mov	sp, r7
 800404c:	bd80      	pop	{r7, pc}
 800404e:	bf00      	nop
 8004050:	40006400 	.word	0x40006400
 8004054:	40006500 	.word	0x40006500

08004058 <HAL_FDCAN_Start>:
 8004058:	b480      	push	{r7}
 800405a:	b083      	sub	sp, #12
 800405c:	af00      	add	r7, sp, #0
 800405e:	6078      	str	r0, [r7, #4]
 8004060:	687b      	ldr	r3, [r7, #4]
 8004062:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8004066:	b2db      	uxtb	r3, r3
 8004068:	2b01      	cmp	r3, #1
 800406a:	d110      	bne.n	800408e <HAL_FDCAN_Start+0x36>
 800406c:	687b      	ldr	r3, [r7, #4]
 800406e:	2202      	movs	r2, #2
 8004070:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	699a      	ldr	r2, [r3, #24]
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	681b      	ldr	r3, [r3, #0]
 800407e:	f022 0201 	bic.w	r2, r2, #1
 8004082:	619a      	str	r2, [r3, #24]
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	2200      	movs	r2, #0
 8004088:	661a      	str	r2, [r3, #96]	@ 0x60
 800408a:	2300      	movs	r3, #0
 800408c:	e006      	b.n	800409c <HAL_FDCAN_Start+0x44>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004092:	f043 0204 	orr.w	r2, r3, #4
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	661a      	str	r2, [r3, #96]	@ 0x60
 800409a:	2301      	movs	r3, #1
 800409c:	4618      	mov	r0, r3
 800409e:	370c      	adds	r7, #12
 80040a0:	46bd      	mov	sp, r7
 80040a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040a6:	4770      	bx	lr

080040a8 <HAL_FDCAN_AddMessageToTxFifoQ>:
 80040a8:	b580      	push	{r7, lr}
 80040aa:	b086      	sub	sp, #24
 80040ac:	af00      	add	r7, sp, #0
 80040ae:	60f8      	str	r0, [r7, #12]
 80040b0:	60b9      	str	r1, [r7, #8]
 80040b2:	607a      	str	r2, [r7, #4]
 80040b4:	68fb      	ldr	r3, [r7, #12]
 80040b6:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 80040ba:	b2db      	uxtb	r3, r3
 80040bc:	2b02      	cmp	r3, #2
 80040be:	d12c      	bne.n	800411a <HAL_FDCAN_AddMessageToTxFifoQ+0x72>
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	681b      	ldr	r3, [r3, #0]
 80040c4:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 80040c8:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80040cc:	2b00      	cmp	r3, #0
 80040ce:	d007      	beq.n	80040e0 <HAL_FDCAN_AddMessageToTxFifoQ+0x38>
 80040d0:	68fb      	ldr	r3, [r7, #12]
 80040d2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80040d4:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 80040d8:	68fb      	ldr	r3, [r7, #12]
 80040da:	661a      	str	r2, [r3, #96]	@ 0x60
 80040dc:	2301      	movs	r3, #1
 80040de:	e023      	b.n	8004128 <HAL_FDCAN_AddMessageToTxFifoQ+0x80>
 80040e0:	68fb      	ldr	r3, [r7, #12]
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 80040e8:	0c1b      	lsrs	r3, r3, #16
 80040ea:	f003 0303 	and.w	r3, r3, #3
 80040ee:	617b      	str	r3, [r7, #20]
 80040f0:	697b      	ldr	r3, [r7, #20]
 80040f2:	687a      	ldr	r2, [r7, #4]
 80040f4:	68b9      	ldr	r1, [r7, #8]
 80040f6:	68f8      	ldr	r0, [r7, #12]
 80040f8:	f000 fbfe 	bl	80048f8 <FDCAN_CopyMessageToRAM>
 80040fc:	68fb      	ldr	r3, [r7, #12]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	2101      	movs	r1, #1
 8004102:	697a      	ldr	r2, [r7, #20]
 8004104:	fa01 f202 	lsl.w	r2, r1, r2
 8004108:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
 800410c:	2201      	movs	r2, #1
 800410e:	697b      	ldr	r3, [r7, #20]
 8004110:	409a      	lsls	r2, r3
 8004112:	68fb      	ldr	r3, [r7, #12]
 8004114:	659a      	str	r2, [r3, #88]	@ 0x58
 8004116:	2300      	movs	r3, #0
 8004118:	e006      	b.n	8004128 <HAL_FDCAN_AddMessageToTxFifoQ+0x80>
 800411a:	68fb      	ldr	r3, [r7, #12]
 800411c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800411e:	f043 0208 	orr.w	r2, r3, #8
 8004122:	68fb      	ldr	r3, [r7, #12]
 8004124:	661a      	str	r2, [r3, #96]	@ 0x60
 8004126:	2301      	movs	r3, #1
 8004128:	4618      	mov	r0, r3
 800412a:	3718      	adds	r7, #24
 800412c:	46bd      	mov	sp, r7
 800412e:	bd80      	pop	{r7, pc}

08004130 <HAL_FDCAN_GetRxMessage>:
 8004130:	b480      	push	{r7}
 8004132:	b08b      	sub	sp, #44	@ 0x2c
 8004134:	af00      	add	r7, sp, #0
 8004136:	60f8      	str	r0, [r7, #12]
 8004138:	60b9      	str	r1, [r7, #8]
 800413a:	607a      	str	r2, [r7, #4]
 800413c:	603b      	str	r3, [r7, #0]
 800413e:	2300      	movs	r3, #0
 8004140:	61fb      	str	r3, [r7, #28]
 8004142:	68fb      	ldr	r3, [r7, #12]
 8004144:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8004148:	76fb      	strb	r3, [r7, #27]
 800414a:	7efb      	ldrb	r3, [r7, #27]
 800414c:	2b02      	cmp	r3, #2
 800414e:	f040 80e8 	bne.w	8004322 <HAL_FDCAN_GetRxMessage+0x1f2>
 8004152:	68bb      	ldr	r3, [r7, #8]
 8004154:	2b40      	cmp	r3, #64	@ 0x40
 8004156:	d137      	bne.n	80041c8 <HAL_FDCAN_GetRxMessage+0x98>
 8004158:	68fb      	ldr	r3, [r7, #12]
 800415a:	681b      	ldr	r3, [r3, #0]
 800415c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004160:	f003 030f 	and.w	r3, r3, #15
 8004164:	2b00      	cmp	r3, #0
 8004166:	d107      	bne.n	8004178 <HAL_FDCAN_GetRxMessage+0x48>
 8004168:	68fb      	ldr	r3, [r7, #12]
 800416a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800416c:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8004170:	68fb      	ldr	r3, [r7, #12]
 8004172:	661a      	str	r2, [r3, #96]	@ 0x60
 8004174:	2301      	movs	r3, #1
 8004176:	e0db      	b.n	8004330 <HAL_FDCAN_GetRxMessage+0x200>
 8004178:	68fb      	ldr	r3, [r7, #12]
 800417a:	681b      	ldr	r3, [r3, #0]
 800417c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004180:	0e1b      	lsrs	r3, r3, #24
 8004182:	f003 0301 	and.w	r3, r3, #1
 8004186:	2b01      	cmp	r3, #1
 8004188:	d10a      	bne.n	80041a0 <HAL_FDCAN_GetRxMessage+0x70>
 800418a:	68fb      	ldr	r3, [r7, #12]
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004192:	0a5b      	lsrs	r3, r3, #9
 8004194:	f003 0301 	and.w	r3, r3, #1
 8004198:	2b01      	cmp	r3, #1
 800419a:	d101      	bne.n	80041a0 <HAL_FDCAN_GetRxMessage+0x70>
 800419c:	2301      	movs	r3, #1
 800419e:	61fb      	str	r3, [r7, #28]
 80041a0:	68fb      	ldr	r3, [r7, #12]
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80041a8:	0a1b      	lsrs	r3, r3, #8
 80041aa:	f003 0303 	and.w	r3, r3, #3
 80041ae:	69fa      	ldr	r2, [r7, #28]
 80041b0:	4413      	add	r3, r2
 80041b2:	61fb      	str	r3, [r7, #28]
 80041b4:	68fb      	ldr	r3, [r7, #12]
 80041b6:	6c99      	ldr	r1, [r3, #72]	@ 0x48
 80041b8:	69fa      	ldr	r2, [r7, #28]
 80041ba:	4613      	mov	r3, r2
 80041bc:	00db      	lsls	r3, r3, #3
 80041be:	4413      	add	r3, r2
 80041c0:	00db      	lsls	r3, r3, #3
 80041c2:	440b      	add	r3, r1
 80041c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80041c6:	e036      	b.n	8004236 <HAL_FDCAN_GetRxMessage+0x106>
 80041c8:	68fb      	ldr	r3, [r7, #12]
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80041d0:	f003 030f 	and.w	r3, r3, #15
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	d107      	bne.n	80041e8 <HAL_FDCAN_GetRxMessage+0xb8>
 80041d8:	68fb      	ldr	r3, [r7, #12]
 80041da:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80041dc:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	661a      	str	r2, [r3, #96]	@ 0x60
 80041e4:	2301      	movs	r3, #1
 80041e6:	e0a3      	b.n	8004330 <HAL_FDCAN_GetRxMessage+0x200>
 80041e8:	68fb      	ldr	r3, [r7, #12]
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80041f0:	0e1b      	lsrs	r3, r3, #24
 80041f2:	f003 0301 	and.w	r3, r3, #1
 80041f6:	2b01      	cmp	r3, #1
 80041f8:	d10a      	bne.n	8004210 <HAL_FDCAN_GetRxMessage+0xe0>
 80041fa:	68fb      	ldr	r3, [r7, #12]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004202:	0a1b      	lsrs	r3, r3, #8
 8004204:	f003 0301 	and.w	r3, r3, #1
 8004208:	2b01      	cmp	r3, #1
 800420a:	d101      	bne.n	8004210 <HAL_FDCAN_GetRxMessage+0xe0>
 800420c:	2301      	movs	r3, #1
 800420e:	61fb      	str	r3, [r7, #28]
 8004210:	68fb      	ldr	r3, [r7, #12]
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8004218:	0a1b      	lsrs	r3, r3, #8
 800421a:	f003 0303 	and.w	r3, r3, #3
 800421e:	69fa      	ldr	r2, [r7, #28]
 8004220:	4413      	add	r3, r2
 8004222:	61fb      	str	r3, [r7, #28]
 8004224:	68fb      	ldr	r3, [r7, #12]
 8004226:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8004228:	69fa      	ldr	r2, [r7, #28]
 800422a:	4613      	mov	r3, r2
 800422c:	00db      	lsls	r3, r3, #3
 800422e:	4413      	add	r3, r2
 8004230:	00db      	lsls	r3, r3, #3
 8004232:	440b      	add	r3, r1
 8004234:	627b      	str	r3, [r7, #36]	@ 0x24
 8004236:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004238:	681b      	ldr	r3, [r3, #0]
 800423a:	f003 4280 	and.w	r2, r3, #1073741824	@ 0x40000000
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	605a      	str	r2, [r3, #4]
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	685b      	ldr	r3, [r3, #4]
 8004246:	2b00      	cmp	r3, #0
 8004248:	d107      	bne.n	800425a <HAL_FDCAN_GetRxMessage+0x12a>
 800424a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	0c9b      	lsrs	r3, r3, #18
 8004250:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	601a      	str	r2, [r3, #0]
 8004258:	e005      	b.n	8004266 <HAL_FDCAN_GetRxMessage+0x136>
 800425a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	601a      	str	r2, [r3, #0]
 8004266:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004268:	681b      	ldr	r3, [r3, #0]
 800426a:	f003 5200 	and.w	r2, r3, #536870912	@ 0x20000000
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	609a      	str	r2, [r3, #8]
 8004272:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004274:	681b      	ldr	r3, [r3, #0]
 8004276:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	611a      	str	r2, [r3, #16]
 800427e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004280:	3304      	adds	r3, #4
 8004282:	627b      	str	r3, [r7, #36]	@ 0x24
 8004284:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	b29a      	uxth	r2, r3
 800428a:	687b      	ldr	r3, [r7, #4]
 800428c:	61da      	str	r2, [r3, #28]
 800428e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004290:	681b      	ldr	r3, [r3, #0]
 8004292:	0c1b      	lsrs	r3, r3, #16
 8004294:	f003 020f 	and.w	r2, r3, #15
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	60da      	str	r2, [r3, #12]
 800429c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800429e:	681b      	ldr	r3, [r3, #0]
 80042a0:	f403 1280 	and.w	r2, r3, #1048576	@ 0x100000
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	615a      	str	r2, [r3, #20]
 80042a8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	f403 1200 	and.w	r2, r3, #2097152	@ 0x200000
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	619a      	str	r2, [r3, #24]
 80042b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	0e1b      	lsrs	r3, r3, #24
 80042ba:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	621a      	str	r2, [r3, #32]
 80042c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80042c4:	681b      	ldr	r3, [r3, #0]
 80042c6:	0fda      	lsrs	r2, r3, #31
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	625a      	str	r2, [r3, #36]	@ 0x24
 80042cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80042ce:	3304      	adds	r3, #4
 80042d0:	627b      	str	r3, [r7, #36]	@ 0x24
 80042d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80042d4:	617b      	str	r3, [r7, #20]
 80042d6:	2300      	movs	r3, #0
 80042d8:	623b      	str	r3, [r7, #32]
 80042da:	e00a      	b.n	80042f2 <HAL_FDCAN_GetRxMessage+0x1c2>
 80042dc:	697a      	ldr	r2, [r7, #20]
 80042de:	6a3b      	ldr	r3, [r7, #32]
 80042e0:	441a      	add	r2, r3
 80042e2:	6839      	ldr	r1, [r7, #0]
 80042e4:	6a3b      	ldr	r3, [r7, #32]
 80042e6:	440b      	add	r3, r1
 80042e8:	7812      	ldrb	r2, [r2, #0]
 80042ea:	701a      	strb	r2, [r3, #0]
 80042ec:	6a3b      	ldr	r3, [r7, #32]
 80042ee:	3301      	adds	r3, #1
 80042f0:	623b      	str	r3, [r7, #32]
 80042f2:	687b      	ldr	r3, [r7, #4]
 80042f4:	68db      	ldr	r3, [r3, #12]
 80042f6:	4a11      	ldr	r2, [pc, #68]	@ (800433c <HAL_FDCAN_GetRxMessage+0x20c>)
 80042f8:	5cd3      	ldrb	r3, [r2, r3]
 80042fa:	461a      	mov	r2, r3
 80042fc:	6a3b      	ldr	r3, [r7, #32]
 80042fe:	4293      	cmp	r3, r2
 8004300:	d3ec      	bcc.n	80042dc <HAL_FDCAN_GetRxMessage+0x1ac>
 8004302:	68bb      	ldr	r3, [r7, #8]
 8004304:	2b40      	cmp	r3, #64	@ 0x40
 8004306:	d105      	bne.n	8004314 <HAL_FDCAN_GetRxMessage+0x1e4>
 8004308:	68fb      	ldr	r3, [r7, #12]
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	69fa      	ldr	r2, [r7, #28]
 800430e:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8004312:	e004      	b.n	800431e <HAL_FDCAN_GetRxMessage+0x1ee>
 8004314:	68fb      	ldr	r3, [r7, #12]
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	69fa      	ldr	r2, [r7, #28]
 800431a:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 800431e:	2300      	movs	r3, #0
 8004320:	e006      	b.n	8004330 <HAL_FDCAN_GetRxMessage+0x200>
 8004322:	68fb      	ldr	r3, [r7, #12]
 8004324:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004326:	f043 0208 	orr.w	r2, r3, #8
 800432a:	68fb      	ldr	r3, [r7, #12]
 800432c:	661a      	str	r2, [r3, #96]	@ 0x60
 800432e:	2301      	movs	r3, #1
 8004330:	4618      	mov	r0, r3
 8004332:	372c      	adds	r7, #44	@ 0x2c
 8004334:	46bd      	mov	sp, r7
 8004336:	f85d 7b04 	ldr.w	r7, [sp], #4
 800433a:	4770      	bx	lr
 800433c:	08007390 	.word	0x08007390

08004340 <HAL_FDCAN_GetTxFifoFreeLevel>:
 8004340:	b480      	push	{r7}
 8004342:	b085      	sub	sp, #20
 8004344:	af00      	add	r7, sp, #0
 8004346:	6078      	str	r0, [r7, #4]
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8004350:	f003 0307 	and.w	r3, r3, #7
 8004354:	60fb      	str	r3, [r7, #12]
 8004356:	68fb      	ldr	r3, [r7, #12]
 8004358:	4618      	mov	r0, r3
 800435a:	3714      	adds	r7, #20
 800435c:	46bd      	mov	sp, r7
 800435e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004362:	4770      	bx	lr

08004364 <HAL_FDCAN_ActivateNotification>:
 8004364:	b480      	push	{r7}
 8004366:	b087      	sub	sp, #28
 8004368:	af00      	add	r7, sp, #0
 800436a:	60f8      	str	r0, [r7, #12]
 800436c:	60b9      	str	r1, [r7, #8]
 800436e:	607a      	str	r2, [r7, #4]
 8004370:	68fb      	ldr	r3, [r7, #12]
 8004372:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8004376:	75fb      	strb	r3, [r7, #23]
 8004378:	7dfb      	ldrb	r3, [r7, #23]
 800437a:	2b01      	cmp	r3, #1
 800437c:	d003      	beq.n	8004386 <HAL_FDCAN_ActivateNotification+0x22>
 800437e:	7dfb      	ldrb	r3, [r7, #23]
 8004380:	2b02      	cmp	r3, #2
 8004382:	f040 80c8 	bne.w	8004516 <HAL_FDCAN_ActivateNotification+0x1b2>
 8004386:	68fb      	ldr	r3, [r7, #12]
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800438c:	613b      	str	r3, [r7, #16]
 800438e:	68bb      	ldr	r3, [r7, #8]
 8004390:	f003 0307 	and.w	r3, r3, #7
 8004394:	2b00      	cmp	r3, #0
 8004396:	d004      	beq.n	80043a2 <HAL_FDCAN_ActivateNotification+0x3e>
 8004398:	693b      	ldr	r3, [r7, #16]
 800439a:	f003 0301 	and.w	r3, r3, #1
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d03b      	beq.n	800441a <HAL_FDCAN_ActivateNotification+0xb6>
 80043a2:	68bb      	ldr	r3, [r7, #8]
 80043a4:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80043a8:	2b00      	cmp	r3, #0
 80043aa:	d004      	beq.n	80043b6 <HAL_FDCAN_ActivateNotification+0x52>
 80043ac:	693b      	ldr	r3, [r7, #16]
 80043ae:	f003 0302 	and.w	r3, r3, #2
 80043b2:	2b00      	cmp	r3, #0
 80043b4:	d031      	beq.n	800441a <HAL_FDCAN_ActivateNotification+0xb6>
 80043b6:	68bb      	ldr	r3, [r7, #8]
 80043b8:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
 80043bc:	2b00      	cmp	r3, #0
 80043be:	d004      	beq.n	80043ca <HAL_FDCAN_ActivateNotification+0x66>
 80043c0:	693b      	ldr	r3, [r7, #16]
 80043c2:	f003 0304 	and.w	r3, r3, #4
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	d027      	beq.n	800441a <HAL_FDCAN_ActivateNotification+0xb6>
 80043ca:	68bb      	ldr	r3, [r7, #8]
 80043cc:	f403 53f0 	and.w	r3, r3, #7680	@ 0x1e00
 80043d0:	2b00      	cmp	r3, #0
 80043d2:	d004      	beq.n	80043de <HAL_FDCAN_ActivateNotification+0x7a>
 80043d4:	693b      	ldr	r3, [r7, #16]
 80043d6:	f003 0308 	and.w	r3, r3, #8
 80043da:	2b00      	cmp	r3, #0
 80043dc:	d01d      	beq.n	800441a <HAL_FDCAN_ActivateNotification+0xb6>
 80043de:	68bb      	ldr	r3, [r7, #8]
 80043e0:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d004      	beq.n	80043f2 <HAL_FDCAN_ActivateNotification+0x8e>
 80043e8:	693b      	ldr	r3, [r7, #16]
 80043ea:	f003 0310 	and.w	r3, r3, #16
 80043ee:	2b00      	cmp	r3, #0
 80043f0:	d013      	beq.n	800441a <HAL_FDCAN_ActivateNotification+0xb6>
 80043f2:	68bb      	ldr	r3, [r7, #8]
 80043f4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80043f8:	2b00      	cmp	r3, #0
 80043fa:	d004      	beq.n	8004406 <HAL_FDCAN_ActivateNotification+0xa2>
 80043fc:	693b      	ldr	r3, [r7, #16]
 80043fe:	f003 0320 	and.w	r3, r3, #32
 8004402:	2b00      	cmp	r3, #0
 8004404:	d009      	beq.n	800441a <HAL_FDCAN_ActivateNotification+0xb6>
 8004406:	68bb      	ldr	r3, [r7, #8]
 8004408:	f403 037c 	and.w	r3, r3, #16515072	@ 0xfc0000
 800440c:	2b00      	cmp	r3, #0
 800440e:	d00c      	beq.n	800442a <HAL_FDCAN_ActivateNotification+0xc6>
 8004410:	693b      	ldr	r3, [r7, #16]
 8004412:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004416:	2b00      	cmp	r3, #0
 8004418:	d107      	bne.n	800442a <HAL_FDCAN_ActivateNotification+0xc6>
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004420:	68fb      	ldr	r3, [r7, #12]
 8004422:	681b      	ldr	r3, [r3, #0]
 8004424:	f042 0201 	orr.w	r2, r2, #1
 8004428:	65da      	str	r2, [r3, #92]	@ 0x5c
 800442a:	68bb      	ldr	r3, [r7, #8]
 800442c:	f003 0307 	and.w	r3, r3, #7
 8004430:	2b00      	cmp	r3, #0
 8004432:	d004      	beq.n	800443e <HAL_FDCAN_ActivateNotification+0xda>
 8004434:	693b      	ldr	r3, [r7, #16]
 8004436:	f003 0301 	and.w	r3, r3, #1
 800443a:	2b00      	cmp	r3, #0
 800443c:	d13b      	bne.n	80044b6 <HAL_FDCAN_ActivateNotification+0x152>
 800443e:	68bb      	ldr	r3, [r7, #8]
 8004440:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004444:	2b00      	cmp	r3, #0
 8004446:	d004      	beq.n	8004452 <HAL_FDCAN_ActivateNotification+0xee>
 8004448:	693b      	ldr	r3, [r7, #16]
 800444a:	f003 0302 	and.w	r3, r3, #2
 800444e:	2b00      	cmp	r3, #0
 8004450:	d131      	bne.n	80044b6 <HAL_FDCAN_ActivateNotification+0x152>
 8004452:	68bb      	ldr	r3, [r7, #8]
 8004454:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
 8004458:	2b00      	cmp	r3, #0
 800445a:	d004      	beq.n	8004466 <HAL_FDCAN_ActivateNotification+0x102>
 800445c:	693b      	ldr	r3, [r7, #16]
 800445e:	f003 0304 	and.w	r3, r3, #4
 8004462:	2b00      	cmp	r3, #0
 8004464:	d127      	bne.n	80044b6 <HAL_FDCAN_ActivateNotification+0x152>
 8004466:	68bb      	ldr	r3, [r7, #8]
 8004468:	f403 53f0 	and.w	r3, r3, #7680	@ 0x1e00
 800446c:	2b00      	cmp	r3, #0
 800446e:	d004      	beq.n	800447a <HAL_FDCAN_ActivateNotification+0x116>
 8004470:	693b      	ldr	r3, [r7, #16]
 8004472:	f003 0308 	and.w	r3, r3, #8
 8004476:	2b00      	cmp	r3, #0
 8004478:	d11d      	bne.n	80044b6 <HAL_FDCAN_ActivateNotification+0x152>
 800447a:	68bb      	ldr	r3, [r7, #8]
 800447c:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8004480:	2b00      	cmp	r3, #0
 8004482:	d004      	beq.n	800448e <HAL_FDCAN_ActivateNotification+0x12a>
 8004484:	693b      	ldr	r3, [r7, #16]
 8004486:	f003 0310 	and.w	r3, r3, #16
 800448a:	2b00      	cmp	r3, #0
 800448c:	d113      	bne.n	80044b6 <HAL_FDCAN_ActivateNotification+0x152>
 800448e:	68bb      	ldr	r3, [r7, #8]
 8004490:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004494:	2b00      	cmp	r3, #0
 8004496:	d004      	beq.n	80044a2 <HAL_FDCAN_ActivateNotification+0x13e>
 8004498:	693b      	ldr	r3, [r7, #16]
 800449a:	f003 0320 	and.w	r3, r3, #32
 800449e:	2b00      	cmp	r3, #0
 80044a0:	d109      	bne.n	80044b6 <HAL_FDCAN_ActivateNotification+0x152>
 80044a2:	68bb      	ldr	r3, [r7, #8]
 80044a4:	f403 037c 	and.w	r3, r3, #16515072	@ 0xfc0000
 80044a8:	2b00      	cmp	r3, #0
 80044aa:	d00c      	beq.n	80044c6 <HAL_FDCAN_ActivateNotification+0x162>
 80044ac:	693b      	ldr	r3, [r7, #16]
 80044ae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80044b2:	2b00      	cmp	r3, #0
 80044b4:	d007      	beq.n	80044c6 <HAL_FDCAN_ActivateNotification+0x162>
 80044b6:	68fb      	ldr	r3, [r7, #12]
 80044b8:	681b      	ldr	r3, [r3, #0]
 80044ba:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	f042 0202 	orr.w	r2, r2, #2
 80044c4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80044c6:	68bb      	ldr	r3, [r7, #8]
 80044c8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80044cc:	2b00      	cmp	r3, #0
 80044ce:	d009      	beq.n	80044e4 <HAL_FDCAN_ActivateNotification+0x180>
 80044d0:	68fb      	ldr	r3, [r7, #12]
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	f8d3 10dc 	ldr.w	r1, [r3, #220]	@ 0xdc
 80044d8:	68fb      	ldr	r3, [r7, #12]
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	687a      	ldr	r2, [r7, #4]
 80044de:	430a      	orrs	r2, r1
 80044e0:	f8c3 20dc 	str.w	r2, [r3, #220]	@ 0xdc
 80044e4:	68bb      	ldr	r3, [r7, #8]
 80044e6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80044ea:	2b00      	cmp	r3, #0
 80044ec:	d009      	beq.n	8004502 <HAL_FDCAN_ActivateNotification+0x19e>
 80044ee:	68fb      	ldr	r3, [r7, #12]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	f8d3 10e0 	ldr.w	r1, [r3, #224]	@ 0xe0
 80044f6:	68fb      	ldr	r3, [r7, #12]
 80044f8:	681b      	ldr	r3, [r3, #0]
 80044fa:	687a      	ldr	r2, [r7, #4]
 80044fc:	430a      	orrs	r2, r1
 80044fe:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
 8004502:	68fb      	ldr	r3, [r7, #12]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8004508:	68fb      	ldr	r3, [r7, #12]
 800450a:	681b      	ldr	r3, [r3, #0]
 800450c:	68ba      	ldr	r2, [r7, #8]
 800450e:	430a      	orrs	r2, r1
 8004510:	655a      	str	r2, [r3, #84]	@ 0x54
 8004512:	2300      	movs	r3, #0
 8004514:	e006      	b.n	8004524 <HAL_FDCAN_ActivateNotification+0x1c0>
 8004516:	68fb      	ldr	r3, [r7, #12]
 8004518:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800451a:	f043 0202 	orr.w	r2, r3, #2
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	661a      	str	r2, [r3, #96]	@ 0x60
 8004522:	2301      	movs	r3, #1
 8004524:	4618      	mov	r0, r3
 8004526:	371c      	adds	r7, #28
 8004528:	46bd      	mov	sp, r7
 800452a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800452e:	4770      	bx	lr

08004530 <HAL_FDCAN_IRQHandler>:
 8004530:	b580      	push	{r7, lr}
 8004532:	b08c      	sub	sp, #48	@ 0x30
 8004534:	af00      	add	r7, sp, #0
 8004536:	6078      	str	r0, [r7, #4]
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800453e:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8004542:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800454a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800454c:	4013      	ands	r3, r2
 800454e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004556:	f003 0307 	and.w	r3, r3, #7
 800455a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004562:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8004564:	4013      	ands	r3, r2
 8004566:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	681b      	ldr	r3, [r3, #0]
 800456c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800456e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004572:	627b      	str	r3, [r7, #36]	@ 0x24
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	681b      	ldr	r3, [r3, #0]
 8004578:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800457a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800457c:	4013      	ands	r3, r2
 800457e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	681b      	ldr	r3, [r3, #0]
 8004584:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004586:	f403 0371 	and.w	r3, r3, #15794176	@ 0xf10000
 800458a:	623b      	str	r3, [r7, #32]
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004592:	6a3a      	ldr	r2, [r7, #32]
 8004594:	4013      	ands	r3, r2
 8004596:	623b      	str	r3, [r7, #32]
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800459e:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 80045a2:	61fb      	str	r3, [r7, #28]
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	681b      	ldr	r3, [r3, #0]
 80045a8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80045aa:	69fa      	ldr	r2, [r7, #28]
 80045ac:	4013      	ands	r3, r2
 80045ae:	61fb      	str	r3, [r7, #28]
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80045b6:	61bb      	str	r3, [r7, #24]
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	681b      	ldr	r3, [r3, #0]
 80045bc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80045be:	617b      	str	r3, [r7, #20]
 80045c0:	697b      	ldr	r3, [r7, #20]
 80045c2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d00b      	beq.n	80045e2 <HAL_FDCAN_IRQHandler+0xb2>
 80045ca:	69bb      	ldr	r3, [r7, #24]
 80045cc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80045d0:	2b00      	cmp	r3, #0
 80045d2:	d006      	beq.n	80045e2 <HAL_FDCAN_IRQHandler+0xb2>
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	2240      	movs	r2, #64	@ 0x40
 80045da:	651a      	str	r2, [r3, #80]	@ 0x50
 80045dc:	6878      	ldr	r0, [r7, #4]
 80045de:	f000 f916 	bl	800480e <HAL_FDCAN_HighPriorityMessageCallback>
 80045e2:	697b      	ldr	r3, [r7, #20]
 80045e4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	d019      	beq.n	8004620 <HAL_FDCAN_IRQHandler+0xf0>
 80045ec:	69bb      	ldr	r3, [r7, #24]
 80045ee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80045f2:	2b00      	cmp	r3, #0
 80045f4:	d014      	beq.n	8004620 <HAL_FDCAN_IRQHandler+0xf0>
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80045fe:	613b      	str	r3, [r7, #16]
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	681b      	ldr	r3, [r3, #0]
 8004604:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8004608:	693a      	ldr	r2, [r7, #16]
 800460a:	4013      	ands	r3, r2
 800460c:	613b      	str	r3, [r7, #16]
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004616:	651a      	str	r2, [r3, #80]	@ 0x50
 8004618:	6939      	ldr	r1, [r7, #16]
 800461a:	6878      	ldr	r0, [r7, #4]
 800461c:	f000 f8d8 	bl	80047d0 <HAL_FDCAN_TxBufferAbortCallback>
 8004620:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004622:	2b00      	cmp	r3, #0
 8004624:	d007      	beq.n	8004636 <HAL_FDCAN_IRQHandler+0x106>
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	681b      	ldr	r3, [r3, #0]
 800462a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800462c:	651a      	str	r2, [r3, #80]	@ 0x50
 800462e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004630:	6878      	ldr	r0, [r7, #4]
 8004632:	f000 f8a2 	bl	800477a <HAL_FDCAN_TxEventFifoCallback>
 8004636:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004638:	2b00      	cmp	r3, #0
 800463a:	d007      	beq.n	800464c <HAL_FDCAN_IRQHandler+0x11c>
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8004642:	651a      	str	r2, [r3, #80]	@ 0x50
 8004644:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8004646:	6878      	ldr	r0, [r7, #4]
 8004648:	f7fb fedc 	bl	8000404 <HAL_FDCAN_RxFifo0Callback>
 800464c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800464e:	2b00      	cmp	r3, #0
 8004650:	d007      	beq.n	8004662 <HAL_FDCAN_IRQHandler+0x132>
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	681b      	ldr	r3, [r3, #0]
 8004656:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004658:	651a      	str	r2, [r3, #80]	@ 0x50
 800465a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800465c:	6878      	ldr	r0, [r7, #4]
 800465e:	f000 f897 	bl	8004790 <HAL_FDCAN_RxFifo1Callback>
 8004662:	697b      	ldr	r3, [r7, #20]
 8004664:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004668:	2b00      	cmp	r3, #0
 800466a:	d00c      	beq.n	8004686 <HAL_FDCAN_IRQHandler+0x156>
 800466c:	69bb      	ldr	r3, [r7, #24]
 800466e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004672:	2b00      	cmp	r3, #0
 8004674:	d007      	beq.n	8004686 <HAL_FDCAN_IRQHandler+0x156>
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800467e:	651a      	str	r2, [r3, #80]	@ 0x50
 8004680:	6878      	ldr	r0, [r7, #4]
 8004682:	f000 f890 	bl	80047a6 <HAL_FDCAN_TxFifoEmptyCallback>
 8004686:	697b      	ldr	r3, [r7, #20]
 8004688:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800468c:	2b00      	cmp	r3, #0
 800468e:	d018      	beq.n	80046c2 <HAL_FDCAN_IRQHandler+0x192>
 8004690:	69bb      	ldr	r3, [r7, #24]
 8004692:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004696:	2b00      	cmp	r3, #0
 8004698:	d013      	beq.n	80046c2 <HAL_FDCAN_IRQHandler+0x192>
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80046a2:	60fb      	str	r3, [r7, #12]
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	681b      	ldr	r3, [r3, #0]
 80046a8:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 80046ac:	68fa      	ldr	r2, [r7, #12]
 80046ae:	4013      	ands	r3, r2
 80046b0:	60fb      	str	r3, [r7, #12]
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	2280      	movs	r2, #128	@ 0x80
 80046b8:	651a      	str	r2, [r3, #80]	@ 0x50
 80046ba:	68f9      	ldr	r1, [r7, #12]
 80046bc:	6878      	ldr	r0, [r7, #4]
 80046be:	f000 f87c 	bl	80047ba <HAL_FDCAN_TxBufferCompleteCallback>
 80046c2:	697b      	ldr	r3, [r7, #20]
 80046c4:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80046c8:	2b00      	cmp	r3, #0
 80046ca:	d00c      	beq.n	80046e6 <HAL_FDCAN_IRQHandler+0x1b6>
 80046cc:	69bb      	ldr	r3, [r7, #24]
 80046ce:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d007      	beq.n	80046e6 <HAL_FDCAN_IRQHandler+0x1b6>
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80046de:	651a      	str	r2, [r3, #80]	@ 0x50
 80046e0:	6878      	ldr	r0, [r7, #4]
 80046e2:	f000 f880 	bl	80047e6 <HAL_FDCAN_TimestampWraparoundCallback>
 80046e6:	697b      	ldr	r3, [r7, #20]
 80046e8:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80046ec:	2b00      	cmp	r3, #0
 80046ee:	d00c      	beq.n	800470a <HAL_FDCAN_IRQHandler+0x1da>
 80046f0:	69bb      	ldr	r3, [r7, #24]
 80046f2:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80046f6:	2b00      	cmp	r3, #0
 80046f8:	d007      	beq.n	800470a <HAL_FDCAN_IRQHandler+0x1da>
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8004702:	651a      	str	r2, [r3, #80]	@ 0x50
 8004704:	6878      	ldr	r0, [r7, #4]
 8004706:	f000 f878 	bl	80047fa <HAL_FDCAN_TimeoutOccurredCallback>
 800470a:	697b      	ldr	r3, [r7, #20]
 800470c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004710:	2b00      	cmp	r3, #0
 8004712:	d00f      	beq.n	8004734 <HAL_FDCAN_IRQHandler+0x204>
 8004714:	69bb      	ldr	r3, [r7, #24]
 8004716:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800471a:	2b00      	cmp	r3, #0
 800471c:	d00a      	beq.n	8004734 <HAL_FDCAN_IRQHandler+0x204>
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8004726:	651a      	str	r2, [r3, #80]	@ 0x50
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800472c:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	661a      	str	r2, [r3, #96]	@ 0x60
 8004734:	69fb      	ldr	r3, [r7, #28]
 8004736:	2b00      	cmp	r3, #0
 8004738:	d007      	beq.n	800474a <HAL_FDCAN_IRQHandler+0x21a>
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	681b      	ldr	r3, [r3, #0]
 800473e:	69fa      	ldr	r2, [r7, #28]
 8004740:	651a      	str	r2, [r3, #80]	@ 0x50
 8004742:	69f9      	ldr	r1, [r7, #28]
 8004744:	6878      	ldr	r0, [r7, #4]
 8004746:	f000 f876 	bl	8004836 <HAL_FDCAN_ErrorStatusCallback>
 800474a:	6a3b      	ldr	r3, [r7, #32]
 800474c:	2b00      	cmp	r3, #0
 800474e:	d009      	beq.n	8004764 <HAL_FDCAN_IRQHandler+0x234>
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	6a3a      	ldr	r2, [r7, #32]
 8004756:	651a      	str	r2, [r3, #80]	@ 0x50
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800475c:	6a3b      	ldr	r3, [r7, #32]
 800475e:	431a      	orrs	r2, r3
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	661a      	str	r2, [r3, #96]	@ 0x60
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004768:	2b00      	cmp	r3, #0
 800476a:	d002      	beq.n	8004772 <HAL_FDCAN_IRQHandler+0x242>
 800476c:	6878      	ldr	r0, [r7, #4]
 800476e:	f000 f858 	bl	8004822 <HAL_FDCAN_ErrorCallback>
 8004772:	bf00      	nop
 8004774:	3730      	adds	r7, #48	@ 0x30
 8004776:	46bd      	mov	sp, r7
 8004778:	bd80      	pop	{r7, pc}

0800477a <HAL_FDCAN_TxEventFifoCallback>:
 800477a:	b480      	push	{r7}
 800477c:	b083      	sub	sp, #12
 800477e:	af00      	add	r7, sp, #0
 8004780:	6078      	str	r0, [r7, #4]
 8004782:	6039      	str	r1, [r7, #0]
 8004784:	bf00      	nop
 8004786:	370c      	adds	r7, #12
 8004788:	46bd      	mov	sp, r7
 800478a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800478e:	4770      	bx	lr

08004790 <HAL_FDCAN_RxFifo1Callback>:
 8004790:	b480      	push	{r7}
 8004792:	b083      	sub	sp, #12
 8004794:	af00      	add	r7, sp, #0
 8004796:	6078      	str	r0, [r7, #4]
 8004798:	6039      	str	r1, [r7, #0]
 800479a:	bf00      	nop
 800479c:	370c      	adds	r7, #12
 800479e:	46bd      	mov	sp, r7
 80047a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047a4:	4770      	bx	lr

080047a6 <HAL_FDCAN_TxFifoEmptyCallback>:
 80047a6:	b480      	push	{r7}
 80047a8:	b083      	sub	sp, #12
 80047aa:	af00      	add	r7, sp, #0
 80047ac:	6078      	str	r0, [r7, #4]
 80047ae:	bf00      	nop
 80047b0:	370c      	adds	r7, #12
 80047b2:	46bd      	mov	sp, r7
 80047b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047b8:	4770      	bx	lr

080047ba <HAL_FDCAN_TxBufferCompleteCallback>:
 80047ba:	b480      	push	{r7}
 80047bc:	b083      	sub	sp, #12
 80047be:	af00      	add	r7, sp, #0
 80047c0:	6078      	str	r0, [r7, #4]
 80047c2:	6039      	str	r1, [r7, #0]
 80047c4:	bf00      	nop
 80047c6:	370c      	adds	r7, #12
 80047c8:	46bd      	mov	sp, r7
 80047ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047ce:	4770      	bx	lr

080047d0 <HAL_FDCAN_TxBufferAbortCallback>:
 80047d0:	b480      	push	{r7}
 80047d2:	b083      	sub	sp, #12
 80047d4:	af00      	add	r7, sp, #0
 80047d6:	6078      	str	r0, [r7, #4]
 80047d8:	6039      	str	r1, [r7, #0]
 80047da:	bf00      	nop
 80047dc:	370c      	adds	r7, #12
 80047de:	46bd      	mov	sp, r7
 80047e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047e4:	4770      	bx	lr

080047e6 <HAL_FDCAN_TimestampWraparoundCallback>:
 80047e6:	b480      	push	{r7}
 80047e8:	b083      	sub	sp, #12
 80047ea:	af00      	add	r7, sp, #0
 80047ec:	6078      	str	r0, [r7, #4]
 80047ee:	bf00      	nop
 80047f0:	370c      	adds	r7, #12
 80047f2:	46bd      	mov	sp, r7
 80047f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047f8:	4770      	bx	lr

080047fa <HAL_FDCAN_TimeoutOccurredCallback>:
 80047fa:	b480      	push	{r7}
 80047fc:	b083      	sub	sp, #12
 80047fe:	af00      	add	r7, sp, #0
 8004800:	6078      	str	r0, [r7, #4]
 8004802:	bf00      	nop
 8004804:	370c      	adds	r7, #12
 8004806:	46bd      	mov	sp, r7
 8004808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800480c:	4770      	bx	lr

0800480e <HAL_FDCAN_HighPriorityMessageCallback>:
 800480e:	b480      	push	{r7}
 8004810:	b083      	sub	sp, #12
 8004812:	af00      	add	r7, sp, #0
 8004814:	6078      	str	r0, [r7, #4]
 8004816:	bf00      	nop
 8004818:	370c      	adds	r7, #12
 800481a:	46bd      	mov	sp, r7
 800481c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004820:	4770      	bx	lr

08004822 <HAL_FDCAN_ErrorCallback>:
 8004822:	b480      	push	{r7}
 8004824:	b083      	sub	sp, #12
 8004826:	af00      	add	r7, sp, #0
 8004828:	6078      	str	r0, [r7, #4]
 800482a:	bf00      	nop
 800482c:	370c      	adds	r7, #12
 800482e:	46bd      	mov	sp, r7
 8004830:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004834:	4770      	bx	lr

08004836 <HAL_FDCAN_ErrorStatusCallback>:
 8004836:	b480      	push	{r7}
 8004838:	b083      	sub	sp, #12
 800483a:	af00      	add	r7, sp, #0
 800483c:	6078      	str	r0, [r7, #4]
 800483e:	6039      	str	r1, [r7, #0]
 8004840:	bf00      	nop
 8004842:	370c      	adds	r7, #12
 8004844:	46bd      	mov	sp, r7
 8004846:	f85d 7b04 	ldr.w	r7, [sp], #4
 800484a:	4770      	bx	lr

0800484c <FDCAN_CalcultateRamBlockAddresses>:
 800484c:	b480      	push	{r7}
 800484e:	b085      	sub	sp, #20
 8004850:	af00      	add	r7, sp, #0
 8004852:	6078      	str	r0, [r7, #4]
 8004854:	4b27      	ldr	r3, [pc, #156]	@ (80048f4 <FDCAN_CalcultateRamBlockAddresses+0xa8>)
 8004856:	60bb      	str	r3, [r7, #8]
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	68ba      	ldr	r2, [r7, #8]
 800485c:	641a      	str	r2, [r3, #64]	@ 0x40
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	681b      	ldr	r3, [r3, #0]
 8004862:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004866:	f423 11f8 	bic.w	r1, r3, #2031616	@ 0x1f0000
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800486e:	041a      	lsls	r2, r3, #16
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	430a      	orrs	r2, r1
 8004876:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800487a:	68bb      	ldr	r3, [r7, #8]
 800487c:	f103 0270 	add.w	r2, r3, #112	@ 0x70
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	645a      	str	r2, [r3, #68]	@ 0x44
 8004884:	687b      	ldr	r3, [r7, #4]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800488c:	f023 6170 	bic.w	r1, r3, #251658240	@ 0xf000000
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004894:	061a      	lsls	r2, r3, #24
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	430a      	orrs	r2, r1
 800489c:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80048a0:	68bb      	ldr	r3, [r7, #8]
 80048a2:	f103 02b0 	add.w	r2, r3, #176	@ 0xb0
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	649a      	str	r2, [r3, #72]	@ 0x48
 80048aa:	68bb      	ldr	r3, [r7, #8]
 80048ac:	f503 72c4 	add.w	r2, r3, #392	@ 0x188
 80048b0:	687b      	ldr	r3, [r7, #4]
 80048b2:	64da      	str	r2, [r3, #76]	@ 0x4c
 80048b4:	68bb      	ldr	r3, [r7, #8]
 80048b6:	f503 7218 	add.w	r2, r3, #608	@ 0x260
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	651a      	str	r2, [r3, #80]	@ 0x50
 80048be:	68bb      	ldr	r3, [r7, #8]
 80048c0:	f503 721e 	add.w	r2, r3, #632	@ 0x278
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	655a      	str	r2, [r3, #84]	@ 0x54
 80048c8:	68bb      	ldr	r3, [r7, #8]
 80048ca:	60fb      	str	r3, [r7, #12]
 80048cc:	e005      	b.n	80048da <FDCAN_CalcultateRamBlockAddresses+0x8e>
 80048ce:	68fb      	ldr	r3, [r7, #12]
 80048d0:	2200      	movs	r2, #0
 80048d2:	601a      	str	r2, [r3, #0]
 80048d4:	68fb      	ldr	r3, [r7, #12]
 80048d6:	3304      	adds	r3, #4
 80048d8:	60fb      	str	r3, [r7, #12]
 80048da:	68bb      	ldr	r3, [r7, #8]
 80048dc:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 80048e0:	68fa      	ldr	r2, [r7, #12]
 80048e2:	429a      	cmp	r2, r3
 80048e4:	d3f3      	bcc.n	80048ce <FDCAN_CalcultateRamBlockAddresses+0x82>
 80048e6:	bf00      	nop
 80048e8:	bf00      	nop
 80048ea:	3714      	adds	r7, #20
 80048ec:	46bd      	mov	sp, r7
 80048ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048f2:	4770      	bx	lr
 80048f4:	4000a400 	.word	0x4000a400

080048f8 <FDCAN_CopyMessageToRAM>:
 80048f8:	b480      	push	{r7}
 80048fa:	b089      	sub	sp, #36	@ 0x24
 80048fc:	af00      	add	r7, sp, #0
 80048fe:	60f8      	str	r0, [r7, #12]
 8004900:	60b9      	str	r1, [r7, #8]
 8004902:	607a      	str	r2, [r7, #4]
 8004904:	603b      	str	r3, [r7, #0]
 8004906:	68bb      	ldr	r3, [r7, #8]
 8004908:	685b      	ldr	r3, [r3, #4]
 800490a:	2b00      	cmp	r3, #0
 800490c:	d10a      	bne.n	8004924 <FDCAN_CopyMessageToRAM+0x2c>
 800490e:	68bb      	ldr	r3, [r7, #8]
 8004910:	691a      	ldr	r2, [r3, #16]
 8004912:	68bb      	ldr	r3, [r7, #8]
 8004914:	689b      	ldr	r3, [r3, #8]
 8004916:	431a      	orrs	r2, r3
 8004918:	68bb      	ldr	r3, [r7, #8]
 800491a:	681b      	ldr	r3, [r3, #0]
 800491c:	049b      	lsls	r3, r3, #18
 800491e:	4313      	orrs	r3, r2
 8004920:	61fb      	str	r3, [r7, #28]
 8004922:	e00a      	b.n	800493a <FDCAN_CopyMessageToRAM+0x42>
 8004924:	68bb      	ldr	r3, [r7, #8]
 8004926:	691a      	ldr	r2, [r3, #16]
 8004928:	68bb      	ldr	r3, [r7, #8]
 800492a:	689b      	ldr	r3, [r3, #8]
 800492c:	431a      	orrs	r2, r3
 800492e:	68bb      	ldr	r3, [r7, #8]
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	4313      	orrs	r3, r2
 8004934:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8004938:	61fb      	str	r3, [r7, #28]
 800493a:	68bb      	ldr	r3, [r7, #8]
 800493c:	6a1b      	ldr	r3, [r3, #32]
 800493e:	061a      	lsls	r2, r3, #24
 8004940:	68bb      	ldr	r3, [r7, #8]
 8004942:	69db      	ldr	r3, [r3, #28]
 8004944:	431a      	orrs	r2, r3
 8004946:	68bb      	ldr	r3, [r7, #8]
 8004948:	699b      	ldr	r3, [r3, #24]
 800494a:	431a      	orrs	r2, r3
 800494c:	68bb      	ldr	r3, [r7, #8]
 800494e:	695b      	ldr	r3, [r3, #20]
 8004950:	431a      	orrs	r2, r3
 8004952:	68bb      	ldr	r3, [r7, #8]
 8004954:	68db      	ldr	r3, [r3, #12]
 8004956:	041b      	lsls	r3, r3, #16
 8004958:	4313      	orrs	r3, r2
 800495a:	613b      	str	r3, [r7, #16]
 800495c:	68fb      	ldr	r3, [r7, #12]
 800495e:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8004960:	683a      	ldr	r2, [r7, #0]
 8004962:	4613      	mov	r3, r2
 8004964:	00db      	lsls	r3, r3, #3
 8004966:	4413      	add	r3, r2
 8004968:	00db      	lsls	r3, r3, #3
 800496a:	440b      	add	r3, r1
 800496c:	61bb      	str	r3, [r7, #24]
 800496e:	69bb      	ldr	r3, [r7, #24]
 8004970:	69fa      	ldr	r2, [r7, #28]
 8004972:	601a      	str	r2, [r3, #0]
 8004974:	69bb      	ldr	r3, [r7, #24]
 8004976:	3304      	adds	r3, #4
 8004978:	61bb      	str	r3, [r7, #24]
 800497a:	69bb      	ldr	r3, [r7, #24]
 800497c:	693a      	ldr	r2, [r7, #16]
 800497e:	601a      	str	r2, [r3, #0]
 8004980:	69bb      	ldr	r3, [r7, #24]
 8004982:	3304      	adds	r3, #4
 8004984:	61bb      	str	r3, [r7, #24]
 8004986:	2300      	movs	r3, #0
 8004988:	617b      	str	r3, [r7, #20]
 800498a:	e020      	b.n	80049ce <FDCAN_CopyMessageToRAM+0xd6>
 800498c:	697b      	ldr	r3, [r7, #20]
 800498e:	3303      	adds	r3, #3
 8004990:	687a      	ldr	r2, [r7, #4]
 8004992:	4413      	add	r3, r2
 8004994:	781b      	ldrb	r3, [r3, #0]
 8004996:	061a      	lsls	r2, r3, #24
 8004998:	697b      	ldr	r3, [r7, #20]
 800499a:	3302      	adds	r3, #2
 800499c:	6879      	ldr	r1, [r7, #4]
 800499e:	440b      	add	r3, r1
 80049a0:	781b      	ldrb	r3, [r3, #0]
 80049a2:	041b      	lsls	r3, r3, #16
 80049a4:	431a      	orrs	r2, r3
 80049a6:	697b      	ldr	r3, [r7, #20]
 80049a8:	3301      	adds	r3, #1
 80049aa:	6879      	ldr	r1, [r7, #4]
 80049ac:	440b      	add	r3, r1
 80049ae:	781b      	ldrb	r3, [r3, #0]
 80049b0:	021b      	lsls	r3, r3, #8
 80049b2:	4313      	orrs	r3, r2
 80049b4:	6879      	ldr	r1, [r7, #4]
 80049b6:	697a      	ldr	r2, [r7, #20]
 80049b8:	440a      	add	r2, r1
 80049ba:	7812      	ldrb	r2, [r2, #0]
 80049bc:	431a      	orrs	r2, r3
 80049be:	69bb      	ldr	r3, [r7, #24]
 80049c0:	601a      	str	r2, [r3, #0]
 80049c2:	69bb      	ldr	r3, [r7, #24]
 80049c4:	3304      	adds	r3, #4
 80049c6:	61bb      	str	r3, [r7, #24]
 80049c8:	697b      	ldr	r3, [r7, #20]
 80049ca:	3304      	adds	r3, #4
 80049cc:	617b      	str	r3, [r7, #20]
 80049ce:	68bb      	ldr	r3, [r7, #8]
 80049d0:	68db      	ldr	r3, [r3, #12]
 80049d2:	4a06      	ldr	r2, [pc, #24]	@ (80049ec <FDCAN_CopyMessageToRAM+0xf4>)
 80049d4:	5cd3      	ldrb	r3, [r2, r3]
 80049d6:	461a      	mov	r2, r3
 80049d8:	697b      	ldr	r3, [r7, #20]
 80049da:	4293      	cmp	r3, r2
 80049dc:	d3d6      	bcc.n	800498c <FDCAN_CopyMessageToRAM+0x94>
 80049de:	bf00      	nop
 80049e0:	bf00      	nop
 80049e2:	3724      	adds	r7, #36	@ 0x24
 80049e4:	46bd      	mov	sp, r7
 80049e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049ea:	4770      	bx	lr
 80049ec:	08007390 	.word	0x08007390

080049f0 <HAL_GPIO_Init>:
 80049f0:	b480      	push	{r7}
 80049f2:	b087      	sub	sp, #28
 80049f4:	af00      	add	r7, sp, #0
 80049f6:	6078      	str	r0, [r7, #4]
 80049f8:	6039      	str	r1, [r7, #0]
 80049fa:	2300      	movs	r3, #0
 80049fc:	617b      	str	r3, [r7, #20]
 80049fe:	e15a      	b.n	8004cb6 <HAL_GPIO_Init+0x2c6>
 8004a00:	683b      	ldr	r3, [r7, #0]
 8004a02:	681a      	ldr	r2, [r3, #0]
 8004a04:	2101      	movs	r1, #1
 8004a06:	697b      	ldr	r3, [r7, #20]
 8004a08:	fa01 f303 	lsl.w	r3, r1, r3
 8004a0c:	4013      	ands	r3, r2
 8004a0e:	60fb      	str	r3, [r7, #12]
 8004a10:	68fb      	ldr	r3, [r7, #12]
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	f000 814c 	beq.w	8004cb0 <HAL_GPIO_Init+0x2c0>
 8004a18:	683b      	ldr	r3, [r7, #0]
 8004a1a:	685b      	ldr	r3, [r3, #4]
 8004a1c:	f003 0303 	and.w	r3, r3, #3
 8004a20:	2b01      	cmp	r3, #1
 8004a22:	d005      	beq.n	8004a30 <HAL_GPIO_Init+0x40>
 8004a24:	683b      	ldr	r3, [r7, #0]
 8004a26:	685b      	ldr	r3, [r3, #4]
 8004a28:	f003 0303 	and.w	r3, r3, #3
 8004a2c:	2b02      	cmp	r3, #2
 8004a2e:	d130      	bne.n	8004a92 <HAL_GPIO_Init+0xa2>
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	689b      	ldr	r3, [r3, #8]
 8004a34:	613b      	str	r3, [r7, #16]
 8004a36:	697b      	ldr	r3, [r7, #20]
 8004a38:	005b      	lsls	r3, r3, #1
 8004a3a:	2203      	movs	r2, #3
 8004a3c:	fa02 f303 	lsl.w	r3, r2, r3
 8004a40:	43db      	mvns	r3, r3
 8004a42:	693a      	ldr	r2, [r7, #16]
 8004a44:	4013      	ands	r3, r2
 8004a46:	613b      	str	r3, [r7, #16]
 8004a48:	683b      	ldr	r3, [r7, #0]
 8004a4a:	68da      	ldr	r2, [r3, #12]
 8004a4c:	697b      	ldr	r3, [r7, #20]
 8004a4e:	005b      	lsls	r3, r3, #1
 8004a50:	fa02 f303 	lsl.w	r3, r2, r3
 8004a54:	693a      	ldr	r2, [r7, #16]
 8004a56:	4313      	orrs	r3, r2
 8004a58:	613b      	str	r3, [r7, #16]
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	693a      	ldr	r2, [r7, #16]
 8004a5e:	609a      	str	r2, [r3, #8]
 8004a60:	687b      	ldr	r3, [r7, #4]
 8004a62:	685b      	ldr	r3, [r3, #4]
 8004a64:	613b      	str	r3, [r7, #16]
 8004a66:	2201      	movs	r2, #1
 8004a68:	697b      	ldr	r3, [r7, #20]
 8004a6a:	fa02 f303 	lsl.w	r3, r2, r3
 8004a6e:	43db      	mvns	r3, r3
 8004a70:	693a      	ldr	r2, [r7, #16]
 8004a72:	4013      	ands	r3, r2
 8004a74:	613b      	str	r3, [r7, #16]
 8004a76:	683b      	ldr	r3, [r7, #0]
 8004a78:	685b      	ldr	r3, [r3, #4]
 8004a7a:	091b      	lsrs	r3, r3, #4
 8004a7c:	f003 0201 	and.w	r2, r3, #1
 8004a80:	697b      	ldr	r3, [r7, #20]
 8004a82:	fa02 f303 	lsl.w	r3, r2, r3
 8004a86:	693a      	ldr	r2, [r7, #16]
 8004a88:	4313      	orrs	r3, r2
 8004a8a:	613b      	str	r3, [r7, #16]
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	693a      	ldr	r2, [r7, #16]
 8004a90:	605a      	str	r2, [r3, #4]
 8004a92:	683b      	ldr	r3, [r7, #0]
 8004a94:	685b      	ldr	r3, [r3, #4]
 8004a96:	f003 0303 	and.w	r3, r3, #3
 8004a9a:	2b03      	cmp	r3, #3
 8004a9c:	d017      	beq.n	8004ace <HAL_GPIO_Init+0xde>
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	68db      	ldr	r3, [r3, #12]
 8004aa2:	613b      	str	r3, [r7, #16]
 8004aa4:	697b      	ldr	r3, [r7, #20]
 8004aa6:	005b      	lsls	r3, r3, #1
 8004aa8:	2203      	movs	r2, #3
 8004aaa:	fa02 f303 	lsl.w	r3, r2, r3
 8004aae:	43db      	mvns	r3, r3
 8004ab0:	693a      	ldr	r2, [r7, #16]
 8004ab2:	4013      	ands	r3, r2
 8004ab4:	613b      	str	r3, [r7, #16]
 8004ab6:	683b      	ldr	r3, [r7, #0]
 8004ab8:	689a      	ldr	r2, [r3, #8]
 8004aba:	697b      	ldr	r3, [r7, #20]
 8004abc:	005b      	lsls	r3, r3, #1
 8004abe:	fa02 f303 	lsl.w	r3, r2, r3
 8004ac2:	693a      	ldr	r2, [r7, #16]
 8004ac4:	4313      	orrs	r3, r2
 8004ac6:	613b      	str	r3, [r7, #16]
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	693a      	ldr	r2, [r7, #16]
 8004acc:	60da      	str	r2, [r3, #12]
 8004ace:	683b      	ldr	r3, [r7, #0]
 8004ad0:	685b      	ldr	r3, [r3, #4]
 8004ad2:	f003 0303 	and.w	r3, r3, #3
 8004ad6:	2b02      	cmp	r3, #2
 8004ad8:	d123      	bne.n	8004b22 <HAL_GPIO_Init+0x132>
 8004ada:	697b      	ldr	r3, [r7, #20]
 8004adc:	08da      	lsrs	r2, r3, #3
 8004ade:	687b      	ldr	r3, [r7, #4]
 8004ae0:	3208      	adds	r2, #8
 8004ae2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004ae6:	613b      	str	r3, [r7, #16]
 8004ae8:	697b      	ldr	r3, [r7, #20]
 8004aea:	f003 0307 	and.w	r3, r3, #7
 8004aee:	009b      	lsls	r3, r3, #2
 8004af0:	220f      	movs	r2, #15
 8004af2:	fa02 f303 	lsl.w	r3, r2, r3
 8004af6:	43db      	mvns	r3, r3
 8004af8:	693a      	ldr	r2, [r7, #16]
 8004afa:	4013      	ands	r3, r2
 8004afc:	613b      	str	r3, [r7, #16]
 8004afe:	683b      	ldr	r3, [r7, #0]
 8004b00:	691a      	ldr	r2, [r3, #16]
 8004b02:	697b      	ldr	r3, [r7, #20]
 8004b04:	f003 0307 	and.w	r3, r3, #7
 8004b08:	009b      	lsls	r3, r3, #2
 8004b0a:	fa02 f303 	lsl.w	r3, r2, r3
 8004b0e:	693a      	ldr	r2, [r7, #16]
 8004b10:	4313      	orrs	r3, r2
 8004b12:	613b      	str	r3, [r7, #16]
 8004b14:	697b      	ldr	r3, [r7, #20]
 8004b16:	08da      	lsrs	r2, r3, #3
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	3208      	adds	r2, #8
 8004b1c:	6939      	ldr	r1, [r7, #16]
 8004b1e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	681b      	ldr	r3, [r3, #0]
 8004b26:	613b      	str	r3, [r7, #16]
 8004b28:	697b      	ldr	r3, [r7, #20]
 8004b2a:	005b      	lsls	r3, r3, #1
 8004b2c:	2203      	movs	r2, #3
 8004b2e:	fa02 f303 	lsl.w	r3, r2, r3
 8004b32:	43db      	mvns	r3, r3
 8004b34:	693a      	ldr	r2, [r7, #16]
 8004b36:	4013      	ands	r3, r2
 8004b38:	613b      	str	r3, [r7, #16]
 8004b3a:	683b      	ldr	r3, [r7, #0]
 8004b3c:	685b      	ldr	r3, [r3, #4]
 8004b3e:	f003 0203 	and.w	r2, r3, #3
 8004b42:	697b      	ldr	r3, [r7, #20]
 8004b44:	005b      	lsls	r3, r3, #1
 8004b46:	fa02 f303 	lsl.w	r3, r2, r3
 8004b4a:	693a      	ldr	r2, [r7, #16]
 8004b4c:	4313      	orrs	r3, r2
 8004b4e:	613b      	str	r3, [r7, #16]
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	693a      	ldr	r2, [r7, #16]
 8004b54:	601a      	str	r2, [r3, #0]
 8004b56:	683b      	ldr	r3, [r7, #0]
 8004b58:	685b      	ldr	r3, [r3, #4]
 8004b5a:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004b5e:	2b00      	cmp	r3, #0
 8004b60:	f000 80a6 	beq.w	8004cb0 <HAL_GPIO_Init+0x2c0>
 8004b64:	4b5b      	ldr	r3, [pc, #364]	@ (8004cd4 <HAL_GPIO_Init+0x2e4>)
 8004b66:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004b68:	4a5a      	ldr	r2, [pc, #360]	@ (8004cd4 <HAL_GPIO_Init+0x2e4>)
 8004b6a:	f043 0301 	orr.w	r3, r3, #1
 8004b6e:	6613      	str	r3, [r2, #96]	@ 0x60
 8004b70:	4b58      	ldr	r3, [pc, #352]	@ (8004cd4 <HAL_GPIO_Init+0x2e4>)
 8004b72:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004b74:	f003 0301 	and.w	r3, r3, #1
 8004b78:	60bb      	str	r3, [r7, #8]
 8004b7a:	68bb      	ldr	r3, [r7, #8]
 8004b7c:	4a56      	ldr	r2, [pc, #344]	@ (8004cd8 <HAL_GPIO_Init+0x2e8>)
 8004b7e:	697b      	ldr	r3, [r7, #20]
 8004b80:	089b      	lsrs	r3, r3, #2
 8004b82:	3302      	adds	r3, #2
 8004b84:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004b88:	613b      	str	r3, [r7, #16]
 8004b8a:	697b      	ldr	r3, [r7, #20]
 8004b8c:	f003 0303 	and.w	r3, r3, #3
 8004b90:	009b      	lsls	r3, r3, #2
 8004b92:	220f      	movs	r2, #15
 8004b94:	fa02 f303 	lsl.w	r3, r2, r3
 8004b98:	43db      	mvns	r3, r3
 8004b9a:	693a      	ldr	r2, [r7, #16]
 8004b9c:	4013      	ands	r3, r2
 8004b9e:	613b      	str	r3, [r7, #16]
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8004ba6:	d01f      	beq.n	8004be8 <HAL_GPIO_Init+0x1f8>
 8004ba8:	687b      	ldr	r3, [r7, #4]
 8004baa:	4a4c      	ldr	r2, [pc, #304]	@ (8004cdc <HAL_GPIO_Init+0x2ec>)
 8004bac:	4293      	cmp	r3, r2
 8004bae:	d019      	beq.n	8004be4 <HAL_GPIO_Init+0x1f4>
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	4a4b      	ldr	r2, [pc, #300]	@ (8004ce0 <HAL_GPIO_Init+0x2f0>)
 8004bb4:	4293      	cmp	r3, r2
 8004bb6:	d013      	beq.n	8004be0 <HAL_GPIO_Init+0x1f0>
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	4a4a      	ldr	r2, [pc, #296]	@ (8004ce4 <HAL_GPIO_Init+0x2f4>)
 8004bbc:	4293      	cmp	r3, r2
 8004bbe:	d00d      	beq.n	8004bdc <HAL_GPIO_Init+0x1ec>
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	4a49      	ldr	r2, [pc, #292]	@ (8004ce8 <HAL_GPIO_Init+0x2f8>)
 8004bc4:	4293      	cmp	r3, r2
 8004bc6:	d007      	beq.n	8004bd8 <HAL_GPIO_Init+0x1e8>
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	4a48      	ldr	r2, [pc, #288]	@ (8004cec <HAL_GPIO_Init+0x2fc>)
 8004bcc:	4293      	cmp	r3, r2
 8004bce:	d101      	bne.n	8004bd4 <HAL_GPIO_Init+0x1e4>
 8004bd0:	2305      	movs	r3, #5
 8004bd2:	e00a      	b.n	8004bea <HAL_GPIO_Init+0x1fa>
 8004bd4:	2306      	movs	r3, #6
 8004bd6:	e008      	b.n	8004bea <HAL_GPIO_Init+0x1fa>
 8004bd8:	2304      	movs	r3, #4
 8004bda:	e006      	b.n	8004bea <HAL_GPIO_Init+0x1fa>
 8004bdc:	2303      	movs	r3, #3
 8004bde:	e004      	b.n	8004bea <HAL_GPIO_Init+0x1fa>
 8004be0:	2302      	movs	r3, #2
 8004be2:	e002      	b.n	8004bea <HAL_GPIO_Init+0x1fa>
 8004be4:	2301      	movs	r3, #1
 8004be6:	e000      	b.n	8004bea <HAL_GPIO_Init+0x1fa>
 8004be8:	2300      	movs	r3, #0
 8004bea:	697a      	ldr	r2, [r7, #20]
 8004bec:	f002 0203 	and.w	r2, r2, #3
 8004bf0:	0092      	lsls	r2, r2, #2
 8004bf2:	4093      	lsls	r3, r2
 8004bf4:	693a      	ldr	r2, [r7, #16]
 8004bf6:	4313      	orrs	r3, r2
 8004bf8:	613b      	str	r3, [r7, #16]
 8004bfa:	4937      	ldr	r1, [pc, #220]	@ (8004cd8 <HAL_GPIO_Init+0x2e8>)
 8004bfc:	697b      	ldr	r3, [r7, #20]
 8004bfe:	089b      	lsrs	r3, r3, #2
 8004c00:	3302      	adds	r3, #2
 8004c02:	693a      	ldr	r2, [r7, #16]
 8004c04:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004c08:	4b39      	ldr	r3, [pc, #228]	@ (8004cf0 <HAL_GPIO_Init+0x300>)
 8004c0a:	689b      	ldr	r3, [r3, #8]
 8004c0c:	613b      	str	r3, [r7, #16]
 8004c0e:	68fb      	ldr	r3, [r7, #12]
 8004c10:	43db      	mvns	r3, r3
 8004c12:	693a      	ldr	r2, [r7, #16]
 8004c14:	4013      	ands	r3, r2
 8004c16:	613b      	str	r3, [r7, #16]
 8004c18:	683b      	ldr	r3, [r7, #0]
 8004c1a:	685b      	ldr	r3, [r3, #4]
 8004c1c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004c20:	2b00      	cmp	r3, #0
 8004c22:	d003      	beq.n	8004c2c <HAL_GPIO_Init+0x23c>
 8004c24:	693a      	ldr	r2, [r7, #16]
 8004c26:	68fb      	ldr	r3, [r7, #12]
 8004c28:	4313      	orrs	r3, r2
 8004c2a:	613b      	str	r3, [r7, #16]
 8004c2c:	4a30      	ldr	r2, [pc, #192]	@ (8004cf0 <HAL_GPIO_Init+0x300>)
 8004c2e:	693b      	ldr	r3, [r7, #16]
 8004c30:	6093      	str	r3, [r2, #8]
 8004c32:	4b2f      	ldr	r3, [pc, #188]	@ (8004cf0 <HAL_GPIO_Init+0x300>)
 8004c34:	68db      	ldr	r3, [r3, #12]
 8004c36:	613b      	str	r3, [r7, #16]
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	43db      	mvns	r3, r3
 8004c3c:	693a      	ldr	r2, [r7, #16]
 8004c3e:	4013      	ands	r3, r2
 8004c40:	613b      	str	r3, [r7, #16]
 8004c42:	683b      	ldr	r3, [r7, #0]
 8004c44:	685b      	ldr	r3, [r3, #4]
 8004c46:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004c4a:	2b00      	cmp	r3, #0
 8004c4c:	d003      	beq.n	8004c56 <HAL_GPIO_Init+0x266>
 8004c4e:	693a      	ldr	r2, [r7, #16]
 8004c50:	68fb      	ldr	r3, [r7, #12]
 8004c52:	4313      	orrs	r3, r2
 8004c54:	613b      	str	r3, [r7, #16]
 8004c56:	4a26      	ldr	r2, [pc, #152]	@ (8004cf0 <HAL_GPIO_Init+0x300>)
 8004c58:	693b      	ldr	r3, [r7, #16]
 8004c5a:	60d3      	str	r3, [r2, #12]
 8004c5c:	4b24      	ldr	r3, [pc, #144]	@ (8004cf0 <HAL_GPIO_Init+0x300>)
 8004c5e:	685b      	ldr	r3, [r3, #4]
 8004c60:	613b      	str	r3, [r7, #16]
 8004c62:	68fb      	ldr	r3, [r7, #12]
 8004c64:	43db      	mvns	r3, r3
 8004c66:	693a      	ldr	r2, [r7, #16]
 8004c68:	4013      	ands	r3, r2
 8004c6a:	613b      	str	r3, [r7, #16]
 8004c6c:	683b      	ldr	r3, [r7, #0]
 8004c6e:	685b      	ldr	r3, [r3, #4]
 8004c70:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004c74:	2b00      	cmp	r3, #0
 8004c76:	d003      	beq.n	8004c80 <HAL_GPIO_Init+0x290>
 8004c78:	693a      	ldr	r2, [r7, #16]
 8004c7a:	68fb      	ldr	r3, [r7, #12]
 8004c7c:	4313      	orrs	r3, r2
 8004c7e:	613b      	str	r3, [r7, #16]
 8004c80:	4a1b      	ldr	r2, [pc, #108]	@ (8004cf0 <HAL_GPIO_Init+0x300>)
 8004c82:	693b      	ldr	r3, [r7, #16]
 8004c84:	6053      	str	r3, [r2, #4]
 8004c86:	4b1a      	ldr	r3, [pc, #104]	@ (8004cf0 <HAL_GPIO_Init+0x300>)
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	613b      	str	r3, [r7, #16]
 8004c8c:	68fb      	ldr	r3, [r7, #12]
 8004c8e:	43db      	mvns	r3, r3
 8004c90:	693a      	ldr	r2, [r7, #16]
 8004c92:	4013      	ands	r3, r2
 8004c94:	613b      	str	r3, [r7, #16]
 8004c96:	683b      	ldr	r3, [r7, #0]
 8004c98:	685b      	ldr	r3, [r3, #4]
 8004c9a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004c9e:	2b00      	cmp	r3, #0
 8004ca0:	d003      	beq.n	8004caa <HAL_GPIO_Init+0x2ba>
 8004ca2:	693a      	ldr	r2, [r7, #16]
 8004ca4:	68fb      	ldr	r3, [r7, #12]
 8004ca6:	4313      	orrs	r3, r2
 8004ca8:	613b      	str	r3, [r7, #16]
 8004caa:	4a11      	ldr	r2, [pc, #68]	@ (8004cf0 <HAL_GPIO_Init+0x300>)
 8004cac:	693b      	ldr	r3, [r7, #16]
 8004cae:	6013      	str	r3, [r2, #0]
 8004cb0:	697b      	ldr	r3, [r7, #20]
 8004cb2:	3301      	adds	r3, #1
 8004cb4:	617b      	str	r3, [r7, #20]
 8004cb6:	683b      	ldr	r3, [r7, #0]
 8004cb8:	681a      	ldr	r2, [r3, #0]
 8004cba:	697b      	ldr	r3, [r7, #20]
 8004cbc:	fa22 f303 	lsr.w	r3, r2, r3
 8004cc0:	2b00      	cmp	r3, #0
 8004cc2:	f47f ae9d 	bne.w	8004a00 <HAL_GPIO_Init+0x10>
 8004cc6:	bf00      	nop
 8004cc8:	bf00      	nop
 8004cca:	371c      	adds	r7, #28
 8004ccc:	46bd      	mov	sp, r7
 8004cce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cd2:	4770      	bx	lr
 8004cd4:	40021000 	.word	0x40021000
 8004cd8:	40010000 	.word	0x40010000
 8004cdc:	48000400 	.word	0x48000400
 8004ce0:	48000800 	.word	0x48000800
 8004ce4:	48000c00 	.word	0x48000c00
 8004ce8:	48001000 	.word	0x48001000
 8004cec:	48001400 	.word	0x48001400
 8004cf0:	40010400 	.word	0x40010400

08004cf4 <HAL_GPIO_WritePin>:
 8004cf4:	b480      	push	{r7}
 8004cf6:	b083      	sub	sp, #12
 8004cf8:	af00      	add	r7, sp, #0
 8004cfa:	6078      	str	r0, [r7, #4]
 8004cfc:	460b      	mov	r3, r1
 8004cfe:	807b      	strh	r3, [r7, #2]
 8004d00:	4613      	mov	r3, r2
 8004d02:	707b      	strb	r3, [r7, #1]
 8004d04:	787b      	ldrb	r3, [r7, #1]
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d003      	beq.n	8004d12 <HAL_GPIO_WritePin+0x1e>
 8004d0a:	887a      	ldrh	r2, [r7, #2]
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	619a      	str	r2, [r3, #24]
 8004d10:	e002      	b.n	8004d18 <HAL_GPIO_WritePin+0x24>
 8004d12:	887a      	ldrh	r2, [r7, #2]
 8004d14:	687b      	ldr	r3, [r7, #4]
 8004d16:	629a      	str	r2, [r3, #40]	@ 0x28
 8004d18:	bf00      	nop
 8004d1a:	370c      	adds	r7, #12
 8004d1c:	46bd      	mov	sp, r7
 8004d1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d22:	4770      	bx	lr

08004d24 <HAL_PWREx_ControlVoltageScaling>:
 8004d24:	b480      	push	{r7}
 8004d26:	b085      	sub	sp, #20
 8004d28:	af00      	add	r7, sp, #0
 8004d2a:	6078      	str	r0, [r7, #4]
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	2b00      	cmp	r3, #0
 8004d30:	d141      	bne.n	8004db6 <HAL_PWREx_ControlVoltageScaling+0x92>
 8004d32:	4b4b      	ldr	r3, [pc, #300]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8004d3a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004d3e:	d131      	bne.n	8004da4 <HAL_PWREx_ControlVoltageScaling+0x80>
 8004d40:	4b47      	ldr	r3, [pc, #284]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004d42:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004d46:	4a46      	ldr	r2, [pc, #280]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004d48:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004d4c:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004d50:	4b43      	ldr	r3, [pc, #268]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004d52:	681b      	ldr	r3, [r3, #0]
 8004d54:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8004d58:	4a41      	ldr	r2, [pc, #260]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004d5a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004d5e:	6013      	str	r3, [r2, #0]
 8004d60:	4b40      	ldr	r3, [pc, #256]	@ (8004e64 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	2232      	movs	r2, #50	@ 0x32
 8004d66:	fb02 f303 	mul.w	r3, r2, r3
 8004d6a:	4a3f      	ldr	r2, [pc, #252]	@ (8004e68 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8004d6c:	fba2 2303 	umull	r2, r3, r2, r3
 8004d70:	0c9b      	lsrs	r3, r3, #18
 8004d72:	3301      	adds	r3, #1
 8004d74:	60fb      	str	r3, [r7, #12]
 8004d76:	e002      	b.n	8004d7e <HAL_PWREx_ControlVoltageScaling+0x5a>
 8004d78:	68fb      	ldr	r3, [r7, #12]
 8004d7a:	3b01      	subs	r3, #1
 8004d7c:	60fb      	str	r3, [r7, #12]
 8004d7e:	4b38      	ldr	r3, [pc, #224]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004d80:	695b      	ldr	r3, [r3, #20]
 8004d82:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004d86:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004d8a:	d102      	bne.n	8004d92 <HAL_PWREx_ControlVoltageScaling+0x6e>
 8004d8c:	68fb      	ldr	r3, [r7, #12]
 8004d8e:	2b00      	cmp	r3, #0
 8004d90:	d1f2      	bne.n	8004d78 <HAL_PWREx_ControlVoltageScaling+0x54>
 8004d92:	4b33      	ldr	r3, [pc, #204]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004d94:	695b      	ldr	r3, [r3, #20]
 8004d96:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004d9a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004d9e:	d158      	bne.n	8004e52 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004da0:	2303      	movs	r3, #3
 8004da2:	e057      	b.n	8004e54 <HAL_PWREx_ControlVoltageScaling+0x130>
 8004da4:	4b2e      	ldr	r3, [pc, #184]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004da6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004daa:	4a2d      	ldr	r2, [pc, #180]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004dac:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004db0:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004db4:	e04d      	b.n	8004e52 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004db6:	687b      	ldr	r3, [r7, #4]
 8004db8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004dbc:	d141      	bne.n	8004e42 <HAL_PWREx_ControlVoltageScaling+0x11e>
 8004dbe:	4b28      	ldr	r3, [pc, #160]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004dc0:	681b      	ldr	r3, [r3, #0]
 8004dc2:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8004dc6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004dca:	d131      	bne.n	8004e30 <HAL_PWREx_ControlVoltageScaling+0x10c>
 8004dcc:	4b24      	ldr	r3, [pc, #144]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004dce:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004dd2:	4a23      	ldr	r2, [pc, #140]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004dd4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004dd8:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004ddc:	4b20      	ldr	r3, [pc, #128]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004dde:	681b      	ldr	r3, [r3, #0]
 8004de0:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8004de4:	4a1e      	ldr	r2, [pc, #120]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004de6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004dea:	6013      	str	r3, [r2, #0]
 8004dec:	4b1d      	ldr	r3, [pc, #116]	@ (8004e64 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	2232      	movs	r2, #50	@ 0x32
 8004df2:	fb02 f303 	mul.w	r3, r2, r3
 8004df6:	4a1c      	ldr	r2, [pc, #112]	@ (8004e68 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8004df8:	fba2 2303 	umull	r2, r3, r2, r3
 8004dfc:	0c9b      	lsrs	r3, r3, #18
 8004dfe:	3301      	adds	r3, #1
 8004e00:	60fb      	str	r3, [r7, #12]
 8004e02:	e002      	b.n	8004e0a <HAL_PWREx_ControlVoltageScaling+0xe6>
 8004e04:	68fb      	ldr	r3, [r7, #12]
 8004e06:	3b01      	subs	r3, #1
 8004e08:	60fb      	str	r3, [r7, #12]
 8004e0a:	4b15      	ldr	r3, [pc, #84]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e0c:	695b      	ldr	r3, [r3, #20]
 8004e0e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004e12:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004e16:	d102      	bne.n	8004e1e <HAL_PWREx_ControlVoltageScaling+0xfa>
 8004e18:	68fb      	ldr	r3, [r7, #12]
 8004e1a:	2b00      	cmp	r3, #0
 8004e1c:	d1f2      	bne.n	8004e04 <HAL_PWREx_ControlVoltageScaling+0xe0>
 8004e1e:	4b10      	ldr	r3, [pc, #64]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e20:	695b      	ldr	r3, [r3, #20]
 8004e22:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004e26:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004e2a:	d112      	bne.n	8004e52 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004e2c:	2303      	movs	r3, #3
 8004e2e:	e011      	b.n	8004e54 <HAL_PWREx_ControlVoltageScaling+0x130>
 8004e30:	4b0b      	ldr	r3, [pc, #44]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e32:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004e36:	4a0a      	ldr	r2, [pc, #40]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e38:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004e3c:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004e40:	e007      	b.n	8004e52 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004e42:	4b07      	ldr	r3, [pc, #28]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e44:	681b      	ldr	r3, [r3, #0]
 8004e46:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8004e4a:	4a05      	ldr	r2, [pc, #20]	@ (8004e60 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e4c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8004e50:	6013      	str	r3, [r2, #0]
 8004e52:	2300      	movs	r3, #0
 8004e54:	4618      	mov	r0, r3
 8004e56:	3714      	adds	r7, #20
 8004e58:	46bd      	mov	sp, r7
 8004e5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e5e:	4770      	bx	lr
 8004e60:	40007000 	.word	0x40007000
 8004e64:	20000000 	.word	0x20000000
 8004e68:	431bde83 	.word	0x431bde83

08004e6c <HAL_PWREx_DisableUCPDDeadBattery>:
 8004e6c:	b480      	push	{r7}
 8004e6e:	af00      	add	r7, sp, #0
 8004e70:	4b05      	ldr	r3, [pc, #20]	@ (8004e88 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8004e72:	689b      	ldr	r3, [r3, #8]
 8004e74:	4a04      	ldr	r2, [pc, #16]	@ (8004e88 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8004e76:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004e7a:	6093      	str	r3, [r2, #8]
 8004e7c:	bf00      	nop
 8004e7e:	46bd      	mov	sp, r7
 8004e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e84:	4770      	bx	lr
 8004e86:	bf00      	nop
 8004e88:	40007000 	.word	0x40007000

08004e8c <HAL_RCC_OscConfig>:
 8004e8c:	b580      	push	{r7, lr}
 8004e8e:	b088      	sub	sp, #32
 8004e90:	af00      	add	r7, sp, #0
 8004e92:	6078      	str	r0, [r7, #4]
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	2b00      	cmp	r3, #0
 8004e98:	d101      	bne.n	8004e9e <HAL_RCC_OscConfig+0x12>
 8004e9a:	2301      	movs	r3, #1
 8004e9c:	e2fe      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	f003 0301 	and.w	r3, r3, #1
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d075      	beq.n	8004f96 <HAL_RCC_OscConfig+0x10a>
 8004eaa:	4b97      	ldr	r3, [pc, #604]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004eac:	689b      	ldr	r3, [r3, #8]
 8004eae:	f003 030c 	and.w	r3, r3, #12
 8004eb2:	61bb      	str	r3, [r7, #24]
 8004eb4:	4b94      	ldr	r3, [pc, #592]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004eb6:	68db      	ldr	r3, [r3, #12]
 8004eb8:	f003 0303 	and.w	r3, r3, #3
 8004ebc:	617b      	str	r3, [r7, #20]
 8004ebe:	69bb      	ldr	r3, [r7, #24]
 8004ec0:	2b0c      	cmp	r3, #12
 8004ec2:	d102      	bne.n	8004eca <HAL_RCC_OscConfig+0x3e>
 8004ec4:	697b      	ldr	r3, [r7, #20]
 8004ec6:	2b03      	cmp	r3, #3
 8004ec8:	d002      	beq.n	8004ed0 <HAL_RCC_OscConfig+0x44>
 8004eca:	69bb      	ldr	r3, [r7, #24]
 8004ecc:	2b08      	cmp	r3, #8
 8004ece:	d10b      	bne.n	8004ee8 <HAL_RCC_OscConfig+0x5c>
 8004ed0:	4b8d      	ldr	r3, [pc, #564]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004ed2:	681b      	ldr	r3, [r3, #0]
 8004ed4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004ed8:	2b00      	cmp	r3, #0
 8004eda:	d05b      	beq.n	8004f94 <HAL_RCC_OscConfig+0x108>
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	685b      	ldr	r3, [r3, #4]
 8004ee0:	2b00      	cmp	r3, #0
 8004ee2:	d157      	bne.n	8004f94 <HAL_RCC_OscConfig+0x108>
 8004ee4:	2301      	movs	r3, #1
 8004ee6:	e2d9      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	685b      	ldr	r3, [r3, #4]
 8004eec:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004ef0:	d106      	bne.n	8004f00 <HAL_RCC_OscConfig+0x74>
 8004ef2:	4b85      	ldr	r3, [pc, #532]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004ef4:	681b      	ldr	r3, [r3, #0]
 8004ef6:	4a84      	ldr	r2, [pc, #528]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004ef8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004efc:	6013      	str	r3, [r2, #0]
 8004efe:	e01d      	b.n	8004f3c <HAL_RCC_OscConfig+0xb0>
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	685b      	ldr	r3, [r3, #4]
 8004f04:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004f08:	d10c      	bne.n	8004f24 <HAL_RCC_OscConfig+0x98>
 8004f0a:	4b7f      	ldr	r3, [pc, #508]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004f0c:	681b      	ldr	r3, [r3, #0]
 8004f0e:	4a7e      	ldr	r2, [pc, #504]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004f10:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004f14:	6013      	str	r3, [r2, #0]
 8004f16:	4b7c      	ldr	r3, [pc, #496]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004f18:	681b      	ldr	r3, [r3, #0]
 8004f1a:	4a7b      	ldr	r2, [pc, #492]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004f1c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004f20:	6013      	str	r3, [r2, #0]
 8004f22:	e00b      	b.n	8004f3c <HAL_RCC_OscConfig+0xb0>
 8004f24:	4b78      	ldr	r3, [pc, #480]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004f26:	681b      	ldr	r3, [r3, #0]
 8004f28:	4a77      	ldr	r2, [pc, #476]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004f2a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004f2e:	6013      	str	r3, [r2, #0]
 8004f30:	4b75      	ldr	r3, [pc, #468]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004f32:	681b      	ldr	r3, [r3, #0]
 8004f34:	4a74      	ldr	r2, [pc, #464]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004f36:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004f3a:	6013      	str	r3, [r2, #0]
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	685b      	ldr	r3, [r3, #4]
 8004f40:	2b00      	cmp	r3, #0
 8004f42:	d013      	beq.n	8004f6c <HAL_RCC_OscConfig+0xe0>
 8004f44:	f7fd f856 	bl	8001ff4 <HAL_GetTick>
 8004f48:	6138      	str	r0, [r7, #16]
 8004f4a:	e008      	b.n	8004f5e <HAL_RCC_OscConfig+0xd2>
 8004f4c:	f7fd f852 	bl	8001ff4 <HAL_GetTick>
 8004f50:	4602      	mov	r2, r0
 8004f52:	693b      	ldr	r3, [r7, #16]
 8004f54:	1ad3      	subs	r3, r2, r3
 8004f56:	2b64      	cmp	r3, #100	@ 0x64
 8004f58:	d901      	bls.n	8004f5e <HAL_RCC_OscConfig+0xd2>
 8004f5a:	2303      	movs	r3, #3
 8004f5c:	e29e      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8004f5e:	4b6a      	ldr	r3, [pc, #424]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004f60:	681b      	ldr	r3, [r3, #0]
 8004f62:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004f66:	2b00      	cmp	r3, #0
 8004f68:	d0f0      	beq.n	8004f4c <HAL_RCC_OscConfig+0xc0>
 8004f6a:	e014      	b.n	8004f96 <HAL_RCC_OscConfig+0x10a>
 8004f6c:	f7fd f842 	bl	8001ff4 <HAL_GetTick>
 8004f70:	6138      	str	r0, [r7, #16]
 8004f72:	e008      	b.n	8004f86 <HAL_RCC_OscConfig+0xfa>
 8004f74:	f7fd f83e 	bl	8001ff4 <HAL_GetTick>
 8004f78:	4602      	mov	r2, r0
 8004f7a:	693b      	ldr	r3, [r7, #16]
 8004f7c:	1ad3      	subs	r3, r2, r3
 8004f7e:	2b64      	cmp	r3, #100	@ 0x64
 8004f80:	d901      	bls.n	8004f86 <HAL_RCC_OscConfig+0xfa>
 8004f82:	2303      	movs	r3, #3
 8004f84:	e28a      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8004f86:	4b60      	ldr	r3, [pc, #384]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004f88:	681b      	ldr	r3, [r3, #0]
 8004f8a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004f8e:	2b00      	cmp	r3, #0
 8004f90:	d1f0      	bne.n	8004f74 <HAL_RCC_OscConfig+0xe8>
 8004f92:	e000      	b.n	8004f96 <HAL_RCC_OscConfig+0x10a>
 8004f94:	bf00      	nop
 8004f96:	687b      	ldr	r3, [r7, #4]
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	f003 0302 	and.w	r3, r3, #2
 8004f9e:	2b00      	cmp	r3, #0
 8004fa0:	d075      	beq.n	800508e <HAL_RCC_OscConfig+0x202>
 8004fa2:	4b59      	ldr	r3, [pc, #356]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004fa4:	689b      	ldr	r3, [r3, #8]
 8004fa6:	f003 030c 	and.w	r3, r3, #12
 8004faa:	61bb      	str	r3, [r7, #24]
 8004fac:	4b56      	ldr	r3, [pc, #344]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004fae:	68db      	ldr	r3, [r3, #12]
 8004fb0:	f003 0303 	and.w	r3, r3, #3
 8004fb4:	617b      	str	r3, [r7, #20]
 8004fb6:	69bb      	ldr	r3, [r7, #24]
 8004fb8:	2b0c      	cmp	r3, #12
 8004fba:	d102      	bne.n	8004fc2 <HAL_RCC_OscConfig+0x136>
 8004fbc:	697b      	ldr	r3, [r7, #20]
 8004fbe:	2b02      	cmp	r3, #2
 8004fc0:	d002      	beq.n	8004fc8 <HAL_RCC_OscConfig+0x13c>
 8004fc2:	69bb      	ldr	r3, [r7, #24]
 8004fc4:	2b04      	cmp	r3, #4
 8004fc6:	d11f      	bne.n	8005008 <HAL_RCC_OscConfig+0x17c>
 8004fc8:	4b4f      	ldr	r3, [pc, #316]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004fca:	681b      	ldr	r3, [r3, #0]
 8004fcc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004fd0:	2b00      	cmp	r3, #0
 8004fd2:	d005      	beq.n	8004fe0 <HAL_RCC_OscConfig+0x154>
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	68db      	ldr	r3, [r3, #12]
 8004fd8:	2b00      	cmp	r3, #0
 8004fda:	d101      	bne.n	8004fe0 <HAL_RCC_OscConfig+0x154>
 8004fdc:	2301      	movs	r3, #1
 8004fde:	e25d      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8004fe0:	4b49      	ldr	r3, [pc, #292]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004fe2:	685b      	ldr	r3, [r3, #4]
 8004fe4:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	691b      	ldr	r3, [r3, #16]
 8004fec:	061b      	lsls	r3, r3, #24
 8004fee:	4946      	ldr	r1, [pc, #280]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8004ff0:	4313      	orrs	r3, r2
 8004ff2:	604b      	str	r3, [r1, #4]
 8004ff4:	4b45      	ldr	r3, [pc, #276]	@ (800510c <HAL_RCC_OscConfig+0x280>)
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	4618      	mov	r0, r3
 8004ffa:	f7fc ffaf 	bl	8001f5c <HAL_InitTick>
 8004ffe:	4603      	mov	r3, r0
 8005000:	2b00      	cmp	r3, #0
 8005002:	d043      	beq.n	800508c <HAL_RCC_OscConfig+0x200>
 8005004:	2301      	movs	r3, #1
 8005006:	e249      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	68db      	ldr	r3, [r3, #12]
 800500c:	2b00      	cmp	r3, #0
 800500e:	d023      	beq.n	8005058 <HAL_RCC_OscConfig+0x1cc>
 8005010:	4b3d      	ldr	r3, [pc, #244]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8005012:	681b      	ldr	r3, [r3, #0]
 8005014:	4a3c      	ldr	r2, [pc, #240]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8005016:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800501a:	6013      	str	r3, [r2, #0]
 800501c:	f7fc ffea 	bl	8001ff4 <HAL_GetTick>
 8005020:	6138      	str	r0, [r7, #16]
 8005022:	e008      	b.n	8005036 <HAL_RCC_OscConfig+0x1aa>
 8005024:	f7fc ffe6 	bl	8001ff4 <HAL_GetTick>
 8005028:	4602      	mov	r2, r0
 800502a:	693b      	ldr	r3, [r7, #16]
 800502c:	1ad3      	subs	r3, r2, r3
 800502e:	2b02      	cmp	r3, #2
 8005030:	d901      	bls.n	8005036 <HAL_RCC_OscConfig+0x1aa>
 8005032:	2303      	movs	r3, #3
 8005034:	e232      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8005036:	4b34      	ldr	r3, [pc, #208]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8005038:	681b      	ldr	r3, [r3, #0]
 800503a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800503e:	2b00      	cmp	r3, #0
 8005040:	d0f0      	beq.n	8005024 <HAL_RCC_OscConfig+0x198>
 8005042:	4b31      	ldr	r3, [pc, #196]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8005044:	685b      	ldr	r3, [r3, #4]
 8005046:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	691b      	ldr	r3, [r3, #16]
 800504e:	061b      	lsls	r3, r3, #24
 8005050:	492d      	ldr	r1, [pc, #180]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8005052:	4313      	orrs	r3, r2
 8005054:	604b      	str	r3, [r1, #4]
 8005056:	e01a      	b.n	800508e <HAL_RCC_OscConfig+0x202>
 8005058:	4b2b      	ldr	r3, [pc, #172]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	4a2a      	ldr	r2, [pc, #168]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 800505e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005062:	6013      	str	r3, [r2, #0]
 8005064:	f7fc ffc6 	bl	8001ff4 <HAL_GetTick>
 8005068:	6138      	str	r0, [r7, #16]
 800506a:	e008      	b.n	800507e <HAL_RCC_OscConfig+0x1f2>
 800506c:	f7fc ffc2 	bl	8001ff4 <HAL_GetTick>
 8005070:	4602      	mov	r2, r0
 8005072:	693b      	ldr	r3, [r7, #16]
 8005074:	1ad3      	subs	r3, r2, r3
 8005076:	2b02      	cmp	r3, #2
 8005078:	d901      	bls.n	800507e <HAL_RCC_OscConfig+0x1f2>
 800507a:	2303      	movs	r3, #3
 800507c:	e20e      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 800507e:	4b22      	ldr	r3, [pc, #136]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005086:	2b00      	cmp	r3, #0
 8005088:	d1f0      	bne.n	800506c <HAL_RCC_OscConfig+0x1e0>
 800508a:	e000      	b.n	800508e <HAL_RCC_OscConfig+0x202>
 800508c:	bf00      	nop
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	f003 0308 	and.w	r3, r3, #8
 8005096:	2b00      	cmp	r3, #0
 8005098:	d041      	beq.n	800511e <HAL_RCC_OscConfig+0x292>
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	695b      	ldr	r3, [r3, #20]
 800509e:	2b00      	cmp	r3, #0
 80050a0:	d01c      	beq.n	80050dc <HAL_RCC_OscConfig+0x250>
 80050a2:	4b19      	ldr	r3, [pc, #100]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 80050a4:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80050a8:	4a17      	ldr	r2, [pc, #92]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 80050aa:	f043 0301 	orr.w	r3, r3, #1
 80050ae:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 80050b2:	f7fc ff9f 	bl	8001ff4 <HAL_GetTick>
 80050b6:	6138      	str	r0, [r7, #16]
 80050b8:	e008      	b.n	80050cc <HAL_RCC_OscConfig+0x240>
 80050ba:	f7fc ff9b 	bl	8001ff4 <HAL_GetTick>
 80050be:	4602      	mov	r2, r0
 80050c0:	693b      	ldr	r3, [r7, #16]
 80050c2:	1ad3      	subs	r3, r2, r3
 80050c4:	2b02      	cmp	r3, #2
 80050c6:	d901      	bls.n	80050cc <HAL_RCC_OscConfig+0x240>
 80050c8:	2303      	movs	r3, #3
 80050ca:	e1e7      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 80050cc:	4b0e      	ldr	r3, [pc, #56]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 80050ce:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80050d2:	f003 0302 	and.w	r3, r3, #2
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d0ef      	beq.n	80050ba <HAL_RCC_OscConfig+0x22e>
 80050da:	e020      	b.n	800511e <HAL_RCC_OscConfig+0x292>
 80050dc:	4b0a      	ldr	r3, [pc, #40]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 80050de:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80050e2:	4a09      	ldr	r2, [pc, #36]	@ (8005108 <HAL_RCC_OscConfig+0x27c>)
 80050e4:	f023 0301 	bic.w	r3, r3, #1
 80050e8:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 80050ec:	f7fc ff82 	bl	8001ff4 <HAL_GetTick>
 80050f0:	6138      	str	r0, [r7, #16]
 80050f2:	e00d      	b.n	8005110 <HAL_RCC_OscConfig+0x284>
 80050f4:	f7fc ff7e 	bl	8001ff4 <HAL_GetTick>
 80050f8:	4602      	mov	r2, r0
 80050fa:	693b      	ldr	r3, [r7, #16]
 80050fc:	1ad3      	subs	r3, r2, r3
 80050fe:	2b02      	cmp	r3, #2
 8005100:	d906      	bls.n	8005110 <HAL_RCC_OscConfig+0x284>
 8005102:	2303      	movs	r3, #3
 8005104:	e1ca      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8005106:	bf00      	nop
 8005108:	40021000 	.word	0x40021000
 800510c:	20000004 	.word	0x20000004
 8005110:	4b8c      	ldr	r3, [pc, #560]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 8005112:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005116:	f003 0302 	and.w	r3, r3, #2
 800511a:	2b00      	cmp	r3, #0
 800511c:	d1ea      	bne.n	80050f4 <HAL_RCC_OscConfig+0x268>
 800511e:	687b      	ldr	r3, [r7, #4]
 8005120:	681b      	ldr	r3, [r3, #0]
 8005122:	f003 0304 	and.w	r3, r3, #4
 8005126:	2b00      	cmp	r3, #0
 8005128:	f000 80a6 	beq.w	8005278 <HAL_RCC_OscConfig+0x3ec>
 800512c:	2300      	movs	r3, #0
 800512e:	77fb      	strb	r3, [r7, #31]
 8005130:	4b84      	ldr	r3, [pc, #528]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 8005132:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005134:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005138:	2b00      	cmp	r3, #0
 800513a:	d101      	bne.n	8005140 <HAL_RCC_OscConfig+0x2b4>
 800513c:	2301      	movs	r3, #1
 800513e:	e000      	b.n	8005142 <HAL_RCC_OscConfig+0x2b6>
 8005140:	2300      	movs	r3, #0
 8005142:	2b00      	cmp	r3, #0
 8005144:	d00d      	beq.n	8005162 <HAL_RCC_OscConfig+0x2d6>
 8005146:	4b7f      	ldr	r3, [pc, #508]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 8005148:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800514a:	4a7e      	ldr	r2, [pc, #504]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 800514c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005150:	6593      	str	r3, [r2, #88]	@ 0x58
 8005152:	4b7c      	ldr	r3, [pc, #496]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 8005154:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005156:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800515a:	60fb      	str	r3, [r7, #12]
 800515c:	68fb      	ldr	r3, [r7, #12]
 800515e:	2301      	movs	r3, #1
 8005160:	77fb      	strb	r3, [r7, #31]
 8005162:	4b79      	ldr	r3, [pc, #484]	@ (8005348 <HAL_RCC_OscConfig+0x4bc>)
 8005164:	681b      	ldr	r3, [r3, #0]
 8005166:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800516a:	2b00      	cmp	r3, #0
 800516c:	d118      	bne.n	80051a0 <HAL_RCC_OscConfig+0x314>
 800516e:	4b76      	ldr	r3, [pc, #472]	@ (8005348 <HAL_RCC_OscConfig+0x4bc>)
 8005170:	681b      	ldr	r3, [r3, #0]
 8005172:	4a75      	ldr	r2, [pc, #468]	@ (8005348 <HAL_RCC_OscConfig+0x4bc>)
 8005174:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005178:	6013      	str	r3, [r2, #0]
 800517a:	f7fc ff3b 	bl	8001ff4 <HAL_GetTick>
 800517e:	6138      	str	r0, [r7, #16]
 8005180:	e008      	b.n	8005194 <HAL_RCC_OscConfig+0x308>
 8005182:	f7fc ff37 	bl	8001ff4 <HAL_GetTick>
 8005186:	4602      	mov	r2, r0
 8005188:	693b      	ldr	r3, [r7, #16]
 800518a:	1ad3      	subs	r3, r2, r3
 800518c:	2b02      	cmp	r3, #2
 800518e:	d901      	bls.n	8005194 <HAL_RCC_OscConfig+0x308>
 8005190:	2303      	movs	r3, #3
 8005192:	e183      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8005194:	4b6c      	ldr	r3, [pc, #432]	@ (8005348 <HAL_RCC_OscConfig+0x4bc>)
 8005196:	681b      	ldr	r3, [r3, #0]
 8005198:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800519c:	2b00      	cmp	r3, #0
 800519e:	d0f0      	beq.n	8005182 <HAL_RCC_OscConfig+0x2f6>
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	689b      	ldr	r3, [r3, #8]
 80051a4:	2b01      	cmp	r3, #1
 80051a6:	d108      	bne.n	80051ba <HAL_RCC_OscConfig+0x32e>
 80051a8:	4b66      	ldr	r3, [pc, #408]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80051aa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80051ae:	4a65      	ldr	r2, [pc, #404]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80051b0:	f043 0301 	orr.w	r3, r3, #1
 80051b4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80051b8:	e024      	b.n	8005204 <HAL_RCC_OscConfig+0x378>
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	689b      	ldr	r3, [r3, #8]
 80051be:	2b05      	cmp	r3, #5
 80051c0:	d110      	bne.n	80051e4 <HAL_RCC_OscConfig+0x358>
 80051c2:	4b60      	ldr	r3, [pc, #384]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80051c4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80051c8:	4a5e      	ldr	r2, [pc, #376]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80051ca:	f043 0304 	orr.w	r3, r3, #4
 80051ce:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80051d2:	4b5c      	ldr	r3, [pc, #368]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80051d4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80051d8:	4a5a      	ldr	r2, [pc, #360]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80051da:	f043 0301 	orr.w	r3, r3, #1
 80051de:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80051e2:	e00f      	b.n	8005204 <HAL_RCC_OscConfig+0x378>
 80051e4:	4b57      	ldr	r3, [pc, #348]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80051e6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80051ea:	4a56      	ldr	r2, [pc, #344]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80051ec:	f023 0301 	bic.w	r3, r3, #1
 80051f0:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80051f4:	4b53      	ldr	r3, [pc, #332]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80051f6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80051fa:	4a52      	ldr	r2, [pc, #328]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80051fc:	f023 0304 	bic.w	r3, r3, #4
 8005200:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	689b      	ldr	r3, [r3, #8]
 8005208:	2b00      	cmp	r3, #0
 800520a:	d016      	beq.n	800523a <HAL_RCC_OscConfig+0x3ae>
 800520c:	f7fc fef2 	bl	8001ff4 <HAL_GetTick>
 8005210:	6138      	str	r0, [r7, #16]
 8005212:	e00a      	b.n	800522a <HAL_RCC_OscConfig+0x39e>
 8005214:	f7fc feee 	bl	8001ff4 <HAL_GetTick>
 8005218:	4602      	mov	r2, r0
 800521a:	693b      	ldr	r3, [r7, #16]
 800521c:	1ad3      	subs	r3, r2, r3
 800521e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005222:	4293      	cmp	r3, r2
 8005224:	d901      	bls.n	800522a <HAL_RCC_OscConfig+0x39e>
 8005226:	2303      	movs	r3, #3
 8005228:	e138      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 800522a:	4b46      	ldr	r3, [pc, #280]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 800522c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005230:	f003 0302 	and.w	r3, r3, #2
 8005234:	2b00      	cmp	r3, #0
 8005236:	d0ed      	beq.n	8005214 <HAL_RCC_OscConfig+0x388>
 8005238:	e015      	b.n	8005266 <HAL_RCC_OscConfig+0x3da>
 800523a:	f7fc fedb 	bl	8001ff4 <HAL_GetTick>
 800523e:	6138      	str	r0, [r7, #16]
 8005240:	e00a      	b.n	8005258 <HAL_RCC_OscConfig+0x3cc>
 8005242:	f7fc fed7 	bl	8001ff4 <HAL_GetTick>
 8005246:	4602      	mov	r2, r0
 8005248:	693b      	ldr	r3, [r7, #16]
 800524a:	1ad3      	subs	r3, r2, r3
 800524c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005250:	4293      	cmp	r3, r2
 8005252:	d901      	bls.n	8005258 <HAL_RCC_OscConfig+0x3cc>
 8005254:	2303      	movs	r3, #3
 8005256:	e121      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8005258:	4b3a      	ldr	r3, [pc, #232]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 800525a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800525e:	f003 0302 	and.w	r3, r3, #2
 8005262:	2b00      	cmp	r3, #0
 8005264:	d1ed      	bne.n	8005242 <HAL_RCC_OscConfig+0x3b6>
 8005266:	7ffb      	ldrb	r3, [r7, #31]
 8005268:	2b01      	cmp	r3, #1
 800526a:	d105      	bne.n	8005278 <HAL_RCC_OscConfig+0x3ec>
 800526c:	4b35      	ldr	r3, [pc, #212]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 800526e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005270:	4a34      	ldr	r2, [pc, #208]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 8005272:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005276:	6593      	str	r3, [r2, #88]	@ 0x58
 8005278:	687b      	ldr	r3, [r7, #4]
 800527a:	681b      	ldr	r3, [r3, #0]
 800527c:	f003 0320 	and.w	r3, r3, #32
 8005280:	2b00      	cmp	r3, #0
 8005282:	d03c      	beq.n	80052fe <HAL_RCC_OscConfig+0x472>
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	699b      	ldr	r3, [r3, #24]
 8005288:	2b00      	cmp	r3, #0
 800528a:	d01c      	beq.n	80052c6 <HAL_RCC_OscConfig+0x43a>
 800528c:	4b2d      	ldr	r3, [pc, #180]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 800528e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005292:	4a2c      	ldr	r2, [pc, #176]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 8005294:	f043 0301 	orr.w	r3, r3, #1
 8005298:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 800529c:	f7fc feaa 	bl	8001ff4 <HAL_GetTick>
 80052a0:	6138      	str	r0, [r7, #16]
 80052a2:	e008      	b.n	80052b6 <HAL_RCC_OscConfig+0x42a>
 80052a4:	f7fc fea6 	bl	8001ff4 <HAL_GetTick>
 80052a8:	4602      	mov	r2, r0
 80052aa:	693b      	ldr	r3, [r7, #16]
 80052ac:	1ad3      	subs	r3, r2, r3
 80052ae:	2b02      	cmp	r3, #2
 80052b0:	d901      	bls.n	80052b6 <HAL_RCC_OscConfig+0x42a>
 80052b2:	2303      	movs	r3, #3
 80052b4:	e0f2      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 80052b6:	4b23      	ldr	r3, [pc, #140]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80052b8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80052bc:	f003 0302 	and.w	r3, r3, #2
 80052c0:	2b00      	cmp	r3, #0
 80052c2:	d0ef      	beq.n	80052a4 <HAL_RCC_OscConfig+0x418>
 80052c4:	e01b      	b.n	80052fe <HAL_RCC_OscConfig+0x472>
 80052c6:	4b1f      	ldr	r3, [pc, #124]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80052c8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80052cc:	4a1d      	ldr	r2, [pc, #116]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80052ce:	f023 0301 	bic.w	r3, r3, #1
 80052d2:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 80052d6:	f7fc fe8d 	bl	8001ff4 <HAL_GetTick>
 80052da:	6138      	str	r0, [r7, #16]
 80052dc:	e008      	b.n	80052f0 <HAL_RCC_OscConfig+0x464>
 80052de:	f7fc fe89 	bl	8001ff4 <HAL_GetTick>
 80052e2:	4602      	mov	r2, r0
 80052e4:	693b      	ldr	r3, [r7, #16]
 80052e6:	1ad3      	subs	r3, r2, r3
 80052e8:	2b02      	cmp	r3, #2
 80052ea:	d901      	bls.n	80052f0 <HAL_RCC_OscConfig+0x464>
 80052ec:	2303      	movs	r3, #3
 80052ee:	e0d5      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 80052f0:	4b14      	ldr	r3, [pc, #80]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 80052f2:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80052f6:	f003 0302 	and.w	r3, r3, #2
 80052fa:	2b00      	cmp	r3, #0
 80052fc:	d1ef      	bne.n	80052de <HAL_RCC_OscConfig+0x452>
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	69db      	ldr	r3, [r3, #28]
 8005302:	2b00      	cmp	r3, #0
 8005304:	f000 80c9 	beq.w	800549a <HAL_RCC_OscConfig+0x60e>
 8005308:	4b0e      	ldr	r3, [pc, #56]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 800530a:	689b      	ldr	r3, [r3, #8]
 800530c:	f003 030c 	and.w	r3, r3, #12
 8005310:	2b0c      	cmp	r3, #12
 8005312:	f000 8083 	beq.w	800541c <HAL_RCC_OscConfig+0x590>
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	69db      	ldr	r3, [r3, #28]
 800531a:	2b02      	cmp	r3, #2
 800531c:	d15e      	bne.n	80053dc <HAL_RCC_OscConfig+0x550>
 800531e:	4b09      	ldr	r3, [pc, #36]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	4a08      	ldr	r2, [pc, #32]	@ (8005344 <HAL_RCC_OscConfig+0x4b8>)
 8005324:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8005328:	6013      	str	r3, [r2, #0]
 800532a:	f7fc fe63 	bl	8001ff4 <HAL_GetTick>
 800532e:	6138      	str	r0, [r7, #16]
 8005330:	e00c      	b.n	800534c <HAL_RCC_OscConfig+0x4c0>
 8005332:	f7fc fe5f 	bl	8001ff4 <HAL_GetTick>
 8005336:	4602      	mov	r2, r0
 8005338:	693b      	ldr	r3, [r7, #16]
 800533a:	1ad3      	subs	r3, r2, r3
 800533c:	2b02      	cmp	r3, #2
 800533e:	d905      	bls.n	800534c <HAL_RCC_OscConfig+0x4c0>
 8005340:	2303      	movs	r3, #3
 8005342:	e0ab      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8005344:	40021000 	.word	0x40021000
 8005348:	40007000 	.word	0x40007000
 800534c:	4b55      	ldr	r3, [pc, #340]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005354:	2b00      	cmp	r3, #0
 8005356:	d1ec      	bne.n	8005332 <HAL_RCC_OscConfig+0x4a6>
 8005358:	4b52      	ldr	r3, [pc, #328]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 800535a:	68da      	ldr	r2, [r3, #12]
 800535c:	4b52      	ldr	r3, [pc, #328]	@ (80054a8 <HAL_RCC_OscConfig+0x61c>)
 800535e:	4013      	ands	r3, r2
 8005360:	687a      	ldr	r2, [r7, #4]
 8005362:	6a11      	ldr	r1, [r2, #32]
 8005364:	687a      	ldr	r2, [r7, #4]
 8005366:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005368:	3a01      	subs	r2, #1
 800536a:	0112      	lsls	r2, r2, #4
 800536c:	4311      	orrs	r1, r2
 800536e:	687a      	ldr	r2, [r7, #4]
 8005370:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8005372:	0212      	lsls	r2, r2, #8
 8005374:	4311      	orrs	r1, r2
 8005376:	687a      	ldr	r2, [r7, #4]
 8005378:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 800537a:	0852      	lsrs	r2, r2, #1
 800537c:	3a01      	subs	r2, #1
 800537e:	0552      	lsls	r2, r2, #21
 8005380:	4311      	orrs	r1, r2
 8005382:	687a      	ldr	r2, [r7, #4]
 8005384:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8005386:	0852      	lsrs	r2, r2, #1
 8005388:	3a01      	subs	r2, #1
 800538a:	0652      	lsls	r2, r2, #25
 800538c:	4311      	orrs	r1, r2
 800538e:	687a      	ldr	r2, [r7, #4]
 8005390:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8005392:	06d2      	lsls	r2, r2, #27
 8005394:	430a      	orrs	r2, r1
 8005396:	4943      	ldr	r1, [pc, #268]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 8005398:	4313      	orrs	r3, r2
 800539a:	60cb      	str	r3, [r1, #12]
 800539c:	4b41      	ldr	r3, [pc, #260]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	4a40      	ldr	r2, [pc, #256]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 80053a2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80053a6:	6013      	str	r3, [r2, #0]
 80053a8:	4b3e      	ldr	r3, [pc, #248]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 80053aa:	68db      	ldr	r3, [r3, #12]
 80053ac:	4a3d      	ldr	r2, [pc, #244]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 80053ae:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80053b2:	60d3      	str	r3, [r2, #12]
 80053b4:	f7fc fe1e 	bl	8001ff4 <HAL_GetTick>
 80053b8:	6138      	str	r0, [r7, #16]
 80053ba:	e008      	b.n	80053ce <HAL_RCC_OscConfig+0x542>
 80053bc:	f7fc fe1a 	bl	8001ff4 <HAL_GetTick>
 80053c0:	4602      	mov	r2, r0
 80053c2:	693b      	ldr	r3, [r7, #16]
 80053c4:	1ad3      	subs	r3, r2, r3
 80053c6:	2b02      	cmp	r3, #2
 80053c8:	d901      	bls.n	80053ce <HAL_RCC_OscConfig+0x542>
 80053ca:	2303      	movs	r3, #3
 80053cc:	e066      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 80053ce:	4b35      	ldr	r3, [pc, #212]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 80053d0:	681b      	ldr	r3, [r3, #0]
 80053d2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80053d6:	2b00      	cmp	r3, #0
 80053d8:	d0f0      	beq.n	80053bc <HAL_RCC_OscConfig+0x530>
 80053da:	e05e      	b.n	800549a <HAL_RCC_OscConfig+0x60e>
 80053dc:	4b31      	ldr	r3, [pc, #196]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	4a30      	ldr	r2, [pc, #192]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 80053e2:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80053e6:	6013      	str	r3, [r2, #0]
 80053e8:	f7fc fe04 	bl	8001ff4 <HAL_GetTick>
 80053ec:	6138      	str	r0, [r7, #16]
 80053ee:	e008      	b.n	8005402 <HAL_RCC_OscConfig+0x576>
 80053f0:	f7fc fe00 	bl	8001ff4 <HAL_GetTick>
 80053f4:	4602      	mov	r2, r0
 80053f6:	693b      	ldr	r3, [r7, #16]
 80053f8:	1ad3      	subs	r3, r2, r3
 80053fa:	2b02      	cmp	r3, #2
 80053fc:	d901      	bls.n	8005402 <HAL_RCC_OscConfig+0x576>
 80053fe:	2303      	movs	r3, #3
 8005400:	e04c      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8005402:	4b28      	ldr	r3, [pc, #160]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 8005404:	681b      	ldr	r3, [r3, #0]
 8005406:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800540a:	2b00      	cmp	r3, #0
 800540c:	d1f0      	bne.n	80053f0 <HAL_RCC_OscConfig+0x564>
 800540e:	4b25      	ldr	r3, [pc, #148]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 8005410:	68da      	ldr	r2, [r3, #12]
 8005412:	4924      	ldr	r1, [pc, #144]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 8005414:	4b25      	ldr	r3, [pc, #148]	@ (80054ac <HAL_RCC_OscConfig+0x620>)
 8005416:	4013      	ands	r3, r2
 8005418:	60cb      	str	r3, [r1, #12]
 800541a:	e03e      	b.n	800549a <HAL_RCC_OscConfig+0x60e>
 800541c:	687b      	ldr	r3, [r7, #4]
 800541e:	69db      	ldr	r3, [r3, #28]
 8005420:	2b01      	cmp	r3, #1
 8005422:	d101      	bne.n	8005428 <HAL_RCC_OscConfig+0x59c>
 8005424:	2301      	movs	r3, #1
 8005426:	e039      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 8005428:	4b1e      	ldr	r3, [pc, #120]	@ (80054a4 <HAL_RCC_OscConfig+0x618>)
 800542a:	68db      	ldr	r3, [r3, #12]
 800542c:	617b      	str	r3, [r7, #20]
 800542e:	697b      	ldr	r3, [r7, #20]
 8005430:	f003 0203 	and.w	r2, r3, #3
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	6a1b      	ldr	r3, [r3, #32]
 8005438:	429a      	cmp	r2, r3
 800543a:	d12c      	bne.n	8005496 <HAL_RCC_OscConfig+0x60a>
 800543c:	697b      	ldr	r3, [r7, #20]
 800543e:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005446:	3b01      	subs	r3, #1
 8005448:	011b      	lsls	r3, r3, #4
 800544a:	429a      	cmp	r2, r3
 800544c:	d123      	bne.n	8005496 <HAL_RCC_OscConfig+0x60a>
 800544e:	697b      	ldr	r3, [r7, #20]
 8005450:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005458:	021b      	lsls	r3, r3, #8
 800545a:	429a      	cmp	r2, r3
 800545c:	d11b      	bne.n	8005496 <HAL_RCC_OscConfig+0x60a>
 800545e:	697b      	ldr	r3, [r7, #20]
 8005460:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005468:	06db      	lsls	r3, r3, #27
 800546a:	429a      	cmp	r2, r3
 800546c:	d113      	bne.n	8005496 <HAL_RCC_OscConfig+0x60a>
 800546e:	697b      	ldr	r3, [r7, #20]
 8005470:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005478:	085b      	lsrs	r3, r3, #1
 800547a:	3b01      	subs	r3, #1
 800547c:	055b      	lsls	r3, r3, #21
 800547e:	429a      	cmp	r2, r3
 8005480:	d109      	bne.n	8005496 <HAL_RCC_OscConfig+0x60a>
 8005482:	697b      	ldr	r3, [r7, #20]
 8005484:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800548c:	085b      	lsrs	r3, r3, #1
 800548e:	3b01      	subs	r3, #1
 8005490:	065b      	lsls	r3, r3, #25
 8005492:	429a      	cmp	r2, r3
 8005494:	d001      	beq.n	800549a <HAL_RCC_OscConfig+0x60e>
 8005496:	2301      	movs	r3, #1
 8005498:	e000      	b.n	800549c <HAL_RCC_OscConfig+0x610>
 800549a:	2300      	movs	r3, #0
 800549c:	4618      	mov	r0, r3
 800549e:	3720      	adds	r7, #32
 80054a0:	46bd      	mov	sp, r7
 80054a2:	bd80      	pop	{r7, pc}
 80054a4:	40021000 	.word	0x40021000
 80054a8:	019f800c 	.word	0x019f800c
 80054ac:	feeefffc 	.word	0xfeeefffc

080054b0 <HAL_RCC_ClockConfig>:
 80054b0:	b580      	push	{r7, lr}
 80054b2:	b086      	sub	sp, #24
 80054b4:	af00      	add	r7, sp, #0
 80054b6:	6078      	str	r0, [r7, #4]
 80054b8:	6039      	str	r1, [r7, #0]
 80054ba:	2300      	movs	r3, #0
 80054bc:	617b      	str	r3, [r7, #20]
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	2b00      	cmp	r3, #0
 80054c2:	d101      	bne.n	80054c8 <HAL_RCC_ClockConfig+0x18>
 80054c4:	2301      	movs	r3, #1
 80054c6:	e11e      	b.n	8005706 <HAL_RCC_ClockConfig+0x256>
 80054c8:	4b91      	ldr	r3, [pc, #580]	@ (8005710 <HAL_RCC_ClockConfig+0x260>)
 80054ca:	681b      	ldr	r3, [r3, #0]
 80054cc:	f003 030f 	and.w	r3, r3, #15
 80054d0:	683a      	ldr	r2, [r7, #0]
 80054d2:	429a      	cmp	r2, r3
 80054d4:	d910      	bls.n	80054f8 <HAL_RCC_ClockConfig+0x48>
 80054d6:	4b8e      	ldr	r3, [pc, #568]	@ (8005710 <HAL_RCC_ClockConfig+0x260>)
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	f023 020f 	bic.w	r2, r3, #15
 80054de:	498c      	ldr	r1, [pc, #560]	@ (8005710 <HAL_RCC_ClockConfig+0x260>)
 80054e0:	683b      	ldr	r3, [r7, #0]
 80054e2:	4313      	orrs	r3, r2
 80054e4:	600b      	str	r3, [r1, #0]
 80054e6:	4b8a      	ldr	r3, [pc, #552]	@ (8005710 <HAL_RCC_ClockConfig+0x260>)
 80054e8:	681b      	ldr	r3, [r3, #0]
 80054ea:	f003 030f 	and.w	r3, r3, #15
 80054ee:	683a      	ldr	r2, [r7, #0]
 80054f0:	429a      	cmp	r2, r3
 80054f2:	d001      	beq.n	80054f8 <HAL_RCC_ClockConfig+0x48>
 80054f4:	2301      	movs	r3, #1
 80054f6:	e106      	b.n	8005706 <HAL_RCC_ClockConfig+0x256>
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	681b      	ldr	r3, [r3, #0]
 80054fc:	f003 0301 	and.w	r3, r3, #1
 8005500:	2b00      	cmp	r3, #0
 8005502:	d073      	beq.n	80055ec <HAL_RCC_ClockConfig+0x13c>
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	685b      	ldr	r3, [r3, #4]
 8005508:	2b03      	cmp	r3, #3
 800550a:	d129      	bne.n	8005560 <HAL_RCC_ClockConfig+0xb0>
 800550c:	4b81      	ldr	r3, [pc, #516]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 800550e:	681b      	ldr	r3, [r3, #0]
 8005510:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005514:	2b00      	cmp	r3, #0
 8005516:	d101      	bne.n	800551c <HAL_RCC_ClockConfig+0x6c>
 8005518:	2301      	movs	r3, #1
 800551a:	e0f4      	b.n	8005706 <HAL_RCC_ClockConfig+0x256>
 800551c:	f000 f966 	bl	80057ec <RCC_GetSysClockFreqFromPLLSource>
 8005520:	6138      	str	r0, [r7, #16]
 8005522:	693b      	ldr	r3, [r7, #16]
 8005524:	4a7c      	ldr	r2, [pc, #496]	@ (8005718 <HAL_RCC_ClockConfig+0x268>)
 8005526:	4293      	cmp	r3, r2
 8005528:	d93f      	bls.n	80055aa <HAL_RCC_ClockConfig+0xfa>
 800552a:	4b7a      	ldr	r3, [pc, #488]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 800552c:	689b      	ldr	r3, [r3, #8]
 800552e:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8005532:	2b00      	cmp	r3, #0
 8005534:	d009      	beq.n	800554a <HAL_RCC_ClockConfig+0x9a>
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	681b      	ldr	r3, [r3, #0]
 800553a:	f003 0302 	and.w	r3, r3, #2
 800553e:	2b00      	cmp	r3, #0
 8005540:	d033      	beq.n	80055aa <HAL_RCC_ClockConfig+0xfa>
 8005542:	687b      	ldr	r3, [r7, #4]
 8005544:	689b      	ldr	r3, [r3, #8]
 8005546:	2b00      	cmp	r3, #0
 8005548:	d12f      	bne.n	80055aa <HAL_RCC_ClockConfig+0xfa>
 800554a:	4b72      	ldr	r3, [pc, #456]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 800554c:	689b      	ldr	r3, [r3, #8]
 800554e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005552:	4a70      	ldr	r2, [pc, #448]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 8005554:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005558:	6093      	str	r3, [r2, #8]
 800555a:	2380      	movs	r3, #128	@ 0x80
 800555c:	617b      	str	r3, [r7, #20]
 800555e:	e024      	b.n	80055aa <HAL_RCC_ClockConfig+0xfa>
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	685b      	ldr	r3, [r3, #4]
 8005564:	2b02      	cmp	r3, #2
 8005566:	d107      	bne.n	8005578 <HAL_RCC_ClockConfig+0xc8>
 8005568:	4b6a      	ldr	r3, [pc, #424]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005570:	2b00      	cmp	r3, #0
 8005572:	d109      	bne.n	8005588 <HAL_RCC_ClockConfig+0xd8>
 8005574:	2301      	movs	r3, #1
 8005576:	e0c6      	b.n	8005706 <HAL_RCC_ClockConfig+0x256>
 8005578:	4b66      	ldr	r3, [pc, #408]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 800557a:	681b      	ldr	r3, [r3, #0]
 800557c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005580:	2b00      	cmp	r3, #0
 8005582:	d101      	bne.n	8005588 <HAL_RCC_ClockConfig+0xd8>
 8005584:	2301      	movs	r3, #1
 8005586:	e0be      	b.n	8005706 <HAL_RCC_ClockConfig+0x256>
 8005588:	f000 f8ce 	bl	8005728 <HAL_RCC_GetSysClockFreq>
 800558c:	6138      	str	r0, [r7, #16]
 800558e:	693b      	ldr	r3, [r7, #16]
 8005590:	4a61      	ldr	r2, [pc, #388]	@ (8005718 <HAL_RCC_ClockConfig+0x268>)
 8005592:	4293      	cmp	r3, r2
 8005594:	d909      	bls.n	80055aa <HAL_RCC_ClockConfig+0xfa>
 8005596:	4b5f      	ldr	r3, [pc, #380]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 8005598:	689b      	ldr	r3, [r3, #8]
 800559a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800559e:	4a5d      	ldr	r2, [pc, #372]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 80055a0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80055a4:	6093      	str	r3, [r2, #8]
 80055a6:	2380      	movs	r3, #128	@ 0x80
 80055a8:	617b      	str	r3, [r7, #20]
 80055aa:	4b5a      	ldr	r3, [pc, #360]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 80055ac:	689b      	ldr	r3, [r3, #8]
 80055ae:	f023 0203 	bic.w	r2, r3, #3
 80055b2:	687b      	ldr	r3, [r7, #4]
 80055b4:	685b      	ldr	r3, [r3, #4]
 80055b6:	4957      	ldr	r1, [pc, #348]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 80055b8:	4313      	orrs	r3, r2
 80055ba:	608b      	str	r3, [r1, #8]
 80055bc:	f7fc fd1a 	bl	8001ff4 <HAL_GetTick>
 80055c0:	60f8      	str	r0, [r7, #12]
 80055c2:	e00a      	b.n	80055da <HAL_RCC_ClockConfig+0x12a>
 80055c4:	f7fc fd16 	bl	8001ff4 <HAL_GetTick>
 80055c8:	4602      	mov	r2, r0
 80055ca:	68fb      	ldr	r3, [r7, #12]
 80055cc:	1ad3      	subs	r3, r2, r3
 80055ce:	f241 3288 	movw	r2, #5000	@ 0x1388
 80055d2:	4293      	cmp	r3, r2
 80055d4:	d901      	bls.n	80055da <HAL_RCC_ClockConfig+0x12a>
 80055d6:	2303      	movs	r3, #3
 80055d8:	e095      	b.n	8005706 <HAL_RCC_ClockConfig+0x256>
 80055da:	4b4e      	ldr	r3, [pc, #312]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 80055dc:	689b      	ldr	r3, [r3, #8]
 80055de:	f003 020c 	and.w	r2, r3, #12
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	685b      	ldr	r3, [r3, #4]
 80055e6:	009b      	lsls	r3, r3, #2
 80055e8:	429a      	cmp	r2, r3
 80055ea:	d1eb      	bne.n	80055c4 <HAL_RCC_ClockConfig+0x114>
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	f003 0302 	and.w	r3, r3, #2
 80055f4:	2b00      	cmp	r3, #0
 80055f6:	d023      	beq.n	8005640 <HAL_RCC_ClockConfig+0x190>
 80055f8:	687b      	ldr	r3, [r7, #4]
 80055fa:	681b      	ldr	r3, [r3, #0]
 80055fc:	f003 0304 	and.w	r3, r3, #4
 8005600:	2b00      	cmp	r3, #0
 8005602:	d005      	beq.n	8005610 <HAL_RCC_ClockConfig+0x160>
 8005604:	4b43      	ldr	r3, [pc, #268]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 8005606:	689b      	ldr	r3, [r3, #8]
 8005608:	4a42      	ldr	r2, [pc, #264]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 800560a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800560e:	6093      	str	r3, [r2, #8]
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	681b      	ldr	r3, [r3, #0]
 8005614:	f003 0308 	and.w	r3, r3, #8
 8005618:	2b00      	cmp	r3, #0
 800561a:	d007      	beq.n	800562c <HAL_RCC_ClockConfig+0x17c>
 800561c:	4b3d      	ldr	r3, [pc, #244]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 800561e:	689b      	ldr	r3, [r3, #8]
 8005620:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8005624:	4a3b      	ldr	r2, [pc, #236]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 8005626:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800562a:	6093      	str	r3, [r2, #8]
 800562c:	4b39      	ldr	r3, [pc, #228]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 800562e:	689b      	ldr	r3, [r3, #8]
 8005630:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8005634:	687b      	ldr	r3, [r7, #4]
 8005636:	689b      	ldr	r3, [r3, #8]
 8005638:	4936      	ldr	r1, [pc, #216]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 800563a:	4313      	orrs	r3, r2
 800563c:	608b      	str	r3, [r1, #8]
 800563e:	e008      	b.n	8005652 <HAL_RCC_ClockConfig+0x1a2>
 8005640:	697b      	ldr	r3, [r7, #20]
 8005642:	2b80      	cmp	r3, #128	@ 0x80
 8005644:	d105      	bne.n	8005652 <HAL_RCC_ClockConfig+0x1a2>
 8005646:	4b33      	ldr	r3, [pc, #204]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 8005648:	689b      	ldr	r3, [r3, #8]
 800564a:	4a32      	ldr	r2, [pc, #200]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 800564c:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005650:	6093      	str	r3, [r2, #8]
 8005652:	4b2f      	ldr	r3, [pc, #188]	@ (8005710 <HAL_RCC_ClockConfig+0x260>)
 8005654:	681b      	ldr	r3, [r3, #0]
 8005656:	f003 030f 	and.w	r3, r3, #15
 800565a:	683a      	ldr	r2, [r7, #0]
 800565c:	429a      	cmp	r2, r3
 800565e:	d21d      	bcs.n	800569c <HAL_RCC_ClockConfig+0x1ec>
 8005660:	4b2b      	ldr	r3, [pc, #172]	@ (8005710 <HAL_RCC_ClockConfig+0x260>)
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	f023 020f 	bic.w	r2, r3, #15
 8005668:	4929      	ldr	r1, [pc, #164]	@ (8005710 <HAL_RCC_ClockConfig+0x260>)
 800566a:	683b      	ldr	r3, [r7, #0]
 800566c:	4313      	orrs	r3, r2
 800566e:	600b      	str	r3, [r1, #0]
 8005670:	f7fc fcc0 	bl	8001ff4 <HAL_GetTick>
 8005674:	60f8      	str	r0, [r7, #12]
 8005676:	e00a      	b.n	800568e <HAL_RCC_ClockConfig+0x1de>
 8005678:	f7fc fcbc 	bl	8001ff4 <HAL_GetTick>
 800567c:	4602      	mov	r2, r0
 800567e:	68fb      	ldr	r3, [r7, #12]
 8005680:	1ad3      	subs	r3, r2, r3
 8005682:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005686:	4293      	cmp	r3, r2
 8005688:	d901      	bls.n	800568e <HAL_RCC_ClockConfig+0x1de>
 800568a:	2303      	movs	r3, #3
 800568c:	e03b      	b.n	8005706 <HAL_RCC_ClockConfig+0x256>
 800568e:	4b20      	ldr	r3, [pc, #128]	@ (8005710 <HAL_RCC_ClockConfig+0x260>)
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	f003 030f 	and.w	r3, r3, #15
 8005696:	683a      	ldr	r2, [r7, #0]
 8005698:	429a      	cmp	r2, r3
 800569a:	d1ed      	bne.n	8005678 <HAL_RCC_ClockConfig+0x1c8>
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	f003 0304 	and.w	r3, r3, #4
 80056a4:	2b00      	cmp	r3, #0
 80056a6:	d008      	beq.n	80056ba <HAL_RCC_ClockConfig+0x20a>
 80056a8:	4b1a      	ldr	r3, [pc, #104]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 80056aa:	689b      	ldr	r3, [r3, #8]
 80056ac:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	68db      	ldr	r3, [r3, #12]
 80056b4:	4917      	ldr	r1, [pc, #92]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 80056b6:	4313      	orrs	r3, r2
 80056b8:	608b      	str	r3, [r1, #8]
 80056ba:	687b      	ldr	r3, [r7, #4]
 80056bc:	681b      	ldr	r3, [r3, #0]
 80056be:	f003 0308 	and.w	r3, r3, #8
 80056c2:	2b00      	cmp	r3, #0
 80056c4:	d009      	beq.n	80056da <HAL_RCC_ClockConfig+0x22a>
 80056c6:	4b13      	ldr	r3, [pc, #76]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 80056c8:	689b      	ldr	r3, [r3, #8]
 80056ca:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	691b      	ldr	r3, [r3, #16]
 80056d2:	00db      	lsls	r3, r3, #3
 80056d4:	490f      	ldr	r1, [pc, #60]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 80056d6:	4313      	orrs	r3, r2
 80056d8:	608b      	str	r3, [r1, #8]
 80056da:	f000 f825 	bl	8005728 <HAL_RCC_GetSysClockFreq>
 80056de:	4602      	mov	r2, r0
 80056e0:	4b0c      	ldr	r3, [pc, #48]	@ (8005714 <HAL_RCC_ClockConfig+0x264>)
 80056e2:	689b      	ldr	r3, [r3, #8]
 80056e4:	091b      	lsrs	r3, r3, #4
 80056e6:	f003 030f 	and.w	r3, r3, #15
 80056ea:	490c      	ldr	r1, [pc, #48]	@ (800571c <HAL_RCC_ClockConfig+0x26c>)
 80056ec:	5ccb      	ldrb	r3, [r1, r3]
 80056ee:	f003 031f 	and.w	r3, r3, #31
 80056f2:	fa22 f303 	lsr.w	r3, r2, r3
 80056f6:	4a0a      	ldr	r2, [pc, #40]	@ (8005720 <HAL_RCC_ClockConfig+0x270>)
 80056f8:	6013      	str	r3, [r2, #0]
 80056fa:	4b0a      	ldr	r3, [pc, #40]	@ (8005724 <HAL_RCC_ClockConfig+0x274>)
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	4618      	mov	r0, r3
 8005700:	f7fc fc2c 	bl	8001f5c <HAL_InitTick>
 8005704:	4603      	mov	r3, r0
 8005706:	4618      	mov	r0, r3
 8005708:	3718      	adds	r7, #24
 800570a:	46bd      	mov	sp, r7
 800570c:	bd80      	pop	{r7, pc}
 800570e:	bf00      	nop
 8005710:	40022000 	.word	0x40022000
 8005714:	40021000 	.word	0x40021000
 8005718:	04c4b400 	.word	0x04c4b400
 800571c:	08007380 	.word	0x08007380
 8005720:	20000000 	.word	0x20000000
 8005724:	20000004 	.word	0x20000004

08005728 <HAL_RCC_GetSysClockFreq>:
 8005728:	b480      	push	{r7}
 800572a:	b087      	sub	sp, #28
 800572c:	af00      	add	r7, sp, #0
 800572e:	4b2c      	ldr	r3, [pc, #176]	@ (80057e0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005730:	689b      	ldr	r3, [r3, #8]
 8005732:	f003 030c 	and.w	r3, r3, #12
 8005736:	2b04      	cmp	r3, #4
 8005738:	d102      	bne.n	8005740 <HAL_RCC_GetSysClockFreq+0x18>
 800573a:	4b2a      	ldr	r3, [pc, #168]	@ (80057e4 <HAL_RCC_GetSysClockFreq+0xbc>)
 800573c:	613b      	str	r3, [r7, #16]
 800573e:	e047      	b.n	80057d0 <HAL_RCC_GetSysClockFreq+0xa8>
 8005740:	4b27      	ldr	r3, [pc, #156]	@ (80057e0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005742:	689b      	ldr	r3, [r3, #8]
 8005744:	f003 030c 	and.w	r3, r3, #12
 8005748:	2b08      	cmp	r3, #8
 800574a:	d102      	bne.n	8005752 <HAL_RCC_GetSysClockFreq+0x2a>
 800574c:	4b26      	ldr	r3, [pc, #152]	@ (80057e8 <HAL_RCC_GetSysClockFreq+0xc0>)
 800574e:	613b      	str	r3, [r7, #16]
 8005750:	e03e      	b.n	80057d0 <HAL_RCC_GetSysClockFreq+0xa8>
 8005752:	4b23      	ldr	r3, [pc, #140]	@ (80057e0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005754:	689b      	ldr	r3, [r3, #8]
 8005756:	f003 030c 	and.w	r3, r3, #12
 800575a:	2b0c      	cmp	r3, #12
 800575c:	d136      	bne.n	80057cc <HAL_RCC_GetSysClockFreq+0xa4>
 800575e:	4b20      	ldr	r3, [pc, #128]	@ (80057e0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005760:	68db      	ldr	r3, [r3, #12]
 8005762:	f003 0303 	and.w	r3, r3, #3
 8005766:	60fb      	str	r3, [r7, #12]
 8005768:	4b1d      	ldr	r3, [pc, #116]	@ (80057e0 <HAL_RCC_GetSysClockFreq+0xb8>)
 800576a:	68db      	ldr	r3, [r3, #12]
 800576c:	091b      	lsrs	r3, r3, #4
 800576e:	f003 030f 	and.w	r3, r3, #15
 8005772:	3301      	adds	r3, #1
 8005774:	60bb      	str	r3, [r7, #8]
 8005776:	68fb      	ldr	r3, [r7, #12]
 8005778:	2b03      	cmp	r3, #3
 800577a:	d10c      	bne.n	8005796 <HAL_RCC_GetSysClockFreq+0x6e>
 800577c:	4a1a      	ldr	r2, [pc, #104]	@ (80057e8 <HAL_RCC_GetSysClockFreq+0xc0>)
 800577e:	68bb      	ldr	r3, [r7, #8]
 8005780:	fbb2 f3f3 	udiv	r3, r2, r3
 8005784:	4a16      	ldr	r2, [pc, #88]	@ (80057e0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005786:	68d2      	ldr	r2, [r2, #12]
 8005788:	0a12      	lsrs	r2, r2, #8
 800578a:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800578e:	fb02 f303 	mul.w	r3, r2, r3
 8005792:	617b      	str	r3, [r7, #20]
 8005794:	e00c      	b.n	80057b0 <HAL_RCC_GetSysClockFreq+0x88>
 8005796:	4a13      	ldr	r2, [pc, #76]	@ (80057e4 <HAL_RCC_GetSysClockFreq+0xbc>)
 8005798:	68bb      	ldr	r3, [r7, #8]
 800579a:	fbb2 f3f3 	udiv	r3, r2, r3
 800579e:	4a10      	ldr	r2, [pc, #64]	@ (80057e0 <HAL_RCC_GetSysClockFreq+0xb8>)
 80057a0:	68d2      	ldr	r2, [r2, #12]
 80057a2:	0a12      	lsrs	r2, r2, #8
 80057a4:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80057a8:	fb02 f303 	mul.w	r3, r2, r3
 80057ac:	617b      	str	r3, [r7, #20]
 80057ae:	bf00      	nop
 80057b0:	4b0b      	ldr	r3, [pc, #44]	@ (80057e0 <HAL_RCC_GetSysClockFreq+0xb8>)
 80057b2:	68db      	ldr	r3, [r3, #12]
 80057b4:	0e5b      	lsrs	r3, r3, #25
 80057b6:	f003 0303 	and.w	r3, r3, #3
 80057ba:	3301      	adds	r3, #1
 80057bc:	005b      	lsls	r3, r3, #1
 80057be:	607b      	str	r3, [r7, #4]
 80057c0:	697a      	ldr	r2, [r7, #20]
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	fbb2 f3f3 	udiv	r3, r2, r3
 80057c8:	613b      	str	r3, [r7, #16]
 80057ca:	e001      	b.n	80057d0 <HAL_RCC_GetSysClockFreq+0xa8>
 80057cc:	2300      	movs	r3, #0
 80057ce:	613b      	str	r3, [r7, #16]
 80057d0:	693b      	ldr	r3, [r7, #16]
 80057d2:	4618      	mov	r0, r3
 80057d4:	371c      	adds	r7, #28
 80057d6:	46bd      	mov	sp, r7
 80057d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057dc:	4770      	bx	lr
 80057de:	bf00      	nop
 80057e0:	40021000 	.word	0x40021000
 80057e4:	00f42400 	.word	0x00f42400
 80057e8:	007a1200 	.word	0x007a1200

080057ec <RCC_GetSysClockFreqFromPLLSource>:
 80057ec:	b480      	push	{r7}
 80057ee:	b087      	sub	sp, #28
 80057f0:	af00      	add	r7, sp, #0
 80057f2:	4b1e      	ldr	r3, [pc, #120]	@ (800586c <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80057f4:	68db      	ldr	r3, [r3, #12]
 80057f6:	f003 0303 	and.w	r3, r3, #3
 80057fa:	613b      	str	r3, [r7, #16]
 80057fc:	4b1b      	ldr	r3, [pc, #108]	@ (800586c <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80057fe:	68db      	ldr	r3, [r3, #12]
 8005800:	091b      	lsrs	r3, r3, #4
 8005802:	f003 030f 	and.w	r3, r3, #15
 8005806:	3301      	adds	r3, #1
 8005808:	60fb      	str	r3, [r7, #12]
 800580a:	693b      	ldr	r3, [r7, #16]
 800580c:	2b03      	cmp	r3, #3
 800580e:	d10c      	bne.n	800582a <RCC_GetSysClockFreqFromPLLSource+0x3e>
 8005810:	4a17      	ldr	r2, [pc, #92]	@ (8005870 <RCC_GetSysClockFreqFromPLLSource+0x84>)
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	fbb2 f3f3 	udiv	r3, r2, r3
 8005818:	4a14      	ldr	r2, [pc, #80]	@ (800586c <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800581a:	68d2      	ldr	r2, [r2, #12]
 800581c:	0a12      	lsrs	r2, r2, #8
 800581e:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8005822:	fb02 f303 	mul.w	r3, r2, r3
 8005826:	617b      	str	r3, [r7, #20]
 8005828:	e00c      	b.n	8005844 <RCC_GetSysClockFreqFromPLLSource+0x58>
 800582a:	4a12      	ldr	r2, [pc, #72]	@ (8005874 <RCC_GetSysClockFreqFromPLLSource+0x88>)
 800582c:	68fb      	ldr	r3, [r7, #12]
 800582e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005832:	4a0e      	ldr	r2, [pc, #56]	@ (800586c <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8005834:	68d2      	ldr	r2, [r2, #12]
 8005836:	0a12      	lsrs	r2, r2, #8
 8005838:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800583c:	fb02 f303 	mul.w	r3, r2, r3
 8005840:	617b      	str	r3, [r7, #20]
 8005842:	bf00      	nop
 8005844:	4b09      	ldr	r3, [pc, #36]	@ (800586c <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8005846:	68db      	ldr	r3, [r3, #12]
 8005848:	0e5b      	lsrs	r3, r3, #25
 800584a:	f003 0303 	and.w	r3, r3, #3
 800584e:	3301      	adds	r3, #1
 8005850:	005b      	lsls	r3, r3, #1
 8005852:	60bb      	str	r3, [r7, #8]
 8005854:	697a      	ldr	r2, [r7, #20]
 8005856:	68bb      	ldr	r3, [r7, #8]
 8005858:	fbb2 f3f3 	udiv	r3, r2, r3
 800585c:	607b      	str	r3, [r7, #4]
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	4618      	mov	r0, r3
 8005862:	371c      	adds	r7, #28
 8005864:	46bd      	mov	sp, r7
 8005866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800586a:	4770      	bx	lr
 800586c:	40021000 	.word	0x40021000
 8005870:	007a1200 	.word	0x007a1200
 8005874:	00f42400 	.word	0x00f42400

08005878 <HAL_RCCEx_PeriphCLKConfig>:
 8005878:	b580      	push	{r7, lr}
 800587a:	b086      	sub	sp, #24
 800587c:	af00      	add	r7, sp, #0
 800587e:	6078      	str	r0, [r7, #4]
 8005880:	2300      	movs	r3, #0
 8005882:	74fb      	strb	r3, [r7, #19]
 8005884:	2300      	movs	r3, #0
 8005886:	74bb      	strb	r3, [r7, #18]
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8005890:	2b00      	cmp	r3, #0
 8005892:	f000 8098 	beq.w	80059c6 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8005896:	2300      	movs	r3, #0
 8005898:	747b      	strb	r3, [r7, #17]
 800589a:	4b43      	ldr	r3, [pc, #268]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800589c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800589e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80058a2:	2b00      	cmp	r3, #0
 80058a4:	d10d      	bne.n	80058c2 <HAL_RCCEx_PeriphCLKConfig+0x4a>
 80058a6:	4b40      	ldr	r3, [pc, #256]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80058a8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80058aa:	4a3f      	ldr	r2, [pc, #252]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80058ac:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80058b0:	6593      	str	r3, [r2, #88]	@ 0x58
 80058b2:	4b3d      	ldr	r3, [pc, #244]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80058b4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80058b6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80058ba:	60bb      	str	r3, [r7, #8]
 80058bc:	68bb      	ldr	r3, [r7, #8]
 80058be:	2301      	movs	r3, #1
 80058c0:	747b      	strb	r3, [r7, #17]
 80058c2:	4b3a      	ldr	r3, [pc, #232]	@ (80059ac <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	4a39      	ldr	r2, [pc, #228]	@ (80059ac <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80058c8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80058cc:	6013      	str	r3, [r2, #0]
 80058ce:	f7fc fb91 	bl	8001ff4 <HAL_GetTick>
 80058d2:	60f8      	str	r0, [r7, #12]
 80058d4:	e009      	b.n	80058ea <HAL_RCCEx_PeriphCLKConfig+0x72>
 80058d6:	f7fc fb8d 	bl	8001ff4 <HAL_GetTick>
 80058da:	4602      	mov	r2, r0
 80058dc:	68fb      	ldr	r3, [r7, #12]
 80058de:	1ad3      	subs	r3, r2, r3
 80058e0:	2b02      	cmp	r3, #2
 80058e2:	d902      	bls.n	80058ea <HAL_RCCEx_PeriphCLKConfig+0x72>
 80058e4:	2303      	movs	r3, #3
 80058e6:	74fb      	strb	r3, [r7, #19]
 80058e8:	e005      	b.n	80058f6 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80058ea:	4b30      	ldr	r3, [pc, #192]	@ (80059ac <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80058ec:	681b      	ldr	r3, [r3, #0]
 80058ee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80058f2:	2b00      	cmp	r3, #0
 80058f4:	d0ef      	beq.n	80058d6 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 80058f6:	7cfb      	ldrb	r3, [r7, #19]
 80058f8:	2b00      	cmp	r3, #0
 80058fa:	d159      	bne.n	80059b0 <HAL_RCCEx_PeriphCLKConfig+0x138>
 80058fc:	4b2a      	ldr	r3, [pc, #168]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80058fe:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005902:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005906:	617b      	str	r3, [r7, #20]
 8005908:	697b      	ldr	r3, [r7, #20]
 800590a:	2b00      	cmp	r3, #0
 800590c:	d01e      	beq.n	800594c <HAL_RCCEx_PeriphCLKConfig+0xd4>
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005912:	697a      	ldr	r2, [r7, #20]
 8005914:	429a      	cmp	r2, r3
 8005916:	d019      	beq.n	800594c <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8005918:	4b23      	ldr	r3, [pc, #140]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800591a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800591e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005922:	617b      	str	r3, [r7, #20]
 8005924:	4b20      	ldr	r3, [pc, #128]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005926:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800592a:	4a1f      	ldr	r2, [pc, #124]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800592c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005930:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005934:	4b1c      	ldr	r3, [pc, #112]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005936:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800593a:	4a1b      	ldr	r2, [pc, #108]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800593c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005940:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005944:	4a18      	ldr	r2, [pc, #96]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005946:	697b      	ldr	r3, [r7, #20]
 8005948:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800594c:	697b      	ldr	r3, [r7, #20]
 800594e:	f003 0301 	and.w	r3, r3, #1
 8005952:	2b00      	cmp	r3, #0
 8005954:	d016      	beq.n	8005984 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8005956:	f7fc fb4d 	bl	8001ff4 <HAL_GetTick>
 800595a:	60f8      	str	r0, [r7, #12]
 800595c:	e00b      	b.n	8005976 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 800595e:	f7fc fb49 	bl	8001ff4 <HAL_GetTick>
 8005962:	4602      	mov	r2, r0
 8005964:	68fb      	ldr	r3, [r7, #12]
 8005966:	1ad3      	subs	r3, r2, r3
 8005968:	f241 3288 	movw	r2, #5000	@ 0x1388
 800596c:	4293      	cmp	r3, r2
 800596e:	d902      	bls.n	8005976 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8005970:	2303      	movs	r3, #3
 8005972:	74fb      	strb	r3, [r7, #19]
 8005974:	e006      	b.n	8005984 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8005976:	4b0c      	ldr	r3, [pc, #48]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005978:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800597c:	f003 0302 	and.w	r3, r3, #2
 8005980:	2b00      	cmp	r3, #0
 8005982:	d0ec      	beq.n	800595e <HAL_RCCEx_PeriphCLKConfig+0xe6>
 8005984:	7cfb      	ldrb	r3, [r7, #19]
 8005986:	2b00      	cmp	r3, #0
 8005988:	d10b      	bne.n	80059a2 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 800598a:	4b07      	ldr	r3, [pc, #28]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800598c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005990:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005994:	687b      	ldr	r3, [r7, #4]
 8005996:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005998:	4903      	ldr	r1, [pc, #12]	@ (80059a8 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800599a:	4313      	orrs	r3, r2
 800599c:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 80059a0:	e008      	b.n	80059b4 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80059a2:	7cfb      	ldrb	r3, [r7, #19]
 80059a4:	74bb      	strb	r3, [r7, #18]
 80059a6:	e005      	b.n	80059b4 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80059a8:	40021000 	.word	0x40021000
 80059ac:	40007000 	.word	0x40007000
 80059b0:	7cfb      	ldrb	r3, [r7, #19]
 80059b2:	74bb      	strb	r3, [r7, #18]
 80059b4:	7c7b      	ldrb	r3, [r7, #17]
 80059b6:	2b01      	cmp	r3, #1
 80059b8:	d105      	bne.n	80059c6 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 80059ba:	4ba6      	ldr	r3, [pc, #664]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80059bc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80059be:	4aa5      	ldr	r2, [pc, #660]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80059c0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80059c4:	6593      	str	r3, [r2, #88]	@ 0x58
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	681b      	ldr	r3, [r3, #0]
 80059ca:	f003 0301 	and.w	r3, r3, #1
 80059ce:	2b00      	cmp	r3, #0
 80059d0:	d00a      	beq.n	80059e8 <HAL_RCCEx_PeriphCLKConfig+0x170>
 80059d2:	4ba0      	ldr	r3, [pc, #640]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80059d4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80059d8:	f023 0203 	bic.w	r2, r3, #3
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	685b      	ldr	r3, [r3, #4]
 80059e0:	499c      	ldr	r1, [pc, #624]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80059e2:	4313      	orrs	r3, r2
 80059e4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80059e8:	687b      	ldr	r3, [r7, #4]
 80059ea:	681b      	ldr	r3, [r3, #0]
 80059ec:	f003 0302 	and.w	r3, r3, #2
 80059f0:	2b00      	cmp	r3, #0
 80059f2:	d00a      	beq.n	8005a0a <HAL_RCCEx_PeriphCLKConfig+0x192>
 80059f4:	4b97      	ldr	r3, [pc, #604]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80059f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80059fa:	f023 020c 	bic.w	r2, r3, #12
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	689b      	ldr	r3, [r3, #8]
 8005a02:	4994      	ldr	r1, [pc, #592]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a04:	4313      	orrs	r3, r2
 8005a06:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	681b      	ldr	r3, [r3, #0]
 8005a0e:	f003 0304 	and.w	r3, r3, #4
 8005a12:	2b00      	cmp	r3, #0
 8005a14:	d00a      	beq.n	8005a2c <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8005a16:	4b8f      	ldr	r3, [pc, #572]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a18:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005a1c:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8005a20:	687b      	ldr	r3, [r7, #4]
 8005a22:	68db      	ldr	r3, [r3, #12]
 8005a24:	498b      	ldr	r1, [pc, #556]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a26:	4313      	orrs	r3, r2
 8005a28:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005a2c:	687b      	ldr	r3, [r7, #4]
 8005a2e:	681b      	ldr	r3, [r3, #0]
 8005a30:	f003 0308 	and.w	r3, r3, #8
 8005a34:	2b00      	cmp	r3, #0
 8005a36:	d00a      	beq.n	8005a4e <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 8005a38:	4b86      	ldr	r3, [pc, #536]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a3a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005a3e:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	691b      	ldr	r3, [r3, #16]
 8005a46:	4983      	ldr	r1, [pc, #524]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a48:	4313      	orrs	r3, r2
 8005a4a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005a4e:	687b      	ldr	r3, [r7, #4]
 8005a50:	681b      	ldr	r3, [r3, #0]
 8005a52:	f003 0320 	and.w	r3, r3, #32
 8005a56:	2b00      	cmp	r3, #0
 8005a58:	d00a      	beq.n	8005a70 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8005a5a:	4b7e      	ldr	r3, [pc, #504]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a5c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005a60:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 8005a64:	687b      	ldr	r3, [r7, #4]
 8005a66:	695b      	ldr	r3, [r3, #20]
 8005a68:	497a      	ldr	r1, [pc, #488]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a6a:	4313      	orrs	r3, r2
 8005a6c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005a70:	687b      	ldr	r3, [r7, #4]
 8005a72:	681b      	ldr	r3, [r3, #0]
 8005a74:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005a78:	2b00      	cmp	r3, #0
 8005a7a:	d00a      	beq.n	8005a92 <HAL_RCCEx_PeriphCLKConfig+0x21a>
 8005a7c:	4b75      	ldr	r3, [pc, #468]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a7e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005a82:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8005a86:	687b      	ldr	r3, [r7, #4]
 8005a88:	699b      	ldr	r3, [r3, #24]
 8005a8a:	4972      	ldr	r1, [pc, #456]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a8c:	4313      	orrs	r3, r2
 8005a8e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005a92:	687b      	ldr	r3, [r7, #4]
 8005a94:	681b      	ldr	r3, [r3, #0]
 8005a96:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005a9a:	2b00      	cmp	r3, #0
 8005a9c:	d00a      	beq.n	8005ab4 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8005a9e:	4b6d      	ldr	r3, [pc, #436]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005aa0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005aa4:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	69db      	ldr	r3, [r3, #28]
 8005aac:	4969      	ldr	r1, [pc, #420]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005aae:	4313      	orrs	r3, r2
 8005ab0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	681b      	ldr	r3, [r3, #0]
 8005ab8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005abc:	2b00      	cmp	r3, #0
 8005abe:	d00a      	beq.n	8005ad6 <HAL_RCCEx_PeriphCLKConfig+0x25e>
 8005ac0:	4b64      	ldr	r3, [pc, #400]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005ac2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005ac6:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8005aca:	687b      	ldr	r3, [r7, #4]
 8005acc:	6a1b      	ldr	r3, [r3, #32]
 8005ace:	4961      	ldr	r1, [pc, #388]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005ad0:	4313      	orrs	r3, r2
 8005ad2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005ad6:	687b      	ldr	r3, [r7, #4]
 8005ad8:	681b      	ldr	r3, [r3, #0]
 8005ada:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005ade:	2b00      	cmp	r3, #0
 8005ae0:	d00a      	beq.n	8005af8 <HAL_RCCEx_PeriphCLKConfig+0x280>
 8005ae2:	4b5c      	ldr	r3, [pc, #368]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005ae4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005ae8:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8005aec:	687b      	ldr	r3, [r7, #4]
 8005aee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005af0:	4958      	ldr	r1, [pc, #352]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005af2:	4313      	orrs	r3, r2
 8005af4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005af8:	687b      	ldr	r3, [r7, #4]
 8005afa:	681b      	ldr	r3, [r3, #0]
 8005afc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005b00:	2b00      	cmp	r3, #0
 8005b02:	d015      	beq.n	8005b30 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8005b04:	4b53      	ldr	r3, [pc, #332]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b06:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005b0a:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8005b0e:	687b      	ldr	r3, [r7, #4]
 8005b10:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005b12:	4950      	ldr	r1, [pc, #320]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b14:	4313      	orrs	r3, r2
 8005b16:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005b1e:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8005b22:	d105      	bne.n	8005b30 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8005b24:	4b4b      	ldr	r3, [pc, #300]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b26:	68db      	ldr	r3, [r3, #12]
 8005b28:	4a4a      	ldr	r2, [pc, #296]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b2a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005b2e:	60d3      	str	r3, [r2, #12]
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	681b      	ldr	r3, [r3, #0]
 8005b34:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005b38:	2b00      	cmp	r3, #0
 8005b3a:	d015      	beq.n	8005b68 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 8005b3c:	4b45      	ldr	r3, [pc, #276]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b3e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005b42:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005b4a:	4942      	ldr	r1, [pc, #264]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b4c:	4313      	orrs	r3, r2
 8005b4e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005b56:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005b5a:	d105      	bne.n	8005b68 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 8005b5c:	4b3d      	ldr	r3, [pc, #244]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b5e:	68db      	ldr	r3, [r3, #12]
 8005b60:	4a3c      	ldr	r2, [pc, #240]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b62:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005b66:	60d3      	str	r3, [r2, #12]
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	681b      	ldr	r3, [r3, #0]
 8005b6c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8005b70:	2b00      	cmp	r3, #0
 8005b72:	d015      	beq.n	8005ba0 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8005b74:	4b37      	ldr	r3, [pc, #220]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b76:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005b7a:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b82:	4934      	ldr	r1, [pc, #208]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b84:	4313      	orrs	r3, r2
 8005b86:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b8e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8005b92:	d105      	bne.n	8005ba0 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8005b94:	4b2f      	ldr	r3, [pc, #188]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b96:	68db      	ldr	r3, [r3, #12]
 8005b98:	4a2e      	ldr	r2, [pc, #184]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b9a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005b9e:	60d3      	str	r3, [r2, #12]
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	681b      	ldr	r3, [r3, #0]
 8005ba4:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8005ba8:	2b00      	cmp	r3, #0
 8005baa:	d015      	beq.n	8005bd8 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8005bac:	4b29      	ldr	r3, [pc, #164]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bae:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005bb2:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8005bb6:	687b      	ldr	r3, [r7, #4]
 8005bb8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005bba:	4926      	ldr	r1, [pc, #152]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bbc:	4313      	orrs	r3, r2
 8005bbe:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005bc6:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8005bca:	d105      	bne.n	8005bd8 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8005bcc:	4b21      	ldr	r3, [pc, #132]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bce:	68db      	ldr	r3, [r3, #12]
 8005bd0:	4a20      	ldr	r2, [pc, #128]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bd2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005bd6:	60d3      	str	r3, [r2, #12]
 8005bd8:	687b      	ldr	r3, [r7, #4]
 8005bda:	681b      	ldr	r3, [r3, #0]
 8005bdc:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005be0:	2b00      	cmp	r3, #0
 8005be2:	d015      	beq.n	8005c10 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8005be4:	4b1b      	ldr	r3, [pc, #108]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005be6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005bea:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005bf2:	4918      	ldr	r1, [pc, #96]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bf4:	4313      	orrs	r3, r2
 8005bf6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005bfa:	687b      	ldr	r3, [r7, #4]
 8005bfc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005bfe:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8005c02:	d105      	bne.n	8005c10 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8005c04:	4b13      	ldr	r3, [pc, #76]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c06:	68db      	ldr	r3, [r3, #12]
 8005c08:	4a12      	ldr	r2, [pc, #72]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c0a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005c0e:	60d3      	str	r3, [r2, #12]
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8005c18:	2b00      	cmp	r3, #0
 8005c1a:	d015      	beq.n	8005c48 <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8005c1c:	4b0d      	ldr	r3, [pc, #52]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c1e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005c22:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 8005c26:	687b      	ldr	r3, [r7, #4]
 8005c28:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005c2a:	490a      	ldr	r1, [pc, #40]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c2c:	4313      	orrs	r3, r2
 8005c2e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005c32:	687b      	ldr	r3, [r7, #4]
 8005c34:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005c36:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005c3a:	d105      	bne.n	8005c48 <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8005c3c:	4b05      	ldr	r3, [pc, #20]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c3e:	68db      	ldr	r3, [r3, #12]
 8005c40:	4a04      	ldr	r2, [pc, #16]	@ (8005c54 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c42:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005c46:	60d3      	str	r3, [r2, #12]
 8005c48:	7cbb      	ldrb	r3, [r7, #18]
 8005c4a:	4618      	mov	r0, r3
 8005c4c:	3718      	adds	r7, #24
 8005c4e:	46bd      	mov	sp, r7
 8005c50:	bd80      	pop	{r7, pc}
 8005c52:	bf00      	nop
 8005c54:	40021000 	.word	0x40021000

08005c58 <HAL_TIM_Base_Init>:
 8005c58:	b580      	push	{r7, lr}
 8005c5a:	b082      	sub	sp, #8
 8005c5c:	af00      	add	r7, sp, #0
 8005c5e:	6078      	str	r0, [r7, #4]
 8005c60:	687b      	ldr	r3, [r7, #4]
 8005c62:	2b00      	cmp	r3, #0
 8005c64:	d101      	bne.n	8005c6a <HAL_TIM_Base_Init+0x12>
 8005c66:	2301      	movs	r3, #1
 8005c68:	e049      	b.n	8005cfe <HAL_TIM_Base_Init+0xa6>
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005c70:	b2db      	uxtb	r3, r3
 8005c72:	2b00      	cmp	r3, #0
 8005c74:	d106      	bne.n	8005c84 <HAL_TIM_Base_Init+0x2c>
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	2200      	movs	r2, #0
 8005c7a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005c7e:	6878      	ldr	r0, [r7, #4]
 8005c80:	f7fb ffa0 	bl	8001bc4 <HAL_TIM_Base_MspInit>
 8005c84:	687b      	ldr	r3, [r7, #4]
 8005c86:	2202      	movs	r2, #2
 8005c88:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005c8c:	687b      	ldr	r3, [r7, #4]
 8005c8e:	681a      	ldr	r2, [r3, #0]
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	3304      	adds	r3, #4
 8005c94:	4619      	mov	r1, r3
 8005c96:	4610      	mov	r0, r2
 8005c98:	f000 fd92 	bl	80067c0 <TIM_Base_SetConfig>
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	2201      	movs	r2, #1
 8005ca0:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	2201      	movs	r2, #1
 8005ca8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	2201      	movs	r2, #1
 8005cb0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	2201      	movs	r2, #1
 8005cb8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	2201      	movs	r2, #1
 8005cc0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005cc4:	687b      	ldr	r3, [r7, #4]
 8005cc6:	2201      	movs	r2, #1
 8005cc8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	2201      	movs	r2, #1
 8005cd0:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	2201      	movs	r2, #1
 8005cd8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005cdc:	687b      	ldr	r3, [r7, #4]
 8005cde:	2201      	movs	r2, #1
 8005ce0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	2201      	movs	r2, #1
 8005ce8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	2201      	movs	r2, #1
 8005cf0:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	2201      	movs	r2, #1
 8005cf8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005cfc:	2300      	movs	r3, #0
 8005cfe:	4618      	mov	r0, r3
 8005d00:	3708      	adds	r7, #8
 8005d02:	46bd      	mov	sp, r7
 8005d04:	bd80      	pop	{r7, pc}
	...

08005d08 <HAL_TIM_Base_Start_IT>:
 8005d08:	b480      	push	{r7}
 8005d0a:	b085      	sub	sp, #20
 8005d0c:	af00      	add	r7, sp, #0
 8005d0e:	6078      	str	r0, [r7, #4]
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005d16:	b2db      	uxtb	r3, r3
 8005d18:	2b01      	cmp	r3, #1
 8005d1a:	d001      	beq.n	8005d20 <HAL_TIM_Base_Start_IT+0x18>
 8005d1c:	2301      	movs	r3, #1
 8005d1e:	e04a      	b.n	8005db6 <HAL_TIM_Base_Start_IT+0xae>
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	2202      	movs	r2, #2
 8005d24:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005d28:	687b      	ldr	r3, [r7, #4]
 8005d2a:	681b      	ldr	r3, [r3, #0]
 8005d2c:	68da      	ldr	r2, [r3, #12]
 8005d2e:	687b      	ldr	r3, [r7, #4]
 8005d30:	681b      	ldr	r3, [r3, #0]
 8005d32:	f042 0201 	orr.w	r2, r2, #1
 8005d36:	60da      	str	r2, [r3, #12]
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	4a21      	ldr	r2, [pc, #132]	@ (8005dc4 <HAL_TIM_Base_Start_IT+0xbc>)
 8005d3e:	4293      	cmp	r3, r2
 8005d40:	d018      	beq.n	8005d74 <HAL_TIM_Base_Start_IT+0x6c>
 8005d42:	687b      	ldr	r3, [r7, #4]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005d4a:	d013      	beq.n	8005d74 <HAL_TIM_Base_Start_IT+0x6c>
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	4a1d      	ldr	r2, [pc, #116]	@ (8005dc8 <HAL_TIM_Base_Start_IT+0xc0>)
 8005d52:	4293      	cmp	r3, r2
 8005d54:	d00e      	beq.n	8005d74 <HAL_TIM_Base_Start_IT+0x6c>
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	681b      	ldr	r3, [r3, #0]
 8005d5a:	4a1c      	ldr	r2, [pc, #112]	@ (8005dcc <HAL_TIM_Base_Start_IT+0xc4>)
 8005d5c:	4293      	cmp	r3, r2
 8005d5e:	d009      	beq.n	8005d74 <HAL_TIM_Base_Start_IT+0x6c>
 8005d60:	687b      	ldr	r3, [r7, #4]
 8005d62:	681b      	ldr	r3, [r3, #0]
 8005d64:	4a1a      	ldr	r2, [pc, #104]	@ (8005dd0 <HAL_TIM_Base_Start_IT+0xc8>)
 8005d66:	4293      	cmp	r3, r2
 8005d68:	d004      	beq.n	8005d74 <HAL_TIM_Base_Start_IT+0x6c>
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	681b      	ldr	r3, [r3, #0]
 8005d6e:	4a19      	ldr	r2, [pc, #100]	@ (8005dd4 <HAL_TIM_Base_Start_IT+0xcc>)
 8005d70:	4293      	cmp	r3, r2
 8005d72:	d115      	bne.n	8005da0 <HAL_TIM_Base_Start_IT+0x98>
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	689a      	ldr	r2, [r3, #8]
 8005d7a:	4b17      	ldr	r3, [pc, #92]	@ (8005dd8 <HAL_TIM_Base_Start_IT+0xd0>)
 8005d7c:	4013      	ands	r3, r2
 8005d7e:	60fb      	str	r3, [r7, #12]
 8005d80:	68fb      	ldr	r3, [r7, #12]
 8005d82:	2b06      	cmp	r3, #6
 8005d84:	d015      	beq.n	8005db2 <HAL_TIM_Base_Start_IT+0xaa>
 8005d86:	68fb      	ldr	r3, [r7, #12]
 8005d88:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005d8c:	d011      	beq.n	8005db2 <HAL_TIM_Base_Start_IT+0xaa>
 8005d8e:	687b      	ldr	r3, [r7, #4]
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	681a      	ldr	r2, [r3, #0]
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	681b      	ldr	r3, [r3, #0]
 8005d98:	f042 0201 	orr.w	r2, r2, #1
 8005d9c:	601a      	str	r2, [r3, #0]
 8005d9e:	e008      	b.n	8005db2 <HAL_TIM_Base_Start_IT+0xaa>
 8005da0:	687b      	ldr	r3, [r7, #4]
 8005da2:	681b      	ldr	r3, [r3, #0]
 8005da4:	681a      	ldr	r2, [r3, #0]
 8005da6:	687b      	ldr	r3, [r7, #4]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	f042 0201 	orr.w	r2, r2, #1
 8005dae:	601a      	str	r2, [r3, #0]
 8005db0:	e000      	b.n	8005db4 <HAL_TIM_Base_Start_IT+0xac>
 8005db2:	bf00      	nop
 8005db4:	2300      	movs	r3, #0
 8005db6:	4618      	mov	r0, r3
 8005db8:	3714      	adds	r7, #20
 8005dba:	46bd      	mov	sp, r7
 8005dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dc0:	4770      	bx	lr
 8005dc2:	bf00      	nop
 8005dc4:	40012c00 	.word	0x40012c00
 8005dc8:	40000400 	.word	0x40000400
 8005dcc:	40000800 	.word	0x40000800
 8005dd0:	40013400 	.word	0x40013400
 8005dd4:	40014000 	.word	0x40014000
 8005dd8:	00010007 	.word	0x00010007

08005ddc <HAL_TIM_PWM_Init>:
 8005ddc:	b580      	push	{r7, lr}
 8005dde:	b082      	sub	sp, #8
 8005de0:	af00      	add	r7, sp, #0
 8005de2:	6078      	str	r0, [r7, #4]
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	2b00      	cmp	r3, #0
 8005de8:	d101      	bne.n	8005dee <HAL_TIM_PWM_Init+0x12>
 8005dea:	2301      	movs	r3, #1
 8005dec:	e049      	b.n	8005e82 <HAL_TIM_PWM_Init+0xa6>
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005df4:	b2db      	uxtb	r3, r3
 8005df6:	2b00      	cmp	r3, #0
 8005df8:	d106      	bne.n	8005e08 <HAL_TIM_PWM_Init+0x2c>
 8005dfa:	687b      	ldr	r3, [r7, #4]
 8005dfc:	2200      	movs	r2, #0
 8005dfe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005e02:	6878      	ldr	r0, [r7, #4]
 8005e04:	f000 f841 	bl	8005e8a <HAL_TIM_PWM_MspInit>
 8005e08:	687b      	ldr	r3, [r7, #4]
 8005e0a:	2202      	movs	r2, #2
 8005e0c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	681a      	ldr	r2, [r3, #0]
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	3304      	adds	r3, #4
 8005e18:	4619      	mov	r1, r3
 8005e1a:	4610      	mov	r0, r2
 8005e1c:	f000 fcd0 	bl	80067c0 <TIM_Base_SetConfig>
 8005e20:	687b      	ldr	r3, [r7, #4]
 8005e22:	2201      	movs	r2, #1
 8005e24:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	2201      	movs	r2, #1
 8005e2c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	2201      	movs	r2, #1
 8005e34:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	2201      	movs	r2, #1
 8005e3c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	2201      	movs	r2, #1
 8005e44:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	2201      	movs	r2, #1
 8005e4c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	2201      	movs	r2, #1
 8005e54:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	2201      	movs	r2, #1
 8005e5c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005e60:	687b      	ldr	r3, [r7, #4]
 8005e62:	2201      	movs	r2, #1
 8005e64:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005e68:	687b      	ldr	r3, [r7, #4]
 8005e6a:	2201      	movs	r2, #1
 8005e6c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	2201      	movs	r2, #1
 8005e74:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	2201      	movs	r2, #1
 8005e7c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005e80:	2300      	movs	r3, #0
 8005e82:	4618      	mov	r0, r3
 8005e84:	3708      	adds	r7, #8
 8005e86:	46bd      	mov	sp, r7
 8005e88:	bd80      	pop	{r7, pc}

08005e8a <HAL_TIM_PWM_MspInit>:
 8005e8a:	b480      	push	{r7}
 8005e8c:	b083      	sub	sp, #12
 8005e8e:	af00      	add	r7, sp, #0
 8005e90:	6078      	str	r0, [r7, #4]
 8005e92:	bf00      	nop
 8005e94:	370c      	adds	r7, #12
 8005e96:	46bd      	mov	sp, r7
 8005e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e9c:	4770      	bx	lr
	...

08005ea0 <HAL_TIM_PWM_Start>:
 8005ea0:	b580      	push	{r7, lr}
 8005ea2:	b084      	sub	sp, #16
 8005ea4:	af00      	add	r7, sp, #0
 8005ea6:	6078      	str	r0, [r7, #4]
 8005ea8:	6039      	str	r1, [r7, #0]
 8005eaa:	683b      	ldr	r3, [r7, #0]
 8005eac:	2b00      	cmp	r3, #0
 8005eae:	d109      	bne.n	8005ec4 <HAL_TIM_PWM_Start+0x24>
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8005eb6:	b2db      	uxtb	r3, r3
 8005eb8:	2b01      	cmp	r3, #1
 8005eba:	bf14      	ite	ne
 8005ebc:	2301      	movne	r3, #1
 8005ebe:	2300      	moveq	r3, #0
 8005ec0:	b2db      	uxtb	r3, r3
 8005ec2:	e03c      	b.n	8005f3e <HAL_TIM_PWM_Start+0x9e>
 8005ec4:	683b      	ldr	r3, [r7, #0]
 8005ec6:	2b04      	cmp	r3, #4
 8005ec8:	d109      	bne.n	8005ede <HAL_TIM_PWM_Start+0x3e>
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8005ed0:	b2db      	uxtb	r3, r3
 8005ed2:	2b01      	cmp	r3, #1
 8005ed4:	bf14      	ite	ne
 8005ed6:	2301      	movne	r3, #1
 8005ed8:	2300      	moveq	r3, #0
 8005eda:	b2db      	uxtb	r3, r3
 8005edc:	e02f      	b.n	8005f3e <HAL_TIM_PWM_Start+0x9e>
 8005ede:	683b      	ldr	r3, [r7, #0]
 8005ee0:	2b08      	cmp	r3, #8
 8005ee2:	d109      	bne.n	8005ef8 <HAL_TIM_PWM_Start+0x58>
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005eea:	b2db      	uxtb	r3, r3
 8005eec:	2b01      	cmp	r3, #1
 8005eee:	bf14      	ite	ne
 8005ef0:	2301      	movne	r3, #1
 8005ef2:	2300      	moveq	r3, #0
 8005ef4:	b2db      	uxtb	r3, r3
 8005ef6:	e022      	b.n	8005f3e <HAL_TIM_PWM_Start+0x9e>
 8005ef8:	683b      	ldr	r3, [r7, #0]
 8005efa:	2b0c      	cmp	r3, #12
 8005efc:	d109      	bne.n	8005f12 <HAL_TIM_PWM_Start+0x72>
 8005efe:	687b      	ldr	r3, [r7, #4]
 8005f00:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005f04:	b2db      	uxtb	r3, r3
 8005f06:	2b01      	cmp	r3, #1
 8005f08:	bf14      	ite	ne
 8005f0a:	2301      	movne	r3, #1
 8005f0c:	2300      	moveq	r3, #0
 8005f0e:	b2db      	uxtb	r3, r3
 8005f10:	e015      	b.n	8005f3e <HAL_TIM_PWM_Start+0x9e>
 8005f12:	683b      	ldr	r3, [r7, #0]
 8005f14:	2b10      	cmp	r3, #16
 8005f16:	d109      	bne.n	8005f2c <HAL_TIM_PWM_Start+0x8c>
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005f1e:	b2db      	uxtb	r3, r3
 8005f20:	2b01      	cmp	r3, #1
 8005f22:	bf14      	ite	ne
 8005f24:	2301      	movne	r3, #1
 8005f26:	2300      	moveq	r3, #0
 8005f28:	b2db      	uxtb	r3, r3
 8005f2a:	e008      	b.n	8005f3e <HAL_TIM_PWM_Start+0x9e>
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8005f32:	b2db      	uxtb	r3, r3
 8005f34:	2b01      	cmp	r3, #1
 8005f36:	bf14      	ite	ne
 8005f38:	2301      	movne	r3, #1
 8005f3a:	2300      	moveq	r3, #0
 8005f3c:	b2db      	uxtb	r3, r3
 8005f3e:	2b00      	cmp	r3, #0
 8005f40:	d001      	beq.n	8005f46 <HAL_TIM_PWM_Start+0xa6>
 8005f42:	2301      	movs	r3, #1
 8005f44:	e097      	b.n	8006076 <HAL_TIM_PWM_Start+0x1d6>
 8005f46:	683b      	ldr	r3, [r7, #0]
 8005f48:	2b00      	cmp	r3, #0
 8005f4a:	d104      	bne.n	8005f56 <HAL_TIM_PWM_Start+0xb6>
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	2202      	movs	r2, #2
 8005f50:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005f54:	e023      	b.n	8005f9e <HAL_TIM_PWM_Start+0xfe>
 8005f56:	683b      	ldr	r3, [r7, #0]
 8005f58:	2b04      	cmp	r3, #4
 8005f5a:	d104      	bne.n	8005f66 <HAL_TIM_PWM_Start+0xc6>
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	2202      	movs	r2, #2
 8005f60:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005f64:	e01b      	b.n	8005f9e <HAL_TIM_PWM_Start+0xfe>
 8005f66:	683b      	ldr	r3, [r7, #0]
 8005f68:	2b08      	cmp	r3, #8
 8005f6a:	d104      	bne.n	8005f76 <HAL_TIM_PWM_Start+0xd6>
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	2202      	movs	r2, #2
 8005f70:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005f74:	e013      	b.n	8005f9e <HAL_TIM_PWM_Start+0xfe>
 8005f76:	683b      	ldr	r3, [r7, #0]
 8005f78:	2b0c      	cmp	r3, #12
 8005f7a:	d104      	bne.n	8005f86 <HAL_TIM_PWM_Start+0xe6>
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	2202      	movs	r2, #2
 8005f80:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005f84:	e00b      	b.n	8005f9e <HAL_TIM_PWM_Start+0xfe>
 8005f86:	683b      	ldr	r3, [r7, #0]
 8005f88:	2b10      	cmp	r3, #16
 8005f8a:	d104      	bne.n	8005f96 <HAL_TIM_PWM_Start+0xf6>
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	2202      	movs	r2, #2
 8005f90:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005f94:	e003      	b.n	8005f9e <HAL_TIM_PWM_Start+0xfe>
 8005f96:	687b      	ldr	r3, [r7, #4]
 8005f98:	2202      	movs	r2, #2
 8005f9a:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	681b      	ldr	r3, [r3, #0]
 8005fa2:	2201      	movs	r2, #1
 8005fa4:	6839      	ldr	r1, [r7, #0]
 8005fa6:	4618      	mov	r0, r3
 8005fa8:	f001 f838 	bl	800701c <TIM_CCxChannelCmd>
 8005fac:	687b      	ldr	r3, [r7, #4]
 8005fae:	681b      	ldr	r3, [r3, #0]
 8005fb0:	4a33      	ldr	r2, [pc, #204]	@ (8006080 <HAL_TIM_PWM_Start+0x1e0>)
 8005fb2:	4293      	cmp	r3, r2
 8005fb4:	d013      	beq.n	8005fde <HAL_TIM_PWM_Start+0x13e>
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	681b      	ldr	r3, [r3, #0]
 8005fba:	4a32      	ldr	r2, [pc, #200]	@ (8006084 <HAL_TIM_PWM_Start+0x1e4>)
 8005fbc:	4293      	cmp	r3, r2
 8005fbe:	d00e      	beq.n	8005fde <HAL_TIM_PWM_Start+0x13e>
 8005fc0:	687b      	ldr	r3, [r7, #4]
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	4a30      	ldr	r2, [pc, #192]	@ (8006088 <HAL_TIM_PWM_Start+0x1e8>)
 8005fc6:	4293      	cmp	r3, r2
 8005fc8:	d009      	beq.n	8005fde <HAL_TIM_PWM_Start+0x13e>
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	4a2f      	ldr	r2, [pc, #188]	@ (800608c <HAL_TIM_PWM_Start+0x1ec>)
 8005fd0:	4293      	cmp	r3, r2
 8005fd2:	d004      	beq.n	8005fde <HAL_TIM_PWM_Start+0x13e>
 8005fd4:	687b      	ldr	r3, [r7, #4]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	4a2d      	ldr	r2, [pc, #180]	@ (8006090 <HAL_TIM_PWM_Start+0x1f0>)
 8005fda:	4293      	cmp	r3, r2
 8005fdc:	d101      	bne.n	8005fe2 <HAL_TIM_PWM_Start+0x142>
 8005fde:	2301      	movs	r3, #1
 8005fe0:	e000      	b.n	8005fe4 <HAL_TIM_PWM_Start+0x144>
 8005fe2:	2300      	movs	r3, #0
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d007      	beq.n	8005ff8 <HAL_TIM_PWM_Start+0x158>
 8005fe8:	687b      	ldr	r3, [r7, #4]
 8005fea:	681b      	ldr	r3, [r3, #0]
 8005fec:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005fee:	687b      	ldr	r3, [r7, #4]
 8005ff0:	681b      	ldr	r3, [r3, #0]
 8005ff2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005ff6:	645a      	str	r2, [r3, #68]	@ 0x44
 8005ff8:	687b      	ldr	r3, [r7, #4]
 8005ffa:	681b      	ldr	r3, [r3, #0]
 8005ffc:	4a20      	ldr	r2, [pc, #128]	@ (8006080 <HAL_TIM_PWM_Start+0x1e0>)
 8005ffe:	4293      	cmp	r3, r2
 8006000:	d018      	beq.n	8006034 <HAL_TIM_PWM_Start+0x194>
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	681b      	ldr	r3, [r3, #0]
 8006006:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800600a:	d013      	beq.n	8006034 <HAL_TIM_PWM_Start+0x194>
 800600c:	687b      	ldr	r3, [r7, #4]
 800600e:	681b      	ldr	r3, [r3, #0]
 8006010:	4a20      	ldr	r2, [pc, #128]	@ (8006094 <HAL_TIM_PWM_Start+0x1f4>)
 8006012:	4293      	cmp	r3, r2
 8006014:	d00e      	beq.n	8006034 <HAL_TIM_PWM_Start+0x194>
 8006016:	687b      	ldr	r3, [r7, #4]
 8006018:	681b      	ldr	r3, [r3, #0]
 800601a:	4a1f      	ldr	r2, [pc, #124]	@ (8006098 <HAL_TIM_PWM_Start+0x1f8>)
 800601c:	4293      	cmp	r3, r2
 800601e:	d009      	beq.n	8006034 <HAL_TIM_PWM_Start+0x194>
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	681b      	ldr	r3, [r3, #0]
 8006024:	4a17      	ldr	r2, [pc, #92]	@ (8006084 <HAL_TIM_PWM_Start+0x1e4>)
 8006026:	4293      	cmp	r3, r2
 8006028:	d004      	beq.n	8006034 <HAL_TIM_PWM_Start+0x194>
 800602a:	687b      	ldr	r3, [r7, #4]
 800602c:	681b      	ldr	r3, [r3, #0]
 800602e:	4a16      	ldr	r2, [pc, #88]	@ (8006088 <HAL_TIM_PWM_Start+0x1e8>)
 8006030:	4293      	cmp	r3, r2
 8006032:	d115      	bne.n	8006060 <HAL_TIM_PWM_Start+0x1c0>
 8006034:	687b      	ldr	r3, [r7, #4]
 8006036:	681b      	ldr	r3, [r3, #0]
 8006038:	689a      	ldr	r2, [r3, #8]
 800603a:	4b18      	ldr	r3, [pc, #96]	@ (800609c <HAL_TIM_PWM_Start+0x1fc>)
 800603c:	4013      	ands	r3, r2
 800603e:	60fb      	str	r3, [r7, #12]
 8006040:	68fb      	ldr	r3, [r7, #12]
 8006042:	2b06      	cmp	r3, #6
 8006044:	d015      	beq.n	8006072 <HAL_TIM_PWM_Start+0x1d2>
 8006046:	68fb      	ldr	r3, [r7, #12]
 8006048:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800604c:	d011      	beq.n	8006072 <HAL_TIM_PWM_Start+0x1d2>
 800604e:	687b      	ldr	r3, [r7, #4]
 8006050:	681b      	ldr	r3, [r3, #0]
 8006052:	681a      	ldr	r2, [r3, #0]
 8006054:	687b      	ldr	r3, [r7, #4]
 8006056:	681b      	ldr	r3, [r3, #0]
 8006058:	f042 0201 	orr.w	r2, r2, #1
 800605c:	601a      	str	r2, [r3, #0]
 800605e:	e008      	b.n	8006072 <HAL_TIM_PWM_Start+0x1d2>
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	681a      	ldr	r2, [r3, #0]
 8006066:	687b      	ldr	r3, [r7, #4]
 8006068:	681b      	ldr	r3, [r3, #0]
 800606a:	f042 0201 	orr.w	r2, r2, #1
 800606e:	601a      	str	r2, [r3, #0]
 8006070:	e000      	b.n	8006074 <HAL_TIM_PWM_Start+0x1d4>
 8006072:	bf00      	nop
 8006074:	2300      	movs	r3, #0
 8006076:	4618      	mov	r0, r3
 8006078:	3710      	adds	r7, #16
 800607a:	46bd      	mov	sp, r7
 800607c:	bd80      	pop	{r7, pc}
 800607e:	bf00      	nop
 8006080:	40012c00 	.word	0x40012c00
 8006084:	40013400 	.word	0x40013400
 8006088:	40014000 	.word	0x40014000
 800608c:	40014400 	.word	0x40014400
 8006090:	40014800 	.word	0x40014800
 8006094:	40000400 	.word	0x40000400
 8006098:	40000800 	.word	0x40000800
 800609c:	00010007 	.word	0x00010007

080060a0 <HAL_TIM_IRQHandler>:
 80060a0:	b580      	push	{r7, lr}
 80060a2:	b084      	sub	sp, #16
 80060a4:	af00      	add	r7, sp, #0
 80060a6:	6078      	str	r0, [r7, #4]
 80060a8:	687b      	ldr	r3, [r7, #4]
 80060aa:	681b      	ldr	r3, [r3, #0]
 80060ac:	68db      	ldr	r3, [r3, #12]
 80060ae:	60fb      	str	r3, [r7, #12]
 80060b0:	687b      	ldr	r3, [r7, #4]
 80060b2:	681b      	ldr	r3, [r3, #0]
 80060b4:	691b      	ldr	r3, [r3, #16]
 80060b6:	60bb      	str	r3, [r7, #8]
 80060b8:	68bb      	ldr	r3, [r7, #8]
 80060ba:	f003 0302 	and.w	r3, r3, #2
 80060be:	2b00      	cmp	r3, #0
 80060c0:	d020      	beq.n	8006104 <HAL_TIM_IRQHandler+0x64>
 80060c2:	68fb      	ldr	r3, [r7, #12]
 80060c4:	f003 0302 	and.w	r3, r3, #2
 80060c8:	2b00      	cmp	r3, #0
 80060ca:	d01b      	beq.n	8006104 <HAL_TIM_IRQHandler+0x64>
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	f06f 0202 	mvn.w	r2, #2
 80060d4:	611a      	str	r2, [r3, #16]
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	2201      	movs	r2, #1
 80060da:	771a      	strb	r2, [r3, #28]
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	699b      	ldr	r3, [r3, #24]
 80060e2:	f003 0303 	and.w	r3, r3, #3
 80060e6:	2b00      	cmp	r3, #0
 80060e8:	d003      	beq.n	80060f2 <HAL_TIM_IRQHandler+0x52>
 80060ea:	6878      	ldr	r0, [r7, #4]
 80060ec:	f000 fb4a 	bl	8006784 <HAL_TIM_IC_CaptureCallback>
 80060f0:	e005      	b.n	80060fe <HAL_TIM_IRQHandler+0x5e>
 80060f2:	6878      	ldr	r0, [r7, #4]
 80060f4:	f000 fb3c 	bl	8006770 <HAL_TIM_OC_DelayElapsedCallback>
 80060f8:	6878      	ldr	r0, [r7, #4]
 80060fa:	f000 fb4d 	bl	8006798 <HAL_TIM_PWM_PulseFinishedCallback>
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	2200      	movs	r2, #0
 8006102:	771a      	strb	r2, [r3, #28]
 8006104:	68bb      	ldr	r3, [r7, #8]
 8006106:	f003 0304 	and.w	r3, r3, #4
 800610a:	2b00      	cmp	r3, #0
 800610c:	d020      	beq.n	8006150 <HAL_TIM_IRQHandler+0xb0>
 800610e:	68fb      	ldr	r3, [r7, #12]
 8006110:	f003 0304 	and.w	r3, r3, #4
 8006114:	2b00      	cmp	r3, #0
 8006116:	d01b      	beq.n	8006150 <HAL_TIM_IRQHandler+0xb0>
 8006118:	687b      	ldr	r3, [r7, #4]
 800611a:	681b      	ldr	r3, [r3, #0]
 800611c:	f06f 0204 	mvn.w	r2, #4
 8006120:	611a      	str	r2, [r3, #16]
 8006122:	687b      	ldr	r3, [r7, #4]
 8006124:	2202      	movs	r2, #2
 8006126:	771a      	strb	r2, [r3, #28]
 8006128:	687b      	ldr	r3, [r7, #4]
 800612a:	681b      	ldr	r3, [r3, #0]
 800612c:	699b      	ldr	r3, [r3, #24]
 800612e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006132:	2b00      	cmp	r3, #0
 8006134:	d003      	beq.n	800613e <HAL_TIM_IRQHandler+0x9e>
 8006136:	6878      	ldr	r0, [r7, #4]
 8006138:	f000 fb24 	bl	8006784 <HAL_TIM_IC_CaptureCallback>
 800613c:	e005      	b.n	800614a <HAL_TIM_IRQHandler+0xaa>
 800613e:	6878      	ldr	r0, [r7, #4]
 8006140:	f000 fb16 	bl	8006770 <HAL_TIM_OC_DelayElapsedCallback>
 8006144:	6878      	ldr	r0, [r7, #4]
 8006146:	f000 fb27 	bl	8006798 <HAL_TIM_PWM_PulseFinishedCallback>
 800614a:	687b      	ldr	r3, [r7, #4]
 800614c:	2200      	movs	r2, #0
 800614e:	771a      	strb	r2, [r3, #28]
 8006150:	68bb      	ldr	r3, [r7, #8]
 8006152:	f003 0308 	and.w	r3, r3, #8
 8006156:	2b00      	cmp	r3, #0
 8006158:	d020      	beq.n	800619c <HAL_TIM_IRQHandler+0xfc>
 800615a:	68fb      	ldr	r3, [r7, #12]
 800615c:	f003 0308 	and.w	r3, r3, #8
 8006160:	2b00      	cmp	r3, #0
 8006162:	d01b      	beq.n	800619c <HAL_TIM_IRQHandler+0xfc>
 8006164:	687b      	ldr	r3, [r7, #4]
 8006166:	681b      	ldr	r3, [r3, #0]
 8006168:	f06f 0208 	mvn.w	r2, #8
 800616c:	611a      	str	r2, [r3, #16]
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	2204      	movs	r2, #4
 8006172:	771a      	strb	r2, [r3, #28]
 8006174:	687b      	ldr	r3, [r7, #4]
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	69db      	ldr	r3, [r3, #28]
 800617a:	f003 0303 	and.w	r3, r3, #3
 800617e:	2b00      	cmp	r3, #0
 8006180:	d003      	beq.n	800618a <HAL_TIM_IRQHandler+0xea>
 8006182:	6878      	ldr	r0, [r7, #4]
 8006184:	f000 fafe 	bl	8006784 <HAL_TIM_IC_CaptureCallback>
 8006188:	e005      	b.n	8006196 <HAL_TIM_IRQHandler+0xf6>
 800618a:	6878      	ldr	r0, [r7, #4]
 800618c:	f000 faf0 	bl	8006770 <HAL_TIM_OC_DelayElapsedCallback>
 8006190:	6878      	ldr	r0, [r7, #4]
 8006192:	f000 fb01 	bl	8006798 <HAL_TIM_PWM_PulseFinishedCallback>
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	2200      	movs	r2, #0
 800619a:	771a      	strb	r2, [r3, #28]
 800619c:	68bb      	ldr	r3, [r7, #8]
 800619e:	f003 0310 	and.w	r3, r3, #16
 80061a2:	2b00      	cmp	r3, #0
 80061a4:	d020      	beq.n	80061e8 <HAL_TIM_IRQHandler+0x148>
 80061a6:	68fb      	ldr	r3, [r7, #12]
 80061a8:	f003 0310 	and.w	r3, r3, #16
 80061ac:	2b00      	cmp	r3, #0
 80061ae:	d01b      	beq.n	80061e8 <HAL_TIM_IRQHandler+0x148>
 80061b0:	687b      	ldr	r3, [r7, #4]
 80061b2:	681b      	ldr	r3, [r3, #0]
 80061b4:	f06f 0210 	mvn.w	r2, #16
 80061b8:	611a      	str	r2, [r3, #16]
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	2208      	movs	r2, #8
 80061be:	771a      	strb	r2, [r3, #28]
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	69db      	ldr	r3, [r3, #28]
 80061c6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80061ca:	2b00      	cmp	r3, #0
 80061cc:	d003      	beq.n	80061d6 <HAL_TIM_IRQHandler+0x136>
 80061ce:	6878      	ldr	r0, [r7, #4]
 80061d0:	f000 fad8 	bl	8006784 <HAL_TIM_IC_CaptureCallback>
 80061d4:	e005      	b.n	80061e2 <HAL_TIM_IRQHandler+0x142>
 80061d6:	6878      	ldr	r0, [r7, #4]
 80061d8:	f000 faca 	bl	8006770 <HAL_TIM_OC_DelayElapsedCallback>
 80061dc:	6878      	ldr	r0, [r7, #4]
 80061de:	f000 fadb 	bl	8006798 <HAL_TIM_PWM_PulseFinishedCallback>
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	2200      	movs	r2, #0
 80061e6:	771a      	strb	r2, [r3, #28]
 80061e8:	68bb      	ldr	r3, [r7, #8]
 80061ea:	f003 0301 	and.w	r3, r3, #1
 80061ee:	2b00      	cmp	r3, #0
 80061f0:	d00c      	beq.n	800620c <HAL_TIM_IRQHandler+0x16c>
 80061f2:	68fb      	ldr	r3, [r7, #12]
 80061f4:	f003 0301 	and.w	r3, r3, #1
 80061f8:	2b00      	cmp	r3, #0
 80061fa:	d007      	beq.n	800620c <HAL_TIM_IRQHandler+0x16c>
 80061fc:	687b      	ldr	r3, [r7, #4]
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	f06f 0201 	mvn.w	r2, #1
 8006204:	611a      	str	r2, [r3, #16]
 8006206:	6878      	ldr	r0, [r7, #4]
 8006208:	f000 faa8 	bl	800675c <HAL_TIM_PeriodElapsedCallback>
 800620c:	68bb      	ldr	r3, [r7, #8]
 800620e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006212:	2b00      	cmp	r3, #0
 8006214:	d104      	bne.n	8006220 <HAL_TIM_IRQHandler+0x180>
 8006216:	68bb      	ldr	r3, [r7, #8]
 8006218:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800621c:	2b00      	cmp	r3, #0
 800621e:	d00c      	beq.n	800623a <HAL_TIM_IRQHandler+0x19a>
 8006220:	68fb      	ldr	r3, [r7, #12]
 8006222:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006226:	2b00      	cmp	r3, #0
 8006228:	d007      	beq.n	800623a <HAL_TIM_IRQHandler+0x19a>
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	681b      	ldr	r3, [r3, #0]
 800622e:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8006232:	611a      	str	r2, [r3, #16]
 8006234:	6878      	ldr	r0, [r7, #4]
 8006236:	f001 f82f 	bl	8007298 <HAL_TIMEx_BreakCallback>
 800623a:	68bb      	ldr	r3, [r7, #8]
 800623c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006240:	2b00      	cmp	r3, #0
 8006242:	d00c      	beq.n	800625e <HAL_TIM_IRQHandler+0x1be>
 8006244:	68fb      	ldr	r3, [r7, #12]
 8006246:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800624a:	2b00      	cmp	r3, #0
 800624c:	d007      	beq.n	800625e <HAL_TIM_IRQHandler+0x1be>
 800624e:	687b      	ldr	r3, [r7, #4]
 8006250:	681b      	ldr	r3, [r3, #0]
 8006252:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8006256:	611a      	str	r2, [r3, #16]
 8006258:	6878      	ldr	r0, [r7, #4]
 800625a:	f001 f827 	bl	80072ac <HAL_TIMEx_Break2Callback>
 800625e:	68bb      	ldr	r3, [r7, #8]
 8006260:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006264:	2b00      	cmp	r3, #0
 8006266:	d00c      	beq.n	8006282 <HAL_TIM_IRQHandler+0x1e2>
 8006268:	68fb      	ldr	r3, [r7, #12]
 800626a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800626e:	2b00      	cmp	r3, #0
 8006270:	d007      	beq.n	8006282 <HAL_TIM_IRQHandler+0x1e2>
 8006272:	687b      	ldr	r3, [r7, #4]
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800627a:	611a      	str	r2, [r3, #16]
 800627c:	6878      	ldr	r0, [r7, #4]
 800627e:	f000 fa95 	bl	80067ac <HAL_TIM_TriggerCallback>
 8006282:	68bb      	ldr	r3, [r7, #8]
 8006284:	f003 0320 	and.w	r3, r3, #32
 8006288:	2b00      	cmp	r3, #0
 800628a:	d00c      	beq.n	80062a6 <HAL_TIM_IRQHandler+0x206>
 800628c:	68fb      	ldr	r3, [r7, #12]
 800628e:	f003 0320 	and.w	r3, r3, #32
 8006292:	2b00      	cmp	r3, #0
 8006294:	d007      	beq.n	80062a6 <HAL_TIM_IRQHandler+0x206>
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	681b      	ldr	r3, [r3, #0]
 800629a:	f06f 0220 	mvn.w	r2, #32
 800629e:	611a      	str	r2, [r3, #16]
 80062a0:	6878      	ldr	r0, [r7, #4]
 80062a2:	f000 ffef 	bl	8007284 <HAL_TIMEx_CommutCallback>
 80062a6:	68bb      	ldr	r3, [r7, #8]
 80062a8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80062ac:	2b00      	cmp	r3, #0
 80062ae:	d00c      	beq.n	80062ca <HAL_TIM_IRQHandler+0x22a>
 80062b0:	68fb      	ldr	r3, [r7, #12]
 80062b2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80062b6:	2b00      	cmp	r3, #0
 80062b8:	d007      	beq.n	80062ca <HAL_TIM_IRQHandler+0x22a>
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 80062c2:	611a      	str	r2, [r3, #16]
 80062c4:	6878      	ldr	r0, [r7, #4]
 80062c6:	f000 fffb 	bl	80072c0 <HAL_TIMEx_EncoderIndexCallback>
 80062ca:	68bb      	ldr	r3, [r7, #8]
 80062cc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	d00c      	beq.n	80062ee <HAL_TIM_IRQHandler+0x24e>
 80062d4:	68fb      	ldr	r3, [r7, #12]
 80062d6:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80062da:	2b00      	cmp	r3, #0
 80062dc:	d007      	beq.n	80062ee <HAL_TIM_IRQHandler+0x24e>
 80062de:	687b      	ldr	r3, [r7, #4]
 80062e0:	681b      	ldr	r3, [r3, #0]
 80062e2:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 80062e6:	611a      	str	r2, [r3, #16]
 80062e8:	6878      	ldr	r0, [r7, #4]
 80062ea:	f000 fff3 	bl	80072d4 <HAL_TIMEx_DirectionChangeCallback>
 80062ee:	68bb      	ldr	r3, [r7, #8]
 80062f0:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80062f4:	2b00      	cmp	r3, #0
 80062f6:	d00c      	beq.n	8006312 <HAL_TIM_IRQHandler+0x272>
 80062f8:	68fb      	ldr	r3, [r7, #12]
 80062fa:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80062fe:	2b00      	cmp	r3, #0
 8006300:	d007      	beq.n	8006312 <HAL_TIM_IRQHandler+0x272>
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 800630a:	611a      	str	r2, [r3, #16]
 800630c:	6878      	ldr	r0, [r7, #4]
 800630e:	f000 ffeb 	bl	80072e8 <HAL_TIMEx_IndexErrorCallback>
 8006312:	68bb      	ldr	r3, [r7, #8]
 8006314:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006318:	2b00      	cmp	r3, #0
 800631a:	d00c      	beq.n	8006336 <HAL_TIM_IRQHandler+0x296>
 800631c:	68fb      	ldr	r3, [r7, #12]
 800631e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006322:	2b00      	cmp	r3, #0
 8006324:	d007      	beq.n	8006336 <HAL_TIM_IRQHandler+0x296>
 8006326:	687b      	ldr	r3, [r7, #4]
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 800632e:	611a      	str	r2, [r3, #16]
 8006330:	6878      	ldr	r0, [r7, #4]
 8006332:	f000 ffe3 	bl	80072fc <HAL_TIMEx_TransitionErrorCallback>
 8006336:	bf00      	nop
 8006338:	3710      	adds	r7, #16
 800633a:	46bd      	mov	sp, r7
 800633c:	bd80      	pop	{r7, pc}
	...

08006340 <HAL_TIM_PWM_ConfigChannel>:
 8006340:	b580      	push	{r7, lr}
 8006342:	b086      	sub	sp, #24
 8006344:	af00      	add	r7, sp, #0
 8006346:	60f8      	str	r0, [r7, #12]
 8006348:	60b9      	str	r1, [r7, #8]
 800634a:	607a      	str	r2, [r7, #4]
 800634c:	2300      	movs	r3, #0
 800634e:	75fb      	strb	r3, [r7, #23]
 8006350:	68fb      	ldr	r3, [r7, #12]
 8006352:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006356:	2b01      	cmp	r3, #1
 8006358:	d101      	bne.n	800635e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800635a:	2302      	movs	r3, #2
 800635c:	e0ff      	b.n	800655e <HAL_TIM_PWM_ConfigChannel+0x21e>
 800635e:	68fb      	ldr	r3, [r7, #12]
 8006360:	2201      	movs	r2, #1
 8006362:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	2b14      	cmp	r3, #20
 800636a:	f200 80f0 	bhi.w	800654e <HAL_TIM_PWM_ConfigChannel+0x20e>
 800636e:	a201      	add	r2, pc, #4	@ (adr r2, 8006374 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8006370:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006374:	080063c9 	.word	0x080063c9
 8006378:	0800654f 	.word	0x0800654f
 800637c:	0800654f 	.word	0x0800654f
 8006380:	0800654f 	.word	0x0800654f
 8006384:	08006409 	.word	0x08006409
 8006388:	0800654f 	.word	0x0800654f
 800638c:	0800654f 	.word	0x0800654f
 8006390:	0800654f 	.word	0x0800654f
 8006394:	0800644b 	.word	0x0800644b
 8006398:	0800654f 	.word	0x0800654f
 800639c:	0800654f 	.word	0x0800654f
 80063a0:	0800654f 	.word	0x0800654f
 80063a4:	0800648b 	.word	0x0800648b
 80063a8:	0800654f 	.word	0x0800654f
 80063ac:	0800654f 	.word	0x0800654f
 80063b0:	0800654f 	.word	0x0800654f
 80063b4:	080064cd 	.word	0x080064cd
 80063b8:	0800654f 	.word	0x0800654f
 80063bc:	0800654f 	.word	0x0800654f
 80063c0:	0800654f 	.word	0x0800654f
 80063c4:	0800650d 	.word	0x0800650d
 80063c8:	68fb      	ldr	r3, [r7, #12]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	68b9      	ldr	r1, [r7, #8]
 80063ce:	4618      	mov	r0, r3
 80063d0:	f000 fa92 	bl	80068f8 <TIM_OC1_SetConfig>
 80063d4:	68fb      	ldr	r3, [r7, #12]
 80063d6:	681b      	ldr	r3, [r3, #0]
 80063d8:	699a      	ldr	r2, [r3, #24]
 80063da:	68fb      	ldr	r3, [r7, #12]
 80063dc:	681b      	ldr	r3, [r3, #0]
 80063de:	f042 0208 	orr.w	r2, r2, #8
 80063e2:	619a      	str	r2, [r3, #24]
 80063e4:	68fb      	ldr	r3, [r7, #12]
 80063e6:	681b      	ldr	r3, [r3, #0]
 80063e8:	699a      	ldr	r2, [r3, #24]
 80063ea:	68fb      	ldr	r3, [r7, #12]
 80063ec:	681b      	ldr	r3, [r3, #0]
 80063ee:	f022 0204 	bic.w	r2, r2, #4
 80063f2:	619a      	str	r2, [r3, #24]
 80063f4:	68fb      	ldr	r3, [r7, #12]
 80063f6:	681b      	ldr	r3, [r3, #0]
 80063f8:	6999      	ldr	r1, [r3, #24]
 80063fa:	68bb      	ldr	r3, [r7, #8]
 80063fc:	691a      	ldr	r2, [r3, #16]
 80063fe:	68fb      	ldr	r3, [r7, #12]
 8006400:	681b      	ldr	r3, [r3, #0]
 8006402:	430a      	orrs	r2, r1
 8006404:	619a      	str	r2, [r3, #24]
 8006406:	e0a5      	b.n	8006554 <HAL_TIM_PWM_ConfigChannel+0x214>
 8006408:	68fb      	ldr	r3, [r7, #12]
 800640a:	681b      	ldr	r3, [r3, #0]
 800640c:	68b9      	ldr	r1, [r7, #8]
 800640e:	4618      	mov	r0, r3
 8006410:	f000 fb02 	bl	8006a18 <TIM_OC2_SetConfig>
 8006414:	68fb      	ldr	r3, [r7, #12]
 8006416:	681b      	ldr	r3, [r3, #0]
 8006418:	699a      	ldr	r2, [r3, #24]
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	681b      	ldr	r3, [r3, #0]
 800641e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006422:	619a      	str	r2, [r3, #24]
 8006424:	68fb      	ldr	r3, [r7, #12]
 8006426:	681b      	ldr	r3, [r3, #0]
 8006428:	699a      	ldr	r2, [r3, #24]
 800642a:	68fb      	ldr	r3, [r7, #12]
 800642c:	681b      	ldr	r3, [r3, #0]
 800642e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8006432:	619a      	str	r2, [r3, #24]
 8006434:	68fb      	ldr	r3, [r7, #12]
 8006436:	681b      	ldr	r3, [r3, #0]
 8006438:	6999      	ldr	r1, [r3, #24]
 800643a:	68bb      	ldr	r3, [r7, #8]
 800643c:	691b      	ldr	r3, [r3, #16]
 800643e:	021a      	lsls	r2, r3, #8
 8006440:	68fb      	ldr	r3, [r7, #12]
 8006442:	681b      	ldr	r3, [r3, #0]
 8006444:	430a      	orrs	r2, r1
 8006446:	619a      	str	r2, [r3, #24]
 8006448:	e084      	b.n	8006554 <HAL_TIM_PWM_ConfigChannel+0x214>
 800644a:	68fb      	ldr	r3, [r7, #12]
 800644c:	681b      	ldr	r3, [r3, #0]
 800644e:	68b9      	ldr	r1, [r7, #8]
 8006450:	4618      	mov	r0, r3
 8006452:	f000 fb6b 	bl	8006b2c <TIM_OC3_SetConfig>
 8006456:	68fb      	ldr	r3, [r7, #12]
 8006458:	681b      	ldr	r3, [r3, #0]
 800645a:	69da      	ldr	r2, [r3, #28]
 800645c:	68fb      	ldr	r3, [r7, #12]
 800645e:	681b      	ldr	r3, [r3, #0]
 8006460:	f042 0208 	orr.w	r2, r2, #8
 8006464:	61da      	str	r2, [r3, #28]
 8006466:	68fb      	ldr	r3, [r7, #12]
 8006468:	681b      	ldr	r3, [r3, #0]
 800646a:	69da      	ldr	r2, [r3, #28]
 800646c:	68fb      	ldr	r3, [r7, #12]
 800646e:	681b      	ldr	r3, [r3, #0]
 8006470:	f022 0204 	bic.w	r2, r2, #4
 8006474:	61da      	str	r2, [r3, #28]
 8006476:	68fb      	ldr	r3, [r7, #12]
 8006478:	681b      	ldr	r3, [r3, #0]
 800647a:	69d9      	ldr	r1, [r3, #28]
 800647c:	68bb      	ldr	r3, [r7, #8]
 800647e:	691a      	ldr	r2, [r3, #16]
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	681b      	ldr	r3, [r3, #0]
 8006484:	430a      	orrs	r2, r1
 8006486:	61da      	str	r2, [r3, #28]
 8006488:	e064      	b.n	8006554 <HAL_TIM_PWM_ConfigChannel+0x214>
 800648a:	68fb      	ldr	r3, [r7, #12]
 800648c:	681b      	ldr	r3, [r3, #0]
 800648e:	68b9      	ldr	r1, [r7, #8]
 8006490:	4618      	mov	r0, r3
 8006492:	f000 fbd3 	bl	8006c3c <TIM_OC4_SetConfig>
 8006496:	68fb      	ldr	r3, [r7, #12]
 8006498:	681b      	ldr	r3, [r3, #0]
 800649a:	69da      	ldr	r2, [r3, #28]
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	681b      	ldr	r3, [r3, #0]
 80064a0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80064a4:	61da      	str	r2, [r3, #28]
 80064a6:	68fb      	ldr	r3, [r7, #12]
 80064a8:	681b      	ldr	r3, [r3, #0]
 80064aa:	69da      	ldr	r2, [r3, #28]
 80064ac:	68fb      	ldr	r3, [r7, #12]
 80064ae:	681b      	ldr	r3, [r3, #0]
 80064b0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80064b4:	61da      	str	r2, [r3, #28]
 80064b6:	68fb      	ldr	r3, [r7, #12]
 80064b8:	681b      	ldr	r3, [r3, #0]
 80064ba:	69d9      	ldr	r1, [r3, #28]
 80064bc:	68bb      	ldr	r3, [r7, #8]
 80064be:	691b      	ldr	r3, [r3, #16]
 80064c0:	021a      	lsls	r2, r3, #8
 80064c2:	68fb      	ldr	r3, [r7, #12]
 80064c4:	681b      	ldr	r3, [r3, #0]
 80064c6:	430a      	orrs	r2, r1
 80064c8:	61da      	str	r2, [r3, #28]
 80064ca:	e043      	b.n	8006554 <HAL_TIM_PWM_ConfigChannel+0x214>
 80064cc:	68fb      	ldr	r3, [r7, #12]
 80064ce:	681b      	ldr	r3, [r3, #0]
 80064d0:	68b9      	ldr	r1, [r7, #8]
 80064d2:	4618      	mov	r0, r3
 80064d4:	f000 fc3c 	bl	8006d50 <TIM_OC5_SetConfig>
 80064d8:	68fb      	ldr	r3, [r7, #12]
 80064da:	681b      	ldr	r3, [r3, #0]
 80064dc:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 80064de:	68fb      	ldr	r3, [r7, #12]
 80064e0:	681b      	ldr	r3, [r3, #0]
 80064e2:	f042 0208 	orr.w	r2, r2, #8
 80064e6:	651a      	str	r2, [r3, #80]	@ 0x50
 80064e8:	68fb      	ldr	r3, [r7, #12]
 80064ea:	681b      	ldr	r3, [r3, #0]
 80064ec:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 80064ee:	68fb      	ldr	r3, [r7, #12]
 80064f0:	681b      	ldr	r3, [r3, #0]
 80064f2:	f022 0204 	bic.w	r2, r2, #4
 80064f6:	651a      	str	r2, [r3, #80]	@ 0x50
 80064f8:	68fb      	ldr	r3, [r7, #12]
 80064fa:	681b      	ldr	r3, [r3, #0]
 80064fc:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 80064fe:	68bb      	ldr	r3, [r7, #8]
 8006500:	691a      	ldr	r2, [r3, #16]
 8006502:	68fb      	ldr	r3, [r7, #12]
 8006504:	681b      	ldr	r3, [r3, #0]
 8006506:	430a      	orrs	r2, r1
 8006508:	651a      	str	r2, [r3, #80]	@ 0x50
 800650a:	e023      	b.n	8006554 <HAL_TIM_PWM_ConfigChannel+0x214>
 800650c:	68fb      	ldr	r3, [r7, #12]
 800650e:	681b      	ldr	r3, [r3, #0]
 8006510:	68b9      	ldr	r1, [r7, #8]
 8006512:	4618      	mov	r0, r3
 8006514:	f000 fc80 	bl	8006e18 <TIM_OC6_SetConfig>
 8006518:	68fb      	ldr	r3, [r7, #12]
 800651a:	681b      	ldr	r3, [r3, #0]
 800651c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800651e:	68fb      	ldr	r3, [r7, #12]
 8006520:	681b      	ldr	r3, [r3, #0]
 8006522:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006526:	651a      	str	r2, [r3, #80]	@ 0x50
 8006528:	68fb      	ldr	r3, [r7, #12]
 800652a:	681b      	ldr	r3, [r3, #0]
 800652c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800652e:	68fb      	ldr	r3, [r7, #12]
 8006530:	681b      	ldr	r3, [r3, #0]
 8006532:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8006536:	651a      	str	r2, [r3, #80]	@ 0x50
 8006538:	68fb      	ldr	r3, [r7, #12]
 800653a:	681b      	ldr	r3, [r3, #0]
 800653c:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 800653e:	68bb      	ldr	r3, [r7, #8]
 8006540:	691b      	ldr	r3, [r3, #16]
 8006542:	021a      	lsls	r2, r3, #8
 8006544:	68fb      	ldr	r3, [r7, #12]
 8006546:	681b      	ldr	r3, [r3, #0]
 8006548:	430a      	orrs	r2, r1
 800654a:	651a      	str	r2, [r3, #80]	@ 0x50
 800654c:	e002      	b.n	8006554 <HAL_TIM_PWM_ConfigChannel+0x214>
 800654e:	2301      	movs	r3, #1
 8006550:	75fb      	strb	r3, [r7, #23]
 8006552:	bf00      	nop
 8006554:	68fb      	ldr	r3, [r7, #12]
 8006556:	2200      	movs	r2, #0
 8006558:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800655c:	7dfb      	ldrb	r3, [r7, #23]
 800655e:	4618      	mov	r0, r3
 8006560:	3718      	adds	r7, #24
 8006562:	46bd      	mov	sp, r7
 8006564:	bd80      	pop	{r7, pc}
 8006566:	bf00      	nop

08006568 <HAL_TIM_ConfigClockSource>:
 8006568:	b580      	push	{r7, lr}
 800656a:	b084      	sub	sp, #16
 800656c:	af00      	add	r7, sp, #0
 800656e:	6078      	str	r0, [r7, #4]
 8006570:	6039      	str	r1, [r7, #0]
 8006572:	2300      	movs	r3, #0
 8006574:	73fb      	strb	r3, [r7, #15]
 8006576:	687b      	ldr	r3, [r7, #4]
 8006578:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800657c:	2b01      	cmp	r3, #1
 800657e:	d101      	bne.n	8006584 <HAL_TIM_ConfigClockSource+0x1c>
 8006580:	2302      	movs	r3, #2
 8006582:	e0de      	b.n	8006742 <HAL_TIM_ConfigClockSource+0x1da>
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	2201      	movs	r2, #1
 8006588:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800658c:	687b      	ldr	r3, [r7, #4]
 800658e:	2202      	movs	r2, #2
 8006590:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006594:	687b      	ldr	r3, [r7, #4]
 8006596:	681b      	ldr	r3, [r3, #0]
 8006598:	689b      	ldr	r3, [r3, #8]
 800659a:	60bb      	str	r3, [r7, #8]
 800659c:	68bb      	ldr	r3, [r7, #8]
 800659e:	f423 1344 	bic.w	r3, r3, #3211264	@ 0x310000
 80065a2:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80065a6:	60bb      	str	r3, [r7, #8]
 80065a8:	68bb      	ldr	r3, [r7, #8]
 80065aa:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80065ae:	60bb      	str	r3, [r7, #8]
 80065b0:	687b      	ldr	r3, [r7, #4]
 80065b2:	681b      	ldr	r3, [r3, #0]
 80065b4:	68ba      	ldr	r2, [r7, #8]
 80065b6:	609a      	str	r2, [r3, #8]
 80065b8:	683b      	ldr	r3, [r7, #0]
 80065ba:	681b      	ldr	r3, [r3, #0]
 80065bc:	4a63      	ldr	r2, [pc, #396]	@ (800674c <HAL_TIM_ConfigClockSource+0x1e4>)
 80065be:	4293      	cmp	r3, r2
 80065c0:	f000 80a9 	beq.w	8006716 <HAL_TIM_ConfigClockSource+0x1ae>
 80065c4:	4a61      	ldr	r2, [pc, #388]	@ (800674c <HAL_TIM_ConfigClockSource+0x1e4>)
 80065c6:	4293      	cmp	r3, r2
 80065c8:	f200 80ae 	bhi.w	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 80065cc:	4a60      	ldr	r2, [pc, #384]	@ (8006750 <HAL_TIM_ConfigClockSource+0x1e8>)
 80065ce:	4293      	cmp	r3, r2
 80065d0:	f000 80a1 	beq.w	8006716 <HAL_TIM_ConfigClockSource+0x1ae>
 80065d4:	4a5e      	ldr	r2, [pc, #376]	@ (8006750 <HAL_TIM_ConfigClockSource+0x1e8>)
 80065d6:	4293      	cmp	r3, r2
 80065d8:	f200 80a6 	bhi.w	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 80065dc:	4a5d      	ldr	r2, [pc, #372]	@ (8006754 <HAL_TIM_ConfigClockSource+0x1ec>)
 80065de:	4293      	cmp	r3, r2
 80065e0:	f000 8099 	beq.w	8006716 <HAL_TIM_ConfigClockSource+0x1ae>
 80065e4:	4a5b      	ldr	r2, [pc, #364]	@ (8006754 <HAL_TIM_ConfigClockSource+0x1ec>)
 80065e6:	4293      	cmp	r3, r2
 80065e8:	f200 809e 	bhi.w	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 80065ec:	4a5a      	ldr	r2, [pc, #360]	@ (8006758 <HAL_TIM_ConfigClockSource+0x1f0>)
 80065ee:	4293      	cmp	r3, r2
 80065f0:	f000 8091 	beq.w	8006716 <HAL_TIM_ConfigClockSource+0x1ae>
 80065f4:	4a58      	ldr	r2, [pc, #352]	@ (8006758 <HAL_TIM_ConfigClockSource+0x1f0>)
 80065f6:	4293      	cmp	r3, r2
 80065f8:	f200 8096 	bhi.w	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 80065fc:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8006600:	f000 8089 	beq.w	8006716 <HAL_TIM_ConfigClockSource+0x1ae>
 8006604:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8006608:	f200 808e 	bhi.w	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 800660c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006610:	d03e      	beq.n	8006690 <HAL_TIM_ConfigClockSource+0x128>
 8006612:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006616:	f200 8087 	bhi.w	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 800661a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800661e:	f000 8086 	beq.w	800672e <HAL_TIM_ConfigClockSource+0x1c6>
 8006622:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006626:	d87f      	bhi.n	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 8006628:	2b70      	cmp	r3, #112	@ 0x70
 800662a:	d01a      	beq.n	8006662 <HAL_TIM_ConfigClockSource+0xfa>
 800662c:	2b70      	cmp	r3, #112	@ 0x70
 800662e:	d87b      	bhi.n	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 8006630:	2b60      	cmp	r3, #96	@ 0x60
 8006632:	d050      	beq.n	80066d6 <HAL_TIM_ConfigClockSource+0x16e>
 8006634:	2b60      	cmp	r3, #96	@ 0x60
 8006636:	d877      	bhi.n	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 8006638:	2b50      	cmp	r3, #80	@ 0x50
 800663a:	d03c      	beq.n	80066b6 <HAL_TIM_ConfigClockSource+0x14e>
 800663c:	2b50      	cmp	r3, #80	@ 0x50
 800663e:	d873      	bhi.n	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 8006640:	2b40      	cmp	r3, #64	@ 0x40
 8006642:	d058      	beq.n	80066f6 <HAL_TIM_ConfigClockSource+0x18e>
 8006644:	2b40      	cmp	r3, #64	@ 0x40
 8006646:	d86f      	bhi.n	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 8006648:	2b30      	cmp	r3, #48	@ 0x30
 800664a:	d064      	beq.n	8006716 <HAL_TIM_ConfigClockSource+0x1ae>
 800664c:	2b30      	cmp	r3, #48	@ 0x30
 800664e:	d86b      	bhi.n	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 8006650:	2b20      	cmp	r3, #32
 8006652:	d060      	beq.n	8006716 <HAL_TIM_ConfigClockSource+0x1ae>
 8006654:	2b20      	cmp	r3, #32
 8006656:	d867      	bhi.n	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 8006658:	2b00      	cmp	r3, #0
 800665a:	d05c      	beq.n	8006716 <HAL_TIM_ConfigClockSource+0x1ae>
 800665c:	2b10      	cmp	r3, #16
 800665e:	d05a      	beq.n	8006716 <HAL_TIM_ConfigClockSource+0x1ae>
 8006660:	e062      	b.n	8006728 <HAL_TIM_ConfigClockSource+0x1c0>
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	6818      	ldr	r0, [r3, #0]
 8006666:	683b      	ldr	r3, [r7, #0]
 8006668:	6899      	ldr	r1, [r3, #8]
 800666a:	683b      	ldr	r3, [r7, #0]
 800666c:	685a      	ldr	r2, [r3, #4]
 800666e:	683b      	ldr	r3, [r7, #0]
 8006670:	68db      	ldr	r3, [r3, #12]
 8006672:	f000 fcb3 	bl	8006fdc <TIM_ETR_SetConfig>
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	681b      	ldr	r3, [r3, #0]
 800667a:	689b      	ldr	r3, [r3, #8]
 800667c:	60bb      	str	r3, [r7, #8]
 800667e:	68bb      	ldr	r3, [r7, #8]
 8006680:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8006684:	60bb      	str	r3, [r7, #8]
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	68ba      	ldr	r2, [r7, #8]
 800668c:	609a      	str	r2, [r3, #8]
 800668e:	e04f      	b.n	8006730 <HAL_TIM_ConfigClockSource+0x1c8>
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	6818      	ldr	r0, [r3, #0]
 8006694:	683b      	ldr	r3, [r7, #0]
 8006696:	6899      	ldr	r1, [r3, #8]
 8006698:	683b      	ldr	r3, [r7, #0]
 800669a:	685a      	ldr	r2, [r3, #4]
 800669c:	683b      	ldr	r3, [r7, #0]
 800669e:	68db      	ldr	r3, [r3, #12]
 80066a0:	f000 fc9c 	bl	8006fdc <TIM_ETR_SetConfig>
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	681b      	ldr	r3, [r3, #0]
 80066a8:	689a      	ldr	r2, [r3, #8]
 80066aa:	687b      	ldr	r3, [r7, #4]
 80066ac:	681b      	ldr	r3, [r3, #0]
 80066ae:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80066b2:	609a      	str	r2, [r3, #8]
 80066b4:	e03c      	b.n	8006730 <HAL_TIM_ConfigClockSource+0x1c8>
 80066b6:	687b      	ldr	r3, [r7, #4]
 80066b8:	6818      	ldr	r0, [r3, #0]
 80066ba:	683b      	ldr	r3, [r7, #0]
 80066bc:	6859      	ldr	r1, [r3, #4]
 80066be:	683b      	ldr	r3, [r7, #0]
 80066c0:	68db      	ldr	r3, [r3, #12]
 80066c2:	461a      	mov	r2, r3
 80066c4:	f000 fc0e 	bl	8006ee4 <TIM_TI1_ConfigInputStage>
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	681b      	ldr	r3, [r3, #0]
 80066cc:	2150      	movs	r1, #80	@ 0x50
 80066ce:	4618      	mov	r0, r3
 80066d0:	f000 fc67 	bl	8006fa2 <TIM_ITRx_SetConfig>
 80066d4:	e02c      	b.n	8006730 <HAL_TIM_ConfigClockSource+0x1c8>
 80066d6:	687b      	ldr	r3, [r7, #4]
 80066d8:	6818      	ldr	r0, [r3, #0]
 80066da:	683b      	ldr	r3, [r7, #0]
 80066dc:	6859      	ldr	r1, [r3, #4]
 80066de:	683b      	ldr	r3, [r7, #0]
 80066e0:	68db      	ldr	r3, [r3, #12]
 80066e2:	461a      	mov	r2, r3
 80066e4:	f000 fc2d 	bl	8006f42 <TIM_TI2_ConfigInputStage>
 80066e8:	687b      	ldr	r3, [r7, #4]
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	2160      	movs	r1, #96	@ 0x60
 80066ee:	4618      	mov	r0, r3
 80066f0:	f000 fc57 	bl	8006fa2 <TIM_ITRx_SetConfig>
 80066f4:	e01c      	b.n	8006730 <HAL_TIM_ConfigClockSource+0x1c8>
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	6818      	ldr	r0, [r3, #0]
 80066fa:	683b      	ldr	r3, [r7, #0]
 80066fc:	6859      	ldr	r1, [r3, #4]
 80066fe:	683b      	ldr	r3, [r7, #0]
 8006700:	68db      	ldr	r3, [r3, #12]
 8006702:	461a      	mov	r2, r3
 8006704:	f000 fbee 	bl	8006ee4 <TIM_TI1_ConfigInputStage>
 8006708:	687b      	ldr	r3, [r7, #4]
 800670a:	681b      	ldr	r3, [r3, #0]
 800670c:	2140      	movs	r1, #64	@ 0x40
 800670e:	4618      	mov	r0, r3
 8006710:	f000 fc47 	bl	8006fa2 <TIM_ITRx_SetConfig>
 8006714:	e00c      	b.n	8006730 <HAL_TIM_ConfigClockSource+0x1c8>
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	681a      	ldr	r2, [r3, #0]
 800671a:	683b      	ldr	r3, [r7, #0]
 800671c:	681b      	ldr	r3, [r3, #0]
 800671e:	4619      	mov	r1, r3
 8006720:	4610      	mov	r0, r2
 8006722:	f000 fc3e 	bl	8006fa2 <TIM_ITRx_SetConfig>
 8006726:	e003      	b.n	8006730 <HAL_TIM_ConfigClockSource+0x1c8>
 8006728:	2301      	movs	r3, #1
 800672a:	73fb      	strb	r3, [r7, #15]
 800672c:	e000      	b.n	8006730 <HAL_TIM_ConfigClockSource+0x1c8>
 800672e:	bf00      	nop
 8006730:	687b      	ldr	r3, [r7, #4]
 8006732:	2201      	movs	r2, #1
 8006734:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	2200      	movs	r2, #0
 800673c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006740:	7bfb      	ldrb	r3, [r7, #15]
 8006742:	4618      	mov	r0, r3
 8006744:	3710      	adds	r7, #16
 8006746:	46bd      	mov	sp, r7
 8006748:	bd80      	pop	{r7, pc}
 800674a:	bf00      	nop
 800674c:	00100070 	.word	0x00100070
 8006750:	00100040 	.word	0x00100040
 8006754:	00100030 	.word	0x00100030
 8006758:	00100020 	.word	0x00100020

0800675c <HAL_TIM_PeriodElapsedCallback>:
 800675c:	b480      	push	{r7}
 800675e:	b083      	sub	sp, #12
 8006760:	af00      	add	r7, sp, #0
 8006762:	6078      	str	r0, [r7, #4]
 8006764:	bf00      	nop
 8006766:	370c      	adds	r7, #12
 8006768:	46bd      	mov	sp, r7
 800676a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800676e:	4770      	bx	lr

08006770 <HAL_TIM_OC_DelayElapsedCallback>:
 8006770:	b480      	push	{r7}
 8006772:	b083      	sub	sp, #12
 8006774:	af00      	add	r7, sp, #0
 8006776:	6078      	str	r0, [r7, #4]
 8006778:	bf00      	nop
 800677a:	370c      	adds	r7, #12
 800677c:	46bd      	mov	sp, r7
 800677e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006782:	4770      	bx	lr

08006784 <HAL_TIM_IC_CaptureCallback>:
 8006784:	b480      	push	{r7}
 8006786:	b083      	sub	sp, #12
 8006788:	af00      	add	r7, sp, #0
 800678a:	6078      	str	r0, [r7, #4]
 800678c:	bf00      	nop
 800678e:	370c      	adds	r7, #12
 8006790:	46bd      	mov	sp, r7
 8006792:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006796:	4770      	bx	lr

08006798 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006798:	b480      	push	{r7}
 800679a:	b083      	sub	sp, #12
 800679c:	af00      	add	r7, sp, #0
 800679e:	6078      	str	r0, [r7, #4]
 80067a0:	bf00      	nop
 80067a2:	370c      	adds	r7, #12
 80067a4:	46bd      	mov	sp, r7
 80067a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067aa:	4770      	bx	lr

080067ac <HAL_TIM_TriggerCallback>:
 80067ac:	b480      	push	{r7}
 80067ae:	b083      	sub	sp, #12
 80067b0:	af00      	add	r7, sp, #0
 80067b2:	6078      	str	r0, [r7, #4]
 80067b4:	bf00      	nop
 80067b6:	370c      	adds	r7, #12
 80067b8:	46bd      	mov	sp, r7
 80067ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067be:	4770      	bx	lr

080067c0 <TIM_Base_SetConfig>:
 80067c0:	b480      	push	{r7}
 80067c2:	b085      	sub	sp, #20
 80067c4:	af00      	add	r7, sp, #0
 80067c6:	6078      	str	r0, [r7, #4]
 80067c8:	6039      	str	r1, [r7, #0]
 80067ca:	687b      	ldr	r3, [r7, #4]
 80067cc:	681b      	ldr	r3, [r3, #0]
 80067ce:	60fb      	str	r3, [r7, #12]
 80067d0:	687b      	ldr	r3, [r7, #4]
 80067d2:	4a42      	ldr	r2, [pc, #264]	@ (80068dc <TIM_Base_SetConfig+0x11c>)
 80067d4:	4293      	cmp	r3, r2
 80067d6:	d00f      	beq.n	80067f8 <TIM_Base_SetConfig+0x38>
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80067de:	d00b      	beq.n	80067f8 <TIM_Base_SetConfig+0x38>
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	4a3f      	ldr	r2, [pc, #252]	@ (80068e0 <TIM_Base_SetConfig+0x120>)
 80067e4:	4293      	cmp	r3, r2
 80067e6:	d007      	beq.n	80067f8 <TIM_Base_SetConfig+0x38>
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	4a3e      	ldr	r2, [pc, #248]	@ (80068e4 <TIM_Base_SetConfig+0x124>)
 80067ec:	4293      	cmp	r3, r2
 80067ee:	d003      	beq.n	80067f8 <TIM_Base_SetConfig+0x38>
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	4a3d      	ldr	r2, [pc, #244]	@ (80068e8 <TIM_Base_SetConfig+0x128>)
 80067f4:	4293      	cmp	r3, r2
 80067f6:	d108      	bne.n	800680a <TIM_Base_SetConfig+0x4a>
 80067f8:	68fb      	ldr	r3, [r7, #12]
 80067fa:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80067fe:	60fb      	str	r3, [r7, #12]
 8006800:	683b      	ldr	r3, [r7, #0]
 8006802:	685b      	ldr	r3, [r3, #4]
 8006804:	68fa      	ldr	r2, [r7, #12]
 8006806:	4313      	orrs	r3, r2
 8006808:	60fb      	str	r3, [r7, #12]
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	4a33      	ldr	r2, [pc, #204]	@ (80068dc <TIM_Base_SetConfig+0x11c>)
 800680e:	4293      	cmp	r3, r2
 8006810:	d01b      	beq.n	800684a <TIM_Base_SetConfig+0x8a>
 8006812:	687b      	ldr	r3, [r7, #4]
 8006814:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006818:	d017      	beq.n	800684a <TIM_Base_SetConfig+0x8a>
 800681a:	687b      	ldr	r3, [r7, #4]
 800681c:	4a30      	ldr	r2, [pc, #192]	@ (80068e0 <TIM_Base_SetConfig+0x120>)
 800681e:	4293      	cmp	r3, r2
 8006820:	d013      	beq.n	800684a <TIM_Base_SetConfig+0x8a>
 8006822:	687b      	ldr	r3, [r7, #4]
 8006824:	4a2f      	ldr	r2, [pc, #188]	@ (80068e4 <TIM_Base_SetConfig+0x124>)
 8006826:	4293      	cmp	r3, r2
 8006828:	d00f      	beq.n	800684a <TIM_Base_SetConfig+0x8a>
 800682a:	687b      	ldr	r3, [r7, #4]
 800682c:	4a2e      	ldr	r2, [pc, #184]	@ (80068e8 <TIM_Base_SetConfig+0x128>)
 800682e:	4293      	cmp	r3, r2
 8006830:	d00b      	beq.n	800684a <TIM_Base_SetConfig+0x8a>
 8006832:	687b      	ldr	r3, [r7, #4]
 8006834:	4a2d      	ldr	r2, [pc, #180]	@ (80068ec <TIM_Base_SetConfig+0x12c>)
 8006836:	4293      	cmp	r3, r2
 8006838:	d007      	beq.n	800684a <TIM_Base_SetConfig+0x8a>
 800683a:	687b      	ldr	r3, [r7, #4]
 800683c:	4a2c      	ldr	r2, [pc, #176]	@ (80068f0 <TIM_Base_SetConfig+0x130>)
 800683e:	4293      	cmp	r3, r2
 8006840:	d003      	beq.n	800684a <TIM_Base_SetConfig+0x8a>
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	4a2b      	ldr	r2, [pc, #172]	@ (80068f4 <TIM_Base_SetConfig+0x134>)
 8006846:	4293      	cmp	r3, r2
 8006848:	d108      	bne.n	800685c <TIM_Base_SetConfig+0x9c>
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006850:	60fb      	str	r3, [r7, #12]
 8006852:	683b      	ldr	r3, [r7, #0]
 8006854:	68db      	ldr	r3, [r3, #12]
 8006856:	68fa      	ldr	r2, [r7, #12]
 8006858:	4313      	orrs	r3, r2
 800685a:	60fb      	str	r3, [r7, #12]
 800685c:	68fb      	ldr	r3, [r7, #12]
 800685e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8006862:	683b      	ldr	r3, [r7, #0]
 8006864:	695b      	ldr	r3, [r3, #20]
 8006866:	4313      	orrs	r3, r2
 8006868:	60fb      	str	r3, [r7, #12]
 800686a:	687b      	ldr	r3, [r7, #4]
 800686c:	68fa      	ldr	r2, [r7, #12]
 800686e:	601a      	str	r2, [r3, #0]
 8006870:	683b      	ldr	r3, [r7, #0]
 8006872:	689a      	ldr	r2, [r3, #8]
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006878:	683b      	ldr	r3, [r7, #0]
 800687a:	681a      	ldr	r2, [r3, #0]
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	629a      	str	r2, [r3, #40]	@ 0x28
 8006880:	687b      	ldr	r3, [r7, #4]
 8006882:	4a16      	ldr	r2, [pc, #88]	@ (80068dc <TIM_Base_SetConfig+0x11c>)
 8006884:	4293      	cmp	r3, r2
 8006886:	d00f      	beq.n	80068a8 <TIM_Base_SetConfig+0xe8>
 8006888:	687b      	ldr	r3, [r7, #4]
 800688a:	4a17      	ldr	r2, [pc, #92]	@ (80068e8 <TIM_Base_SetConfig+0x128>)
 800688c:	4293      	cmp	r3, r2
 800688e:	d00b      	beq.n	80068a8 <TIM_Base_SetConfig+0xe8>
 8006890:	687b      	ldr	r3, [r7, #4]
 8006892:	4a16      	ldr	r2, [pc, #88]	@ (80068ec <TIM_Base_SetConfig+0x12c>)
 8006894:	4293      	cmp	r3, r2
 8006896:	d007      	beq.n	80068a8 <TIM_Base_SetConfig+0xe8>
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	4a15      	ldr	r2, [pc, #84]	@ (80068f0 <TIM_Base_SetConfig+0x130>)
 800689c:	4293      	cmp	r3, r2
 800689e:	d003      	beq.n	80068a8 <TIM_Base_SetConfig+0xe8>
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	4a14      	ldr	r2, [pc, #80]	@ (80068f4 <TIM_Base_SetConfig+0x134>)
 80068a4:	4293      	cmp	r3, r2
 80068a6:	d103      	bne.n	80068b0 <TIM_Base_SetConfig+0xf0>
 80068a8:	683b      	ldr	r3, [r7, #0]
 80068aa:	691a      	ldr	r2, [r3, #16]
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	631a      	str	r2, [r3, #48]	@ 0x30
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	2201      	movs	r2, #1
 80068b4:	615a      	str	r2, [r3, #20]
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	691b      	ldr	r3, [r3, #16]
 80068ba:	f003 0301 	and.w	r3, r3, #1
 80068be:	2b01      	cmp	r3, #1
 80068c0:	d105      	bne.n	80068ce <TIM_Base_SetConfig+0x10e>
 80068c2:	687b      	ldr	r3, [r7, #4]
 80068c4:	691b      	ldr	r3, [r3, #16]
 80068c6:	f023 0201 	bic.w	r2, r3, #1
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	611a      	str	r2, [r3, #16]
 80068ce:	bf00      	nop
 80068d0:	3714      	adds	r7, #20
 80068d2:	46bd      	mov	sp, r7
 80068d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068d8:	4770      	bx	lr
 80068da:	bf00      	nop
 80068dc:	40012c00 	.word	0x40012c00
 80068e0:	40000400 	.word	0x40000400
 80068e4:	40000800 	.word	0x40000800
 80068e8:	40013400 	.word	0x40013400
 80068ec:	40014000 	.word	0x40014000
 80068f0:	40014400 	.word	0x40014400
 80068f4:	40014800 	.word	0x40014800

080068f8 <TIM_OC1_SetConfig>:
 80068f8:	b480      	push	{r7}
 80068fa:	b087      	sub	sp, #28
 80068fc:	af00      	add	r7, sp, #0
 80068fe:	6078      	str	r0, [r7, #4]
 8006900:	6039      	str	r1, [r7, #0]
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	6a1b      	ldr	r3, [r3, #32]
 8006906:	617b      	str	r3, [r7, #20]
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	6a1b      	ldr	r3, [r3, #32]
 800690c:	f023 0201 	bic.w	r2, r3, #1
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	621a      	str	r2, [r3, #32]
 8006914:	687b      	ldr	r3, [r7, #4]
 8006916:	685b      	ldr	r3, [r3, #4]
 8006918:	613b      	str	r3, [r7, #16]
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	699b      	ldr	r3, [r3, #24]
 800691e:	60fb      	str	r3, [r7, #12]
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006926:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800692a:	60fb      	str	r3, [r7, #12]
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	f023 0303 	bic.w	r3, r3, #3
 8006932:	60fb      	str	r3, [r7, #12]
 8006934:	683b      	ldr	r3, [r7, #0]
 8006936:	681b      	ldr	r3, [r3, #0]
 8006938:	68fa      	ldr	r2, [r7, #12]
 800693a:	4313      	orrs	r3, r2
 800693c:	60fb      	str	r3, [r7, #12]
 800693e:	697b      	ldr	r3, [r7, #20]
 8006940:	f023 0302 	bic.w	r3, r3, #2
 8006944:	617b      	str	r3, [r7, #20]
 8006946:	683b      	ldr	r3, [r7, #0]
 8006948:	689b      	ldr	r3, [r3, #8]
 800694a:	697a      	ldr	r2, [r7, #20]
 800694c:	4313      	orrs	r3, r2
 800694e:	617b      	str	r3, [r7, #20]
 8006950:	687b      	ldr	r3, [r7, #4]
 8006952:	4a2c      	ldr	r2, [pc, #176]	@ (8006a04 <TIM_OC1_SetConfig+0x10c>)
 8006954:	4293      	cmp	r3, r2
 8006956:	d00f      	beq.n	8006978 <TIM_OC1_SetConfig+0x80>
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	4a2b      	ldr	r2, [pc, #172]	@ (8006a08 <TIM_OC1_SetConfig+0x110>)
 800695c:	4293      	cmp	r3, r2
 800695e:	d00b      	beq.n	8006978 <TIM_OC1_SetConfig+0x80>
 8006960:	687b      	ldr	r3, [r7, #4]
 8006962:	4a2a      	ldr	r2, [pc, #168]	@ (8006a0c <TIM_OC1_SetConfig+0x114>)
 8006964:	4293      	cmp	r3, r2
 8006966:	d007      	beq.n	8006978 <TIM_OC1_SetConfig+0x80>
 8006968:	687b      	ldr	r3, [r7, #4]
 800696a:	4a29      	ldr	r2, [pc, #164]	@ (8006a10 <TIM_OC1_SetConfig+0x118>)
 800696c:	4293      	cmp	r3, r2
 800696e:	d003      	beq.n	8006978 <TIM_OC1_SetConfig+0x80>
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	4a28      	ldr	r2, [pc, #160]	@ (8006a14 <TIM_OC1_SetConfig+0x11c>)
 8006974:	4293      	cmp	r3, r2
 8006976:	d10c      	bne.n	8006992 <TIM_OC1_SetConfig+0x9a>
 8006978:	697b      	ldr	r3, [r7, #20]
 800697a:	f023 0308 	bic.w	r3, r3, #8
 800697e:	617b      	str	r3, [r7, #20]
 8006980:	683b      	ldr	r3, [r7, #0]
 8006982:	68db      	ldr	r3, [r3, #12]
 8006984:	697a      	ldr	r2, [r7, #20]
 8006986:	4313      	orrs	r3, r2
 8006988:	617b      	str	r3, [r7, #20]
 800698a:	697b      	ldr	r3, [r7, #20]
 800698c:	f023 0304 	bic.w	r3, r3, #4
 8006990:	617b      	str	r3, [r7, #20]
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	4a1b      	ldr	r2, [pc, #108]	@ (8006a04 <TIM_OC1_SetConfig+0x10c>)
 8006996:	4293      	cmp	r3, r2
 8006998:	d00f      	beq.n	80069ba <TIM_OC1_SetConfig+0xc2>
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	4a1a      	ldr	r2, [pc, #104]	@ (8006a08 <TIM_OC1_SetConfig+0x110>)
 800699e:	4293      	cmp	r3, r2
 80069a0:	d00b      	beq.n	80069ba <TIM_OC1_SetConfig+0xc2>
 80069a2:	687b      	ldr	r3, [r7, #4]
 80069a4:	4a19      	ldr	r2, [pc, #100]	@ (8006a0c <TIM_OC1_SetConfig+0x114>)
 80069a6:	4293      	cmp	r3, r2
 80069a8:	d007      	beq.n	80069ba <TIM_OC1_SetConfig+0xc2>
 80069aa:	687b      	ldr	r3, [r7, #4]
 80069ac:	4a18      	ldr	r2, [pc, #96]	@ (8006a10 <TIM_OC1_SetConfig+0x118>)
 80069ae:	4293      	cmp	r3, r2
 80069b0:	d003      	beq.n	80069ba <TIM_OC1_SetConfig+0xc2>
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	4a17      	ldr	r2, [pc, #92]	@ (8006a14 <TIM_OC1_SetConfig+0x11c>)
 80069b6:	4293      	cmp	r3, r2
 80069b8:	d111      	bne.n	80069de <TIM_OC1_SetConfig+0xe6>
 80069ba:	693b      	ldr	r3, [r7, #16]
 80069bc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80069c0:	613b      	str	r3, [r7, #16]
 80069c2:	693b      	ldr	r3, [r7, #16]
 80069c4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80069c8:	613b      	str	r3, [r7, #16]
 80069ca:	683b      	ldr	r3, [r7, #0]
 80069cc:	695b      	ldr	r3, [r3, #20]
 80069ce:	693a      	ldr	r2, [r7, #16]
 80069d0:	4313      	orrs	r3, r2
 80069d2:	613b      	str	r3, [r7, #16]
 80069d4:	683b      	ldr	r3, [r7, #0]
 80069d6:	699b      	ldr	r3, [r3, #24]
 80069d8:	693a      	ldr	r2, [r7, #16]
 80069da:	4313      	orrs	r3, r2
 80069dc:	613b      	str	r3, [r7, #16]
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	693a      	ldr	r2, [r7, #16]
 80069e2:	605a      	str	r2, [r3, #4]
 80069e4:	687b      	ldr	r3, [r7, #4]
 80069e6:	68fa      	ldr	r2, [r7, #12]
 80069e8:	619a      	str	r2, [r3, #24]
 80069ea:	683b      	ldr	r3, [r7, #0]
 80069ec:	685a      	ldr	r2, [r3, #4]
 80069ee:	687b      	ldr	r3, [r7, #4]
 80069f0:	635a      	str	r2, [r3, #52]	@ 0x34
 80069f2:	687b      	ldr	r3, [r7, #4]
 80069f4:	697a      	ldr	r2, [r7, #20]
 80069f6:	621a      	str	r2, [r3, #32]
 80069f8:	bf00      	nop
 80069fa:	371c      	adds	r7, #28
 80069fc:	46bd      	mov	sp, r7
 80069fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a02:	4770      	bx	lr
 8006a04:	40012c00 	.word	0x40012c00
 8006a08:	40013400 	.word	0x40013400
 8006a0c:	40014000 	.word	0x40014000
 8006a10:	40014400 	.word	0x40014400
 8006a14:	40014800 	.word	0x40014800

08006a18 <TIM_OC2_SetConfig>:
 8006a18:	b480      	push	{r7}
 8006a1a:	b087      	sub	sp, #28
 8006a1c:	af00      	add	r7, sp, #0
 8006a1e:	6078      	str	r0, [r7, #4]
 8006a20:	6039      	str	r1, [r7, #0]
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	6a1b      	ldr	r3, [r3, #32]
 8006a26:	617b      	str	r3, [r7, #20]
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	6a1b      	ldr	r3, [r3, #32]
 8006a2c:	f023 0210 	bic.w	r2, r3, #16
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	621a      	str	r2, [r3, #32]
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	685b      	ldr	r3, [r3, #4]
 8006a38:	613b      	str	r3, [r7, #16]
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	699b      	ldr	r3, [r3, #24]
 8006a3e:	60fb      	str	r3, [r7, #12]
 8006a40:	68fb      	ldr	r3, [r7, #12]
 8006a42:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006a46:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006a4a:	60fb      	str	r3, [r7, #12]
 8006a4c:	68fb      	ldr	r3, [r7, #12]
 8006a4e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006a52:	60fb      	str	r3, [r7, #12]
 8006a54:	683b      	ldr	r3, [r7, #0]
 8006a56:	681b      	ldr	r3, [r3, #0]
 8006a58:	021b      	lsls	r3, r3, #8
 8006a5a:	68fa      	ldr	r2, [r7, #12]
 8006a5c:	4313      	orrs	r3, r2
 8006a5e:	60fb      	str	r3, [r7, #12]
 8006a60:	697b      	ldr	r3, [r7, #20]
 8006a62:	f023 0320 	bic.w	r3, r3, #32
 8006a66:	617b      	str	r3, [r7, #20]
 8006a68:	683b      	ldr	r3, [r7, #0]
 8006a6a:	689b      	ldr	r3, [r3, #8]
 8006a6c:	011b      	lsls	r3, r3, #4
 8006a6e:	697a      	ldr	r2, [r7, #20]
 8006a70:	4313      	orrs	r3, r2
 8006a72:	617b      	str	r3, [r7, #20]
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	4a28      	ldr	r2, [pc, #160]	@ (8006b18 <TIM_OC2_SetConfig+0x100>)
 8006a78:	4293      	cmp	r3, r2
 8006a7a:	d003      	beq.n	8006a84 <TIM_OC2_SetConfig+0x6c>
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	4a27      	ldr	r2, [pc, #156]	@ (8006b1c <TIM_OC2_SetConfig+0x104>)
 8006a80:	4293      	cmp	r3, r2
 8006a82:	d10d      	bne.n	8006aa0 <TIM_OC2_SetConfig+0x88>
 8006a84:	697b      	ldr	r3, [r7, #20]
 8006a86:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006a8a:	617b      	str	r3, [r7, #20]
 8006a8c:	683b      	ldr	r3, [r7, #0]
 8006a8e:	68db      	ldr	r3, [r3, #12]
 8006a90:	011b      	lsls	r3, r3, #4
 8006a92:	697a      	ldr	r2, [r7, #20]
 8006a94:	4313      	orrs	r3, r2
 8006a96:	617b      	str	r3, [r7, #20]
 8006a98:	697b      	ldr	r3, [r7, #20]
 8006a9a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006a9e:	617b      	str	r3, [r7, #20]
 8006aa0:	687b      	ldr	r3, [r7, #4]
 8006aa2:	4a1d      	ldr	r2, [pc, #116]	@ (8006b18 <TIM_OC2_SetConfig+0x100>)
 8006aa4:	4293      	cmp	r3, r2
 8006aa6:	d00f      	beq.n	8006ac8 <TIM_OC2_SetConfig+0xb0>
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	4a1c      	ldr	r2, [pc, #112]	@ (8006b1c <TIM_OC2_SetConfig+0x104>)
 8006aac:	4293      	cmp	r3, r2
 8006aae:	d00b      	beq.n	8006ac8 <TIM_OC2_SetConfig+0xb0>
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	4a1b      	ldr	r2, [pc, #108]	@ (8006b20 <TIM_OC2_SetConfig+0x108>)
 8006ab4:	4293      	cmp	r3, r2
 8006ab6:	d007      	beq.n	8006ac8 <TIM_OC2_SetConfig+0xb0>
 8006ab8:	687b      	ldr	r3, [r7, #4]
 8006aba:	4a1a      	ldr	r2, [pc, #104]	@ (8006b24 <TIM_OC2_SetConfig+0x10c>)
 8006abc:	4293      	cmp	r3, r2
 8006abe:	d003      	beq.n	8006ac8 <TIM_OC2_SetConfig+0xb0>
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	4a19      	ldr	r2, [pc, #100]	@ (8006b28 <TIM_OC2_SetConfig+0x110>)
 8006ac4:	4293      	cmp	r3, r2
 8006ac6:	d113      	bne.n	8006af0 <TIM_OC2_SetConfig+0xd8>
 8006ac8:	693b      	ldr	r3, [r7, #16]
 8006aca:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006ace:	613b      	str	r3, [r7, #16]
 8006ad0:	693b      	ldr	r3, [r7, #16]
 8006ad2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006ad6:	613b      	str	r3, [r7, #16]
 8006ad8:	683b      	ldr	r3, [r7, #0]
 8006ada:	695b      	ldr	r3, [r3, #20]
 8006adc:	009b      	lsls	r3, r3, #2
 8006ade:	693a      	ldr	r2, [r7, #16]
 8006ae0:	4313      	orrs	r3, r2
 8006ae2:	613b      	str	r3, [r7, #16]
 8006ae4:	683b      	ldr	r3, [r7, #0]
 8006ae6:	699b      	ldr	r3, [r3, #24]
 8006ae8:	009b      	lsls	r3, r3, #2
 8006aea:	693a      	ldr	r2, [r7, #16]
 8006aec:	4313      	orrs	r3, r2
 8006aee:	613b      	str	r3, [r7, #16]
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	693a      	ldr	r2, [r7, #16]
 8006af4:	605a      	str	r2, [r3, #4]
 8006af6:	687b      	ldr	r3, [r7, #4]
 8006af8:	68fa      	ldr	r2, [r7, #12]
 8006afa:	619a      	str	r2, [r3, #24]
 8006afc:	683b      	ldr	r3, [r7, #0]
 8006afe:	685a      	ldr	r2, [r3, #4]
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	639a      	str	r2, [r3, #56]	@ 0x38
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	697a      	ldr	r2, [r7, #20]
 8006b08:	621a      	str	r2, [r3, #32]
 8006b0a:	bf00      	nop
 8006b0c:	371c      	adds	r7, #28
 8006b0e:	46bd      	mov	sp, r7
 8006b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b14:	4770      	bx	lr
 8006b16:	bf00      	nop
 8006b18:	40012c00 	.word	0x40012c00
 8006b1c:	40013400 	.word	0x40013400
 8006b20:	40014000 	.word	0x40014000
 8006b24:	40014400 	.word	0x40014400
 8006b28:	40014800 	.word	0x40014800

08006b2c <TIM_OC3_SetConfig>:
 8006b2c:	b480      	push	{r7}
 8006b2e:	b087      	sub	sp, #28
 8006b30:	af00      	add	r7, sp, #0
 8006b32:	6078      	str	r0, [r7, #4]
 8006b34:	6039      	str	r1, [r7, #0]
 8006b36:	687b      	ldr	r3, [r7, #4]
 8006b38:	6a1b      	ldr	r3, [r3, #32]
 8006b3a:	617b      	str	r3, [r7, #20]
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	6a1b      	ldr	r3, [r3, #32]
 8006b40:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8006b44:	687b      	ldr	r3, [r7, #4]
 8006b46:	621a      	str	r2, [r3, #32]
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	685b      	ldr	r3, [r3, #4]
 8006b4c:	613b      	str	r3, [r7, #16]
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	69db      	ldr	r3, [r3, #28]
 8006b52:	60fb      	str	r3, [r7, #12]
 8006b54:	68fb      	ldr	r3, [r7, #12]
 8006b56:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006b5a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006b5e:	60fb      	str	r3, [r7, #12]
 8006b60:	68fb      	ldr	r3, [r7, #12]
 8006b62:	f023 0303 	bic.w	r3, r3, #3
 8006b66:	60fb      	str	r3, [r7, #12]
 8006b68:	683b      	ldr	r3, [r7, #0]
 8006b6a:	681b      	ldr	r3, [r3, #0]
 8006b6c:	68fa      	ldr	r2, [r7, #12]
 8006b6e:	4313      	orrs	r3, r2
 8006b70:	60fb      	str	r3, [r7, #12]
 8006b72:	697b      	ldr	r3, [r7, #20]
 8006b74:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006b78:	617b      	str	r3, [r7, #20]
 8006b7a:	683b      	ldr	r3, [r7, #0]
 8006b7c:	689b      	ldr	r3, [r3, #8]
 8006b7e:	021b      	lsls	r3, r3, #8
 8006b80:	697a      	ldr	r2, [r7, #20]
 8006b82:	4313      	orrs	r3, r2
 8006b84:	617b      	str	r3, [r7, #20]
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	4a27      	ldr	r2, [pc, #156]	@ (8006c28 <TIM_OC3_SetConfig+0xfc>)
 8006b8a:	4293      	cmp	r3, r2
 8006b8c:	d003      	beq.n	8006b96 <TIM_OC3_SetConfig+0x6a>
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	4a26      	ldr	r2, [pc, #152]	@ (8006c2c <TIM_OC3_SetConfig+0x100>)
 8006b92:	4293      	cmp	r3, r2
 8006b94:	d10d      	bne.n	8006bb2 <TIM_OC3_SetConfig+0x86>
 8006b96:	697b      	ldr	r3, [r7, #20]
 8006b98:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006b9c:	617b      	str	r3, [r7, #20]
 8006b9e:	683b      	ldr	r3, [r7, #0]
 8006ba0:	68db      	ldr	r3, [r3, #12]
 8006ba2:	021b      	lsls	r3, r3, #8
 8006ba4:	697a      	ldr	r2, [r7, #20]
 8006ba6:	4313      	orrs	r3, r2
 8006ba8:	617b      	str	r3, [r7, #20]
 8006baa:	697b      	ldr	r3, [r7, #20]
 8006bac:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006bb0:	617b      	str	r3, [r7, #20]
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	4a1c      	ldr	r2, [pc, #112]	@ (8006c28 <TIM_OC3_SetConfig+0xfc>)
 8006bb6:	4293      	cmp	r3, r2
 8006bb8:	d00f      	beq.n	8006bda <TIM_OC3_SetConfig+0xae>
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	4a1b      	ldr	r2, [pc, #108]	@ (8006c2c <TIM_OC3_SetConfig+0x100>)
 8006bbe:	4293      	cmp	r3, r2
 8006bc0:	d00b      	beq.n	8006bda <TIM_OC3_SetConfig+0xae>
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	4a1a      	ldr	r2, [pc, #104]	@ (8006c30 <TIM_OC3_SetConfig+0x104>)
 8006bc6:	4293      	cmp	r3, r2
 8006bc8:	d007      	beq.n	8006bda <TIM_OC3_SetConfig+0xae>
 8006bca:	687b      	ldr	r3, [r7, #4]
 8006bcc:	4a19      	ldr	r2, [pc, #100]	@ (8006c34 <TIM_OC3_SetConfig+0x108>)
 8006bce:	4293      	cmp	r3, r2
 8006bd0:	d003      	beq.n	8006bda <TIM_OC3_SetConfig+0xae>
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	4a18      	ldr	r2, [pc, #96]	@ (8006c38 <TIM_OC3_SetConfig+0x10c>)
 8006bd6:	4293      	cmp	r3, r2
 8006bd8:	d113      	bne.n	8006c02 <TIM_OC3_SetConfig+0xd6>
 8006bda:	693b      	ldr	r3, [r7, #16]
 8006bdc:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006be0:	613b      	str	r3, [r7, #16]
 8006be2:	693b      	ldr	r3, [r7, #16]
 8006be4:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006be8:	613b      	str	r3, [r7, #16]
 8006bea:	683b      	ldr	r3, [r7, #0]
 8006bec:	695b      	ldr	r3, [r3, #20]
 8006bee:	011b      	lsls	r3, r3, #4
 8006bf0:	693a      	ldr	r2, [r7, #16]
 8006bf2:	4313      	orrs	r3, r2
 8006bf4:	613b      	str	r3, [r7, #16]
 8006bf6:	683b      	ldr	r3, [r7, #0]
 8006bf8:	699b      	ldr	r3, [r3, #24]
 8006bfa:	011b      	lsls	r3, r3, #4
 8006bfc:	693a      	ldr	r2, [r7, #16]
 8006bfe:	4313      	orrs	r3, r2
 8006c00:	613b      	str	r3, [r7, #16]
 8006c02:	687b      	ldr	r3, [r7, #4]
 8006c04:	693a      	ldr	r2, [r7, #16]
 8006c06:	605a      	str	r2, [r3, #4]
 8006c08:	687b      	ldr	r3, [r7, #4]
 8006c0a:	68fa      	ldr	r2, [r7, #12]
 8006c0c:	61da      	str	r2, [r3, #28]
 8006c0e:	683b      	ldr	r3, [r7, #0]
 8006c10:	685a      	ldr	r2, [r3, #4]
 8006c12:	687b      	ldr	r3, [r7, #4]
 8006c14:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	697a      	ldr	r2, [r7, #20]
 8006c1a:	621a      	str	r2, [r3, #32]
 8006c1c:	bf00      	nop
 8006c1e:	371c      	adds	r7, #28
 8006c20:	46bd      	mov	sp, r7
 8006c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c26:	4770      	bx	lr
 8006c28:	40012c00 	.word	0x40012c00
 8006c2c:	40013400 	.word	0x40013400
 8006c30:	40014000 	.word	0x40014000
 8006c34:	40014400 	.word	0x40014400
 8006c38:	40014800 	.word	0x40014800

08006c3c <TIM_OC4_SetConfig>:
 8006c3c:	b480      	push	{r7}
 8006c3e:	b087      	sub	sp, #28
 8006c40:	af00      	add	r7, sp, #0
 8006c42:	6078      	str	r0, [r7, #4]
 8006c44:	6039      	str	r1, [r7, #0]
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	6a1b      	ldr	r3, [r3, #32]
 8006c4a:	617b      	str	r3, [r7, #20]
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	6a1b      	ldr	r3, [r3, #32]
 8006c50:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	621a      	str	r2, [r3, #32]
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	685b      	ldr	r3, [r3, #4]
 8006c5c:	613b      	str	r3, [r7, #16]
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	69db      	ldr	r3, [r3, #28]
 8006c62:	60fb      	str	r3, [r7, #12]
 8006c64:	68fb      	ldr	r3, [r7, #12]
 8006c66:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006c6a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006c6e:	60fb      	str	r3, [r7, #12]
 8006c70:	68fb      	ldr	r3, [r7, #12]
 8006c72:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006c76:	60fb      	str	r3, [r7, #12]
 8006c78:	683b      	ldr	r3, [r7, #0]
 8006c7a:	681b      	ldr	r3, [r3, #0]
 8006c7c:	021b      	lsls	r3, r3, #8
 8006c7e:	68fa      	ldr	r2, [r7, #12]
 8006c80:	4313      	orrs	r3, r2
 8006c82:	60fb      	str	r3, [r7, #12]
 8006c84:	697b      	ldr	r3, [r7, #20]
 8006c86:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006c8a:	617b      	str	r3, [r7, #20]
 8006c8c:	683b      	ldr	r3, [r7, #0]
 8006c8e:	689b      	ldr	r3, [r3, #8]
 8006c90:	031b      	lsls	r3, r3, #12
 8006c92:	697a      	ldr	r2, [r7, #20]
 8006c94:	4313      	orrs	r3, r2
 8006c96:	617b      	str	r3, [r7, #20]
 8006c98:	687b      	ldr	r3, [r7, #4]
 8006c9a:	4a28      	ldr	r2, [pc, #160]	@ (8006d3c <TIM_OC4_SetConfig+0x100>)
 8006c9c:	4293      	cmp	r3, r2
 8006c9e:	d003      	beq.n	8006ca8 <TIM_OC4_SetConfig+0x6c>
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	4a27      	ldr	r2, [pc, #156]	@ (8006d40 <TIM_OC4_SetConfig+0x104>)
 8006ca4:	4293      	cmp	r3, r2
 8006ca6:	d10d      	bne.n	8006cc4 <TIM_OC4_SetConfig+0x88>
 8006ca8:	697b      	ldr	r3, [r7, #20]
 8006caa:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8006cae:	617b      	str	r3, [r7, #20]
 8006cb0:	683b      	ldr	r3, [r7, #0]
 8006cb2:	68db      	ldr	r3, [r3, #12]
 8006cb4:	031b      	lsls	r3, r3, #12
 8006cb6:	697a      	ldr	r2, [r7, #20]
 8006cb8:	4313      	orrs	r3, r2
 8006cba:	617b      	str	r3, [r7, #20]
 8006cbc:	697b      	ldr	r3, [r7, #20]
 8006cbe:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006cc2:	617b      	str	r3, [r7, #20]
 8006cc4:	687b      	ldr	r3, [r7, #4]
 8006cc6:	4a1d      	ldr	r2, [pc, #116]	@ (8006d3c <TIM_OC4_SetConfig+0x100>)
 8006cc8:	4293      	cmp	r3, r2
 8006cca:	d00f      	beq.n	8006cec <TIM_OC4_SetConfig+0xb0>
 8006ccc:	687b      	ldr	r3, [r7, #4]
 8006cce:	4a1c      	ldr	r2, [pc, #112]	@ (8006d40 <TIM_OC4_SetConfig+0x104>)
 8006cd0:	4293      	cmp	r3, r2
 8006cd2:	d00b      	beq.n	8006cec <TIM_OC4_SetConfig+0xb0>
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	4a1b      	ldr	r2, [pc, #108]	@ (8006d44 <TIM_OC4_SetConfig+0x108>)
 8006cd8:	4293      	cmp	r3, r2
 8006cda:	d007      	beq.n	8006cec <TIM_OC4_SetConfig+0xb0>
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	4a1a      	ldr	r2, [pc, #104]	@ (8006d48 <TIM_OC4_SetConfig+0x10c>)
 8006ce0:	4293      	cmp	r3, r2
 8006ce2:	d003      	beq.n	8006cec <TIM_OC4_SetConfig+0xb0>
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	4a19      	ldr	r2, [pc, #100]	@ (8006d4c <TIM_OC4_SetConfig+0x110>)
 8006ce8:	4293      	cmp	r3, r2
 8006cea:	d113      	bne.n	8006d14 <TIM_OC4_SetConfig+0xd8>
 8006cec:	693b      	ldr	r3, [r7, #16]
 8006cee:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006cf2:	613b      	str	r3, [r7, #16]
 8006cf4:	693b      	ldr	r3, [r7, #16]
 8006cf6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8006cfa:	613b      	str	r3, [r7, #16]
 8006cfc:	683b      	ldr	r3, [r7, #0]
 8006cfe:	695b      	ldr	r3, [r3, #20]
 8006d00:	019b      	lsls	r3, r3, #6
 8006d02:	693a      	ldr	r2, [r7, #16]
 8006d04:	4313      	orrs	r3, r2
 8006d06:	613b      	str	r3, [r7, #16]
 8006d08:	683b      	ldr	r3, [r7, #0]
 8006d0a:	699b      	ldr	r3, [r3, #24]
 8006d0c:	019b      	lsls	r3, r3, #6
 8006d0e:	693a      	ldr	r2, [r7, #16]
 8006d10:	4313      	orrs	r3, r2
 8006d12:	613b      	str	r3, [r7, #16]
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	693a      	ldr	r2, [r7, #16]
 8006d18:	605a      	str	r2, [r3, #4]
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	68fa      	ldr	r2, [r7, #12]
 8006d1e:	61da      	str	r2, [r3, #28]
 8006d20:	683b      	ldr	r3, [r7, #0]
 8006d22:	685a      	ldr	r2, [r3, #4]
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	641a      	str	r2, [r3, #64]	@ 0x40
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	697a      	ldr	r2, [r7, #20]
 8006d2c:	621a      	str	r2, [r3, #32]
 8006d2e:	bf00      	nop
 8006d30:	371c      	adds	r7, #28
 8006d32:	46bd      	mov	sp, r7
 8006d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d38:	4770      	bx	lr
 8006d3a:	bf00      	nop
 8006d3c:	40012c00 	.word	0x40012c00
 8006d40:	40013400 	.word	0x40013400
 8006d44:	40014000 	.word	0x40014000
 8006d48:	40014400 	.word	0x40014400
 8006d4c:	40014800 	.word	0x40014800

08006d50 <TIM_OC5_SetConfig>:
 8006d50:	b480      	push	{r7}
 8006d52:	b087      	sub	sp, #28
 8006d54:	af00      	add	r7, sp, #0
 8006d56:	6078      	str	r0, [r7, #4]
 8006d58:	6039      	str	r1, [r7, #0]
 8006d5a:	687b      	ldr	r3, [r7, #4]
 8006d5c:	6a1b      	ldr	r3, [r3, #32]
 8006d5e:	613b      	str	r3, [r7, #16]
 8006d60:	687b      	ldr	r3, [r7, #4]
 8006d62:	6a1b      	ldr	r3, [r3, #32]
 8006d64:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8006d68:	687b      	ldr	r3, [r7, #4]
 8006d6a:	621a      	str	r2, [r3, #32]
 8006d6c:	687b      	ldr	r3, [r7, #4]
 8006d6e:	685b      	ldr	r3, [r3, #4]
 8006d70:	617b      	str	r3, [r7, #20]
 8006d72:	687b      	ldr	r3, [r7, #4]
 8006d74:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006d76:	60fb      	str	r3, [r7, #12]
 8006d78:	68fb      	ldr	r3, [r7, #12]
 8006d7a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006d7e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006d82:	60fb      	str	r3, [r7, #12]
 8006d84:	683b      	ldr	r3, [r7, #0]
 8006d86:	681b      	ldr	r3, [r3, #0]
 8006d88:	68fa      	ldr	r2, [r7, #12]
 8006d8a:	4313      	orrs	r3, r2
 8006d8c:	60fb      	str	r3, [r7, #12]
 8006d8e:	693b      	ldr	r3, [r7, #16]
 8006d90:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8006d94:	613b      	str	r3, [r7, #16]
 8006d96:	683b      	ldr	r3, [r7, #0]
 8006d98:	689b      	ldr	r3, [r3, #8]
 8006d9a:	041b      	lsls	r3, r3, #16
 8006d9c:	693a      	ldr	r2, [r7, #16]
 8006d9e:	4313      	orrs	r3, r2
 8006da0:	613b      	str	r3, [r7, #16]
 8006da2:	687b      	ldr	r3, [r7, #4]
 8006da4:	4a17      	ldr	r2, [pc, #92]	@ (8006e04 <TIM_OC5_SetConfig+0xb4>)
 8006da6:	4293      	cmp	r3, r2
 8006da8:	d00f      	beq.n	8006dca <TIM_OC5_SetConfig+0x7a>
 8006daa:	687b      	ldr	r3, [r7, #4]
 8006dac:	4a16      	ldr	r2, [pc, #88]	@ (8006e08 <TIM_OC5_SetConfig+0xb8>)
 8006dae:	4293      	cmp	r3, r2
 8006db0:	d00b      	beq.n	8006dca <TIM_OC5_SetConfig+0x7a>
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	4a15      	ldr	r2, [pc, #84]	@ (8006e0c <TIM_OC5_SetConfig+0xbc>)
 8006db6:	4293      	cmp	r3, r2
 8006db8:	d007      	beq.n	8006dca <TIM_OC5_SetConfig+0x7a>
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	4a14      	ldr	r2, [pc, #80]	@ (8006e10 <TIM_OC5_SetConfig+0xc0>)
 8006dbe:	4293      	cmp	r3, r2
 8006dc0:	d003      	beq.n	8006dca <TIM_OC5_SetConfig+0x7a>
 8006dc2:	687b      	ldr	r3, [r7, #4]
 8006dc4:	4a13      	ldr	r2, [pc, #76]	@ (8006e14 <TIM_OC5_SetConfig+0xc4>)
 8006dc6:	4293      	cmp	r3, r2
 8006dc8:	d109      	bne.n	8006dde <TIM_OC5_SetConfig+0x8e>
 8006dca:	697b      	ldr	r3, [r7, #20]
 8006dcc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006dd0:	617b      	str	r3, [r7, #20]
 8006dd2:	683b      	ldr	r3, [r7, #0]
 8006dd4:	695b      	ldr	r3, [r3, #20]
 8006dd6:	021b      	lsls	r3, r3, #8
 8006dd8:	697a      	ldr	r2, [r7, #20]
 8006dda:	4313      	orrs	r3, r2
 8006ddc:	617b      	str	r3, [r7, #20]
 8006dde:	687b      	ldr	r3, [r7, #4]
 8006de0:	697a      	ldr	r2, [r7, #20]
 8006de2:	605a      	str	r2, [r3, #4]
 8006de4:	687b      	ldr	r3, [r7, #4]
 8006de6:	68fa      	ldr	r2, [r7, #12]
 8006de8:	651a      	str	r2, [r3, #80]	@ 0x50
 8006dea:	683b      	ldr	r3, [r7, #0]
 8006dec:	685a      	ldr	r2, [r3, #4]
 8006dee:	687b      	ldr	r3, [r7, #4]
 8006df0:	649a      	str	r2, [r3, #72]	@ 0x48
 8006df2:	687b      	ldr	r3, [r7, #4]
 8006df4:	693a      	ldr	r2, [r7, #16]
 8006df6:	621a      	str	r2, [r3, #32]
 8006df8:	bf00      	nop
 8006dfa:	371c      	adds	r7, #28
 8006dfc:	46bd      	mov	sp, r7
 8006dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e02:	4770      	bx	lr
 8006e04:	40012c00 	.word	0x40012c00
 8006e08:	40013400 	.word	0x40013400
 8006e0c:	40014000 	.word	0x40014000
 8006e10:	40014400 	.word	0x40014400
 8006e14:	40014800 	.word	0x40014800

08006e18 <TIM_OC6_SetConfig>:
 8006e18:	b480      	push	{r7}
 8006e1a:	b087      	sub	sp, #28
 8006e1c:	af00      	add	r7, sp, #0
 8006e1e:	6078      	str	r0, [r7, #4]
 8006e20:	6039      	str	r1, [r7, #0]
 8006e22:	687b      	ldr	r3, [r7, #4]
 8006e24:	6a1b      	ldr	r3, [r3, #32]
 8006e26:	613b      	str	r3, [r7, #16]
 8006e28:	687b      	ldr	r3, [r7, #4]
 8006e2a:	6a1b      	ldr	r3, [r3, #32]
 8006e2c:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8006e30:	687b      	ldr	r3, [r7, #4]
 8006e32:	621a      	str	r2, [r3, #32]
 8006e34:	687b      	ldr	r3, [r7, #4]
 8006e36:	685b      	ldr	r3, [r3, #4]
 8006e38:	617b      	str	r3, [r7, #20]
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006e3e:	60fb      	str	r3, [r7, #12]
 8006e40:	68fb      	ldr	r3, [r7, #12]
 8006e42:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006e46:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006e4a:	60fb      	str	r3, [r7, #12]
 8006e4c:	683b      	ldr	r3, [r7, #0]
 8006e4e:	681b      	ldr	r3, [r3, #0]
 8006e50:	021b      	lsls	r3, r3, #8
 8006e52:	68fa      	ldr	r2, [r7, #12]
 8006e54:	4313      	orrs	r3, r2
 8006e56:	60fb      	str	r3, [r7, #12]
 8006e58:	693b      	ldr	r3, [r7, #16]
 8006e5a:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8006e5e:	613b      	str	r3, [r7, #16]
 8006e60:	683b      	ldr	r3, [r7, #0]
 8006e62:	689b      	ldr	r3, [r3, #8]
 8006e64:	051b      	lsls	r3, r3, #20
 8006e66:	693a      	ldr	r2, [r7, #16]
 8006e68:	4313      	orrs	r3, r2
 8006e6a:	613b      	str	r3, [r7, #16]
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	4a18      	ldr	r2, [pc, #96]	@ (8006ed0 <TIM_OC6_SetConfig+0xb8>)
 8006e70:	4293      	cmp	r3, r2
 8006e72:	d00f      	beq.n	8006e94 <TIM_OC6_SetConfig+0x7c>
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	4a17      	ldr	r2, [pc, #92]	@ (8006ed4 <TIM_OC6_SetConfig+0xbc>)
 8006e78:	4293      	cmp	r3, r2
 8006e7a:	d00b      	beq.n	8006e94 <TIM_OC6_SetConfig+0x7c>
 8006e7c:	687b      	ldr	r3, [r7, #4]
 8006e7e:	4a16      	ldr	r2, [pc, #88]	@ (8006ed8 <TIM_OC6_SetConfig+0xc0>)
 8006e80:	4293      	cmp	r3, r2
 8006e82:	d007      	beq.n	8006e94 <TIM_OC6_SetConfig+0x7c>
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	4a15      	ldr	r2, [pc, #84]	@ (8006edc <TIM_OC6_SetConfig+0xc4>)
 8006e88:	4293      	cmp	r3, r2
 8006e8a:	d003      	beq.n	8006e94 <TIM_OC6_SetConfig+0x7c>
 8006e8c:	687b      	ldr	r3, [r7, #4]
 8006e8e:	4a14      	ldr	r2, [pc, #80]	@ (8006ee0 <TIM_OC6_SetConfig+0xc8>)
 8006e90:	4293      	cmp	r3, r2
 8006e92:	d109      	bne.n	8006ea8 <TIM_OC6_SetConfig+0x90>
 8006e94:	697b      	ldr	r3, [r7, #20]
 8006e96:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006e9a:	617b      	str	r3, [r7, #20]
 8006e9c:	683b      	ldr	r3, [r7, #0]
 8006e9e:	695b      	ldr	r3, [r3, #20]
 8006ea0:	029b      	lsls	r3, r3, #10
 8006ea2:	697a      	ldr	r2, [r7, #20]
 8006ea4:	4313      	orrs	r3, r2
 8006ea6:	617b      	str	r3, [r7, #20]
 8006ea8:	687b      	ldr	r3, [r7, #4]
 8006eaa:	697a      	ldr	r2, [r7, #20]
 8006eac:	605a      	str	r2, [r3, #4]
 8006eae:	687b      	ldr	r3, [r7, #4]
 8006eb0:	68fa      	ldr	r2, [r7, #12]
 8006eb2:	651a      	str	r2, [r3, #80]	@ 0x50
 8006eb4:	683b      	ldr	r3, [r7, #0]
 8006eb6:	685a      	ldr	r2, [r3, #4]
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006ebc:	687b      	ldr	r3, [r7, #4]
 8006ebe:	693a      	ldr	r2, [r7, #16]
 8006ec0:	621a      	str	r2, [r3, #32]
 8006ec2:	bf00      	nop
 8006ec4:	371c      	adds	r7, #28
 8006ec6:	46bd      	mov	sp, r7
 8006ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ecc:	4770      	bx	lr
 8006ece:	bf00      	nop
 8006ed0:	40012c00 	.word	0x40012c00
 8006ed4:	40013400 	.word	0x40013400
 8006ed8:	40014000 	.word	0x40014000
 8006edc:	40014400 	.word	0x40014400
 8006ee0:	40014800 	.word	0x40014800

08006ee4 <TIM_TI1_ConfigInputStage>:
 8006ee4:	b480      	push	{r7}
 8006ee6:	b087      	sub	sp, #28
 8006ee8:	af00      	add	r7, sp, #0
 8006eea:	60f8      	str	r0, [r7, #12]
 8006eec:	60b9      	str	r1, [r7, #8]
 8006eee:	607a      	str	r2, [r7, #4]
 8006ef0:	68fb      	ldr	r3, [r7, #12]
 8006ef2:	6a1b      	ldr	r3, [r3, #32]
 8006ef4:	617b      	str	r3, [r7, #20]
 8006ef6:	68fb      	ldr	r3, [r7, #12]
 8006ef8:	6a1b      	ldr	r3, [r3, #32]
 8006efa:	f023 0201 	bic.w	r2, r3, #1
 8006efe:	68fb      	ldr	r3, [r7, #12]
 8006f00:	621a      	str	r2, [r3, #32]
 8006f02:	68fb      	ldr	r3, [r7, #12]
 8006f04:	699b      	ldr	r3, [r3, #24]
 8006f06:	613b      	str	r3, [r7, #16]
 8006f08:	693b      	ldr	r3, [r7, #16]
 8006f0a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006f0e:	613b      	str	r3, [r7, #16]
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	011b      	lsls	r3, r3, #4
 8006f14:	693a      	ldr	r2, [r7, #16]
 8006f16:	4313      	orrs	r3, r2
 8006f18:	613b      	str	r3, [r7, #16]
 8006f1a:	697b      	ldr	r3, [r7, #20]
 8006f1c:	f023 030a 	bic.w	r3, r3, #10
 8006f20:	617b      	str	r3, [r7, #20]
 8006f22:	697a      	ldr	r2, [r7, #20]
 8006f24:	68bb      	ldr	r3, [r7, #8]
 8006f26:	4313      	orrs	r3, r2
 8006f28:	617b      	str	r3, [r7, #20]
 8006f2a:	68fb      	ldr	r3, [r7, #12]
 8006f2c:	693a      	ldr	r2, [r7, #16]
 8006f2e:	619a      	str	r2, [r3, #24]
 8006f30:	68fb      	ldr	r3, [r7, #12]
 8006f32:	697a      	ldr	r2, [r7, #20]
 8006f34:	621a      	str	r2, [r3, #32]
 8006f36:	bf00      	nop
 8006f38:	371c      	adds	r7, #28
 8006f3a:	46bd      	mov	sp, r7
 8006f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f40:	4770      	bx	lr

08006f42 <TIM_TI2_ConfigInputStage>:
 8006f42:	b480      	push	{r7}
 8006f44:	b087      	sub	sp, #28
 8006f46:	af00      	add	r7, sp, #0
 8006f48:	60f8      	str	r0, [r7, #12]
 8006f4a:	60b9      	str	r1, [r7, #8]
 8006f4c:	607a      	str	r2, [r7, #4]
 8006f4e:	68fb      	ldr	r3, [r7, #12]
 8006f50:	6a1b      	ldr	r3, [r3, #32]
 8006f52:	617b      	str	r3, [r7, #20]
 8006f54:	68fb      	ldr	r3, [r7, #12]
 8006f56:	6a1b      	ldr	r3, [r3, #32]
 8006f58:	f023 0210 	bic.w	r2, r3, #16
 8006f5c:	68fb      	ldr	r3, [r7, #12]
 8006f5e:	621a      	str	r2, [r3, #32]
 8006f60:	68fb      	ldr	r3, [r7, #12]
 8006f62:	699b      	ldr	r3, [r3, #24]
 8006f64:	613b      	str	r3, [r7, #16]
 8006f66:	693b      	ldr	r3, [r7, #16]
 8006f68:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006f6c:	613b      	str	r3, [r7, #16]
 8006f6e:	687b      	ldr	r3, [r7, #4]
 8006f70:	031b      	lsls	r3, r3, #12
 8006f72:	693a      	ldr	r2, [r7, #16]
 8006f74:	4313      	orrs	r3, r2
 8006f76:	613b      	str	r3, [r7, #16]
 8006f78:	697b      	ldr	r3, [r7, #20]
 8006f7a:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8006f7e:	617b      	str	r3, [r7, #20]
 8006f80:	68bb      	ldr	r3, [r7, #8]
 8006f82:	011b      	lsls	r3, r3, #4
 8006f84:	697a      	ldr	r2, [r7, #20]
 8006f86:	4313      	orrs	r3, r2
 8006f88:	617b      	str	r3, [r7, #20]
 8006f8a:	68fb      	ldr	r3, [r7, #12]
 8006f8c:	693a      	ldr	r2, [r7, #16]
 8006f8e:	619a      	str	r2, [r3, #24]
 8006f90:	68fb      	ldr	r3, [r7, #12]
 8006f92:	697a      	ldr	r2, [r7, #20]
 8006f94:	621a      	str	r2, [r3, #32]
 8006f96:	bf00      	nop
 8006f98:	371c      	adds	r7, #28
 8006f9a:	46bd      	mov	sp, r7
 8006f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fa0:	4770      	bx	lr

08006fa2 <TIM_ITRx_SetConfig>:
 8006fa2:	b480      	push	{r7}
 8006fa4:	b085      	sub	sp, #20
 8006fa6:	af00      	add	r7, sp, #0
 8006fa8:	6078      	str	r0, [r7, #4]
 8006faa:	6039      	str	r1, [r7, #0]
 8006fac:	687b      	ldr	r3, [r7, #4]
 8006fae:	689b      	ldr	r3, [r3, #8]
 8006fb0:	60fb      	str	r3, [r7, #12]
 8006fb2:	68fb      	ldr	r3, [r7, #12]
 8006fb4:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8006fb8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006fbc:	60fb      	str	r3, [r7, #12]
 8006fbe:	683a      	ldr	r2, [r7, #0]
 8006fc0:	68fb      	ldr	r3, [r7, #12]
 8006fc2:	4313      	orrs	r3, r2
 8006fc4:	f043 0307 	orr.w	r3, r3, #7
 8006fc8:	60fb      	str	r3, [r7, #12]
 8006fca:	687b      	ldr	r3, [r7, #4]
 8006fcc:	68fa      	ldr	r2, [r7, #12]
 8006fce:	609a      	str	r2, [r3, #8]
 8006fd0:	bf00      	nop
 8006fd2:	3714      	adds	r7, #20
 8006fd4:	46bd      	mov	sp, r7
 8006fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fda:	4770      	bx	lr

08006fdc <TIM_ETR_SetConfig>:
 8006fdc:	b480      	push	{r7}
 8006fde:	b087      	sub	sp, #28
 8006fe0:	af00      	add	r7, sp, #0
 8006fe2:	60f8      	str	r0, [r7, #12]
 8006fe4:	60b9      	str	r1, [r7, #8]
 8006fe6:	607a      	str	r2, [r7, #4]
 8006fe8:	603b      	str	r3, [r7, #0]
 8006fea:	68fb      	ldr	r3, [r7, #12]
 8006fec:	689b      	ldr	r3, [r3, #8]
 8006fee:	617b      	str	r3, [r7, #20]
 8006ff0:	697b      	ldr	r3, [r7, #20]
 8006ff2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006ff6:	617b      	str	r3, [r7, #20]
 8006ff8:	683b      	ldr	r3, [r7, #0]
 8006ffa:	021a      	lsls	r2, r3, #8
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	431a      	orrs	r2, r3
 8007000:	68bb      	ldr	r3, [r7, #8]
 8007002:	4313      	orrs	r3, r2
 8007004:	697a      	ldr	r2, [r7, #20]
 8007006:	4313      	orrs	r3, r2
 8007008:	617b      	str	r3, [r7, #20]
 800700a:	68fb      	ldr	r3, [r7, #12]
 800700c:	697a      	ldr	r2, [r7, #20]
 800700e:	609a      	str	r2, [r3, #8]
 8007010:	bf00      	nop
 8007012:	371c      	adds	r7, #28
 8007014:	46bd      	mov	sp, r7
 8007016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800701a:	4770      	bx	lr

0800701c <TIM_CCxChannelCmd>:
 800701c:	b480      	push	{r7}
 800701e:	b087      	sub	sp, #28
 8007020:	af00      	add	r7, sp, #0
 8007022:	60f8      	str	r0, [r7, #12]
 8007024:	60b9      	str	r1, [r7, #8]
 8007026:	607a      	str	r2, [r7, #4]
 8007028:	68bb      	ldr	r3, [r7, #8]
 800702a:	f003 031f 	and.w	r3, r3, #31
 800702e:	2201      	movs	r2, #1
 8007030:	fa02 f303 	lsl.w	r3, r2, r3
 8007034:	617b      	str	r3, [r7, #20]
 8007036:	68fb      	ldr	r3, [r7, #12]
 8007038:	6a1a      	ldr	r2, [r3, #32]
 800703a:	697b      	ldr	r3, [r7, #20]
 800703c:	43db      	mvns	r3, r3
 800703e:	401a      	ands	r2, r3
 8007040:	68fb      	ldr	r3, [r7, #12]
 8007042:	621a      	str	r2, [r3, #32]
 8007044:	68fb      	ldr	r3, [r7, #12]
 8007046:	6a1a      	ldr	r2, [r3, #32]
 8007048:	68bb      	ldr	r3, [r7, #8]
 800704a:	f003 031f 	and.w	r3, r3, #31
 800704e:	6879      	ldr	r1, [r7, #4]
 8007050:	fa01 f303 	lsl.w	r3, r1, r3
 8007054:	431a      	orrs	r2, r3
 8007056:	68fb      	ldr	r3, [r7, #12]
 8007058:	621a      	str	r2, [r3, #32]
 800705a:	bf00      	nop
 800705c:	371c      	adds	r7, #28
 800705e:	46bd      	mov	sp, r7
 8007060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007064:	4770      	bx	lr
	...

08007068 <HAL_TIMEx_MasterConfigSynchronization>:
 8007068:	b480      	push	{r7}
 800706a:	b085      	sub	sp, #20
 800706c:	af00      	add	r7, sp, #0
 800706e:	6078      	str	r0, [r7, #4]
 8007070:	6039      	str	r1, [r7, #0]
 8007072:	687b      	ldr	r3, [r7, #4]
 8007074:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007078:	2b01      	cmp	r3, #1
 800707a:	d101      	bne.n	8007080 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800707c:	2302      	movs	r3, #2
 800707e:	e065      	b.n	800714c <HAL_TIMEx_MasterConfigSynchronization+0xe4>
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	2201      	movs	r2, #1
 8007084:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	2202      	movs	r2, #2
 800708c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007090:	687b      	ldr	r3, [r7, #4]
 8007092:	681b      	ldr	r3, [r3, #0]
 8007094:	685b      	ldr	r3, [r3, #4]
 8007096:	60fb      	str	r3, [r7, #12]
 8007098:	687b      	ldr	r3, [r7, #4]
 800709a:	681b      	ldr	r3, [r3, #0]
 800709c:	689b      	ldr	r3, [r3, #8]
 800709e:	60bb      	str	r3, [r7, #8]
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	681b      	ldr	r3, [r3, #0]
 80070a4:	4a2c      	ldr	r2, [pc, #176]	@ (8007158 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80070a6:	4293      	cmp	r3, r2
 80070a8:	d004      	beq.n	80070b4 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	4a2b      	ldr	r2, [pc, #172]	@ (800715c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80070b0:	4293      	cmp	r3, r2
 80070b2:	d108      	bne.n	80070c6 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80070b4:	68fb      	ldr	r3, [r7, #12]
 80070b6:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 80070ba:	60fb      	str	r3, [r7, #12]
 80070bc:	683b      	ldr	r3, [r7, #0]
 80070be:	685b      	ldr	r3, [r3, #4]
 80070c0:	68fa      	ldr	r2, [r7, #12]
 80070c2:	4313      	orrs	r3, r2
 80070c4:	60fb      	str	r3, [r7, #12]
 80070c6:	68fb      	ldr	r3, [r7, #12]
 80070c8:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 80070cc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80070d0:	60fb      	str	r3, [r7, #12]
 80070d2:	683b      	ldr	r3, [r7, #0]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	68fa      	ldr	r2, [r7, #12]
 80070d8:	4313      	orrs	r3, r2
 80070da:	60fb      	str	r3, [r7, #12]
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	681b      	ldr	r3, [r3, #0]
 80070e0:	68fa      	ldr	r2, [r7, #12]
 80070e2:	605a      	str	r2, [r3, #4]
 80070e4:	687b      	ldr	r3, [r7, #4]
 80070e6:	681b      	ldr	r3, [r3, #0]
 80070e8:	4a1b      	ldr	r2, [pc, #108]	@ (8007158 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80070ea:	4293      	cmp	r3, r2
 80070ec:	d018      	beq.n	8007120 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 80070ee:	687b      	ldr	r3, [r7, #4]
 80070f0:	681b      	ldr	r3, [r3, #0]
 80070f2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80070f6:	d013      	beq.n	8007120 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 80070f8:	687b      	ldr	r3, [r7, #4]
 80070fa:	681b      	ldr	r3, [r3, #0]
 80070fc:	4a18      	ldr	r2, [pc, #96]	@ (8007160 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 80070fe:	4293      	cmp	r3, r2
 8007100:	d00e      	beq.n	8007120 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8007102:	687b      	ldr	r3, [r7, #4]
 8007104:	681b      	ldr	r3, [r3, #0]
 8007106:	4a17      	ldr	r2, [pc, #92]	@ (8007164 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 8007108:	4293      	cmp	r3, r2
 800710a:	d009      	beq.n	8007120 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 800710c:	687b      	ldr	r3, [r7, #4]
 800710e:	681b      	ldr	r3, [r3, #0]
 8007110:	4a12      	ldr	r2, [pc, #72]	@ (800715c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8007112:	4293      	cmp	r3, r2
 8007114:	d004      	beq.n	8007120 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8007116:	687b      	ldr	r3, [r7, #4]
 8007118:	681b      	ldr	r3, [r3, #0]
 800711a:	4a13      	ldr	r2, [pc, #76]	@ (8007168 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800711c:	4293      	cmp	r3, r2
 800711e:	d10c      	bne.n	800713a <HAL_TIMEx_MasterConfigSynchronization+0xd2>
 8007120:	68bb      	ldr	r3, [r7, #8]
 8007122:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007126:	60bb      	str	r3, [r7, #8]
 8007128:	683b      	ldr	r3, [r7, #0]
 800712a:	689b      	ldr	r3, [r3, #8]
 800712c:	68ba      	ldr	r2, [r7, #8]
 800712e:	4313      	orrs	r3, r2
 8007130:	60bb      	str	r3, [r7, #8]
 8007132:	687b      	ldr	r3, [r7, #4]
 8007134:	681b      	ldr	r3, [r3, #0]
 8007136:	68ba      	ldr	r2, [r7, #8]
 8007138:	609a      	str	r2, [r3, #8]
 800713a:	687b      	ldr	r3, [r7, #4]
 800713c:	2201      	movs	r2, #1
 800713e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	2200      	movs	r2, #0
 8007146:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800714a:	2300      	movs	r3, #0
 800714c:	4618      	mov	r0, r3
 800714e:	3714      	adds	r7, #20
 8007150:	46bd      	mov	sp, r7
 8007152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007156:	4770      	bx	lr
 8007158:	40012c00 	.word	0x40012c00
 800715c:	40013400 	.word	0x40013400
 8007160:	40000400 	.word	0x40000400
 8007164:	40000800 	.word	0x40000800
 8007168:	40014000 	.word	0x40014000

0800716c <HAL_TIMEx_ConfigBreakDeadTime>:
 800716c:	b480      	push	{r7}
 800716e:	b085      	sub	sp, #20
 8007170:	af00      	add	r7, sp, #0
 8007172:	6078      	str	r0, [r7, #4]
 8007174:	6039      	str	r1, [r7, #0]
 8007176:	2300      	movs	r3, #0
 8007178:	60fb      	str	r3, [r7, #12]
 800717a:	687b      	ldr	r3, [r7, #4]
 800717c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007180:	2b01      	cmp	r3, #1
 8007182:	d101      	bne.n	8007188 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8007184:	2302      	movs	r3, #2
 8007186:	e073      	b.n	8007270 <HAL_TIMEx_ConfigBreakDeadTime+0x104>
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	2201      	movs	r2, #1
 800718c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007190:	68fb      	ldr	r3, [r7, #12]
 8007192:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8007196:	683b      	ldr	r3, [r7, #0]
 8007198:	68db      	ldr	r3, [r3, #12]
 800719a:	4313      	orrs	r3, r2
 800719c:	60fb      	str	r3, [r7, #12]
 800719e:	68fb      	ldr	r3, [r7, #12]
 80071a0:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80071a4:	683b      	ldr	r3, [r7, #0]
 80071a6:	689b      	ldr	r3, [r3, #8]
 80071a8:	4313      	orrs	r3, r2
 80071aa:	60fb      	str	r3, [r7, #12]
 80071ac:	68fb      	ldr	r3, [r7, #12]
 80071ae:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 80071b2:	683b      	ldr	r3, [r7, #0]
 80071b4:	685b      	ldr	r3, [r3, #4]
 80071b6:	4313      	orrs	r3, r2
 80071b8:	60fb      	str	r3, [r7, #12]
 80071ba:	68fb      	ldr	r3, [r7, #12]
 80071bc:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 80071c0:	683b      	ldr	r3, [r7, #0]
 80071c2:	681b      	ldr	r3, [r3, #0]
 80071c4:	4313      	orrs	r3, r2
 80071c6:	60fb      	str	r3, [r7, #12]
 80071c8:	68fb      	ldr	r3, [r7, #12]
 80071ca:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80071ce:	683b      	ldr	r3, [r7, #0]
 80071d0:	691b      	ldr	r3, [r3, #16]
 80071d2:	4313      	orrs	r3, r2
 80071d4:	60fb      	str	r3, [r7, #12]
 80071d6:	68fb      	ldr	r3, [r7, #12]
 80071d8:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 80071dc:	683b      	ldr	r3, [r7, #0]
 80071de:	695b      	ldr	r3, [r3, #20]
 80071e0:	4313      	orrs	r3, r2
 80071e2:	60fb      	str	r3, [r7, #12]
 80071e4:	68fb      	ldr	r3, [r7, #12]
 80071e6:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 80071ea:	683b      	ldr	r3, [r7, #0]
 80071ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80071ee:	4313      	orrs	r3, r2
 80071f0:	60fb      	str	r3, [r7, #12]
 80071f2:	68fb      	ldr	r3, [r7, #12]
 80071f4:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 80071f8:	683b      	ldr	r3, [r7, #0]
 80071fa:	699b      	ldr	r3, [r3, #24]
 80071fc:	041b      	lsls	r3, r3, #16
 80071fe:	4313      	orrs	r3, r2
 8007200:	60fb      	str	r3, [r7, #12]
 8007202:	68fb      	ldr	r3, [r7, #12]
 8007204:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 8007208:	683b      	ldr	r3, [r7, #0]
 800720a:	69db      	ldr	r3, [r3, #28]
 800720c:	4313      	orrs	r3, r2
 800720e:	60fb      	str	r3, [r7, #12]
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	681b      	ldr	r3, [r3, #0]
 8007214:	4a19      	ldr	r2, [pc, #100]	@ (800727c <HAL_TIMEx_ConfigBreakDeadTime+0x110>)
 8007216:	4293      	cmp	r3, r2
 8007218:	d004      	beq.n	8007224 <HAL_TIMEx_ConfigBreakDeadTime+0xb8>
 800721a:	687b      	ldr	r3, [r7, #4]
 800721c:	681b      	ldr	r3, [r3, #0]
 800721e:	4a18      	ldr	r2, [pc, #96]	@ (8007280 <HAL_TIMEx_ConfigBreakDeadTime+0x114>)
 8007220:	4293      	cmp	r3, r2
 8007222:	d11c      	bne.n	800725e <HAL_TIMEx_ConfigBreakDeadTime+0xf2>
 8007224:	68fb      	ldr	r3, [r7, #12]
 8007226:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 800722a:	683b      	ldr	r3, [r7, #0]
 800722c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800722e:	051b      	lsls	r3, r3, #20
 8007230:	4313      	orrs	r3, r2
 8007232:	60fb      	str	r3, [r7, #12]
 8007234:	68fb      	ldr	r3, [r7, #12]
 8007236:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 800723a:	683b      	ldr	r3, [r7, #0]
 800723c:	6a1b      	ldr	r3, [r3, #32]
 800723e:	4313      	orrs	r3, r2
 8007240:	60fb      	str	r3, [r7, #12]
 8007242:	68fb      	ldr	r3, [r7, #12]
 8007244:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8007248:	683b      	ldr	r3, [r7, #0]
 800724a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800724c:	4313      	orrs	r3, r2
 800724e:	60fb      	str	r3, [r7, #12]
 8007250:	68fb      	ldr	r3, [r7, #12]
 8007252:	f023 5200 	bic.w	r2, r3, #536870912	@ 0x20000000
 8007256:	683b      	ldr	r3, [r7, #0]
 8007258:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800725a:	4313      	orrs	r3, r2
 800725c:	60fb      	str	r3, [r7, #12]
 800725e:	687b      	ldr	r3, [r7, #4]
 8007260:	681b      	ldr	r3, [r3, #0]
 8007262:	68fa      	ldr	r2, [r7, #12]
 8007264:	645a      	str	r2, [r3, #68]	@ 0x44
 8007266:	687b      	ldr	r3, [r7, #4]
 8007268:	2200      	movs	r2, #0
 800726a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800726e:	2300      	movs	r3, #0
 8007270:	4618      	mov	r0, r3
 8007272:	3714      	adds	r7, #20
 8007274:	46bd      	mov	sp, r7
 8007276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800727a:	4770      	bx	lr
 800727c:	40012c00 	.word	0x40012c00
 8007280:	40013400 	.word	0x40013400

08007284 <HAL_TIMEx_CommutCallback>:
 8007284:	b480      	push	{r7}
 8007286:	b083      	sub	sp, #12
 8007288:	af00      	add	r7, sp, #0
 800728a:	6078      	str	r0, [r7, #4]
 800728c:	bf00      	nop
 800728e:	370c      	adds	r7, #12
 8007290:	46bd      	mov	sp, r7
 8007292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007296:	4770      	bx	lr

08007298 <HAL_TIMEx_BreakCallback>:
 8007298:	b480      	push	{r7}
 800729a:	b083      	sub	sp, #12
 800729c:	af00      	add	r7, sp, #0
 800729e:	6078      	str	r0, [r7, #4]
 80072a0:	bf00      	nop
 80072a2:	370c      	adds	r7, #12
 80072a4:	46bd      	mov	sp, r7
 80072a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072aa:	4770      	bx	lr

080072ac <HAL_TIMEx_Break2Callback>:
 80072ac:	b480      	push	{r7}
 80072ae:	b083      	sub	sp, #12
 80072b0:	af00      	add	r7, sp, #0
 80072b2:	6078      	str	r0, [r7, #4]
 80072b4:	bf00      	nop
 80072b6:	370c      	adds	r7, #12
 80072b8:	46bd      	mov	sp, r7
 80072ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072be:	4770      	bx	lr

080072c0 <HAL_TIMEx_EncoderIndexCallback>:
 80072c0:	b480      	push	{r7}
 80072c2:	b083      	sub	sp, #12
 80072c4:	af00      	add	r7, sp, #0
 80072c6:	6078      	str	r0, [r7, #4]
 80072c8:	bf00      	nop
 80072ca:	370c      	adds	r7, #12
 80072cc:	46bd      	mov	sp, r7
 80072ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072d2:	4770      	bx	lr

080072d4 <HAL_TIMEx_DirectionChangeCallback>:
 80072d4:	b480      	push	{r7}
 80072d6:	b083      	sub	sp, #12
 80072d8:	af00      	add	r7, sp, #0
 80072da:	6078      	str	r0, [r7, #4]
 80072dc:	bf00      	nop
 80072de:	370c      	adds	r7, #12
 80072e0:	46bd      	mov	sp, r7
 80072e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072e6:	4770      	bx	lr

080072e8 <HAL_TIMEx_IndexErrorCallback>:
 80072e8:	b480      	push	{r7}
 80072ea:	b083      	sub	sp, #12
 80072ec:	af00      	add	r7, sp, #0
 80072ee:	6078      	str	r0, [r7, #4]
 80072f0:	bf00      	nop
 80072f2:	370c      	adds	r7, #12
 80072f4:	46bd      	mov	sp, r7
 80072f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072fa:	4770      	bx	lr

080072fc <HAL_TIMEx_TransitionErrorCallback>:
 80072fc:	b480      	push	{r7}
 80072fe:	b083      	sub	sp, #12
 8007300:	af00      	add	r7, sp, #0
 8007302:	6078      	str	r0, [r7, #4]
 8007304:	bf00      	nop
 8007306:	370c      	adds	r7, #12
 8007308:	46bd      	mov	sp, r7
 800730a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800730e:	4770      	bx	lr

08007310 <memset>:
 8007310:	4402      	add	r2, r0
 8007312:	4603      	mov	r3, r0
 8007314:	4293      	cmp	r3, r2
 8007316:	d100      	bne.n	800731a <memset+0xa>
 8007318:	4770      	bx	lr
 800731a:	f803 1b01 	strb.w	r1, [r3], #1
 800731e:	e7f9      	b.n	8007314 <memset+0x4>

08007320 <__libc_init_array>:
 8007320:	b570      	push	{r4, r5, r6, lr}
 8007322:	4d0d      	ldr	r5, [pc, #52]	@ (8007358 <__libc_init_array+0x38>)
 8007324:	4c0d      	ldr	r4, [pc, #52]	@ (800735c <__libc_init_array+0x3c>)
 8007326:	1b64      	subs	r4, r4, r5
 8007328:	10a4      	asrs	r4, r4, #2
 800732a:	2600      	movs	r6, #0
 800732c:	42a6      	cmp	r6, r4
 800732e:	d109      	bne.n	8007344 <__libc_init_array+0x24>
 8007330:	4d0b      	ldr	r5, [pc, #44]	@ (8007360 <__libc_init_array+0x40>)
 8007332:	4c0c      	ldr	r4, [pc, #48]	@ (8007364 <__libc_init_array+0x44>)
 8007334:	f000 f818 	bl	8007368 <_init>
 8007338:	1b64      	subs	r4, r4, r5
 800733a:	10a4      	asrs	r4, r4, #2
 800733c:	2600      	movs	r6, #0
 800733e:	42a6      	cmp	r6, r4
 8007340:	d105      	bne.n	800734e <__libc_init_array+0x2e>
 8007342:	bd70      	pop	{r4, r5, r6, pc}
 8007344:	f855 3b04 	ldr.w	r3, [r5], #4
 8007348:	4798      	blx	r3
 800734a:	3601      	adds	r6, #1
 800734c:	e7ee      	b.n	800732c <__libc_init_array+0xc>
 800734e:	f855 3b04 	ldr.w	r3, [r5], #4
 8007352:	4798      	blx	r3
 8007354:	3601      	adds	r6, #1
 8007356:	e7f2      	b.n	800733e <__libc_init_array+0x1e>
 8007358:	080073a0 	.word	0x080073a0
 800735c:	080073a0 	.word	0x080073a0
 8007360:	080073a0 	.word	0x080073a0
 8007364:	080073a4 	.word	0x080073a4

08007368 <_init>:
 8007368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800736a:	bf00      	nop
 800736c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800736e:	bc08      	pop	{r3}
 8007370:	469e      	mov	lr, r3
 8007372:	4770      	bx	lr

08007374 <_fini>:
 8007374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007376:	bf00      	nop
 8007378:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800737a:	bc08      	pop	{r3}
 800737c:	469e      	mov	lr, r3
 800737e:	4770      	bx	lr
