
SensorBox24Power.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007254  080001d8  080001d8  000011d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  0800742c  0800742c  0000842c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800744c  0800744c  0000900c  2**0
                  CONTENTS
  4 .ARM          00000000  0800744c  0800744c  0000900c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800744c  0800744c  0000900c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800744c  0800744c  0000844c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007450  08007450  00008450  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  08007454  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000694  2000000c  08007460  0000900c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200006a0  08007460  000096a0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000900c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00015d3f  00000000  00000000  0000903c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002b25  00000000  00000000  0001ed7b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001408  00000000  00000000  000218a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000f6a  00000000  00000000  00022ca8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00020746  00000000  00000000  00023c12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00015187  00000000  00000000  00044358  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000da59c  00000000  00000000  000594df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00133a7b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000055fc  00000000  00000000  00133ac0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005b  00000000  00000000  001390bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c05      	ldr	r4, [pc, #20]	@ (80001f0 <__do_global_dtors_aux+0x18>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b933      	cbnz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e0:	4b04      	ldr	r3, [pc, #16]	@ (80001f4 <__do_global_dtors_aux+0x1c>)
 80001e2:	b113      	cbz	r3, 80001ea <__do_global_dtors_aux+0x12>
 80001e4:	4804      	ldr	r0, [pc, #16]	@ (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	f3af 8000 	nop.w
 80001ea:	2301      	movs	r3, #1
 80001ec:	7023      	strb	r3, [r4, #0]
 80001ee:	bd10      	pop	{r4, pc}
 80001f0:	2000000c 	.word	0x2000000c
 80001f4:	00000000 	.word	0x00000000
 80001f8:	08007414 	.word	0x08007414

080001fc <frame_dummy>:
 80001fc:	b508      	push	{r3, lr}
 80001fe:	4b03      	ldr	r3, [pc, #12]	@ (800020c <frame_dummy+0x10>)
 8000200:	b11b      	cbz	r3, 800020a <frame_dummy+0xe>
 8000202:	4903      	ldr	r1, [pc, #12]	@ (8000210 <frame_dummy+0x14>)
 8000204:	4803      	ldr	r0, [pc, #12]	@ (8000214 <frame_dummy+0x18>)
 8000206:	f3af 8000 	nop.w
 800020a:	bd08      	pop	{r3, pc}
 800020c:	00000000 	.word	0x00000000
 8000210:	20000010 	.word	0x20000010
 8000214:	08007414 	.word	0x08007414

08000218 <set_pwm_duty_cycle>:
#include "main.h"
#include "functions.h"
#include "string.h"


void set_pwm_duty_cycle(TIM_HandleTypeDef *htim){
 8000218:	b580      	push	{r7, lr}
 800021a:	b082      	sub	sp, #8
 800021c:	af00      	add	r7, sp, #0
 800021e:	6078      	str	r0, [r7, #4]
	if(check_bit(PWM_out_enable,1) != 0){
 8000220:	4b1e      	ldr	r3, [pc, #120]	@ (800029c <set_pwm_duty_cycle+0x84>)
 8000222:	781b      	ldrb	r3, [r3, #0]
 8000224:	2101      	movs	r1, #1
 8000226:	4618      	mov	r0, r3
 8000228:	f000 fe7c 	bl	8000f24 <check_bit>
 800022c:	4603      	mov	r3, r0
 800022e:	2b00      	cmp	r3, #0
 8000230:	d010      	beq.n	8000254 <set_pwm_duty_cycle+0x3c>
		PWM_speed[0] = (PWM_width[0] * 40)/100;
 8000232:	4b1b      	ldr	r3, [pc, #108]	@ (80002a0 <set_pwm_duty_cycle+0x88>)
 8000234:	881b      	ldrh	r3, [r3, #0]
 8000236:	461a      	mov	r2, r3
 8000238:	4613      	mov	r3, r2
 800023a:	009b      	lsls	r3, r3, #2
 800023c:	4413      	add	r3, r2
 800023e:	00db      	lsls	r3, r3, #3
 8000240:	4a18      	ldr	r2, [pc, #96]	@ (80002a4 <set_pwm_duty_cycle+0x8c>)
 8000242:	fb82 1203 	smull	r1, r2, r2, r3
 8000246:	1152      	asrs	r2, r2, #5
 8000248:	17db      	asrs	r3, r3, #31
 800024a:	1ad3      	subs	r3, r2, r3
 800024c:	b29a      	uxth	r2, r3
 800024e:	4b16      	ldr	r3, [pc, #88]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000250:	801a      	strh	r2, [r3, #0]
 8000252:	e002      	b.n	800025a <set_pwm_duty_cycle+0x42>
	}else{
		PWM_speed[0] = 0;
 8000254:	4b14      	ldr	r3, [pc, #80]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000256:	2200      	movs	r2, #0
 8000258:	801a      	strh	r2, [r3, #0]
	}
	if(check_bit(PWM_out_enable,0) != 0){
 800025a:	4b10      	ldr	r3, [pc, #64]	@ (800029c <set_pwm_duty_cycle+0x84>)
 800025c:	781b      	ldrb	r3, [r3, #0]
 800025e:	2100      	movs	r1, #0
 8000260:	4618      	mov	r0, r3
 8000262:	f000 fe5f 	bl	8000f24 <check_bit>
 8000266:	4603      	mov	r3, r0
 8000268:	2b00      	cmp	r3, #0
 800026a:	d010      	beq.n	800028e <set_pwm_duty_cycle+0x76>
		PWM_speed[1] = (PWM_width[1] * 40)/100;
 800026c:	4b0c      	ldr	r3, [pc, #48]	@ (80002a0 <set_pwm_duty_cycle+0x88>)
 800026e:	885b      	ldrh	r3, [r3, #2]
 8000270:	461a      	mov	r2, r3
 8000272:	4613      	mov	r3, r2
 8000274:	009b      	lsls	r3, r3, #2
 8000276:	4413      	add	r3, r2
 8000278:	00db      	lsls	r3, r3, #3
 800027a:	4a0a      	ldr	r2, [pc, #40]	@ (80002a4 <set_pwm_duty_cycle+0x8c>)
 800027c:	fb82 1203 	smull	r1, r2, r2, r3
 8000280:	1152      	asrs	r2, r2, #5
 8000282:	17db      	asrs	r3, r3, #31
 8000284:	1ad3      	subs	r3, r2, r3
 8000286:	b29a      	uxth	r2, r3
 8000288:	4b07      	ldr	r3, [pc, #28]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 800028a:	805a      	strh	r2, [r3, #2]
	}else{
		PWM_speed[1] = 0;
	}
}
 800028c:	e002      	b.n	8000294 <set_pwm_duty_cycle+0x7c>
		PWM_speed[1] = 0;
 800028e:	4b06      	ldr	r3, [pc, #24]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000290:	2200      	movs	r2, #0
 8000292:	805a      	strh	r2, [r3, #2]
}
 8000294:	bf00      	nop
 8000296:	3708      	adds	r7, #8
 8000298:	46bd      	mov	sp, r7
 800029a:	bd80      	pop	{r7, pc}
 800029c:	2000063c 	.word	0x2000063c
 80002a0:	20000640 	.word	0x20000640
 80002a4:	51eb851f 	.word	0x51eb851f
 80002a8:	20000644 	.word	0x20000644

080002ac <Config_Setup>:
#include "functions.h"
#include "commands.h"
#include "config.h"

void Config_Setup(void)
{
 80002ac:	b580      	push	{r7, lr}
 80002ae:	af00      	add	r7, sp, #0
#if ID == 1

		Config_1();
 80002b0:	f000 f802 	bl	80002b8 <Config_1>
#else //catch everything that is not a proper ID, give it settings that the debug board would get

		Config_3();

#endif
}
 80002b4:	bf00      	nop
 80002b6:	bd80      	pop	{r7, pc}

080002b8 <Config_1>:

void Config_1(void){
 80002b8:	b580      	push	{r7, lr}
 80002ba:	af00      	add	r7, sp, #0

	CAN_ID = 17;
 80002bc:	4b48      	ldr	r3, [pc, #288]	@ (80003e0 <Config_1+0x128>)
 80002be:	2211      	movs	r2, #17
 80002c0:	701a      	strb	r2, [r3, #0]
	CAN_interval = 1000; //in ms
 80002c2:	4b48      	ldr	r3, [pc, #288]	@ (80003e4 <Config_1+0x12c>)
 80002c4:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80002c8:	801a      	strh	r2, [r3, #0]

	//OUTPUT 1 in mA
	Warning_Current[0] = 1900;
 80002ca:	4b47      	ldr	r3, [pc, #284]	@ (80003e8 <Config_1+0x130>)
 80002cc:	f240 726c 	movw	r2, #1900	@ 0x76c
 80002d0:	801a      	strh	r2, [r3, #0]
	Over_Current[0] = 2050;
 80002d2:	4b46      	ldr	r3, [pc, #280]	@ (80003ec <Config_1+0x134>)
 80002d4:	f640 0202 	movw	r2, #2050	@ 0x802
 80002d8:	801a      	strh	r2, [r3, #0]
	Under_Current[0] = 00;
 80002da:	4b45      	ldr	r3, [pc, #276]	@ (80003f0 <Config_1+0x138>)
 80002dc:	2200      	movs	r2, #0
 80002de:	801a      	strh	r2, [r3, #0]

	//OUTPUT 2 in mA
	Warning_Current[1] = 1900;
 80002e0:	4b41      	ldr	r3, [pc, #260]	@ (80003e8 <Config_1+0x130>)
 80002e2:	f240 726c 	movw	r2, #1900	@ 0x76c
 80002e6:	805a      	strh	r2, [r3, #2]
	Over_Current[1] = 2050;
 80002e8:	4b40      	ldr	r3, [pc, #256]	@ (80003ec <Config_1+0x134>)
 80002ea:	f640 0202 	movw	r2, #2050	@ 0x802
 80002ee:	805a      	strh	r2, [r3, #2]
	Under_Current[1] = 00;
 80002f0:	4b3f      	ldr	r3, [pc, #252]	@ (80003f0 <Config_1+0x138>)
 80002f2:	2200      	movs	r2, #0
 80002f4:	805a      	strh	r2, [r3, #2]

	//OUTPUT 3 in mA
	Warning_Current[2] = 1900;
 80002f6:	4b3c      	ldr	r3, [pc, #240]	@ (80003e8 <Config_1+0x130>)
 80002f8:	f240 726c 	movw	r2, #1900	@ 0x76c
 80002fc:	809a      	strh	r2, [r3, #4]
	Over_Current[2] = 2050;
 80002fe:	4b3b      	ldr	r3, [pc, #236]	@ (80003ec <Config_1+0x134>)
 8000300:	f640 0202 	movw	r2, #2050	@ 0x802
 8000304:	809a      	strh	r2, [r3, #4]
	Under_Current[2] = 00;
 8000306:	4b3a      	ldr	r3, [pc, #232]	@ (80003f0 <Config_1+0x138>)
 8000308:	2200      	movs	r2, #0
 800030a:	809a      	strh	r2, [r3, #4]

	//OUTPUT 4 in mA
	Warning_Current[3] = 1900;
 800030c:	4b36      	ldr	r3, [pc, #216]	@ (80003e8 <Config_1+0x130>)
 800030e:	f240 726c 	movw	r2, #1900	@ 0x76c
 8000312:	80da      	strh	r2, [r3, #6]
	Over_Current[3] = 2050;
 8000314:	4b35      	ldr	r3, [pc, #212]	@ (80003ec <Config_1+0x134>)
 8000316:	f640 0202 	movw	r2, #2050	@ 0x802
 800031a:	80da      	strh	r2, [r3, #6]
	Under_Current[3] = 00;
 800031c:	4b34      	ldr	r3, [pc, #208]	@ (80003f0 <Config_1+0x138>)
 800031e:	2200      	movs	r2, #0
 8000320:	80da      	strh	r2, [r3, #6]

	//OUTPUT 5 in mA
	Warning_Current[4] = 1900;
 8000322:	4b31      	ldr	r3, [pc, #196]	@ (80003e8 <Config_1+0x130>)
 8000324:	f240 726c 	movw	r2, #1900	@ 0x76c
 8000328:	811a      	strh	r2, [r3, #8]
	Over_Current[4] = 2050;
 800032a:	4b30      	ldr	r3, [pc, #192]	@ (80003ec <Config_1+0x134>)
 800032c:	f640 0202 	movw	r2, #2050	@ 0x802
 8000330:	811a      	strh	r2, [r3, #8]
	Under_Current[4] = 00;
 8000332:	4b2f      	ldr	r3, [pc, #188]	@ (80003f0 <Config_1+0x138>)
 8000334:	2200      	movs	r2, #0
 8000336:	811a      	strh	r2, [r3, #8]

	//OUTPUT 6 in mA
	Warning_Current[5] = 1900;
 8000338:	4b2b      	ldr	r3, [pc, #172]	@ (80003e8 <Config_1+0x130>)
 800033a:	f240 726c 	movw	r2, #1900	@ 0x76c
 800033e:	815a      	strh	r2, [r3, #10]
	Over_Current[5] = 2050;
 8000340:	4b2a      	ldr	r3, [pc, #168]	@ (80003ec <Config_1+0x134>)
 8000342:	f640 0202 	movw	r2, #2050	@ 0x802
 8000346:	815a      	strh	r2, [r3, #10]
	Under_Current[5] = 00;
 8000348:	4b29      	ldr	r3, [pc, #164]	@ (80003f0 <Config_1+0x138>)
 800034a:	2200      	movs	r2, #0
 800034c:	815a      	strh	r2, [r3, #10]

	//OUTPUT 7 in mA
	Warning_Current[6] = 1900;
 800034e:	4b26      	ldr	r3, [pc, #152]	@ (80003e8 <Config_1+0x130>)
 8000350:	f240 726c 	movw	r2, #1900	@ 0x76c
 8000354:	819a      	strh	r2, [r3, #12]
	Over_Current[6] = 2050;
 8000356:	4b25      	ldr	r3, [pc, #148]	@ (80003ec <Config_1+0x134>)
 8000358:	f640 0202 	movw	r2, #2050	@ 0x802
 800035c:	819a      	strh	r2, [r3, #12]
	Under_Current[6] = 00;
 800035e:	4b24      	ldr	r3, [pc, #144]	@ (80003f0 <Config_1+0x138>)
 8000360:	2200      	movs	r2, #0
 8000362:	819a      	strh	r2, [r3, #12]

	//OUTPUT 8 in mA
	Warning_Current[7] = 1900;
 8000364:	4b20      	ldr	r3, [pc, #128]	@ (80003e8 <Config_1+0x130>)
 8000366:	f240 726c 	movw	r2, #1900	@ 0x76c
 800036a:	81da      	strh	r2, [r3, #14]
	Over_Current[7] = 2050;
 800036c:	4b1f      	ldr	r3, [pc, #124]	@ (80003ec <Config_1+0x134>)
 800036e:	f640 0202 	movw	r2, #2050	@ 0x802
 8000372:	81da      	strh	r2, [r3, #14]
	Under_Current[7] = 00;
 8000374:	4b1e      	ldr	r3, [pc, #120]	@ (80003f0 <Config_1+0x138>)
 8000376:	2200      	movs	r2, #0
 8000378:	81da      	strh	r2, [r3, #14]

	//For analog node
	Warning_Current[8] = 2000;
 800037a:	4b1b      	ldr	r3, [pc, #108]	@ (80003e8 <Config_1+0x130>)
 800037c:	f44f 62fa 	mov.w	r2, #2000	@ 0x7d0
 8000380:	821a      	strh	r2, [r3, #16]
	Over_Current[8] = 2000;
 8000382:	4b1a      	ldr	r3, [pc, #104]	@ (80003ec <Config_1+0x134>)
 8000384:	f44f 62fa 	mov.w	r2, #2000	@ 0x7d0
 8000388:	821a      	strh	r2, [r3, #16]
	Under_Current[8] = 0;
 800038a:	4b19      	ldr	r3, [pc, #100]	@ (80003f0 <Config_1+0x138>)
 800038c:	2200      	movs	r2, #0
 800038e:	821a      	strh	r2, [r3, #16]

	Default_Switch_State = 0b00000000; //each bit represent one output [8,7,6,5,4,3,2,1]
 8000390:	4b18      	ldr	r3, [pc, #96]	@ (80003f4 <Config_1+0x13c>)
 8000392:	2200      	movs	r2, #0
 8000394:	701a      	strb	r2, [r3, #0]

	output_list[0] = BRAKE_LIGHT;
 8000396:	4b18      	ldr	r3, [pc, #96]	@ (80003f8 <Config_1+0x140>)
 8000398:	2201      	movs	r2, #1
 800039a:	701a      	strb	r2, [r3, #0]
	output_list[1] = FAN;
 800039c:	4b16      	ldr	r3, [pc, #88]	@ (80003f8 <Config_1+0x140>)
 800039e:	2203      	movs	r2, #3
 80003a0:	705a      	strb	r2, [r3, #1]
	output_list[2] = FAN;
 80003a2:	4b15      	ldr	r3, [pc, #84]	@ (80003f8 <Config_1+0x140>)
 80003a4:	2203      	movs	r2, #3
 80003a6:	709a      	strb	r2, [r3, #2]
	output_list[3] = PUMP;
 80003a8:	4b13      	ldr	r3, [pc, #76]	@ (80003f8 <Config_1+0x140>)
 80003aa:	2204      	movs	r2, #4
 80003ac:	70da      	strb	r2, [r3, #3]
	output_list[4] = 0;	//NC
 80003ae:	4b12      	ldr	r3, [pc, #72]	@ (80003f8 <Config_1+0x140>)
 80003b0:	2200      	movs	r2, #0
 80003b2:	711a      	strb	r2, [r3, #4]
	output_list[5] = 0;	//NC
 80003b4:	4b10      	ldr	r3, [pc, #64]	@ (80003f8 <Config_1+0x140>)
 80003b6:	2200      	movs	r2, #0
 80003b8:	715a      	strb	r2, [r3, #5]
	output_list[6] = 0;	//NC
 80003ba:	4b0f      	ldr	r3, [pc, #60]	@ (80003f8 <Config_1+0x140>)
 80003bc:	2200      	movs	r2, #0
 80003be:	719a      	strb	r2, [r3, #6]
	output_list[7] = 0;	//NC
 80003c0:	4b0d      	ldr	r3, [pc, #52]	@ (80003f8 <Config_1+0x140>)
 80003c2:	2200      	movs	r2, #0
 80003c4:	71da      	strb	r2, [r3, #7]

	PWM_out_enable = 0b11;
 80003c6:	4b0d      	ldr	r3, [pc, #52]	@ (80003fc <Config_1+0x144>)
 80003c8:	2203      	movs	r2, #3
 80003ca:	701a      	strb	r2, [r3, #0]

	//Duty cycle 0-100%
	PWM_width[0] = 10;
 80003cc:	4b0c      	ldr	r3, [pc, #48]	@ (8000400 <Config_1+0x148>)
 80003ce:	220a      	movs	r2, #10
 80003d0:	801a      	strh	r2, [r3, #0]
	PWM_width[1] = 10;
 80003d2:	4b0b      	ldr	r3, [pc, #44]	@ (8000400 <Config_1+0x148>)
 80003d4:	220a      	movs	r2, #10
 80003d6:	805a      	strh	r2, [r3, #2]

	//set_pwm_freq(&htim1);
	//set_pwm_freq(&htim2);

	output();
 80003d8:	f000 f8c4 	bl	8000564 <output>
}
 80003dc:	bf00      	nop
 80003de:	bd80      	pop	{r7, pc}
 80003e0:	20000648 	.word	0x20000648
 80003e4:	2000064a 	.word	0x2000064a
 80003e8:	200005fc 	.word	0x200005fc
 80003ec:	2000060c 	.word	0x2000060c
 80003f0:	2000061c 	.word	0x2000061c
 80003f4:	20000632 	.word	0x20000632
 80003f8:	20000634 	.word	0x20000634
 80003fc:	2000063c 	.word	0x2000063c
 8000400:	20000640 	.word	0x20000640

08000404 <HAL_FDCAN_RxFifo0Callback>:
uint8_t TxData[8];
uint8_t toggle = 0;


void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo0ITs)
{
 8000404:	b580      	push	{r7, lr}
 8000406:	b082      	sub	sp, #8
 8000408:	af00      	add	r7, sp, #0
 800040a:	6078      	str	r0, [r7, #4]
 800040c:	6039      	str	r1, [r7, #0]
	if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 800040e:	683b      	ldr	r3, [r7, #0]
 8000410:	f003 0301 	and.w	r3, r3, #1
 8000414:	2b00      	cmp	r3, #0
 8000416:	d01d      	beq.n	8000454 <HAL_FDCAN_RxFifo0Callback+0x50>
	{
		/* Retreive Rx messages from RX FIFO0 */
		if (HAL_FDCAN_GetRxMessage(hfdcan, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK)
 8000418:	4b10      	ldr	r3, [pc, #64]	@ (800045c <HAL_FDCAN_RxFifo0Callback+0x58>)
 800041a:	4a11      	ldr	r2, [pc, #68]	@ (8000460 <HAL_FDCAN_RxFifo0Callback+0x5c>)
 800041c:	2140      	movs	r1, #64	@ 0x40
 800041e:	6878      	ldr	r0, [r7, #4]
 8000420:	f003 fedc 	bl	80041dc <HAL_FDCAN_GetRxMessage>
 8000424:	4603      	mov	r3, r0
 8000426:	2b00      	cmp	r3, #0
 8000428:	d002      	beq.n	8000430 <HAL_FDCAN_RxFifo0Callback+0x2c>
		{
			/* Reception Error */
			Error_Handler();
 800042a:	f001 faf1 	bl	8001a10 <Error_Handler>
 800042e:	e007      	b.n	8000440 <HAL_FDCAN_RxFifo0Callback+0x3c>
		}else{
			if(RxHeader.Identifier == CAN_ID){
 8000430:	4b0b      	ldr	r3, [pc, #44]	@ (8000460 <HAL_FDCAN_RxFifo0Callback+0x5c>)
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	4a0b      	ldr	r2, [pc, #44]	@ (8000464 <HAL_FDCAN_RxFifo0Callback+0x60>)
 8000436:	7812      	ldrb	r2, [r2, #0]
 8000438:	4293      	cmp	r3, r2
 800043a:	d101      	bne.n	8000440 <HAL_FDCAN_RxFifo0Callback+0x3c>
				decode();
 800043c:	f000 f936 	bl	80006ac <decode>
			}
		}

		if (HAL_FDCAN_ActivateNotification(hfdcan, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK)
 8000440:	2200      	movs	r2, #0
 8000442:	2101      	movs	r1, #1
 8000444:	6878      	ldr	r0, [r7, #4]
 8000446:	f003 ffe3 	bl	8004410 <HAL_FDCAN_ActivateNotification>
 800044a:	4603      	mov	r3, r0
 800044c:	2b00      	cmp	r3, #0
 800044e:	d001      	beq.n	8000454 <HAL_FDCAN_RxFifo0Callback+0x50>
		{
			/* Notification Error */
			Error_Handler();
 8000450:	f001 fade 	bl	8001a10 <Error_Handler>
		}
	}
}
 8000454:	bf00      	nop
 8000456:	3708      	adds	r7, #8
 8000458:	46bd      	mov	sp, r7
 800045a:	bd80      	pop	{r7, pc}
 800045c:	20000028 	.word	0x20000028
 8000460:	20000670 	.word	0x20000670
 8000464:	20000648 	.word	0x20000648

08000468 <CanSend>:

void CanSend(uint8_t *TxData){
 8000468:	b580      	push	{r7, lr}
 800046a:	b082      	sub	sp, #8
 800046c:	af00      	add	r7, sp, #0
 800046e:	6078      	str	r0, [r7, #4]
	while(HAL_FDCAN_GetTxFifoFreeLevel(&hfdcan1) != 0 && HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK){
 8000470:	e006      	b.n	8000480 <CanSend+0x18>
		Error_Handler();
 8000472:	f001 facd 	bl	8001a10 <Error_Handler>
		HAL_GPIO_WritePin(GPIOB,LED1_Pin,0);
 8000476:	2200      	movs	r2, #0
 8000478:	2101      	movs	r1, #1
 800047a:	480a      	ldr	r0, [pc, #40]	@ (80004a4 <CanSend+0x3c>)
 800047c:	f004 fc90 	bl	8004da0 <HAL_GPIO_WritePin>
	while(HAL_FDCAN_GetTxFifoFreeLevel(&hfdcan1) != 0 && HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK){
 8000480:	4809      	ldr	r0, [pc, #36]	@ (80004a8 <CanSend+0x40>)
 8000482:	f003 ffb3 	bl	80043ec <HAL_FDCAN_GetTxFifoFreeLevel>
 8000486:	4603      	mov	r3, r0
 8000488:	2b00      	cmp	r3, #0
 800048a:	d007      	beq.n	800049c <CanSend+0x34>
 800048c:	687a      	ldr	r2, [r7, #4]
 800048e:	4907      	ldr	r1, [pc, #28]	@ (80004ac <CanSend+0x44>)
 8000490:	4805      	ldr	r0, [pc, #20]	@ (80004a8 <CanSend+0x40>)
 8000492:	f003 fe5f 	bl	8004154 <HAL_FDCAN_AddMessageToTxFifoQ>
 8000496:	4603      	mov	r3, r0
 8000498:	2b00      	cmp	r3, #0
 800049a:	d1ea      	bne.n	8000472 <CanSend+0xa>
	}
}
 800049c:	bf00      	nop
 800049e:	3708      	adds	r7, #8
 80004a0:	46bd      	mov	sp, r7
 80004a2:	bd80      	pop	{r7, pc}
 80004a4:	48000400 	.word	0x48000400
 80004a8:	20000110 	.word	0x20000110
 80004ac:	2000064c 	.word	0x2000064c

080004b0 <CAN_switch_state>:

void CAN_switch_state(uint8_t values){
 80004b0:	b580      	push	{r7, lr}
 80004b2:	b088      	sub	sp, #32
 80004b4:	af00      	add	r7, sp, #0
 80004b6:	4603      	mov	r3, r0
 80004b8:	71fb      	strb	r3, [r7, #7]
	uint8_t TxData1[5];
	uint8_t TxData2[5];

	if(can_select == 0){
 80004ba:	4b28      	ldr	r3, [pc, #160]	@ (800055c <CAN_switch_state+0xac>)
 80004bc:	781b      	ldrb	r3, [r3, #0]
 80004be:	2b00      	cmp	r3, #0
 80004c0:	d121      	bne.n	8000506 <CAN_switch_state+0x56>
		TxData1[0] = 11;
 80004c2:	230b      	movs	r3, #11
 80004c4:	743b      	strb	r3, [r7, #16]
		for(int i = 1; i < 5;i++){
 80004c6:	2301      	movs	r3, #1
 80004c8:	61fb      	str	r3, [r7, #28]
 80004ca:	e014      	b.n	80004f6 <CAN_switch_state+0x46>
			TxData1[i] = check_bit(Default_Switch_State,i-1);
 80004cc:	4b24      	ldr	r3, [pc, #144]	@ (8000560 <CAN_switch_state+0xb0>)
 80004ce:	781a      	ldrb	r2, [r3, #0]
 80004d0:	69fb      	ldr	r3, [r7, #28]
 80004d2:	b2db      	uxtb	r3, r3
 80004d4:	3b01      	subs	r3, #1
 80004d6:	b2db      	uxtb	r3, r3
 80004d8:	4619      	mov	r1, r3
 80004da:	4610      	mov	r0, r2
 80004dc:	f000 fd22 	bl	8000f24 <check_bit>
 80004e0:	4603      	mov	r3, r0
 80004e2:	4619      	mov	r1, r3
 80004e4:	f107 0210 	add.w	r2, r7, #16
 80004e8:	69fb      	ldr	r3, [r7, #28]
 80004ea:	4413      	add	r3, r2
 80004ec:	460a      	mov	r2, r1
 80004ee:	701a      	strb	r2, [r3, #0]
		for(int i = 1; i < 5;i++){
 80004f0:	69fb      	ldr	r3, [r7, #28]
 80004f2:	3301      	adds	r3, #1
 80004f4:	61fb      	str	r3, [r7, #28]
 80004f6:	69fb      	ldr	r3, [r7, #28]
 80004f8:	2b04      	cmp	r3, #4
 80004fa:	dde7      	ble.n	80004cc <CAN_switch_state+0x1c>
		}
		CanSend(TxData1);
 80004fc:	f107 0310 	add.w	r3, r7, #16
 8000500:	4618      	mov	r0, r3
 8000502:	f7ff ffb1 	bl	8000468 <CanSend>
	}
	if(can_select == 1){
 8000506:	4b15      	ldr	r3, [pc, #84]	@ (800055c <CAN_switch_state+0xac>)
 8000508:	781b      	ldrb	r3, [r3, #0]
 800050a:	2b01      	cmp	r3, #1
 800050c:	d121      	bne.n	8000552 <CAN_switch_state+0xa2>
		TxData2[0] = 12;
 800050e:	230c      	movs	r3, #12
 8000510:	723b      	strb	r3, [r7, #8]
		for(int i = 1; i < 5;i++){
 8000512:	2301      	movs	r3, #1
 8000514:	61bb      	str	r3, [r7, #24]
 8000516:	e014      	b.n	8000542 <CAN_switch_state+0x92>
			TxData2[i] = check_bit(Default_Switch_State,i+3);
 8000518:	4b11      	ldr	r3, [pc, #68]	@ (8000560 <CAN_switch_state+0xb0>)
 800051a:	781a      	ldrb	r2, [r3, #0]
 800051c:	69bb      	ldr	r3, [r7, #24]
 800051e:	b2db      	uxtb	r3, r3
 8000520:	3303      	adds	r3, #3
 8000522:	b2db      	uxtb	r3, r3
 8000524:	4619      	mov	r1, r3
 8000526:	4610      	mov	r0, r2
 8000528:	f000 fcfc 	bl	8000f24 <check_bit>
 800052c:	4603      	mov	r3, r0
 800052e:	4619      	mov	r1, r3
 8000530:	f107 0208 	add.w	r2, r7, #8
 8000534:	69bb      	ldr	r3, [r7, #24]
 8000536:	4413      	add	r3, r2
 8000538:	460a      	mov	r2, r1
 800053a:	701a      	strb	r2, [r3, #0]
		for(int i = 1; i < 5;i++){
 800053c:	69bb      	ldr	r3, [r7, #24]
 800053e:	3301      	adds	r3, #1
 8000540:	61bb      	str	r3, [r7, #24]
 8000542:	69bb      	ldr	r3, [r7, #24]
 8000544:	2b04      	cmp	r3, #4
 8000546:	dde7      	ble.n	8000518 <CAN_switch_state+0x68>
		}
		CanSend(TxData2);
 8000548:	f107 0308 	add.w	r3, r7, #8
 800054c:	4618      	mov	r0, r3
 800054e:	f7ff ff8b 	bl	8000468 <CanSend>
	}
}
 8000552:	bf00      	nop
 8000554:	3720      	adds	r7, #32
 8000556:	46bd      	mov	sp, r7
 8000558:	bd80      	pop	{r7, pc}
 800055a:	bf00      	nop
 800055c:	2000062e 	.word	0x2000062e
 8000560:	20000632 	.word	0x20000632

08000564 <output>:



void output(){
 8000564:	b580      	push	{r7, lr}
 8000566:	b082      	sub	sp, #8
 8000568:	af00      	add	r7, sp, #0
	uint8_t i = 0;
 800056a:	2300      	movs	r3, #0
 800056c:	71fb      	strb	r3, [r7, #7]
	uint8_t bit = 0;
 800056e:	2300      	movs	r3, #0
 8000570:	71bb      	strb	r3, [r7, #6]
	for(i = 0; i < 8;i++){
 8000572:	2300      	movs	r3, #0
 8000574:	71fb      	strb	r3, [r7, #7]
 8000576:	e065      	b.n	8000644 <output+0xe0>
		bit = check_bit(Default_Switch_State, i);
 8000578:	4b36      	ldr	r3, [pc, #216]	@ (8000654 <output+0xf0>)
 800057a:	781b      	ldrb	r3, [r3, #0]
 800057c:	79fa      	ldrb	r2, [r7, #7]
 800057e:	4611      	mov	r1, r2
 8000580:	4618      	mov	r0, r3
 8000582:	f000 fccf 	bl	8000f24 <check_bit>
 8000586:	4603      	mov	r3, r0
 8000588:	71bb      	strb	r3, [r7, #6]
		switch(i){
 800058a:	79fb      	ldrb	r3, [r7, #7]
 800058c:	2b07      	cmp	r3, #7
 800058e:	d853      	bhi.n	8000638 <output+0xd4>
 8000590:	a201      	add	r2, pc, #4	@ (adr r2, 8000598 <output+0x34>)
 8000592:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000596:	bf00      	nop
 8000598:	080005b9 	.word	0x080005b9
 800059c:	080005c7 	.word	0x080005c7
 80005a0:	080005d9 	.word	0x080005d9
 80005a4:	080005eb 	.word	0x080005eb
 80005a8:	080005fd 	.word	0x080005fd
 80005ac:	0800060d 	.word	0x0800060d
 80005b0:	0800061d 	.word	0x0800061d
 80005b4:	0800062b 	.word	0x0800062b
		case 0:
			HAL_GPIO_WritePin(GPIOB,IN0_Pin,bit);
 80005b8:	79bb      	ldrb	r3, [r7, #6]
 80005ba:	461a      	mov	r2, r3
 80005bc:	2108      	movs	r1, #8
 80005be:	4826      	ldr	r0, [pc, #152]	@ (8000658 <output+0xf4>)
 80005c0:	f004 fbee 	bl	8004da0 <HAL_GPIO_WritePin>
			break;
 80005c4:	e03b      	b.n	800063e <output+0xda>
		case 1:
			HAL_GPIO_WritePin(GPIOA,IN1_Pin,bit);
 80005c6:	79bb      	ldrb	r3, [r7, #6]
 80005c8:	461a      	mov	r2, r3
 80005ca:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80005ce:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80005d2:	f004 fbe5 	bl	8004da0 <HAL_GPIO_WritePin>
			break;
 80005d6:	e032      	b.n	800063e <output+0xda>
		case 2:
			HAL_GPIO_WritePin(GPIOA,IN2_Pin,bit);
 80005d8:	79bb      	ldrb	r3, [r7, #6]
 80005da:	461a      	mov	r2, r3
 80005dc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80005e0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80005e4:	f004 fbdc 	bl	8004da0 <HAL_GPIO_WritePin>
			break;
 80005e8:	e029      	b.n	800063e <output+0xda>
		case 3:
			HAL_GPIO_WritePin(GPIOA,IN3_Pin,bit);
 80005ea:	79bb      	ldrb	r3, [r7, #6]
 80005ec:	461a      	mov	r2, r3
 80005ee:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80005f2:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80005f6:	f004 fbd3 	bl	8004da0 <HAL_GPIO_WritePin>
			break;
 80005fa:	e020      	b.n	800063e <output+0xda>
		case 4:
			HAL_GPIO_WritePin(GPIOA,IN0_2_Pin,bit);
 80005fc:	79bb      	ldrb	r3, [r7, #6]
 80005fe:	461a      	mov	r2, r3
 8000600:	2110      	movs	r1, #16
 8000602:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000606:	f004 fbcb 	bl	8004da0 <HAL_GPIO_WritePin>
			break;
 800060a:	e018      	b.n	800063e <output+0xda>
		case 5:
			HAL_GPIO_WritePin(GPIOA,IN1_2_Pin,bit);
 800060c:	79bb      	ldrb	r3, [r7, #6]
 800060e:	461a      	mov	r2, r3
 8000610:	2102      	movs	r1, #2
 8000612:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000616:	f004 fbc3 	bl	8004da0 <HAL_GPIO_WritePin>
			break;
 800061a:	e010      	b.n	800063e <output+0xda>
		case 6:
			HAL_GPIO_WritePin(GPIOB,IN2_2_Pin,bit);
 800061c:	79bb      	ldrb	r3, [r7, #6]
 800061e:	461a      	mov	r2, r3
 8000620:	2180      	movs	r1, #128	@ 0x80
 8000622:	480d      	ldr	r0, [pc, #52]	@ (8000658 <output+0xf4>)
 8000624:	f004 fbbc 	bl	8004da0 <HAL_GPIO_WritePin>
			break;
 8000628:	e009      	b.n	800063e <output+0xda>
		case 7:
			HAL_GPIO_WritePin(GPIOB,IN3_2_Pin,bit);
 800062a:	79bb      	ldrb	r3, [r7, #6]
 800062c:	461a      	mov	r2, r3
 800062e:	2110      	movs	r1, #16
 8000630:	4809      	ldr	r0, [pc, #36]	@ (8000658 <output+0xf4>)
 8000632:	f004 fbb5 	bl	8004da0 <HAL_GPIO_WritePin>
			break;
 8000636:	e002      	b.n	800063e <output+0xda>
		default:
			Error_Handler();
 8000638:	f001 f9ea 	bl	8001a10 <Error_Handler>
			break;
 800063c:	bf00      	nop
	for(i = 0; i < 8;i++){
 800063e:	79fb      	ldrb	r3, [r7, #7]
 8000640:	3301      	adds	r3, #1
 8000642:	71fb      	strb	r3, [r7, #7]
 8000644:	79fb      	ldrb	r3, [r7, #7]
 8000646:	2b07      	cmp	r3, #7
 8000648:	d996      	bls.n	8000578 <output+0x14>
		}
	}
}
 800064a:	bf00      	nop
 800064c:	bf00      	nop
 800064e:	3708      	adds	r7, #8
 8000650:	46bd      	mov	sp, r7
 8000652:	bd80      	pop	{r7, pc}
 8000654:	20000632 	.word	0x20000632
 8000658:	48000400 	.word	0x48000400

0800065c <Over_current>:

void Over_current(uint8_t output_pin){
 800065c:	b580      	push	{r7, lr}
 800065e:	b082      	sub	sp, #8
 8000660:	af00      	add	r7, sp, #0
 8000662:	4603      	mov	r3, r0
 8000664:	71fb      	strb	r3, [r7, #7]
	TxData[0] = 15;
 8000666:	4b06      	ldr	r3, [pc, #24]	@ (8000680 <Over_current+0x24>)
 8000668:	220f      	movs	r2, #15
 800066a:	701a      	strb	r2, [r3, #0]
	TxData[1] = output_pin;
 800066c:	4a04      	ldr	r2, [pc, #16]	@ (8000680 <Over_current+0x24>)
 800066e:	79fb      	ldrb	r3, [r7, #7]
 8000670:	7053      	strb	r3, [r2, #1]
	CanSend(TxData);
 8000672:	4803      	ldr	r0, [pc, #12]	@ (8000680 <Over_current+0x24>)
 8000674:	f7ff fef8 	bl	8000468 <CanSend>
}
 8000678:	bf00      	nop
 800067a:	3708      	adds	r7, #8
 800067c:	46bd      	mov	sp, r7
 800067e:	bd80      	pop	{r7, pc}
 8000680:	20000030 	.word	0x20000030

08000684 <Warning_current>:

void Warning_current(uint8_t output_pin){
 8000684:	b580      	push	{r7, lr}
 8000686:	b082      	sub	sp, #8
 8000688:	af00      	add	r7, sp, #0
 800068a:	4603      	mov	r3, r0
 800068c:	71fb      	strb	r3, [r7, #7]
	TxData[0] = 14;
 800068e:	4b06      	ldr	r3, [pc, #24]	@ (80006a8 <Warning_current+0x24>)
 8000690:	220e      	movs	r2, #14
 8000692:	701a      	strb	r2, [r3, #0]
	TxData[1] = output_pin;
 8000694:	4a04      	ldr	r2, [pc, #16]	@ (80006a8 <Warning_current+0x24>)
 8000696:	79fb      	ldrb	r3, [r7, #7]
 8000698:	7053      	strb	r3, [r2, #1]
	CanSend(TxData);
 800069a:	4803      	ldr	r0, [pc, #12]	@ (80006a8 <Warning_current+0x24>)
 800069c:	f7ff fee4 	bl	8000468 <CanSend>
}
 80006a0:	bf00      	nop
 80006a2:	3708      	adds	r7, #8
 80006a4:	46bd      	mov	sp, r7
 80006a6:	bd80      	pop	{r7, pc}
 80006a8:	20000030 	.word	0x20000030

080006ac <decode>:
	TxData[0] = 13;
	TxData[1] = output_pin;
	CanSend(TxData);
}

void decode(){
 80006ac:	b580      	push	{r7, lr}
 80006ae:	b082      	sub	sp, #8
 80006b0:	af00      	add	r7, sp, #0
	switch(RxData[0]){
 80006b2:	4b36      	ldr	r3, [pc, #216]	@ (800078c <decode+0xe0>)
 80006b4:	781b      	ldrb	r3, [r3, #0]
 80006b6:	3b01      	subs	r3, #1
 80006b8:	2b03      	cmp	r3, #3
 80006ba:	d85f      	bhi.n	800077c <decode+0xd0>
 80006bc:	a201      	add	r2, pc, #4	@ (adr r2, 80006c4 <decode+0x18>)
 80006be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80006c2:	bf00      	nop
 80006c4:	080006d5 	.word	0x080006d5
 80006c8:	0800070f 	.word	0x0800070f
 80006cc:	0800072f 	.word	0x0800072f
 80006d0:	08000741 	.word	0x08000741
	case 1:							//Set PWM RxData[1] -> which PWM, RxData[2] = 1 -> Duty Cycle || RxData[2] = 2 -> Frequency, RxData[3] -> value
		switch(RxData[1]){
 80006d4:	4b2d      	ldr	r3, [pc, #180]	@ (800078c <decode+0xe0>)
 80006d6:	785b      	ldrb	r3, [r3, #1]
 80006d8:	2b01      	cmp	r3, #1
 80006da:	d002      	beq.n	80006e2 <decode+0x36>
 80006dc:	2b02      	cmp	r3, #2
 80006de:	d009      	beq.n	80006f4 <decode+0x48>
 80006e0:	e011      	b.n	8000706 <decode+0x5a>
		case 1:										//PUMPS
			PWM_width[0] = RxData[2];
 80006e2:	4b2a      	ldr	r3, [pc, #168]	@ (800078c <decode+0xe0>)
 80006e4:	789b      	ldrb	r3, [r3, #2]
 80006e6:	461a      	mov	r2, r3
 80006e8:	4b29      	ldr	r3, [pc, #164]	@ (8000790 <decode+0xe4>)
 80006ea:	801a      	strh	r2, [r3, #0]
			set_pwm_duty_cycle(&htim1);
 80006ec:	4829      	ldr	r0, [pc, #164]	@ (8000794 <decode+0xe8>)
 80006ee:	f7ff fd93 	bl	8000218 <set_pwm_duty_cycle>
			break;
 80006f2:	e00b      	b.n	800070c <decode+0x60>
		case 2:										//FANS
			PWM_width[1] = RxData[2];
 80006f4:	4b25      	ldr	r3, [pc, #148]	@ (800078c <decode+0xe0>)
 80006f6:	789b      	ldrb	r3, [r3, #2]
 80006f8:	461a      	mov	r2, r3
 80006fa:	4b25      	ldr	r3, [pc, #148]	@ (8000790 <decode+0xe4>)
 80006fc:	805a      	strh	r2, [r3, #2]
			set_pwm_duty_cycle(&htim2);
 80006fe:	4826      	ldr	r0, [pc, #152]	@ (8000798 <decode+0xec>)
 8000700:	f7ff fd8a 	bl	8000218 <set_pwm_duty_cycle>
			break;
 8000704:	e002      	b.n	800070c <decode+0x60>
		default:
			Error_Handler();
 8000706:	f001 f983 	bl	8001a10 <Error_Handler>
			break;
 800070a:	bf00      	nop
		}
		break;
 800070c:	e039      	b.n	8000782 <decode+0xd6>
	case 2:							//Switch output on/off
		Default_Switch_State = set_bit(Default_Switch_State,RxData[1],RxData[2]); //if RxData[2] is 0 -> OFF, if RxData[2] is 1 -> ON
 800070e:	4b23      	ldr	r3, [pc, #140]	@ (800079c <decode+0xf0>)
 8000710:	781b      	ldrb	r3, [r3, #0]
 8000712:	4a1e      	ldr	r2, [pc, #120]	@ (800078c <decode+0xe0>)
 8000714:	7851      	ldrb	r1, [r2, #1]
 8000716:	4a1d      	ldr	r2, [pc, #116]	@ (800078c <decode+0xe0>)
 8000718:	7892      	ldrb	r2, [r2, #2]
 800071a:	4618      	mov	r0, r3
 800071c:	f000 fc1e 	bl	8000f5c <set_bit>
 8000720:	4603      	mov	r3, r0
 8000722:	461a      	mov	r2, r3
 8000724:	4b1d      	ldr	r3, [pc, #116]	@ (800079c <decode+0xf0>)
 8000726:	701a      	strb	r2, [r3, #0]
		output();
 8000728:	f7ff ff1c 	bl	8000564 <output>
		break;
 800072c:	e029      	b.n	8000782 <decode+0xd6>
	case 3:							// turning analog node on and off, RxData[1] -> 0 is off 1 is on
		HAL_GPIO_WritePin(GPIOA,LED2_Pin,RxData[1]);
 800072e:	4b17      	ldr	r3, [pc, #92]	@ (800078c <decode+0xe0>)
 8000730:	785b      	ldrb	r3, [r3, #1]
 8000732:	461a      	mov	r2, r3
 8000734:	2180      	movs	r1, #128	@ 0x80
 8000736:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800073a:	f004 fb31 	bl	8004da0 <HAL_GPIO_WritePin>
		break;
 800073e:	e020      	b.n	8000782 <decode+0xd6>
	case 4:							//switch BRAKE_LIGHT	RxData[1] --> 0 for off and 1 for on
		for(int i = 0; i < 8; i++){
 8000740:	2300      	movs	r3, #0
 8000742:	607b      	str	r3, [r7, #4]
 8000744:	e017      	b.n	8000776 <decode+0xca>
			if(output_list[i] == BRAKE_LIGHT){
 8000746:	4a16      	ldr	r2, [pc, #88]	@ (80007a0 <decode+0xf4>)
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	4413      	add	r3, r2
 800074c:	781b      	ldrb	r3, [r3, #0]
 800074e:	2b01      	cmp	r3, #1
 8000750:	d10e      	bne.n	8000770 <decode+0xc4>
				Default_Switch_State = set_bit(Default_Switch_State,i,RxData[1]);
 8000752:	4b12      	ldr	r3, [pc, #72]	@ (800079c <decode+0xf0>)
 8000754:	781b      	ldrb	r3, [r3, #0]
 8000756:	687a      	ldr	r2, [r7, #4]
 8000758:	b2d1      	uxtb	r1, r2
 800075a:	4a0c      	ldr	r2, [pc, #48]	@ (800078c <decode+0xe0>)
 800075c:	7852      	ldrb	r2, [r2, #1]
 800075e:	4618      	mov	r0, r3
 8000760:	f000 fbfc 	bl	8000f5c <set_bit>
 8000764:	4603      	mov	r3, r0
 8000766:	461a      	mov	r2, r3
 8000768:	4b0c      	ldr	r3, [pc, #48]	@ (800079c <decode+0xf0>)
 800076a:	701a      	strb	r2, [r3, #0]
				output();
 800076c:	f7ff fefa 	bl	8000564 <output>
		for(int i = 0; i < 8; i++){
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	3301      	adds	r3, #1
 8000774:	607b      	str	r3, [r7, #4]
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	2b07      	cmp	r3, #7
 800077a:	dde4      	ble.n	8000746 <decode+0x9a>
			}
		}
	default:
		//decode_error(); //TODO: IMPLEMENT
		Error_Handler();
 800077c:	f001 f948 	bl	8001a10 <Error_Handler>
		break;
 8000780:	bf00      	nop
	}
}
 8000782:	bf00      	nop
 8000784:	3708      	adds	r7, #8
 8000786:	46bd      	mov	sp, r7
 8000788:	bd80      	pop	{r7, pc}
 800078a:	bf00      	nop
 800078c:	20000028 	.word	0x20000028
 8000790:	20000640 	.word	0x20000640
 8000794:	20000174 	.word	0x20000174
 8000798:	200001c0 	.word	0x200001c0
 800079c:	20000632 	.word	0x20000632
 80007a0:	20000634 	.word	0x20000634

080007a4 <Current_Sense_process>:



void Current_Sense_process(){
 80007a4:	b580      	push	{r7, lr}
 80007a6:	b082      	sub	sp, #8
 80007a8:	af00      	add	r7, sp, #0
	//4031 == 3.3V since 12bit, have to pick shunt resistor according to this
	PROC[0] = IN1_1_Current_Sense[0];
 80007aa:	4b86      	ldr	r3, [pc, #536]	@ (80009c4 <Current_Sense_process+0x220>)
 80007ac:	881a      	ldrh	r2, [r3, #0]
 80007ae:	4b86      	ldr	r3, [pc, #536]	@ (80009c8 <Current_Sense_process+0x224>)
 80007b0:	801a      	strh	r2, [r3, #0]
	PROC[1] = IN2_1_Current_Sense[0];
 80007b2:	4b86      	ldr	r3, [pc, #536]	@ (80009cc <Current_Sense_process+0x228>)
 80007b4:	881a      	ldrh	r2, [r3, #0]
 80007b6:	4b84      	ldr	r3, [pc, #528]	@ (80009c8 <Current_Sense_process+0x224>)
 80007b8:	805a      	strh	r2, [r3, #2]
	PROC[2] = IN3_1_Current_Sense[0];
 80007ba:	4b85      	ldr	r3, [pc, #532]	@ (80009d0 <Current_Sense_process+0x22c>)
 80007bc:	881a      	ldrh	r2, [r3, #0]
 80007be:	4b82      	ldr	r3, [pc, #520]	@ (80009c8 <Current_Sense_process+0x224>)
 80007c0:	809a      	strh	r2, [r3, #4]
	PROC[3] = IN4_1_Current_Sense[0];
 80007c2:	4b84      	ldr	r3, [pc, #528]	@ (80009d4 <Current_Sense_process+0x230>)
 80007c4:	881a      	ldrh	r2, [r3, #0]
 80007c6:	4b80      	ldr	r3, [pc, #512]	@ (80009c8 <Current_Sense_process+0x224>)
 80007c8:	80da      	strh	r2, [r3, #6]
	PROC[4] = IN1_2_Current_Sense[0];
 80007ca:	4b83      	ldr	r3, [pc, #524]	@ (80009d8 <Current_Sense_process+0x234>)
 80007cc:	881a      	ldrh	r2, [r3, #0]
 80007ce:	4b7e      	ldr	r3, [pc, #504]	@ (80009c8 <Current_Sense_process+0x224>)
 80007d0:	811a      	strh	r2, [r3, #8]
	PROC[5] = IN2_2_Current_Sense[0];
 80007d2:	4b82      	ldr	r3, [pc, #520]	@ (80009dc <Current_Sense_process+0x238>)
 80007d4:	881a      	ldrh	r2, [r3, #0]
 80007d6:	4b7c      	ldr	r3, [pc, #496]	@ (80009c8 <Current_Sense_process+0x224>)
 80007d8:	815a      	strh	r2, [r3, #10]
	PROC[6] = IN3_2_Current_Sense[0];
 80007da:	4b81      	ldr	r3, [pc, #516]	@ (80009e0 <Current_Sense_process+0x23c>)
 80007dc:	881a      	ldrh	r2, [r3, #0]
 80007de:	4b7a      	ldr	r3, [pc, #488]	@ (80009c8 <Current_Sense_process+0x224>)
 80007e0:	819a      	strh	r2, [r3, #12]
	PROC[7] = IN4_2_Current_Sense[0];
 80007e2:	4b80      	ldr	r3, [pc, #512]	@ (80009e4 <Current_Sense_process+0x240>)
 80007e4:	881a      	ldrh	r2, [r3, #0]
 80007e6:	4b78      	ldr	r3, [pc, #480]	@ (80009c8 <Current_Sense_process+0x224>)
 80007e8:	81da      	strh	r2, [r3, #14]
	PROC[8] = Analog_Current_Sense[0];
 80007ea:	4b7f      	ldr	r3, [pc, #508]	@ (80009e8 <Current_Sense_process+0x244>)
 80007ec:	881a      	ldrh	r2, [r3, #0]
 80007ee:	4b76      	ldr	r3, [pc, #472]	@ (80009c8 <Current_Sense_process+0x224>)
 80007f0:	821a      	strh	r2, [r3, #16]
	for(int i = 1; i < I_AVERAGE; i++){
 80007f2:	2301      	movs	r3, #1
 80007f4:	607b      	str	r3, [r7, #4]
 80007f6:	e089      	b.n	800090c <Current_Sense_process+0x168>
		PROC[0] = (PROC[0] + IN1_1_Current_Sense[i])/2;
 80007f8:	4b73      	ldr	r3, [pc, #460]	@ (80009c8 <Current_Sense_process+0x224>)
 80007fa:	881b      	ldrh	r3, [r3, #0]
 80007fc:	4619      	mov	r1, r3
 80007fe:	4a71      	ldr	r2, [pc, #452]	@ (80009c4 <Current_Sense_process+0x220>)
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000806:	440b      	add	r3, r1
 8000808:	0fda      	lsrs	r2, r3, #31
 800080a:	4413      	add	r3, r2
 800080c:	105b      	asrs	r3, r3, #1
 800080e:	b29a      	uxth	r2, r3
 8000810:	4b6d      	ldr	r3, [pc, #436]	@ (80009c8 <Current_Sense_process+0x224>)
 8000812:	801a      	strh	r2, [r3, #0]
		PROC[1] = (PROC[1] + IN2_1_Current_Sense[i])/2;
 8000814:	4b6c      	ldr	r3, [pc, #432]	@ (80009c8 <Current_Sense_process+0x224>)
 8000816:	885b      	ldrh	r3, [r3, #2]
 8000818:	4619      	mov	r1, r3
 800081a:	4a6c      	ldr	r2, [pc, #432]	@ (80009cc <Current_Sense_process+0x228>)
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000822:	440b      	add	r3, r1
 8000824:	0fda      	lsrs	r2, r3, #31
 8000826:	4413      	add	r3, r2
 8000828:	105b      	asrs	r3, r3, #1
 800082a:	b29a      	uxth	r2, r3
 800082c:	4b66      	ldr	r3, [pc, #408]	@ (80009c8 <Current_Sense_process+0x224>)
 800082e:	805a      	strh	r2, [r3, #2]
		PROC[2] = (PROC[2] + IN3_1_Current_Sense[i])/2;
 8000830:	4b65      	ldr	r3, [pc, #404]	@ (80009c8 <Current_Sense_process+0x224>)
 8000832:	889b      	ldrh	r3, [r3, #4]
 8000834:	4619      	mov	r1, r3
 8000836:	4a66      	ldr	r2, [pc, #408]	@ (80009d0 <Current_Sense_process+0x22c>)
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800083e:	440b      	add	r3, r1
 8000840:	0fda      	lsrs	r2, r3, #31
 8000842:	4413      	add	r3, r2
 8000844:	105b      	asrs	r3, r3, #1
 8000846:	b29a      	uxth	r2, r3
 8000848:	4b5f      	ldr	r3, [pc, #380]	@ (80009c8 <Current_Sense_process+0x224>)
 800084a:	809a      	strh	r2, [r3, #4]
		PROC[3] = (PROC[3] + IN4_1_Current_Sense[i])/2;
 800084c:	4b5e      	ldr	r3, [pc, #376]	@ (80009c8 <Current_Sense_process+0x224>)
 800084e:	88db      	ldrh	r3, [r3, #6]
 8000850:	4619      	mov	r1, r3
 8000852:	4a60      	ldr	r2, [pc, #384]	@ (80009d4 <Current_Sense_process+0x230>)
 8000854:	687b      	ldr	r3, [r7, #4]
 8000856:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800085a:	440b      	add	r3, r1
 800085c:	0fda      	lsrs	r2, r3, #31
 800085e:	4413      	add	r3, r2
 8000860:	105b      	asrs	r3, r3, #1
 8000862:	b29a      	uxth	r2, r3
 8000864:	4b58      	ldr	r3, [pc, #352]	@ (80009c8 <Current_Sense_process+0x224>)
 8000866:	80da      	strh	r2, [r3, #6]
		PROC[4] = (PROC[4] + IN1_2_Current_Sense[i])/2;
 8000868:	4b57      	ldr	r3, [pc, #348]	@ (80009c8 <Current_Sense_process+0x224>)
 800086a:	891b      	ldrh	r3, [r3, #8]
 800086c:	4619      	mov	r1, r3
 800086e:	4a5a      	ldr	r2, [pc, #360]	@ (80009d8 <Current_Sense_process+0x234>)
 8000870:	687b      	ldr	r3, [r7, #4]
 8000872:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000876:	440b      	add	r3, r1
 8000878:	0fda      	lsrs	r2, r3, #31
 800087a:	4413      	add	r3, r2
 800087c:	105b      	asrs	r3, r3, #1
 800087e:	b29a      	uxth	r2, r3
 8000880:	4b51      	ldr	r3, [pc, #324]	@ (80009c8 <Current_Sense_process+0x224>)
 8000882:	811a      	strh	r2, [r3, #8]
		PROC[5] = (PROC[5] + IN2_2_Current_Sense[i])/2;
 8000884:	4b50      	ldr	r3, [pc, #320]	@ (80009c8 <Current_Sense_process+0x224>)
 8000886:	895b      	ldrh	r3, [r3, #10]
 8000888:	4619      	mov	r1, r3
 800088a:	4a54      	ldr	r2, [pc, #336]	@ (80009dc <Current_Sense_process+0x238>)
 800088c:	687b      	ldr	r3, [r7, #4]
 800088e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000892:	440b      	add	r3, r1
 8000894:	0fda      	lsrs	r2, r3, #31
 8000896:	4413      	add	r3, r2
 8000898:	105b      	asrs	r3, r3, #1
 800089a:	b29a      	uxth	r2, r3
 800089c:	4b4a      	ldr	r3, [pc, #296]	@ (80009c8 <Current_Sense_process+0x224>)
 800089e:	815a      	strh	r2, [r3, #10]
		PROC[6] = (PROC[6] + IN3_2_Current_Sense[i])/2;
 80008a0:	4b49      	ldr	r3, [pc, #292]	@ (80009c8 <Current_Sense_process+0x224>)
 80008a2:	899b      	ldrh	r3, [r3, #12]
 80008a4:	4619      	mov	r1, r3
 80008a6:	4a4e      	ldr	r2, [pc, #312]	@ (80009e0 <Current_Sense_process+0x23c>)
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80008ae:	440b      	add	r3, r1
 80008b0:	0fda      	lsrs	r2, r3, #31
 80008b2:	4413      	add	r3, r2
 80008b4:	105b      	asrs	r3, r3, #1
 80008b6:	b29a      	uxth	r2, r3
 80008b8:	4b43      	ldr	r3, [pc, #268]	@ (80009c8 <Current_Sense_process+0x224>)
 80008ba:	819a      	strh	r2, [r3, #12]
		PROC[7] = (PROC[7] + IN4_2_Current_Sense[i])/2;
 80008bc:	4b42      	ldr	r3, [pc, #264]	@ (80009c8 <Current_Sense_process+0x224>)
 80008be:	89db      	ldrh	r3, [r3, #14]
 80008c0:	4619      	mov	r1, r3
 80008c2:	4a48      	ldr	r2, [pc, #288]	@ (80009e4 <Current_Sense_process+0x240>)
 80008c4:	687b      	ldr	r3, [r7, #4]
 80008c6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80008ca:	440b      	add	r3, r1
 80008cc:	0fda      	lsrs	r2, r3, #31
 80008ce:	4413      	add	r3, r2
 80008d0:	105b      	asrs	r3, r3, #1
 80008d2:	b29a      	uxth	r2, r3
 80008d4:	4b3c      	ldr	r3, [pc, #240]	@ (80009c8 <Current_Sense_process+0x224>)
 80008d6:	81da      	strh	r2, [r3, #14]
		if(i % 2 == 0){
 80008d8:	687b      	ldr	r3, [r7, #4]
 80008da:	f003 0301 	and.w	r3, r3, #1
 80008de:	2b00      	cmp	r3, #0
 80008e0:	d111      	bne.n	8000906 <Current_Sense_process+0x162>
			PROC[8] = (PROC[8] + Analog_Current_Sense[i/2])/2;
 80008e2:	4b39      	ldr	r3, [pc, #228]	@ (80009c8 <Current_Sense_process+0x224>)
 80008e4:	8a1b      	ldrh	r3, [r3, #16]
 80008e6:	4619      	mov	r1, r3
 80008e8:	687b      	ldr	r3, [r7, #4]
 80008ea:	0fda      	lsrs	r2, r3, #31
 80008ec:	4413      	add	r3, r2
 80008ee:	105b      	asrs	r3, r3, #1
 80008f0:	461a      	mov	r2, r3
 80008f2:	4b3d      	ldr	r3, [pc, #244]	@ (80009e8 <Current_Sense_process+0x244>)
 80008f4:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80008f8:	440b      	add	r3, r1
 80008fa:	0fda      	lsrs	r2, r3, #31
 80008fc:	4413      	add	r3, r2
 80008fe:	105b      	asrs	r3, r3, #1
 8000900:	b29a      	uxth	r2, r3
 8000902:	4b31      	ldr	r3, [pc, #196]	@ (80009c8 <Current_Sense_process+0x224>)
 8000904:	821a      	strh	r2, [r3, #16]
	for(int i = 1; i < I_AVERAGE; i++){
 8000906:	687b      	ldr	r3, [r7, #4]
 8000908:	3301      	adds	r3, #1
 800090a:	607b      	str	r3, [r7, #4]
 800090c:	687b      	ldr	r3, [r7, #4]
 800090e:	2b1f      	cmp	r3, #31
 8000910:	f77f af72 	ble.w	80007f8 <Current_Sense_process+0x54>
		}
	}
	PROC[0] = Current_Sense_Raw_to_mA(PROC[0]);
 8000914:	4b2c      	ldr	r3, [pc, #176]	@ (80009c8 <Current_Sense_process+0x224>)
 8000916:	881b      	ldrh	r3, [r3, #0]
 8000918:	4618      	mov	r0, r3
 800091a:	f000 fb45 	bl	8000fa8 <Current_Sense_Raw_to_mA>
 800091e:	4603      	mov	r3, r0
 8000920:	461a      	mov	r2, r3
 8000922:	4b29      	ldr	r3, [pc, #164]	@ (80009c8 <Current_Sense_process+0x224>)
 8000924:	801a      	strh	r2, [r3, #0]
	PROC[1] = Current_Sense_Raw_to_mA(PROC[1]);
 8000926:	4b28      	ldr	r3, [pc, #160]	@ (80009c8 <Current_Sense_process+0x224>)
 8000928:	885b      	ldrh	r3, [r3, #2]
 800092a:	4618      	mov	r0, r3
 800092c:	f000 fb3c 	bl	8000fa8 <Current_Sense_Raw_to_mA>
 8000930:	4603      	mov	r3, r0
 8000932:	461a      	mov	r2, r3
 8000934:	4b24      	ldr	r3, [pc, #144]	@ (80009c8 <Current_Sense_process+0x224>)
 8000936:	805a      	strh	r2, [r3, #2]
	PROC[2] = Current_Sense_Raw_to_mA(PROC[2]);
 8000938:	4b23      	ldr	r3, [pc, #140]	@ (80009c8 <Current_Sense_process+0x224>)
 800093a:	889b      	ldrh	r3, [r3, #4]
 800093c:	4618      	mov	r0, r3
 800093e:	f000 fb33 	bl	8000fa8 <Current_Sense_Raw_to_mA>
 8000942:	4603      	mov	r3, r0
 8000944:	461a      	mov	r2, r3
 8000946:	4b20      	ldr	r3, [pc, #128]	@ (80009c8 <Current_Sense_process+0x224>)
 8000948:	809a      	strh	r2, [r3, #4]
	PROC[3] = Current_Sense_Raw_to_mA(PROC[3]);
 800094a:	4b1f      	ldr	r3, [pc, #124]	@ (80009c8 <Current_Sense_process+0x224>)
 800094c:	88db      	ldrh	r3, [r3, #6]
 800094e:	4618      	mov	r0, r3
 8000950:	f000 fb2a 	bl	8000fa8 <Current_Sense_Raw_to_mA>
 8000954:	4603      	mov	r3, r0
 8000956:	461a      	mov	r2, r3
 8000958:	4b1b      	ldr	r3, [pc, #108]	@ (80009c8 <Current_Sense_process+0x224>)
 800095a:	80da      	strh	r2, [r3, #6]
	PROC[4] = Current_Sense_Raw_to_mA(PROC[4]);
 800095c:	4b1a      	ldr	r3, [pc, #104]	@ (80009c8 <Current_Sense_process+0x224>)
 800095e:	891b      	ldrh	r3, [r3, #8]
 8000960:	4618      	mov	r0, r3
 8000962:	f000 fb21 	bl	8000fa8 <Current_Sense_Raw_to_mA>
 8000966:	4603      	mov	r3, r0
 8000968:	461a      	mov	r2, r3
 800096a:	4b17      	ldr	r3, [pc, #92]	@ (80009c8 <Current_Sense_process+0x224>)
 800096c:	811a      	strh	r2, [r3, #8]
	PROC[5] = Current_Sense_Raw_to_mA(PROC[5]);
 800096e:	4b16      	ldr	r3, [pc, #88]	@ (80009c8 <Current_Sense_process+0x224>)
 8000970:	895b      	ldrh	r3, [r3, #10]
 8000972:	4618      	mov	r0, r3
 8000974:	f000 fb18 	bl	8000fa8 <Current_Sense_Raw_to_mA>
 8000978:	4603      	mov	r3, r0
 800097a:	461a      	mov	r2, r3
 800097c:	4b12      	ldr	r3, [pc, #72]	@ (80009c8 <Current_Sense_process+0x224>)
 800097e:	815a      	strh	r2, [r3, #10]
	PROC[6] = Current_Sense_Raw_to_mA(PROC[6]);
 8000980:	4b11      	ldr	r3, [pc, #68]	@ (80009c8 <Current_Sense_process+0x224>)
 8000982:	899b      	ldrh	r3, [r3, #12]
 8000984:	4618      	mov	r0, r3
 8000986:	f000 fb0f 	bl	8000fa8 <Current_Sense_Raw_to_mA>
 800098a:	4603      	mov	r3, r0
 800098c:	461a      	mov	r2, r3
 800098e:	4b0e      	ldr	r3, [pc, #56]	@ (80009c8 <Current_Sense_process+0x224>)
 8000990:	819a      	strh	r2, [r3, #12]
	PROC[7] = Current_Sense_Raw_to_mA(PROC[7]);
 8000992:	4b0d      	ldr	r3, [pc, #52]	@ (80009c8 <Current_Sense_process+0x224>)
 8000994:	89db      	ldrh	r3, [r3, #14]
 8000996:	4618      	mov	r0, r3
 8000998:	f000 fb06 	bl	8000fa8 <Current_Sense_Raw_to_mA>
 800099c:	4603      	mov	r3, r0
 800099e:	461a      	mov	r2, r3
 80009a0:	4b09      	ldr	r3, [pc, #36]	@ (80009c8 <Current_Sense_process+0x224>)
 80009a2:	81da      	strh	r2, [r3, #14]
	PROC[8] = Current_Sense_Raw_to_mA(PROC[8]);
 80009a4:	4b08      	ldr	r3, [pc, #32]	@ (80009c8 <Current_Sense_process+0x224>)
 80009a6:	8a1b      	ldrh	r3, [r3, #16]
 80009a8:	4618      	mov	r0, r3
 80009aa:	f000 fafd 	bl	8000fa8 <Current_Sense_Raw_to_mA>
 80009ae:	4603      	mov	r3, r0
 80009b0:	461a      	mov	r2, r3
 80009b2:	4b05      	ldr	r3, [pc, #20]	@ (80009c8 <Current_Sense_process+0x224>)
 80009b4:	821a      	strh	r2, [r3, #16]
	check_warnings();
 80009b6:	f000 f819 	bl	80009ec <check_warnings>
}
 80009ba:	bf00      	nop
 80009bc:	3708      	adds	r7, #8
 80009be:	46bd      	mov	sp, r7
 80009c0:	bd80      	pop	{r7, pc}
 80009c2:	bf00      	nop
 80009c4:	20000388 	.word	0x20000388
 80009c8:	200005e8 	.word	0x200005e8
 80009cc:	200003c8 	.word	0x200003c8
 80009d0:	20000408 	.word	0x20000408
 80009d4:	20000448 	.word	0x20000448
 80009d8:	20000488 	.word	0x20000488
 80009dc:	200004c8 	.word	0x200004c8
 80009e0:	20000508 	.word	0x20000508
 80009e4:	20000548 	.word	0x20000548
 80009e8:	200005c8 	.word	0x200005c8

080009ec <check_warnings>:

void check_warnings(){
 80009ec:	b580      	push	{r7, lr}
 80009ee:	b082      	sub	sp, #8
 80009f0:	af00      	add	r7, sp, #0
	for(uint8_t x = 0; x < 7; x++){
 80009f2:	2300      	movs	r3, #0
 80009f4:	71fb      	strb	r3, [r7, #7]
 80009f6:	e02a      	b.n	8000a4e <check_warnings+0x62>
		if(PROC[x] >= Warning_Current[x]){
 80009f8:	79fb      	ldrb	r3, [r7, #7]
 80009fa:	4a23      	ldr	r2, [pc, #140]	@ (8000a88 <check_warnings+0x9c>)
 80009fc:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000a00:	79fb      	ldrb	r3, [r7, #7]
 8000a02:	4922      	ldr	r1, [pc, #136]	@ (8000a8c <check_warnings+0xa0>)
 8000a04:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000a08:	429a      	cmp	r2, r3
 8000a0a:	d31d      	bcc.n	8000a48 <check_warnings+0x5c>
			if(PROC[x] >= Over_Current[x]){
 8000a0c:	79fb      	ldrb	r3, [r7, #7]
 8000a0e:	4a1e      	ldr	r2, [pc, #120]	@ (8000a88 <check_warnings+0x9c>)
 8000a10:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000a14:	79fb      	ldrb	r3, [r7, #7]
 8000a16:	491e      	ldr	r1, [pc, #120]	@ (8000a90 <check_warnings+0xa4>)
 8000a18:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000a1c:	429a      	cmp	r2, r3
 8000a1e:	d30f      	bcc.n	8000a40 <check_warnings+0x54>
				Default_Switch_State = set_bit(Default_Switch_State, x, 0);
 8000a20:	4b1c      	ldr	r3, [pc, #112]	@ (8000a94 <check_warnings+0xa8>)
 8000a22:	781b      	ldrb	r3, [r3, #0]
 8000a24:	79f9      	ldrb	r1, [r7, #7]
 8000a26:	2200      	movs	r2, #0
 8000a28:	4618      	mov	r0, r3
 8000a2a:	f000 fa97 	bl	8000f5c <set_bit>
 8000a2e:	4603      	mov	r3, r0
 8000a30:	461a      	mov	r2, r3
 8000a32:	4b18      	ldr	r3, [pc, #96]	@ (8000a94 <check_warnings+0xa8>)
 8000a34:	701a      	strb	r2, [r3, #0]
				Over_current(x);
 8000a36:	79fb      	ldrb	r3, [r7, #7]
 8000a38:	4618      	mov	r0, r3
 8000a3a:	f7ff fe0f 	bl	800065c <Over_current>
 8000a3e:	e003      	b.n	8000a48 <check_warnings+0x5c>
			}else{
				Warning_current(x);
 8000a40:	79fb      	ldrb	r3, [r7, #7]
 8000a42:	4618      	mov	r0, r3
 8000a44:	f7ff fe1e 	bl	8000684 <Warning_current>
	for(uint8_t x = 0; x < 7; x++){
 8000a48:	79fb      	ldrb	r3, [r7, #7]
 8000a4a:	3301      	adds	r3, #1
 8000a4c:	71fb      	strb	r3, [r7, #7]
 8000a4e:	79fb      	ldrb	r3, [r7, #7]
 8000a50:	2b06      	cmp	r3, #6
 8000a52:	d9d1      	bls.n	80009f8 <check_warnings+0xc>
		}
	/*	if(PROC[x] < Under_Current[x]){
			Under_current(x);
		}*/
	}
	if(PROC[8] >= Warning_Current[8]){
 8000a54:	4b0c      	ldr	r3, [pc, #48]	@ (8000a88 <check_warnings+0x9c>)
 8000a56:	8a1a      	ldrh	r2, [r3, #16]
 8000a58:	4b0c      	ldr	r3, [pc, #48]	@ (8000a8c <check_warnings+0xa0>)
 8000a5a:	8a1b      	ldrh	r3, [r3, #16]
 8000a5c:	429a      	cmp	r2, r3
 8000a5e:	d30c      	bcc.n	8000a7a <check_warnings+0x8e>
		if(PROC[8] >= Over_Current[8]){
 8000a60:	4b09      	ldr	r3, [pc, #36]	@ (8000a88 <check_warnings+0x9c>)
 8000a62:	8a1a      	ldrh	r2, [r3, #16]
 8000a64:	4b0a      	ldr	r3, [pc, #40]	@ (8000a90 <check_warnings+0xa4>)
 8000a66:	8a1b      	ldrh	r3, [r3, #16]
 8000a68:	429a      	cmp	r2, r3
 8000a6a:	d303      	bcc.n	8000a74 <check_warnings+0x88>
			Over_current(8);
 8000a6c:	2008      	movs	r0, #8
 8000a6e:	f7ff fdf5 	bl	800065c <Over_current>
 8000a72:	e002      	b.n	8000a7a <check_warnings+0x8e>
			//HAL_GPIO_WritePin(GPIOB,AnalogPower_EN_Pin,0);
		}else{
			Warning_current(8);
 8000a74:	2008      	movs	r0, #8
 8000a76:	f7ff fe05 	bl	8000684 <Warning_current>
		}
	}
	/*if(PROC[8] < Under_Current[8]){
		Under_current(8);
	}*/
	output();
 8000a7a:	f7ff fd73 	bl	8000564 <output>

}
 8000a7e:	bf00      	nop
 8000a80:	3708      	adds	r7, #8
 8000a82:	46bd      	mov	sp, r7
 8000a84:	bd80      	pop	{r7, pc}
 8000a86:	bf00      	nop
 8000a88:	200005e8 	.word	0x200005e8
 8000a8c:	200005fc 	.word	0x200005fc
 8000a90:	2000060c 	.word	0x2000060c
 8000a94:	20000632 	.word	0x20000632

08000a98 <Current_Sense_read>:

void Current_Sense_read(){
 8000a98:	b580      	push	{r7, lr}
 8000a9a:	b088      	sub	sp, #32
 8000a9c:	af00      	add	r7, sp, #0
	for(int x = 0; x < 5; x++){
 8000a9e:	2300      	movs	r3, #0
 8000aa0:	61fb      	str	r3, [r7, #28]
 8000aa2:	e226      	b.n	8000ef2 <Current_Sense_read+0x45a>
		switch(x){
 8000aa4:	69fb      	ldr	r3, [r7, #28]
 8000aa6:	2b04      	cmp	r3, #4
 8000aa8:	f200 8220 	bhi.w	8000eec <Current_Sense_read+0x454>
 8000aac:	a201      	add	r2, pc, #4	@ (adr r2, 8000ab4 <Current_Sense_read+0x1c>)
 8000aae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ab2:	bf00      	nop
 8000ab4:	08000ac9 	.word	0x08000ac9
 8000ab8:	08000b8d 	.word	0x08000b8d
 8000abc:	08000c51 	.word	0x08000c51
 8000ac0:	08000d15 	.word	0x08000d15
 8000ac4:	08000e03 	.word	0x08000e03
		case 0:
			//chip_select_read();
			Current_Sense_SEL[0] = 0;
 8000ac8:	4b9e      	ldr	r3, [pc, #632]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000aca:	2200      	movs	r2, #0
 8000acc:	701a      	strb	r2, [r3, #0]
			Current_Sense_SEL[1] = 0;
 8000ace:	4b9d      	ldr	r3, [pc, #628]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000ad0:	2200      	movs	r2, #0
 8000ad2:	705a      	strb	r2, [r3, #1]
			HAL_GPIO_WritePin(GPIOB,SEL0_Pin,Current_Sense_SEL[0]);
 8000ad4:	4b9b      	ldr	r3, [pc, #620]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000ad6:	781b      	ldrb	r3, [r3, #0]
 8000ad8:	461a      	mov	r2, r3
 8000ada:	2140      	movs	r1, #64	@ 0x40
 8000adc:	489a      	ldr	r0, [pc, #616]	@ (8000d48 <Current_Sense_read+0x2b0>)
 8000ade:	f004 f95f 	bl	8004da0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB,SEL1_Pin,Current_Sense_SEL[1]);
 8000ae2:	4b98      	ldr	r3, [pc, #608]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000ae4:	785b      	ldrb	r3, [r3, #1]
 8000ae6:	461a      	mov	r2, r3
 8000ae8:	2120      	movs	r1, #32
 8000aea:	4897      	ldr	r0, [pc, #604]	@ (8000d48 <Current_Sense_read+0x2b0>)
 8000aec:	f004 f958 	bl	8004da0 <HAL_GPIO_WritePin>
			for(int i = 0; i < I_AVERAGE; i++){
 8000af0:	2300      	movs	r3, #0
 8000af2:	61bb      	str	r3, [r7, #24]
 8000af4:	e046      	b.n	8000b84 <Current_Sense_read+0xec>
				if(HAL_ADC_Start(&hadc1)!=HAL_OK){Error_Handler();}
 8000af6:	4895      	ldr	r0, [pc, #596]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000af8:	f001 fefe 	bl	80028f8 <HAL_ADC_Start>
 8000afc:	4603      	mov	r3, r0
 8000afe:	2b00      	cmp	r3, #0
 8000b00:	d001      	beq.n	8000b06 <Current_Sense_read+0x6e>
 8000b02:	f000 ff85 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_Start(&hadc2)!=HAL_OK){Error_Handler();}
 8000b06:	4892      	ldr	r0, [pc, #584]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000b08:	f001 fef6 	bl	80028f8 <HAL_ADC_Start>
 8000b0c:	4603      	mov	r3, r0
 8000b0e:	2b00      	cmp	r3, #0
 8000b10:	d001      	beq.n	8000b16 <Current_Sense_read+0x7e>
 8000b12:	f000 ff7d 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();}
 8000b16:	2164      	movs	r1, #100	@ 0x64
 8000b18:	488c      	ldr	r0, [pc, #560]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000b1a:	f001 ffdd 	bl	8002ad8 <HAL_ADC_PollForConversion>
 8000b1e:	4603      	mov	r3, r0
 8000b20:	2b00      	cmp	r3, #0
 8000b22:	d001      	beq.n	8000b28 <Current_Sense_read+0x90>
 8000b24:	f000 ff74 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc2,100)!=HAL_OK){Error_Handler();}
 8000b28:	2164      	movs	r1, #100	@ 0x64
 8000b2a:	4889      	ldr	r0, [pc, #548]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000b2c:	f001 ffd4 	bl	8002ad8 <HAL_ADC_PollForConversion>
 8000b30:	4603      	mov	r3, r0
 8000b32:	2b00      	cmp	r3, #0
 8000b34:	d001      	beq.n	8000b3a <Current_Sense_read+0xa2>
 8000b36:	f000 ff6b 	bl	8001a10 <Error_Handler>
				IN1_1_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc1);
 8000b3a:	4884      	ldr	r0, [pc, #528]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000b3c:	f002 fa0f 	bl	8002f5e <HAL_ADC_GetValue>
 8000b40:	4603      	mov	r3, r0
 8000b42:	b299      	uxth	r1, r3
 8000b44:	4a83      	ldr	r2, [pc, #524]	@ (8000d54 <Current_Sense_read+0x2bc>)
 8000b46:	69bb      	ldr	r3, [r7, #24]
 8000b48:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				IN1_2_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc2);
 8000b4c:	4880      	ldr	r0, [pc, #512]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000b4e:	f002 fa06 	bl	8002f5e <HAL_ADC_GetValue>
 8000b52:	4603      	mov	r3, r0
 8000b54:	b299      	uxth	r1, r3
 8000b56:	4a80      	ldr	r2, [pc, #512]	@ (8000d58 <Current_Sense_read+0x2c0>)
 8000b58:	69bb      	ldr	r3, [r7, #24]
 8000b5a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop(&hadc1)!=HAL_OK){Error_Handler();}
 8000b5e:	487b      	ldr	r0, [pc, #492]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000b60:	f001 ff86 	bl	8002a70 <HAL_ADC_Stop>
 8000b64:	4603      	mov	r3, r0
 8000b66:	2b00      	cmp	r3, #0
 8000b68:	d001      	beq.n	8000b6e <Current_Sense_read+0xd6>
 8000b6a:	f000 ff51 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_Stop(&hadc2)!=HAL_OK){Error_Handler();}
 8000b6e:	4878      	ldr	r0, [pc, #480]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000b70:	f001 ff7e 	bl	8002a70 <HAL_ADC_Stop>
 8000b74:	4603      	mov	r3, r0
 8000b76:	2b00      	cmp	r3, #0
 8000b78:	d001      	beq.n	8000b7e <Current_Sense_read+0xe6>
 8000b7a:	f000 ff49 	bl	8001a10 <Error_Handler>
			for(int i = 0; i < I_AVERAGE; i++){
 8000b7e:	69bb      	ldr	r3, [r7, #24]
 8000b80:	3301      	adds	r3, #1
 8000b82:	61bb      	str	r3, [r7, #24]
 8000b84:	69bb      	ldr	r3, [r7, #24]
 8000b86:	2b1f      	cmp	r3, #31
 8000b88:	ddb5      	ble.n	8000af6 <Current_Sense_read+0x5e>
			}
			break;
 8000b8a:	e1af      	b.n	8000eec <Current_Sense_read+0x454>
		case 1:
			//chip_select_read();
			Current_Sense_SEL[0] = 0;
 8000b8c:	4b6d      	ldr	r3, [pc, #436]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000b8e:	2200      	movs	r2, #0
 8000b90:	701a      	strb	r2, [r3, #0]
			Current_Sense_SEL[1] = 1;
 8000b92:	4b6c      	ldr	r3, [pc, #432]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000b94:	2201      	movs	r2, #1
 8000b96:	705a      	strb	r2, [r3, #1]
			HAL_GPIO_WritePin(GPIOB,SEL0_Pin,Current_Sense_SEL[0]);
 8000b98:	4b6a      	ldr	r3, [pc, #424]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000b9a:	781b      	ldrb	r3, [r3, #0]
 8000b9c:	461a      	mov	r2, r3
 8000b9e:	2140      	movs	r1, #64	@ 0x40
 8000ba0:	4869      	ldr	r0, [pc, #420]	@ (8000d48 <Current_Sense_read+0x2b0>)
 8000ba2:	f004 f8fd 	bl	8004da0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB,SEL1_Pin,Current_Sense_SEL[1]);
 8000ba6:	4b67      	ldr	r3, [pc, #412]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000ba8:	785b      	ldrb	r3, [r3, #1]
 8000baa:	461a      	mov	r2, r3
 8000bac:	2120      	movs	r1, #32
 8000bae:	4866      	ldr	r0, [pc, #408]	@ (8000d48 <Current_Sense_read+0x2b0>)
 8000bb0:	f004 f8f6 	bl	8004da0 <HAL_GPIO_WritePin>
			for(int i = 0; i < I_AVERAGE; i++){
 8000bb4:	2300      	movs	r3, #0
 8000bb6:	617b      	str	r3, [r7, #20]
 8000bb8:	e046      	b.n	8000c48 <Current_Sense_read+0x1b0>
				if(HAL_ADC_Start(&hadc1)!=HAL_OK){Error_Handler();}
 8000bba:	4864      	ldr	r0, [pc, #400]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000bbc:	f001 fe9c 	bl	80028f8 <HAL_ADC_Start>
 8000bc0:	4603      	mov	r3, r0
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	d001      	beq.n	8000bca <Current_Sense_read+0x132>
 8000bc6:	f000 ff23 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_Start(&hadc2)!=HAL_OK){Error_Handler();}
 8000bca:	4861      	ldr	r0, [pc, #388]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000bcc:	f001 fe94 	bl	80028f8 <HAL_ADC_Start>
 8000bd0:	4603      	mov	r3, r0
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d001      	beq.n	8000bda <Current_Sense_read+0x142>
 8000bd6:	f000 ff1b 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();}
 8000bda:	2164      	movs	r1, #100	@ 0x64
 8000bdc:	485b      	ldr	r0, [pc, #364]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000bde:	f001 ff7b 	bl	8002ad8 <HAL_ADC_PollForConversion>
 8000be2:	4603      	mov	r3, r0
 8000be4:	2b00      	cmp	r3, #0
 8000be6:	d001      	beq.n	8000bec <Current_Sense_read+0x154>
 8000be8:	f000 ff12 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc2,100)!=HAL_OK){Error_Handler();}
 8000bec:	2164      	movs	r1, #100	@ 0x64
 8000bee:	4858      	ldr	r0, [pc, #352]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000bf0:	f001 ff72 	bl	8002ad8 <HAL_ADC_PollForConversion>
 8000bf4:	4603      	mov	r3, r0
 8000bf6:	2b00      	cmp	r3, #0
 8000bf8:	d001      	beq.n	8000bfe <Current_Sense_read+0x166>
 8000bfa:	f000 ff09 	bl	8001a10 <Error_Handler>
				IN2_1_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc1);
 8000bfe:	4853      	ldr	r0, [pc, #332]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000c00:	f002 f9ad 	bl	8002f5e <HAL_ADC_GetValue>
 8000c04:	4603      	mov	r3, r0
 8000c06:	b299      	uxth	r1, r3
 8000c08:	4a54      	ldr	r2, [pc, #336]	@ (8000d5c <Current_Sense_read+0x2c4>)
 8000c0a:	697b      	ldr	r3, [r7, #20]
 8000c0c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				IN2_2_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc2);
 8000c10:	484f      	ldr	r0, [pc, #316]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000c12:	f002 f9a4 	bl	8002f5e <HAL_ADC_GetValue>
 8000c16:	4603      	mov	r3, r0
 8000c18:	b299      	uxth	r1, r3
 8000c1a:	4a51      	ldr	r2, [pc, #324]	@ (8000d60 <Current_Sense_read+0x2c8>)
 8000c1c:	697b      	ldr	r3, [r7, #20]
 8000c1e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop(&hadc1)!=HAL_OK){Error_Handler();}
 8000c22:	484a      	ldr	r0, [pc, #296]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000c24:	f001 ff24 	bl	8002a70 <HAL_ADC_Stop>
 8000c28:	4603      	mov	r3, r0
 8000c2a:	2b00      	cmp	r3, #0
 8000c2c:	d001      	beq.n	8000c32 <Current_Sense_read+0x19a>
 8000c2e:	f000 feef 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_Stop(&hadc2)!=HAL_OK){Error_Handler();}
 8000c32:	4847      	ldr	r0, [pc, #284]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000c34:	f001 ff1c 	bl	8002a70 <HAL_ADC_Stop>
 8000c38:	4603      	mov	r3, r0
 8000c3a:	2b00      	cmp	r3, #0
 8000c3c:	d001      	beq.n	8000c42 <Current_Sense_read+0x1aa>
 8000c3e:	f000 fee7 	bl	8001a10 <Error_Handler>
			for(int i = 0; i < I_AVERAGE; i++){
 8000c42:	697b      	ldr	r3, [r7, #20]
 8000c44:	3301      	adds	r3, #1
 8000c46:	617b      	str	r3, [r7, #20]
 8000c48:	697b      	ldr	r3, [r7, #20]
 8000c4a:	2b1f      	cmp	r3, #31
 8000c4c:	ddb5      	ble.n	8000bba <Current_Sense_read+0x122>
			}
			break;
 8000c4e:	e14d      	b.n	8000eec <Current_Sense_read+0x454>
		case 2:
			//chip_select_read();
			Current_Sense_SEL[0] = 1;
 8000c50:	4b3c      	ldr	r3, [pc, #240]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000c52:	2201      	movs	r2, #1
 8000c54:	701a      	strb	r2, [r3, #0]
			Current_Sense_SEL[1] = 0;
 8000c56:	4b3b      	ldr	r3, [pc, #236]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000c58:	2200      	movs	r2, #0
 8000c5a:	705a      	strb	r2, [r3, #1]
			HAL_GPIO_WritePin(GPIOB,SEL0_Pin,Current_Sense_SEL[0]);
 8000c5c:	4b39      	ldr	r3, [pc, #228]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000c5e:	781b      	ldrb	r3, [r3, #0]
 8000c60:	461a      	mov	r2, r3
 8000c62:	2140      	movs	r1, #64	@ 0x40
 8000c64:	4838      	ldr	r0, [pc, #224]	@ (8000d48 <Current_Sense_read+0x2b0>)
 8000c66:	f004 f89b 	bl	8004da0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB,SEL1_Pin,Current_Sense_SEL[1]);
 8000c6a:	4b36      	ldr	r3, [pc, #216]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000c6c:	785b      	ldrb	r3, [r3, #1]
 8000c6e:	461a      	mov	r2, r3
 8000c70:	2120      	movs	r1, #32
 8000c72:	4835      	ldr	r0, [pc, #212]	@ (8000d48 <Current_Sense_read+0x2b0>)
 8000c74:	f004 f894 	bl	8004da0 <HAL_GPIO_WritePin>
			for(int i = 0; i < I_AVERAGE; i++){
 8000c78:	2300      	movs	r3, #0
 8000c7a:	613b      	str	r3, [r7, #16]
 8000c7c:	e046      	b.n	8000d0c <Current_Sense_read+0x274>
				if(HAL_ADC_Start_IT(&hadc1)!=HAL_OK){Error_Handler();}
 8000c7e:	4833      	ldr	r0, [pc, #204]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000c80:	f002 f802 	bl	8002c88 <HAL_ADC_Start_IT>
 8000c84:	4603      	mov	r3, r0
 8000c86:	2b00      	cmp	r3, #0
 8000c88:	d001      	beq.n	8000c8e <Current_Sense_read+0x1f6>
 8000c8a:	f000 fec1 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_Start_IT(&hadc2)!=HAL_OK){Error_Handler();}
 8000c8e:	4830      	ldr	r0, [pc, #192]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000c90:	f001 fffa 	bl	8002c88 <HAL_ADC_Start_IT>
 8000c94:	4603      	mov	r3, r0
 8000c96:	2b00      	cmp	r3, #0
 8000c98:	d001      	beq.n	8000c9e <Current_Sense_read+0x206>
 8000c9a:	f000 feb9 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();}
 8000c9e:	2164      	movs	r1, #100	@ 0x64
 8000ca0:	482a      	ldr	r0, [pc, #168]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000ca2:	f001 ff19 	bl	8002ad8 <HAL_ADC_PollForConversion>
 8000ca6:	4603      	mov	r3, r0
 8000ca8:	2b00      	cmp	r3, #0
 8000caa:	d001      	beq.n	8000cb0 <Current_Sense_read+0x218>
 8000cac:	f000 feb0 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc2,100)!=HAL_OK){Error_Handler();}
 8000cb0:	2164      	movs	r1, #100	@ 0x64
 8000cb2:	4827      	ldr	r0, [pc, #156]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000cb4:	f001 ff10 	bl	8002ad8 <HAL_ADC_PollForConversion>
 8000cb8:	4603      	mov	r3, r0
 8000cba:	2b00      	cmp	r3, #0
 8000cbc:	d001      	beq.n	8000cc2 <Current_Sense_read+0x22a>
 8000cbe:	f000 fea7 	bl	8001a10 <Error_Handler>
				IN3_1_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc1);
 8000cc2:	4822      	ldr	r0, [pc, #136]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000cc4:	f002 f94b 	bl	8002f5e <HAL_ADC_GetValue>
 8000cc8:	4603      	mov	r3, r0
 8000cca:	b299      	uxth	r1, r3
 8000ccc:	4a25      	ldr	r2, [pc, #148]	@ (8000d64 <Current_Sense_read+0x2cc>)
 8000cce:	693b      	ldr	r3, [r7, #16]
 8000cd0:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				IN3_2_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc2);
 8000cd4:	481e      	ldr	r0, [pc, #120]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000cd6:	f002 f942 	bl	8002f5e <HAL_ADC_GetValue>
 8000cda:	4603      	mov	r3, r0
 8000cdc:	b299      	uxth	r1, r3
 8000cde:	4a22      	ldr	r2, [pc, #136]	@ (8000d68 <Current_Sense_read+0x2d0>)
 8000ce0:	693b      	ldr	r3, [r7, #16]
 8000ce2:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop_IT(&hadc1)!=HAL_OK){Error_Handler();}
 8000ce6:	4819      	ldr	r0, [pc, #100]	@ (8000d4c <Current_Sense_read+0x2b4>)
 8000ce8:	f002 f8fe 	bl	8002ee8 <HAL_ADC_Stop_IT>
 8000cec:	4603      	mov	r3, r0
 8000cee:	2b00      	cmp	r3, #0
 8000cf0:	d001      	beq.n	8000cf6 <Current_Sense_read+0x25e>
 8000cf2:	f000 fe8d 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_Stop_IT(&hadc2)!=HAL_OK){Error_Handler();}
 8000cf6:	4816      	ldr	r0, [pc, #88]	@ (8000d50 <Current_Sense_read+0x2b8>)
 8000cf8:	f002 f8f6 	bl	8002ee8 <HAL_ADC_Stop_IT>
 8000cfc:	4603      	mov	r3, r0
 8000cfe:	2b00      	cmp	r3, #0
 8000d00:	d001      	beq.n	8000d06 <Current_Sense_read+0x26e>
 8000d02:	f000 fe85 	bl	8001a10 <Error_Handler>
			for(int i = 0; i < I_AVERAGE; i++){
 8000d06:	693b      	ldr	r3, [r7, #16]
 8000d08:	3301      	adds	r3, #1
 8000d0a:	613b      	str	r3, [r7, #16]
 8000d0c:	693b      	ldr	r3, [r7, #16]
 8000d0e:	2b1f      	cmp	r3, #31
 8000d10:	ddb5      	ble.n	8000c7e <Current_Sense_read+0x1e6>
			}
			break;
 8000d12:	e0eb      	b.n	8000eec <Current_Sense_read+0x454>
		case 3:
			//chip_select_read();
			Current_Sense_SEL[0] = 1;
 8000d14:	4b0b      	ldr	r3, [pc, #44]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000d16:	2201      	movs	r2, #1
 8000d18:	701a      	strb	r2, [r3, #0]
			Current_Sense_SEL[1] = 1;
 8000d1a:	4b0a      	ldr	r3, [pc, #40]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000d1c:	2201      	movs	r2, #1
 8000d1e:	705a      	strb	r2, [r3, #1]
			HAL_GPIO_WritePin(GPIOB,SEL0_Pin,Current_Sense_SEL[0]);
 8000d20:	4b08      	ldr	r3, [pc, #32]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000d22:	781b      	ldrb	r3, [r3, #0]
 8000d24:	461a      	mov	r2, r3
 8000d26:	2140      	movs	r1, #64	@ 0x40
 8000d28:	4807      	ldr	r0, [pc, #28]	@ (8000d48 <Current_Sense_read+0x2b0>)
 8000d2a:	f004 f839 	bl	8004da0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB,SEL1_Pin,Current_Sense_SEL[1]);
 8000d2e:	4b05      	ldr	r3, [pc, #20]	@ (8000d44 <Current_Sense_read+0x2ac>)
 8000d30:	785b      	ldrb	r3, [r3, #1]
 8000d32:	461a      	mov	r2, r3
 8000d34:	2120      	movs	r1, #32
 8000d36:	4804      	ldr	r0, [pc, #16]	@ (8000d48 <Current_Sense_read+0x2b0>)
 8000d38:	f004 f832 	bl	8004da0 <HAL_GPIO_WritePin>
			for(int i = 0; i < I_AVERAGE; i++){
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	60fb      	str	r3, [r7, #12]
 8000d40:	e05b      	b.n	8000dfa <Current_Sense_read+0x362>
 8000d42:	bf00      	nop
 8000d44:	20000630 	.word	0x20000630
 8000d48:	48000400 	.word	0x48000400
 8000d4c:	20000038 	.word	0x20000038
 8000d50:	200000a4 	.word	0x200000a4
 8000d54:	20000388 	.word	0x20000388
 8000d58:	20000488 	.word	0x20000488
 8000d5c:	200003c8 	.word	0x200003c8
 8000d60:	200004c8 	.word	0x200004c8
 8000d64:	20000408 	.word	0x20000408
 8000d68:	20000508 	.word	0x20000508
				if(HAL_ADC_Start_IT(&hadc1)!=HAL_OK){Error_Handler();}
 8000d6c:	4866      	ldr	r0, [pc, #408]	@ (8000f08 <Current_Sense_read+0x470>)
 8000d6e:	f001 ff8b 	bl	8002c88 <HAL_ADC_Start_IT>
 8000d72:	4603      	mov	r3, r0
 8000d74:	2b00      	cmp	r3, #0
 8000d76:	d001      	beq.n	8000d7c <Current_Sense_read+0x2e4>
 8000d78:	f000 fe4a 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_Start_IT(&hadc2)!=HAL_OK){Error_Handler();}
 8000d7c:	4863      	ldr	r0, [pc, #396]	@ (8000f0c <Current_Sense_read+0x474>)
 8000d7e:	f001 ff83 	bl	8002c88 <HAL_ADC_Start_IT>
 8000d82:	4603      	mov	r3, r0
 8000d84:	2b00      	cmp	r3, #0
 8000d86:	d001      	beq.n	8000d8c <Current_Sense_read+0x2f4>
 8000d88:	f000 fe42 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();}
 8000d8c:	2164      	movs	r1, #100	@ 0x64
 8000d8e:	485e      	ldr	r0, [pc, #376]	@ (8000f08 <Current_Sense_read+0x470>)
 8000d90:	f001 fea2 	bl	8002ad8 <HAL_ADC_PollForConversion>
 8000d94:	4603      	mov	r3, r0
 8000d96:	2b00      	cmp	r3, #0
 8000d98:	d001      	beq.n	8000d9e <Current_Sense_read+0x306>
 8000d9a:	f000 fe39 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc2,100)!=HAL_OK){Error_Handler();}
 8000d9e:	2164      	movs	r1, #100	@ 0x64
 8000da0:	485a      	ldr	r0, [pc, #360]	@ (8000f0c <Current_Sense_read+0x474>)
 8000da2:	f001 fe99 	bl	8002ad8 <HAL_ADC_PollForConversion>
 8000da6:	4603      	mov	r3, r0
 8000da8:	2b00      	cmp	r3, #0
 8000daa:	d001      	beq.n	8000db0 <Current_Sense_read+0x318>
 8000dac:	f000 fe30 	bl	8001a10 <Error_Handler>
				IN4_1_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc1);
 8000db0:	4855      	ldr	r0, [pc, #340]	@ (8000f08 <Current_Sense_read+0x470>)
 8000db2:	f002 f8d4 	bl	8002f5e <HAL_ADC_GetValue>
 8000db6:	4603      	mov	r3, r0
 8000db8:	b299      	uxth	r1, r3
 8000dba:	4a55      	ldr	r2, [pc, #340]	@ (8000f10 <Current_Sense_read+0x478>)
 8000dbc:	68fb      	ldr	r3, [r7, #12]
 8000dbe:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				IN4_2_Current_Sense[i] = (uint16_t)HAL_ADC_GetValue(&hadc2);
 8000dc2:	4852      	ldr	r0, [pc, #328]	@ (8000f0c <Current_Sense_read+0x474>)
 8000dc4:	f002 f8cb 	bl	8002f5e <HAL_ADC_GetValue>
 8000dc8:	4603      	mov	r3, r0
 8000dca:	b299      	uxth	r1, r3
 8000dcc:	4a51      	ldr	r2, [pc, #324]	@ (8000f14 <Current_Sense_read+0x47c>)
 8000dce:	68fb      	ldr	r3, [r7, #12]
 8000dd0:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop_IT(&hadc1)!=HAL_OK){Error_Handler();}
 8000dd4:	484c      	ldr	r0, [pc, #304]	@ (8000f08 <Current_Sense_read+0x470>)
 8000dd6:	f002 f887 	bl	8002ee8 <HAL_ADC_Stop_IT>
 8000dda:	4603      	mov	r3, r0
 8000ddc:	2b00      	cmp	r3, #0
 8000dde:	d001      	beq.n	8000de4 <Current_Sense_read+0x34c>
 8000de0:	f000 fe16 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_Stop_IT(&hadc2)!=HAL_OK){Error_Handler();}
 8000de4:	4849      	ldr	r0, [pc, #292]	@ (8000f0c <Current_Sense_read+0x474>)
 8000de6:	f002 f87f 	bl	8002ee8 <HAL_ADC_Stop_IT>
 8000dea:	4603      	mov	r3, r0
 8000dec:	2b00      	cmp	r3, #0
 8000dee:	d001      	beq.n	8000df4 <Current_Sense_read+0x35c>
 8000df0:	f000 fe0e 	bl	8001a10 <Error_Handler>
			for(int i = 0; i < I_AVERAGE; i++){
 8000df4:	68fb      	ldr	r3, [r7, #12]
 8000df6:	3301      	adds	r3, #1
 8000df8:	60fb      	str	r3, [r7, #12]
 8000dfa:	68fb      	ldr	r3, [r7, #12]
 8000dfc:	2b1f      	cmp	r3, #31
 8000dfe:	ddb5      	ble.n	8000d6c <Current_Sense_read+0x2d4>
			}
			break;
 8000e00:	e074      	b.n	8000eec <Current_Sense_read+0x454>
		case 4:
			//analog_read();
			for(int i = 0; i < I_AVERAGE/2; i++){
 8000e02:	2300      	movs	r3, #0
 8000e04:	60bb      	str	r3, [r7, #8]
 8000e06:	e024      	b.n	8000e52 <Current_Sense_read+0x3ba>
				if(HAL_ADC_Start(&hadc1)!=HAL_OK){Error_Handler();}
 8000e08:	483f      	ldr	r0, [pc, #252]	@ (8000f08 <Current_Sense_read+0x470>)
 8000e0a:	f001 fd75 	bl	80028f8 <HAL_ADC_Start>
 8000e0e:	4603      	mov	r3, r0
 8000e10:	2b00      	cmp	r3, #0
 8000e12:	d001      	beq.n	8000e18 <Current_Sense_read+0x380>
 8000e14:	f000 fdfc 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();} //have to repeat this in all loops, so that the rank 2 ADC gets emptied as well
 8000e18:	2164      	movs	r1, #100	@ 0x64
 8000e1a:	483b      	ldr	r0, [pc, #236]	@ (8000f08 <Current_Sense_read+0x470>)
 8000e1c:	f001 fe5c 	bl	8002ad8 <HAL_ADC_PollForConversion>
 8000e20:	4603      	mov	r3, r0
 8000e22:	2b00      	cmp	r3, #0
 8000e24:	d001      	beq.n	8000e2a <Current_Sense_read+0x392>
 8000e26:	f000 fdf3 	bl	8001a10 <Error_Handler>
				Analog_Current_Sense_1[i] = (uint16_t)HAL_ADC_GetValue(&hadc1); //have to repeat this in all loops, so that the rank 2 ADC gets emptied as well
 8000e2a:	4837      	ldr	r0, [pc, #220]	@ (8000f08 <Current_Sense_read+0x470>)
 8000e2c:	f002 f897 	bl	8002f5e <HAL_ADC_GetValue>
 8000e30:	4603      	mov	r3, r0
 8000e32:	b299      	uxth	r1, r3
 8000e34:	4a38      	ldr	r2, [pc, #224]	@ (8000f18 <Current_Sense_read+0x480>)
 8000e36:	68bb      	ldr	r3, [r7, #8]
 8000e38:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop(&hadc1)!=HAL_OK){Error_Handler();}
 8000e3c:	4832      	ldr	r0, [pc, #200]	@ (8000f08 <Current_Sense_read+0x470>)
 8000e3e:	f001 fe17 	bl	8002a70 <HAL_ADC_Stop>
 8000e42:	4603      	mov	r3, r0
 8000e44:	2b00      	cmp	r3, #0
 8000e46:	d001      	beq.n	8000e4c <Current_Sense_read+0x3b4>
 8000e48:	f000 fde2 	bl	8001a10 <Error_Handler>
			for(int i = 0; i < I_AVERAGE/2; i++){
 8000e4c:	68bb      	ldr	r3, [r7, #8]
 8000e4e:	3301      	adds	r3, #1
 8000e50:	60bb      	str	r3, [r7, #8]
 8000e52:	68bb      	ldr	r3, [r7, #8]
 8000e54:	2b0f      	cmp	r3, #15
 8000e56:	ddd7      	ble.n	8000e08 <Current_Sense_read+0x370>
			}
			//analog_read();
			for(int i = 0; i < I_AVERAGE/2; i++){
 8000e58:	2300      	movs	r3, #0
 8000e5a:	607b      	str	r3, [r7, #4]
 8000e5c:	e042      	b.n	8000ee4 <Current_Sense_read+0x44c>
				if(HAL_ADC_Start(&hadc1)!=HAL_OK){Error_Handler();}
 8000e5e:	482a      	ldr	r0, [pc, #168]	@ (8000f08 <Current_Sense_read+0x470>)
 8000e60:	f001 fd4a 	bl	80028f8 <HAL_ADC_Start>
 8000e64:	4603      	mov	r3, r0
 8000e66:	2b00      	cmp	r3, #0
 8000e68:	d001      	beq.n	8000e6e <Current_Sense_read+0x3d6>
 8000e6a:	f000 fdd1 	bl	8001a10 <Error_Handler>
				if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();} //have to repeat this in all loops, so that the rank 2 ADC gets emptied as well
 8000e6e:	2164      	movs	r1, #100	@ 0x64
 8000e70:	4825      	ldr	r0, [pc, #148]	@ (8000f08 <Current_Sense_read+0x470>)
 8000e72:	f001 fe31 	bl	8002ad8 <HAL_ADC_PollForConversion>
 8000e76:	4603      	mov	r3, r0
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	d001      	beq.n	8000e80 <Current_Sense_read+0x3e8>
 8000e7c:	f000 fdc8 	bl	8001a10 <Error_Handler>
				Analog_Current_Sense_2[i] = (uint16_t)HAL_ADC_GetValue(&hadc1); //have to repeat this in all loops, so that the rank 2 ADC gets emptied as well
 8000e80:	4821      	ldr	r0, [pc, #132]	@ (8000f08 <Current_Sense_read+0x470>)
 8000e82:	f002 f86c 	bl	8002f5e <HAL_ADC_GetValue>
 8000e86:	4603      	mov	r3, r0
 8000e88:	b299      	uxth	r1, r3
 8000e8a:	4a24      	ldr	r2, [pc, #144]	@ (8000f1c <Current_Sense_read+0x484>)
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				if(HAL_ADC_Stop(&hadc1)!=HAL_OK){Error_Handler();}
 8000e92:	481d      	ldr	r0, [pc, #116]	@ (8000f08 <Current_Sense_read+0x470>)
 8000e94:	f001 fdec 	bl	8002a70 <HAL_ADC_Stop>
 8000e98:	4603      	mov	r3, r0
 8000e9a:	2b00      	cmp	r3, #0
 8000e9c:	d001      	beq.n	8000ea2 <Current_Sense_read+0x40a>
 8000e9e:	f000 fdb7 	bl	8001a10 <Error_Handler>
				if(Analog_Current_Sense_1[i]>Analog_Current_Sense_2[i]){
 8000ea2:	4a1d      	ldr	r2, [pc, #116]	@ (8000f18 <Current_Sense_read+0x480>)
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000eaa:	491c      	ldr	r1, [pc, #112]	@ (8000f1c <Current_Sense_read+0x484>)
 8000eac:	687b      	ldr	r3, [r7, #4]
 8000eae:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000eb2:	429a      	cmp	r2, r3
 8000eb4:	d90e      	bls.n	8000ed4 <Current_Sense_read+0x43c>
					Analog_Current_Sense[i] = Analog_Current_Sense_1[i] - Analog_Current_Sense_2[i];
 8000eb6:	4a18      	ldr	r2, [pc, #96]	@ (8000f18 <Current_Sense_read+0x480>)
 8000eb8:	687b      	ldr	r3, [r7, #4]
 8000eba:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000ebe:	4917      	ldr	r1, [pc, #92]	@ (8000f1c <Current_Sense_read+0x484>)
 8000ec0:	687b      	ldr	r3, [r7, #4]
 8000ec2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000ec6:	1ad3      	subs	r3, r2, r3
 8000ec8:	b299      	uxth	r1, r3
 8000eca:	4a15      	ldr	r2, [pc, #84]	@ (8000f20 <Current_Sense_read+0x488>)
 8000ecc:	687b      	ldr	r3, [r7, #4]
 8000ece:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000ed2:	e004      	b.n	8000ede <Current_Sense_read+0x446>
				}else{
					Analog_Current_Sense[i] = 0;
 8000ed4:	4a12      	ldr	r2, [pc, #72]	@ (8000f20 <Current_Sense_read+0x488>)
 8000ed6:	687b      	ldr	r3, [r7, #4]
 8000ed8:	2100      	movs	r1, #0
 8000eda:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int i = 0; i < I_AVERAGE/2; i++){
 8000ede:	687b      	ldr	r3, [r7, #4]
 8000ee0:	3301      	adds	r3, #1
 8000ee2:	607b      	str	r3, [r7, #4]
 8000ee4:	687b      	ldr	r3, [r7, #4]
 8000ee6:	2b0f      	cmp	r3, #15
 8000ee8:	ddb9      	ble.n	8000e5e <Current_Sense_read+0x3c6>
				}
			}
			break;
 8000eea:	bf00      	nop
	for(int x = 0; x < 5; x++){
 8000eec:	69fb      	ldr	r3, [r7, #28]
 8000eee:	3301      	adds	r3, #1
 8000ef0:	61fb      	str	r3, [r7, #28]
 8000ef2:	69fb      	ldr	r3, [r7, #28]
 8000ef4:	2b04      	cmp	r3, #4
 8000ef6:	f77f add5 	ble.w	8000aa4 <Current_Sense_read+0xc>
		}else{
			print_out(1,"S1: ",data_output_switch);
		}*/
//------------------------------------------------------
	}
	Current_Sense_process();
 8000efa:	f7ff fc53 	bl	80007a4 <Current_Sense_process>
}
 8000efe:	bf00      	nop
 8000f00:	3720      	adds	r7, #32
 8000f02:	46bd      	mov	sp, r7
 8000f04:	bd80      	pop	{r7, pc}
 8000f06:	bf00      	nop
 8000f08:	20000038 	.word	0x20000038
 8000f0c:	200000a4 	.word	0x200000a4
 8000f10:	20000448 	.word	0x20000448
 8000f14:	20000548 	.word	0x20000548
 8000f18:	20000588 	.word	0x20000588
 8000f1c:	200005a8 	.word	0x200005a8
 8000f20:	200005c8 	.word	0x200005c8

08000f24 <check_bit>:


uint8_t check_bit(uint8_t byte, uint8_t bitn){
 8000f24:	b480      	push	{r7}
 8000f26:	b085      	sub	sp, #20
 8000f28:	af00      	add	r7, sp, #0
 8000f2a:	4603      	mov	r3, r0
 8000f2c:	460a      	mov	r2, r1
 8000f2e:	71fb      	strb	r3, [r7, #7]
 8000f30:	4613      	mov	r3, r2
 8000f32:	71bb      	strb	r3, [r7, #6]
	uint8_t buffer = 1<<bitn;
 8000f34:	79bb      	ldrb	r3, [r7, #6]
 8000f36:	2201      	movs	r2, #1
 8000f38:	fa02 f303 	lsl.w	r3, r2, r3
 8000f3c:	73fb      	strb	r3, [r7, #15]
	if (byte & buffer){
 8000f3e:	79fa      	ldrb	r2, [r7, #7]
 8000f40:	7bfb      	ldrb	r3, [r7, #15]
 8000f42:	4013      	ands	r3, r2
 8000f44:	b2db      	uxtb	r3, r3
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d001      	beq.n	8000f4e <check_bit+0x2a>
		return 1;
 8000f4a:	2301      	movs	r3, #1
 8000f4c:	e000      	b.n	8000f50 <check_bit+0x2c>
	}else{
		return 0;
 8000f4e:	2300      	movs	r3, #0
	}
}
 8000f50:	4618      	mov	r0, r3
 8000f52:	3714      	adds	r7, #20
 8000f54:	46bd      	mov	sp, r7
 8000f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f5a:	4770      	bx	lr

08000f5c <set_bit>:

uint8_t set_bit(uint8_t byte, uint8_t pos, uint8_t new_bit){
 8000f5c:	b480      	push	{r7}
 8000f5e:	b085      	sub	sp, #20
 8000f60:	af00      	add	r7, sp, #0
 8000f62:	4603      	mov	r3, r0
 8000f64:	71fb      	strb	r3, [r7, #7]
 8000f66:	460b      	mov	r3, r1
 8000f68:	71bb      	strb	r3, [r7, #6]
 8000f6a:	4613      	mov	r3, r2
 8000f6c:	717b      	strb	r3, [r7, #5]
	uint8_t mask = 1 << pos;
 8000f6e:	79bb      	ldrb	r3, [r7, #6]
 8000f70:	2201      	movs	r2, #1
 8000f72:	fa02 f303 	lsl.w	r3, r2, r3
 8000f76:	73fb      	strb	r3, [r7, #15]
	if(new_bit == 1){
 8000f78:	797b      	ldrb	r3, [r7, #5]
 8000f7a:	2b01      	cmp	r3, #1
 8000f7c:	d104      	bne.n	8000f88 <set_bit+0x2c>
		byte |= mask;
 8000f7e:	79fa      	ldrb	r2, [r7, #7]
 8000f80:	7bfb      	ldrb	r3, [r7, #15]
 8000f82:	4313      	orrs	r3, r2
 8000f84:	71fb      	strb	r3, [r7, #7]
 8000f86:	e008      	b.n	8000f9a <set_bit+0x3e>
	}else{
		byte &= ~mask;
 8000f88:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000f8c:	43db      	mvns	r3, r3
 8000f8e:	b25a      	sxtb	r2, r3
 8000f90:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f94:	4013      	ands	r3, r2
 8000f96:	b25b      	sxtb	r3, r3
 8000f98:	71fb      	strb	r3, [r7, #7]
	}
	return byte;
 8000f9a:	79fb      	ldrb	r3, [r7, #7]
}
 8000f9c:	4618      	mov	r0, r3
 8000f9e:	3714      	adds	r7, #20
 8000fa0:	46bd      	mov	sp, r7
 8000fa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fa6:	4770      	bx	lr

08000fa8 <Current_Sense_Raw_to_mA>:

uint16_t Current_Sense_Raw_to_mA(uint16_t raw){
 8000fa8:	b480      	push	{r7}
 8000faa:	b085      	sub	sp, #20
 8000fac:	af00      	add	r7, sp, #0
 8000fae:	4603      	mov	r3, r0
 8000fb0:	80fb      	strh	r3, [r7, #6]
	//4095 is the max, depending on resistors we will find the current values		3.3 V == 4,95 A
	uint32_t max_mA = 4950;
 8000fb2:	f241 3356 	movw	r3, #4950	@ 0x1356
 8000fb6:	60fb      	str	r3, [r7, #12]
	uint16_t current = 0;
 8000fb8:	2300      	movs	r3, #0
 8000fba:	817b      	strh	r3, [r7, #10]

	//current = raw*max_mA / 4095;
	current = raw*3300 / 4095;
 8000fbc:	88fb      	ldrh	r3, [r7, #6]
 8000fbe:	f640 42e4 	movw	r2, #3300	@ 0xce4
 8000fc2:	fb02 f303 	mul.w	r3, r2, r3
 8000fc6:	4a07      	ldr	r2, [pc, #28]	@ (8000fe4 <Current_Sense_Raw_to_mA+0x3c>)
 8000fc8:	fb82 1203 	smull	r1, r2, r2, r3
 8000fcc:	441a      	add	r2, r3
 8000fce:	12d2      	asrs	r2, r2, #11
 8000fd0:	17db      	asrs	r3, r3, #31
 8000fd2:	1ad3      	subs	r3, r2, r3
 8000fd4:	817b      	strh	r3, [r7, #10]

	return current;
 8000fd6:	897b      	ldrh	r3, [r7, #10]
}
 8000fd8:	4618      	mov	r0, r3
 8000fda:	3714      	adds	r7, #20
 8000fdc:	46bd      	mov	sp, r7
 8000fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe2:	4770      	bx	lr
 8000fe4:	80080081 	.word	0x80080081

08000fe8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000fe8:	b580      	push	{r7, lr}
 8000fea:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000fec:	f001 f815 	bl	800201a <HAL_Init>

  /* USER CODE BEGIN Init */
  Config_Setup();
 8000ff0:	f7ff f95c 	bl	80002ac <Config_Setup>
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ff4:	f000 f87c 	bl	80010f0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000ff8:	f000 fca8 	bl	800194c <MX_GPIO_Init>
  MX_ADC1_Init();
 8000ffc:	f000 f8c2 	bl	8001184 <MX_ADC1_Init>
  MX_FDCAN1_Init();
 8001000:	f000 f9c2 	bl	8001388 <MX_FDCAN1_Init>
  MX_TIM1_Init();
 8001004:	f000 fa28 	bl	8001458 <MX_TIM1_Init>
  MX_TIM2_Init();
 8001008:	f000 fad6 	bl	80015b8 <MX_TIM2_Init>
  MX_TIM3_Init();
 800100c:	f000 fb4a 	bl	80016a4 <MX_TIM3_Init>
  MX_TIM4_Init();
 8001010:	f000 fb96 	bl	8001740 <MX_TIM4_Init>
  MX_TIM6_Init();
 8001014:	f000 fc08 	bl	8001828 <MX_TIM6_Init>
  MX_TIM7_Init();
 8001018:	f000 fc3c 	bl	8001894 <MX_TIM7_Init>
  MX_TIM16_Init();
 800101c:	f000 fc70 	bl	8001900 <MX_TIM16_Init>
  MX_ADC2_Init();
 8001020:	f000 f94c 	bl	80012bc <MX_ADC2_Init>
  /* USER CODE BEGIN 2 */
  HAL_GPIO_WritePin(GPIOA,LED2_Pin,0);
 8001024:	2200      	movs	r2, #0
 8001026:	2180      	movs	r1, #128	@ 0x80
 8001028:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800102c:	f003 feb8 	bl	8004da0 <HAL_GPIO_WritePin>

  HAL_TIM_PWM_Init(&htim1);
 8001030:	4827      	ldr	r0, [pc, #156]	@ (80010d0 <main+0xe8>)
 8001032:	f004 ff29 	bl	8005e88 <HAL_TIM_PWM_Init>
  HAL_TIM_PWM_Init(&htim2);
 8001036:	4827      	ldr	r0, [pc, #156]	@ (80010d4 <main+0xec>)
 8001038:	f004 ff26 	bl	8005e88 <HAL_TIM_PWM_Init>
  HAL_TIM_Base_Start_IT(&htim3);
 800103c:	4826      	ldr	r0, [pc, #152]	@ (80010d8 <main+0xf0>)
 800103e:	f004 feb9 	bl	8005db4 <HAL_TIM_Base_Start_IT>

  HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 8001042:	2100      	movs	r1, #0
 8001044:	4822      	ldr	r0, [pc, #136]	@ (80010d0 <main+0xe8>)
 8001046:	f004 ff81 	bl	8005f4c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 800104a:	2100      	movs	r1, #0
 800104c:	4821      	ldr	r0, [pc, #132]	@ (80010d4 <main+0xec>)
 800104e:	f004 ff7d 	bl	8005f4c <HAL_TIM_PWM_Start>

  set_pwm_duty_cycle(&htim1);
 8001052:	481f      	ldr	r0, [pc, #124]	@ (80010d0 <main+0xe8>)
 8001054:	f7ff f8e0 	bl	8000218 <set_pwm_duty_cycle>
  set_pwm_duty_cycle(&htim2);
 8001058:	481e      	ldr	r0, [pc, #120]	@ (80010d4 <main+0xec>)
 800105a:	f7ff f8dd 	bl	8000218 <set_pwm_duty_cycle>

  if(HAL_FDCAN_Start(&hfdcan1)!= HAL_OK){ Error_Handler(); }else{HAL_GPIO_WritePin(GPIOB,LED1_Pin,1); }
 800105e:	481f      	ldr	r0, [pc, #124]	@ (80010dc <main+0xf4>)
 8001060:	f003 f850 	bl	8004104 <HAL_FDCAN_Start>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d002      	beq.n	8001070 <main+0x88>
 800106a:	f000 fcd1 	bl	8001a10 <Error_Handler>
 800106e:	e004      	b.n	800107a <main+0x92>
 8001070:	2201      	movs	r2, #1
 8001072:	2101      	movs	r1, #1
 8001074:	481a      	ldr	r0, [pc, #104]	@ (80010e0 <main+0xf8>)
 8001076:	f003 fe93 	bl	8004da0 <HAL_GPIO_WritePin>
  if(HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE,0) != HAL_OK) { Error_Handler(); }
 800107a:	2200      	movs	r2, #0
 800107c:	2101      	movs	r1, #1
 800107e:	4817      	ldr	r0, [pc, #92]	@ (80010dc <main+0xf4>)
 8001080:	f003 f9c6 	bl	8004410 <HAL_FDCAN_ActivateNotification>
 8001084:	4603      	mov	r3, r0
 8001086:	2b00      	cmp	r3, #0
 8001088:	d001      	beq.n	800108e <main+0xa6>
 800108a:	f000 fcc1 	bl	8001a10 <Error_Handler>
  HAL_GPIO_WritePin(GPIOA,LED2_Pin,1);
 800108e:	2201      	movs	r2, #1
 8001090:	2180      	movs	r1, #128	@ 0x80
 8001092:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001096:	f003 fe83 	bl	8004da0 <HAL_GPIO_WritePin>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
		 __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1,PWM_speed[0]);
 800109a:	4b12      	ldr	r3, [pc, #72]	@ (80010e4 <main+0xfc>)
 800109c:	881a      	ldrh	r2, [r3, #0]
 800109e:	4b0c      	ldr	r3, [pc, #48]	@ (80010d0 <main+0xe8>)
 80010a0:	681b      	ldr	r3, [r3, #0]
 80010a2:	635a      	str	r2, [r3, #52]	@ 0x34

		 __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1,PWM_speed[1]);
 80010a4:	4b0f      	ldr	r3, [pc, #60]	@ (80010e4 <main+0xfc>)
 80010a6:	885a      	ldrh	r2, [r3, #2]
 80010a8:	4b0a      	ldr	r3, [pc, #40]	@ (80010d4 <main+0xec>)
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	635a      	str	r2, [r3, #52]	@ 0x34
	  if(millis % 100 == 0){
 80010ae:	4b0e      	ldr	r3, [pc, #56]	@ (80010e8 <main+0x100>)
 80010b0:	881b      	ldrh	r3, [r3, #0]
 80010b2:	4a0e      	ldr	r2, [pc, #56]	@ (80010ec <main+0x104>)
 80010b4:	fba2 1203 	umull	r1, r2, r2, r3
 80010b8:	0952      	lsrs	r2, r2, #5
 80010ba:	2164      	movs	r1, #100	@ 0x64
 80010bc:	fb01 f202 	mul.w	r2, r1, r2
 80010c0:	1a9b      	subs	r3, r3, r2
 80010c2:	b29b      	uxth	r3, r3
 80010c4:	2b00      	cmp	r3, #0
 80010c6:	d1e8      	bne.n	800109a <main+0xb2>

		  Current_Sense_read();
 80010c8:	f7ff fce6 	bl	8000a98 <Current_Sense_read>
		 __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1,PWM_speed[0]);
 80010cc:	e7e5      	b.n	800109a <main+0xb2>
 80010ce:	bf00      	nop
 80010d0:	20000174 	.word	0x20000174
 80010d4:	200001c0 	.word	0x200001c0
 80010d8:	2000020c 	.word	0x2000020c
 80010dc:	20000110 	.word	0x20000110
 80010e0:	48000400 	.word	0x48000400
 80010e4:	20000644 	.word	0x20000644
 80010e8:	2000062c 	.word	0x2000062c
 80010ec:	51eb851f 	.word	0x51eb851f

080010f0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80010f0:	b580      	push	{r7, lr}
 80010f2:	b094      	sub	sp, #80	@ 0x50
 80010f4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80010f6:	f107 0318 	add.w	r3, r7, #24
 80010fa:	2238      	movs	r2, #56	@ 0x38
 80010fc:	2100      	movs	r1, #0
 80010fe:	4618      	mov	r0, r3
 8001100:	f006 f95c 	bl	80073bc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001104:	1d3b      	adds	r3, r7, #4
 8001106:	2200      	movs	r2, #0
 8001108:	601a      	str	r2, [r3, #0]
 800110a:	605a      	str	r2, [r3, #4]
 800110c:	609a      	str	r2, [r3, #8]
 800110e:	60da      	str	r2, [r3, #12]
 8001110:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001112:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8001116:	f003 fe5b 	bl	8004dd0 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800111a:	2301      	movs	r3, #1
 800111c:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800111e:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001122:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001124:	2302      	movs	r3, #2
 8001126:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001128:	2303      	movs	r3, #3
 800112a:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 800112c:	2301      	movs	r3, #1
 800112e:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 12;
 8001130:	230c      	movs	r3, #12
 8001132:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001134:	2302      	movs	r3, #2
 8001136:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV6;
 8001138:	2306      	movs	r3, #6
 800113a:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 800113c:	2302      	movs	r3, #2
 800113e:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001140:	f107 0318 	add.w	r3, r7, #24
 8001144:	4618      	mov	r0, r3
 8001146:	f003 fef7 	bl	8004f38 <HAL_RCC_OscConfig>
 800114a:	4603      	mov	r3, r0
 800114c:	2b00      	cmp	r3, #0
 800114e:	d001      	beq.n	8001154 <SystemClock_Config+0x64>
  {
    Error_Handler();
 8001150:	f000 fc5e 	bl	8001a10 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001154:	230f      	movs	r3, #15
 8001156:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001158:	2303      	movs	r3, #3
 800115a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800115c:	2300      	movs	r3, #0
 800115e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001160:	2300      	movs	r3, #0
 8001162:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001164:	2300      	movs	r3, #0
 8001166:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001168:	1d3b      	adds	r3, r7, #4
 800116a:	2101      	movs	r1, #1
 800116c:	4618      	mov	r0, r3
 800116e:	f004 f9f5 	bl	800555c <HAL_RCC_ClockConfig>
 8001172:	4603      	mov	r3, r0
 8001174:	2b00      	cmp	r3, #0
 8001176:	d001      	beq.n	800117c <SystemClock_Config+0x8c>
  {
    Error_Handler();
 8001178:	f000 fc4a 	bl	8001a10 <Error_Handler>
  }
}
 800117c:	bf00      	nop
 800117e:	3750      	adds	r7, #80	@ 0x50
 8001180:	46bd      	mov	sp, r7
 8001182:	bd80      	pop	{r7, pc}

08001184 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001184:	b580      	push	{r7, lr}
 8001186:	b08c      	sub	sp, #48	@ 0x30
 8001188:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 800118a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800118e:	2200      	movs	r2, #0
 8001190:	601a      	str	r2, [r3, #0]
 8001192:	605a      	str	r2, [r3, #4]
 8001194:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 8001196:	1d3b      	adds	r3, r7, #4
 8001198:	2220      	movs	r2, #32
 800119a:	2100      	movs	r1, #0
 800119c:	4618      	mov	r0, r3
 800119e:	f006 f90d 	bl	80073bc <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 80011a2:	4b42      	ldr	r3, [pc, #264]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011a4:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 80011a8:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80011aa:	4b40      	ldr	r3, [pc, #256]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011ac:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 80011b0:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80011b2:	4b3e      	ldr	r3, [pc, #248]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011b4:	2200      	movs	r2, #0
 80011b6:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80011b8:	4b3c      	ldr	r3, [pc, #240]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011ba:	2200      	movs	r2, #0
 80011bc:	60da      	str	r2, [r3, #12]
  hadc1.Init.GainCompensation = 0;
 80011be:	4b3b      	ldr	r3, [pc, #236]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011c0:	2200      	movs	r2, #0
 80011c2:	611a      	str	r2, [r3, #16]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 80011c4:	4b39      	ldr	r3, [pc, #228]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011c6:	2201      	movs	r2, #1
 80011c8:	615a      	str	r2, [r3, #20]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80011ca:	4b38      	ldr	r3, [pc, #224]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011cc:	2204      	movs	r2, #4
 80011ce:	619a      	str	r2, [r3, #24]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 80011d0:	4b36      	ldr	r3, [pc, #216]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011d2:	2200      	movs	r2, #0
 80011d4:	771a      	strb	r2, [r3, #28]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80011d6:	4b35      	ldr	r3, [pc, #212]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011d8:	2200      	movs	r2, #0
 80011da:	775a      	strb	r2, [r3, #29]
  hadc1.Init.NbrOfConversion = 3;
 80011dc:	4b33      	ldr	r3, [pc, #204]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011de:	2203      	movs	r2, #3
 80011e0:	621a      	str	r2, [r3, #32]
  hadc1.Init.DiscontinuousConvMode = ENABLE;
 80011e2:	4b32      	ldr	r3, [pc, #200]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011e4:	2201      	movs	r2, #1
 80011e6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc1.Init.NbrOfDiscConversion = 1;
 80011ea:	4b30      	ldr	r3, [pc, #192]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011ec:	2201      	movs	r2, #1
 80011ee:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80011f0:	4b2e      	ldr	r3, [pc, #184]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011f2:	2200      	movs	r2, #0
 80011f4:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80011f6:	4b2d      	ldr	r3, [pc, #180]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011f8:	2200      	movs	r2, #0
 80011fa:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80011fc:	4b2b      	ldr	r3, [pc, #172]	@ (80012ac <MX_ADC1_Init+0x128>)
 80011fe:	2200      	movs	r2, #0
 8001200:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8001204:	4b29      	ldr	r3, [pc, #164]	@ (80012ac <MX_ADC1_Init+0x128>)
 8001206:	2200      	movs	r2, #0
 8001208:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc1.Init.OversamplingMode = DISABLE;
 800120a:	4b28      	ldr	r3, [pc, #160]	@ (80012ac <MX_ADC1_Init+0x128>)
 800120c:	2200      	movs	r2, #0
 800120e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001212:	4826      	ldr	r0, [pc, #152]	@ (80012ac <MX_ADC1_Init+0x128>)
 8001214:	f001 f9ec 	bl	80025f0 <HAL_ADC_Init>
 8001218:	4603      	mov	r3, r0
 800121a:	2b00      	cmp	r3, #0
 800121c:	d001      	beq.n	8001222 <MX_ADC1_Init+0x9e>
  {
    Error_Handler();
 800121e:	f000 fbf7 	bl	8001a10 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8001222:	2300      	movs	r3, #0
 8001224:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8001226:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800122a:	4619      	mov	r1, r3
 800122c:	481f      	ldr	r0, [pc, #124]	@ (80012ac <MX_ADC1_Init+0x128>)
 800122e:	f002 fc5b 	bl	8003ae8 <HAL_ADCEx_MultiModeConfigChannel>
 8001232:	4603      	mov	r3, r0
 8001234:	2b00      	cmp	r3, #0
 8001236:	d001      	beq.n	800123c <MX_ADC1_Init+0xb8>
  {
    Error_Handler();
 8001238:	f000 fbea 	bl	8001a10 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 800123c:	4b1c      	ldr	r3, [pc, #112]	@ (80012b0 <MX_ADC1_Init+0x12c>)
 800123e:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8001240:	2306      	movs	r3, #6
 8001242:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 8001244:	2302      	movs	r3, #2
 8001246:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8001248:	237f      	movs	r3, #127	@ 0x7f
 800124a:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 800124c:	2304      	movs	r3, #4
 800124e:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 8001250:	2300      	movs	r3, #0
 8001252:	61bb      	str	r3, [r7, #24]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001254:	1d3b      	adds	r3, r7, #4
 8001256:	4619      	mov	r1, r3
 8001258:	4814      	ldr	r0, [pc, #80]	@ (80012ac <MX_ADC1_Init+0x128>)
 800125a:	f001 fe8d 	bl	8002f78 <HAL_ADC_ConfigChannel>
 800125e:	4603      	mov	r3, r0
 8001260:	2b00      	cmp	r3, #0
 8001262:	d001      	beq.n	8001268 <MX_ADC1_Init+0xe4>
  {
    Error_Handler();
 8001264:	f000 fbd4 	bl	8001a10 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8001268:	4b12      	ldr	r3, [pc, #72]	@ (80012b4 <MX_ADC1_Init+0x130>)
 800126a:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 800126c:	230c      	movs	r3, #12
 800126e:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001270:	1d3b      	adds	r3, r7, #4
 8001272:	4619      	mov	r1, r3
 8001274:	480d      	ldr	r0, [pc, #52]	@ (80012ac <MX_ADC1_Init+0x128>)
 8001276:	f001 fe7f 	bl	8002f78 <HAL_ADC_ConfigChannel>
 800127a:	4603      	mov	r3, r0
 800127c:	2b00      	cmp	r3, #0
 800127e:	d001      	beq.n	8001284 <MX_ADC1_Init+0x100>
  {
    Error_Handler();
 8001280:	f000 fbc6 	bl	8001a10 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_4;
 8001284:	4b0c      	ldr	r3, [pc, #48]	@ (80012b8 <MX_ADC1_Init+0x134>)
 8001286:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 8001288:	2312      	movs	r3, #18
 800128a:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 800128c:	2300      	movs	r3, #0
 800128e:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001290:	1d3b      	adds	r3, r7, #4
 8001292:	4619      	mov	r1, r3
 8001294:	4805      	ldr	r0, [pc, #20]	@ (80012ac <MX_ADC1_Init+0x128>)
 8001296:	f001 fe6f 	bl	8002f78 <HAL_ADC_ConfigChannel>
 800129a:	4603      	mov	r3, r0
 800129c:	2b00      	cmp	r3, #0
 800129e:	d001      	beq.n	80012a4 <MX_ADC1_Init+0x120>
  {
    Error_Handler();
 80012a0:	f000 fbb6 	bl	8001a10 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */
  //if (HAL_ADCEx_Calibration_Start(&hadc1, ADC_DIFFERENTIAL_ENDED)!= HAL_OK){ Error_Handler(); }
  /* USER CODE END ADC1_Init 2 */

}
 80012a4:	bf00      	nop
 80012a6:	3730      	adds	r7, #48	@ 0x30
 80012a8:	46bd      	mov	sp, r7
 80012aa:	bd80      	pop	{r7, pc}
 80012ac:	20000038 	.word	0x20000038
 80012b0:	04300002 	.word	0x04300002
 80012b4:	0c900008 	.word	0x0c900008
 80012b8:	10c00010 	.word	0x10c00010

080012bc <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 80012bc:	b580      	push	{r7, lr}
 80012be:	b088      	sub	sp, #32
 80012c0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80012c2:	463b      	mov	r3, r7
 80012c4:	2220      	movs	r2, #32
 80012c6:	2100      	movs	r1, #0
 80012c8:	4618      	mov	r0, r3
 80012ca:	f006 f877 	bl	80073bc <memset>

  /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 80012ce:	4b2b      	ldr	r3, [pc, #172]	@ (800137c <MX_ADC2_Init+0xc0>)
 80012d0:	4a2b      	ldr	r2, [pc, #172]	@ (8001380 <MX_ADC2_Init+0xc4>)
 80012d2:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80012d4:	4b29      	ldr	r3, [pc, #164]	@ (800137c <MX_ADC2_Init+0xc0>)
 80012d6:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 80012da:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 80012dc:	4b27      	ldr	r3, [pc, #156]	@ (800137c <MX_ADC2_Init+0xc0>)
 80012de:	2200      	movs	r2, #0
 80012e0:	609a      	str	r2, [r3, #8]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80012e2:	4b26      	ldr	r3, [pc, #152]	@ (800137c <MX_ADC2_Init+0xc0>)
 80012e4:	2200      	movs	r2, #0
 80012e6:	60da      	str	r2, [r3, #12]
  hadc2.Init.GainCompensation = 0;
 80012e8:	4b24      	ldr	r3, [pc, #144]	@ (800137c <MX_ADC2_Init+0xc0>)
 80012ea:	2200      	movs	r2, #0
 80012ec:	611a      	str	r2, [r3, #16]
  hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80012ee:	4b23      	ldr	r3, [pc, #140]	@ (800137c <MX_ADC2_Init+0xc0>)
 80012f0:	2200      	movs	r2, #0
 80012f2:	615a      	str	r2, [r3, #20]
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80012f4:	4b21      	ldr	r3, [pc, #132]	@ (800137c <MX_ADC2_Init+0xc0>)
 80012f6:	2204      	movs	r2, #4
 80012f8:	619a      	str	r2, [r3, #24]
  hadc2.Init.LowPowerAutoWait = DISABLE;
 80012fa:	4b20      	ldr	r3, [pc, #128]	@ (800137c <MX_ADC2_Init+0xc0>)
 80012fc:	2200      	movs	r2, #0
 80012fe:	771a      	strb	r2, [r3, #28]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8001300:	4b1e      	ldr	r3, [pc, #120]	@ (800137c <MX_ADC2_Init+0xc0>)
 8001302:	2200      	movs	r2, #0
 8001304:	775a      	strb	r2, [r3, #29]
  hadc2.Init.NbrOfConversion = 1;
 8001306:	4b1d      	ldr	r3, [pc, #116]	@ (800137c <MX_ADC2_Init+0xc0>)
 8001308:	2201      	movs	r2, #1
 800130a:	621a      	str	r2, [r3, #32]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 800130c:	4b1b      	ldr	r3, [pc, #108]	@ (800137c <MX_ADC2_Init+0xc0>)
 800130e:	2200      	movs	r2, #0
 8001310:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001314:	4b19      	ldr	r3, [pc, #100]	@ (800137c <MX_ADC2_Init+0xc0>)
 8001316:	2200      	movs	r2, #0
 8001318:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800131a:	4b18      	ldr	r3, [pc, #96]	@ (800137c <MX_ADC2_Init+0xc0>)
 800131c:	2200      	movs	r2, #0
 800131e:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8001320:	4b16      	ldr	r3, [pc, #88]	@ (800137c <MX_ADC2_Init+0xc0>)
 8001322:	2200      	movs	r2, #0
 8001324:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8001328:	4b14      	ldr	r3, [pc, #80]	@ (800137c <MX_ADC2_Init+0xc0>)
 800132a:	2200      	movs	r2, #0
 800132c:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc2.Init.OversamplingMode = DISABLE;
 800132e:	4b13      	ldr	r3, [pc, #76]	@ (800137c <MX_ADC2_Init+0xc0>)
 8001330:	2200      	movs	r2, #0
 8001332:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001336:	4811      	ldr	r0, [pc, #68]	@ (800137c <MX_ADC2_Init+0xc0>)
 8001338:	f001 f95a 	bl	80025f0 <HAL_ADC_Init>
 800133c:	4603      	mov	r3, r0
 800133e:	2b00      	cmp	r3, #0
 8001340:	d001      	beq.n	8001346 <MX_ADC2_Init+0x8a>
  {
    Error_Handler();
 8001342:	f000 fb65 	bl	8001a10 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8001346:	4b0f      	ldr	r3, [pc, #60]	@ (8001384 <MX_ADC2_Init+0xc8>)
 8001348:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800134a:	2306      	movs	r3, #6
 800134c:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 800134e:	2302      	movs	r3, #2
 8001350:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8001352:	237f      	movs	r3, #127	@ 0x7f
 8001354:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8001356:	2304      	movs	r3, #4
 8001358:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 800135a:	2300      	movs	r3, #0
 800135c:	617b      	str	r3, [r7, #20]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800135e:	463b      	mov	r3, r7
 8001360:	4619      	mov	r1, r3
 8001362:	4806      	ldr	r0, [pc, #24]	@ (800137c <MX_ADC2_Init+0xc0>)
 8001364:	f001 fe08 	bl	8002f78 <HAL_ADC_ConfigChannel>
 8001368:	4603      	mov	r3, r0
 800136a:	2b00      	cmp	r3, #0
 800136c:	d001      	beq.n	8001372 <MX_ADC2_Init+0xb6>
  {
    Error_Handler();
 800136e:	f000 fb4f 	bl	8001a10 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */
  //if (HAL_ADCEx_Calibration_Start(&hadc2, ADC_DIFFERENTIAL_ENDED)!= HAL_OK){ Error_Handler(); }
  /* USER CODE END ADC2_Init 2 */

}
 8001372:	bf00      	nop
 8001374:	3720      	adds	r7, #32
 8001376:	46bd      	mov	sp, r7
 8001378:	bd80      	pop	{r7, pc}
 800137a:	bf00      	nop
 800137c:	200000a4 	.word	0x200000a4
 8001380:	50000100 	.word	0x50000100
 8001384:	0c900008 	.word	0x0c900008

08001388 <MX_FDCAN1_Init>:
  * @brief FDCAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_FDCAN1_Init(void)
{
 8001388:	b580      	push	{r7, lr}
 800138a:	af00      	add	r7, sp, #0
  /* USER CODE END FDCAN1_Init 0 */

  /* USER CODE BEGIN FDCAN1_Init 1 */

  /* USER CODE END FDCAN1_Init 1 */
  hfdcan1.Instance = FDCAN1;
 800138c:	4b2e      	ldr	r3, [pc, #184]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 800138e:	4a2f      	ldr	r2, [pc, #188]	@ (800144c <MX_FDCAN1_Init+0xc4>)
 8001390:	601a      	str	r2, [r3, #0]
  hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 8001392:	4b2d      	ldr	r3, [pc, #180]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 8001394:	2200      	movs	r2, #0
 8001396:	605a      	str	r2, [r3, #4]
  hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 8001398:	4b2b      	ldr	r3, [pc, #172]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 800139a:	2200      	movs	r2, #0
 800139c:	609a      	str	r2, [r3, #8]
  hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 800139e:	4b2a      	ldr	r3, [pc, #168]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013a0:	2200      	movs	r2, #0
 80013a2:	60da      	str	r2, [r3, #12]
  hfdcan1.Init.AutoRetransmission = DISABLE;
 80013a4:	4b28      	ldr	r3, [pc, #160]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013a6:	2200      	movs	r2, #0
 80013a8:	741a      	strb	r2, [r3, #16]
  hfdcan1.Init.TransmitPause = DISABLE;
 80013aa:	4b27      	ldr	r3, [pc, #156]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013ac:	2200      	movs	r2, #0
 80013ae:	745a      	strb	r2, [r3, #17]
  hfdcan1.Init.ProtocolException = DISABLE;
 80013b0:	4b25      	ldr	r3, [pc, #148]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013b2:	2200      	movs	r2, #0
 80013b4:	749a      	strb	r2, [r3, #18]
  hfdcan1.Init.NominalPrescaler = 1;
 80013b6:	4b24      	ldr	r3, [pc, #144]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013b8:	2201      	movs	r2, #1
 80013ba:	615a      	str	r2, [r3, #20]
  hfdcan1.Init.NominalSyncJumpWidth = 1;
 80013bc:	4b22      	ldr	r3, [pc, #136]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013be:	2201      	movs	r2, #1
 80013c0:	619a      	str	r2, [r3, #24]
  hfdcan1.Init.NominalTimeSeg1 = 13;
 80013c2:	4b21      	ldr	r3, [pc, #132]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013c4:	220d      	movs	r2, #13
 80013c6:	61da      	str	r2, [r3, #28]
  hfdcan1.Init.NominalTimeSeg2 = 2;
 80013c8:	4b1f      	ldr	r3, [pc, #124]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013ca:	2202      	movs	r2, #2
 80013cc:	621a      	str	r2, [r3, #32]
  hfdcan1.Init.DataPrescaler = 1;
 80013ce:	4b1e      	ldr	r3, [pc, #120]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013d0:	2201      	movs	r2, #1
 80013d2:	625a      	str	r2, [r3, #36]	@ 0x24
  hfdcan1.Init.DataSyncJumpWidth = 1;
 80013d4:	4b1c      	ldr	r3, [pc, #112]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013d6:	2201      	movs	r2, #1
 80013d8:	629a      	str	r2, [r3, #40]	@ 0x28
  hfdcan1.Init.DataTimeSeg1 = 1;
 80013da:	4b1b      	ldr	r3, [pc, #108]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013dc:	2201      	movs	r2, #1
 80013de:	62da      	str	r2, [r3, #44]	@ 0x2c
  hfdcan1.Init.DataTimeSeg2 = 1;
 80013e0:	4b19      	ldr	r3, [pc, #100]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013e2:	2201      	movs	r2, #1
 80013e4:	631a      	str	r2, [r3, #48]	@ 0x30
  hfdcan1.Init.StdFiltersNbr = 28;
 80013e6:	4b18      	ldr	r3, [pc, #96]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013e8:	221c      	movs	r2, #28
 80013ea:	635a      	str	r2, [r3, #52]	@ 0x34
  hfdcan1.Init.ExtFiltersNbr = 0;
 80013ec:	4b16      	ldr	r3, [pc, #88]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013ee:	2200      	movs	r2, #0
 80013f0:	639a      	str	r2, [r3, #56]	@ 0x38
  hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 80013f2:	4b15      	ldr	r3, [pc, #84]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013f4:	2200      	movs	r2, #0
 80013f6:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 80013f8:	4813      	ldr	r0, [pc, #76]	@ (8001448 <MX_FDCAN1_Init+0xc0>)
 80013fa:	f002 fd29 	bl	8003e50 <HAL_FDCAN_Init>
 80013fe:	4603      	mov	r3, r0
 8001400:	2b00      	cmp	r3, #0
 8001402:	d001      	beq.n	8001408 <MX_FDCAN1_Init+0x80>
  {
    Error_Handler();
 8001404:	f000 fb04 	bl	8001a10 <Error_Handler>
  }
  /* USER CODE BEGIN FDCAN1_Init 2 */
  TxHeader.Identifier = CAN_ID; // Modify this with your identifier
 8001408:	4b11      	ldr	r3, [pc, #68]	@ (8001450 <MX_FDCAN1_Init+0xc8>)
 800140a:	781b      	ldrb	r3, [r3, #0]
 800140c:	461a      	mov	r2, r3
 800140e:	4b11      	ldr	r3, [pc, #68]	@ (8001454 <MX_FDCAN1_Init+0xcc>)
 8001410:	601a      	str	r2, [r3, #0]
  TxHeader.IdType = FDCAN_STANDARD_ID;
 8001412:	4b10      	ldr	r3, [pc, #64]	@ (8001454 <MX_FDCAN1_Init+0xcc>)
 8001414:	2200      	movs	r2, #0
 8001416:	605a      	str	r2, [r3, #4]
  TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 8001418:	4b0e      	ldr	r3, [pc, #56]	@ (8001454 <MX_FDCAN1_Init+0xcc>)
 800141a:	2200      	movs	r2, #0
 800141c:	609a      	str	r2, [r3, #8]
  TxHeader.DataLength = 5;
 800141e:	4b0d      	ldr	r3, [pc, #52]	@ (8001454 <MX_FDCAN1_Init+0xcc>)
 8001420:	2205      	movs	r2, #5
 8001422:	60da      	str	r2, [r3, #12]
  TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 8001424:	4b0b      	ldr	r3, [pc, #44]	@ (8001454 <MX_FDCAN1_Init+0xcc>)
 8001426:	2200      	movs	r2, #0
 8001428:	611a      	str	r2, [r3, #16]
  TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 800142a:	4b0a      	ldr	r3, [pc, #40]	@ (8001454 <MX_FDCAN1_Init+0xcc>)
 800142c:	2200      	movs	r2, #0
 800142e:	615a      	str	r2, [r3, #20]
  TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
 8001430:	4b08      	ldr	r3, [pc, #32]	@ (8001454 <MX_FDCAN1_Init+0xcc>)
 8001432:	2200      	movs	r2, #0
 8001434:	619a      	str	r2, [r3, #24]
  TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 8001436:	4b07      	ldr	r3, [pc, #28]	@ (8001454 <MX_FDCAN1_Init+0xcc>)
 8001438:	2200      	movs	r2, #0
 800143a:	61da      	str	r2, [r3, #28]
  TxHeader.MessageMarker = 0;
 800143c:	4b05      	ldr	r3, [pc, #20]	@ (8001454 <MX_FDCAN1_Init+0xcc>)
 800143e:	2200      	movs	r2, #0
 8001440:	621a      	str	r2, [r3, #32]
  /* USER CODE END FDCAN1_Init 2 */

}
 8001442:	bf00      	nop
 8001444:	bd80      	pop	{r7, pc}
 8001446:	bf00      	nop
 8001448:	20000110 	.word	0x20000110
 800144c:	40006400 	.word	0x40006400
 8001450:	20000648 	.word	0x20000648
 8001454:	2000064c 	.word	0x2000064c

08001458 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001458:	b580      	push	{r7, lr}
 800145a:	b09c      	sub	sp, #112	@ 0x70
 800145c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800145e:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8001462:	2200      	movs	r2, #0
 8001464:	601a      	str	r2, [r3, #0]
 8001466:	605a      	str	r2, [r3, #4]
 8001468:	609a      	str	r2, [r3, #8]
 800146a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800146c:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001470:	2200      	movs	r2, #0
 8001472:	601a      	str	r2, [r3, #0]
 8001474:	605a      	str	r2, [r3, #4]
 8001476:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001478:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 800147c:	2200      	movs	r2, #0
 800147e:	601a      	str	r2, [r3, #0]
 8001480:	605a      	str	r2, [r3, #4]
 8001482:	609a      	str	r2, [r3, #8]
 8001484:	60da      	str	r2, [r3, #12]
 8001486:	611a      	str	r2, [r3, #16]
 8001488:	615a      	str	r2, [r3, #20]
 800148a:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800148c:	1d3b      	adds	r3, r7, #4
 800148e:	2234      	movs	r2, #52	@ 0x34
 8001490:	2100      	movs	r1, #0
 8001492:	4618      	mov	r0, r3
 8001494:	f005 ff92 	bl	80073bc <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001498:	4b45      	ldr	r3, [pc, #276]	@ (80015b0 <MX_TIM1_Init+0x158>)
 800149a:	4a46      	ldr	r2, [pc, #280]	@ (80015b4 <MX_TIM1_Init+0x15c>)
 800149c:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 15;
 800149e:	4b44      	ldr	r3, [pc, #272]	@ (80015b0 <MX_TIM1_Init+0x158>)
 80014a0:	220f      	movs	r2, #15
 80014a2:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80014a4:	4b42      	ldr	r3, [pc, #264]	@ (80015b0 <MX_TIM1_Init+0x158>)
 80014a6:	2200      	movs	r2, #0
 80014a8:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 39;
 80014aa:	4b41      	ldr	r3, [pc, #260]	@ (80015b0 <MX_TIM1_Init+0x158>)
 80014ac:	2227      	movs	r2, #39	@ 0x27
 80014ae:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80014b0:	4b3f      	ldr	r3, [pc, #252]	@ (80015b0 <MX_TIM1_Init+0x158>)
 80014b2:	2200      	movs	r2, #0
 80014b4:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80014b6:	4b3e      	ldr	r3, [pc, #248]	@ (80015b0 <MX_TIM1_Init+0x158>)
 80014b8:	2200      	movs	r2, #0
 80014ba:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80014bc:	4b3c      	ldr	r3, [pc, #240]	@ (80015b0 <MX_TIM1_Init+0x158>)
 80014be:	2200      	movs	r2, #0
 80014c0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80014c2:	483b      	ldr	r0, [pc, #236]	@ (80015b0 <MX_TIM1_Init+0x158>)
 80014c4:	f004 fc1e 	bl	8005d04 <HAL_TIM_Base_Init>
 80014c8:	4603      	mov	r3, r0
 80014ca:	2b00      	cmp	r3, #0
 80014cc:	d001      	beq.n	80014d2 <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 80014ce:	f000 fa9f 	bl	8001a10 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80014d2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80014d6:	663b      	str	r3, [r7, #96]	@ 0x60
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80014d8:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 80014dc:	4619      	mov	r1, r3
 80014de:	4834      	ldr	r0, [pc, #208]	@ (80015b0 <MX_TIM1_Init+0x158>)
 80014e0:	f005 f898 	bl	8006614 <HAL_TIM_ConfigClockSource>
 80014e4:	4603      	mov	r3, r0
 80014e6:	2b00      	cmp	r3, #0
 80014e8:	d001      	beq.n	80014ee <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 80014ea:	f000 fa91 	bl	8001a10 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80014ee:	4830      	ldr	r0, [pc, #192]	@ (80015b0 <MX_TIM1_Init+0x158>)
 80014f0:	f004 fcca 	bl	8005e88 <HAL_TIM_PWM_Init>
 80014f4:	4603      	mov	r3, r0
 80014f6:	2b00      	cmp	r3, #0
 80014f8:	d001      	beq.n	80014fe <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 80014fa:	f000 fa89 	bl	8001a10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014fe:	2300      	movs	r3, #0
 8001500:	657b      	str	r3, [r7, #84]	@ 0x54
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001502:	2300      	movs	r3, #0
 8001504:	65bb      	str	r3, [r7, #88]	@ 0x58
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001506:	2300      	movs	r3, #0
 8001508:	65fb      	str	r3, [r7, #92]	@ 0x5c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800150a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800150e:	4619      	mov	r1, r3
 8001510:	4827      	ldr	r0, [pc, #156]	@ (80015b0 <MX_TIM1_Init+0x158>)
 8001512:	f005 fdff 	bl	8007114 <HAL_TIMEx_MasterConfigSynchronization>
 8001516:	4603      	mov	r3, r0
 8001518:	2b00      	cmp	r3, #0
 800151a:	d001      	beq.n	8001520 <MX_TIM1_Init+0xc8>
  {
    Error_Handler();
 800151c:	f000 fa78 	bl	8001a10 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001520:	2360      	movs	r3, #96	@ 0x60
 8001522:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.Pulse = 0;
 8001524:	2300      	movs	r3, #0
 8001526:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001528:	2300      	movs	r3, #0
 800152a:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 800152c:	2300      	movs	r3, #0
 800152e:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001530:	2300      	movs	r3, #0
 8001532:	64bb      	str	r3, [r7, #72]	@ 0x48
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001534:	2300      	movs	r3, #0
 8001536:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001538:	2300      	movs	r3, #0
 800153a:	653b      	str	r3, [r7, #80]	@ 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800153c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001540:	2200      	movs	r2, #0
 8001542:	4619      	mov	r1, r3
 8001544:	481a      	ldr	r0, [pc, #104]	@ (80015b0 <MX_TIM1_Init+0x158>)
 8001546:	f004 ff51 	bl	80063ec <HAL_TIM_PWM_ConfigChannel>
 800154a:	4603      	mov	r3, r0
 800154c:	2b00      	cmp	r3, #0
 800154e:	d001      	beq.n	8001554 <MX_TIM1_Init+0xfc>
  {
    Error_Handler();
 8001550:	f000 fa5e 	bl	8001a10 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001554:	2300      	movs	r3, #0
 8001556:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001558:	2300      	movs	r3, #0
 800155a:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800155c:	2300      	movs	r3, #0
 800155e:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8001560:	2300      	movs	r3, #0
 8001562:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001564:	2300      	movs	r3, #0
 8001566:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001568:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800156c:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 800156e:	2300      	movs	r3, #0
 8001570:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 8001572:	2300      	movs	r3, #0
 8001574:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8001576:	2300      	movs	r3, #0
 8001578:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 800157a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800157e:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.Break2Filter = 0;
 8001580:	2300      	movs	r3, #0
 8001582:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 8001584:	2300      	movs	r3, #0
 8001586:	633b      	str	r3, [r7, #48]	@ 0x30
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001588:	2300      	movs	r3, #0
 800158a:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800158c:	1d3b      	adds	r3, r7, #4
 800158e:	4619      	mov	r1, r3
 8001590:	4807      	ldr	r0, [pc, #28]	@ (80015b0 <MX_TIM1_Init+0x158>)
 8001592:	f005 fe41 	bl	8007218 <HAL_TIMEx_ConfigBreakDeadTime>
 8001596:	4603      	mov	r3, r0
 8001598:	2b00      	cmp	r3, #0
 800159a:	d001      	beq.n	80015a0 <MX_TIM1_Init+0x148>
  {
    Error_Handler();
 800159c:	f000 fa38 	bl	8001a10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80015a0:	4803      	ldr	r0, [pc, #12]	@ (80015b0 <MX_TIM1_Init+0x158>)
 80015a2:	f000 fc19 	bl	8001dd8 <HAL_TIM_MspPostInit>

}
 80015a6:	bf00      	nop
 80015a8:	3770      	adds	r7, #112	@ 0x70
 80015aa:	46bd      	mov	sp, r7
 80015ac:	bd80      	pop	{r7, pc}
 80015ae:	bf00      	nop
 80015b0:	20000174 	.word	0x20000174
 80015b4:	40012c00 	.word	0x40012c00

080015b8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80015b8:	b580      	push	{r7, lr}
 80015ba:	b08e      	sub	sp, #56	@ 0x38
 80015bc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80015be:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80015c2:	2200      	movs	r2, #0
 80015c4:	601a      	str	r2, [r3, #0]
 80015c6:	605a      	str	r2, [r3, #4]
 80015c8:	609a      	str	r2, [r3, #8]
 80015ca:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80015cc:	f107 031c 	add.w	r3, r7, #28
 80015d0:	2200      	movs	r2, #0
 80015d2:	601a      	str	r2, [r3, #0]
 80015d4:	605a      	str	r2, [r3, #4]
 80015d6:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80015d8:	463b      	mov	r3, r7
 80015da:	2200      	movs	r2, #0
 80015dc:	601a      	str	r2, [r3, #0]
 80015de:	605a      	str	r2, [r3, #4]
 80015e0:	609a      	str	r2, [r3, #8]
 80015e2:	60da      	str	r2, [r3, #12]
 80015e4:	611a      	str	r2, [r3, #16]
 80015e6:	615a      	str	r2, [r3, #20]
 80015e8:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80015ea:	4b2d      	ldr	r3, [pc, #180]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 80015ec:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80015f0:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 15;
 80015f2:	4b2b      	ldr	r3, [pc, #172]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 80015f4:	220f      	movs	r2, #15
 80015f6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80015f8:	4b29      	ldr	r3, [pc, #164]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 80015fa:	2200      	movs	r2, #0
 80015fc:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 39;
 80015fe:	4b28      	ldr	r3, [pc, #160]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 8001600:	2227      	movs	r2, #39	@ 0x27
 8001602:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001604:	4b26      	ldr	r3, [pc, #152]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 8001606:	2200      	movs	r2, #0
 8001608:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800160a:	4b25      	ldr	r3, [pc, #148]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 800160c:	2200      	movs	r2, #0
 800160e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001610:	4823      	ldr	r0, [pc, #140]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 8001612:	f004 fb77 	bl	8005d04 <HAL_TIM_Base_Init>
 8001616:	4603      	mov	r3, r0
 8001618:	2b00      	cmp	r3, #0
 800161a:	d001      	beq.n	8001620 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 800161c:	f000 f9f8 	bl	8001a10 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001620:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001624:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001626:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800162a:	4619      	mov	r1, r3
 800162c:	481c      	ldr	r0, [pc, #112]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 800162e:	f004 fff1 	bl	8006614 <HAL_TIM_ConfigClockSource>
 8001632:	4603      	mov	r3, r0
 8001634:	2b00      	cmp	r3, #0
 8001636:	d001      	beq.n	800163c <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8001638:	f000 f9ea 	bl	8001a10 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800163c:	4818      	ldr	r0, [pc, #96]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 800163e:	f004 fc23 	bl	8005e88 <HAL_TIM_PWM_Init>
 8001642:	4603      	mov	r3, r0
 8001644:	2b00      	cmp	r3, #0
 8001646:	d001      	beq.n	800164c <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8001648:	f000 f9e2 	bl	8001a10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800164c:	2300      	movs	r3, #0
 800164e:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001650:	2300      	movs	r3, #0
 8001652:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001654:	f107 031c 	add.w	r3, r7, #28
 8001658:	4619      	mov	r1, r3
 800165a:	4811      	ldr	r0, [pc, #68]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 800165c:	f005 fd5a 	bl	8007114 <HAL_TIMEx_MasterConfigSynchronization>
 8001660:	4603      	mov	r3, r0
 8001662:	2b00      	cmp	r3, #0
 8001664:	d001      	beq.n	800166a <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 8001666:	f000 f9d3 	bl	8001a10 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800166a:	2360      	movs	r3, #96	@ 0x60
 800166c:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 800166e:	2300      	movs	r3, #0
 8001670:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001672:	2300      	movs	r3, #0
 8001674:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001676:	2300      	movs	r3, #0
 8001678:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800167a:	463b      	mov	r3, r7
 800167c:	2200      	movs	r2, #0
 800167e:	4619      	mov	r1, r3
 8001680:	4807      	ldr	r0, [pc, #28]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 8001682:	f004 feb3 	bl	80063ec <HAL_TIM_PWM_ConfigChannel>
 8001686:	4603      	mov	r3, r0
 8001688:	2b00      	cmp	r3, #0
 800168a:	d001      	beq.n	8001690 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 800168c:	f000 f9c0 	bl	8001a10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001690:	4803      	ldr	r0, [pc, #12]	@ (80016a0 <MX_TIM2_Init+0xe8>)
 8001692:	f000 fba1 	bl	8001dd8 <HAL_TIM_MspPostInit>

}
 8001696:	bf00      	nop
 8001698:	3738      	adds	r7, #56	@ 0x38
 800169a:	46bd      	mov	sp, r7
 800169c:	bd80      	pop	{r7, pc}
 800169e:	bf00      	nop
 80016a0:	200001c0 	.word	0x200001c0

080016a4 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80016a4:	b580      	push	{r7, lr}
 80016a6:	b088      	sub	sp, #32
 80016a8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80016aa:	f107 0310 	add.w	r3, r7, #16
 80016ae:	2200      	movs	r2, #0
 80016b0:	601a      	str	r2, [r3, #0]
 80016b2:	605a      	str	r2, [r3, #4]
 80016b4:	609a      	str	r2, [r3, #8]
 80016b6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016b8:	1d3b      	adds	r3, r7, #4
 80016ba:	2200      	movs	r2, #0
 80016bc:	601a      	str	r2, [r3, #0]
 80016be:	605a      	str	r2, [r3, #4]
 80016c0:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80016c2:	4b1d      	ldr	r3, [pc, #116]	@ (8001738 <MX_TIM3_Init+0x94>)
 80016c4:	4a1d      	ldr	r2, [pc, #116]	@ (800173c <MX_TIM3_Init+0x98>)
 80016c6:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 80016c8:	4b1b      	ldr	r3, [pc, #108]	@ (8001738 <MX_TIM3_Init+0x94>)
 80016ca:	223f      	movs	r2, #63	@ 0x3f
 80016cc:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016ce:	4b1a      	ldr	r3, [pc, #104]	@ (8001738 <MX_TIM3_Init+0x94>)
 80016d0:	2200      	movs	r2, #0
 80016d2:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 80016d4:	4b18      	ldr	r3, [pc, #96]	@ (8001738 <MX_TIM3_Init+0x94>)
 80016d6:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80016da:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80016dc:	4b16      	ldr	r3, [pc, #88]	@ (8001738 <MX_TIM3_Init+0x94>)
 80016de:	2200      	movs	r2, #0
 80016e0:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016e2:	4b15      	ldr	r3, [pc, #84]	@ (8001738 <MX_TIM3_Init+0x94>)
 80016e4:	2200      	movs	r2, #0
 80016e6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80016e8:	4813      	ldr	r0, [pc, #76]	@ (8001738 <MX_TIM3_Init+0x94>)
 80016ea:	f004 fb0b 	bl	8005d04 <HAL_TIM_Base_Init>
 80016ee:	4603      	mov	r3, r0
 80016f0:	2b00      	cmp	r3, #0
 80016f2:	d001      	beq.n	80016f8 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 80016f4:	f000 f98c 	bl	8001a10 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80016f8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80016fc:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80016fe:	f107 0310 	add.w	r3, r7, #16
 8001702:	4619      	mov	r1, r3
 8001704:	480c      	ldr	r0, [pc, #48]	@ (8001738 <MX_TIM3_Init+0x94>)
 8001706:	f004 ff85 	bl	8006614 <HAL_TIM_ConfigClockSource>
 800170a:	4603      	mov	r3, r0
 800170c:	2b00      	cmp	r3, #0
 800170e:	d001      	beq.n	8001714 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 8001710:	f000 f97e 	bl	8001a10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001714:	2300      	movs	r3, #0
 8001716:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001718:	2300      	movs	r3, #0
 800171a:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800171c:	1d3b      	adds	r3, r7, #4
 800171e:	4619      	mov	r1, r3
 8001720:	4805      	ldr	r0, [pc, #20]	@ (8001738 <MX_TIM3_Init+0x94>)
 8001722:	f005 fcf7 	bl	8007114 <HAL_TIMEx_MasterConfigSynchronization>
 8001726:	4603      	mov	r3, r0
 8001728:	2b00      	cmp	r3, #0
 800172a:	d001      	beq.n	8001730 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 800172c:	f000 f970 	bl	8001a10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8001730:	bf00      	nop
 8001732:	3720      	adds	r7, #32
 8001734:	46bd      	mov	sp, r7
 8001736:	bd80      	pop	{r7, pc}
 8001738:	2000020c 	.word	0x2000020c
 800173c:	40000400 	.word	0x40000400

08001740 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8001740:	b580      	push	{r7, lr}
 8001742:	b08e      	sub	sp, #56	@ 0x38
 8001744:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001746:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800174a:	2200      	movs	r2, #0
 800174c:	601a      	str	r2, [r3, #0]
 800174e:	605a      	str	r2, [r3, #4]
 8001750:	609a      	str	r2, [r3, #8]
 8001752:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001754:	f107 031c 	add.w	r3, r7, #28
 8001758:	2200      	movs	r2, #0
 800175a:	601a      	str	r2, [r3, #0]
 800175c:	605a      	str	r2, [r3, #4]
 800175e:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001760:	463b      	mov	r3, r7
 8001762:	2200      	movs	r2, #0
 8001764:	601a      	str	r2, [r3, #0]
 8001766:	605a      	str	r2, [r3, #4]
 8001768:	609a      	str	r2, [r3, #8]
 800176a:	60da      	str	r2, [r3, #12]
 800176c:	611a      	str	r2, [r3, #16]
 800176e:	615a      	str	r2, [r3, #20]
 8001770:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001772:	4b2b      	ldr	r3, [pc, #172]	@ (8001820 <MX_TIM4_Init+0xe0>)
 8001774:	4a2b      	ldr	r2, [pc, #172]	@ (8001824 <MX_TIM4_Init+0xe4>)
 8001776:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8001778:	4b29      	ldr	r3, [pc, #164]	@ (8001820 <MX_TIM4_Init+0xe0>)
 800177a:	2200      	movs	r2, #0
 800177c:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800177e:	4b28      	ldr	r3, [pc, #160]	@ (8001820 <MX_TIM4_Init+0xe0>)
 8001780:	2200      	movs	r2, #0
 8001782:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8001784:	4b26      	ldr	r3, [pc, #152]	@ (8001820 <MX_TIM4_Init+0xe0>)
 8001786:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800178a:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800178c:	4b24      	ldr	r3, [pc, #144]	@ (8001820 <MX_TIM4_Init+0xe0>)
 800178e:	2200      	movs	r2, #0
 8001790:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001792:	4b23      	ldr	r3, [pc, #140]	@ (8001820 <MX_TIM4_Init+0xe0>)
 8001794:	2200      	movs	r2, #0
 8001796:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001798:	4821      	ldr	r0, [pc, #132]	@ (8001820 <MX_TIM4_Init+0xe0>)
 800179a:	f004 fab3 	bl	8005d04 <HAL_TIM_Base_Init>
 800179e:	4603      	mov	r3, r0
 80017a0:	2b00      	cmp	r3, #0
 80017a2:	d001      	beq.n	80017a8 <MX_TIM4_Init+0x68>
  {
    Error_Handler();
 80017a4:	f000 f934 	bl	8001a10 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017a8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80017ac:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 80017ae:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80017b2:	4619      	mov	r1, r3
 80017b4:	481a      	ldr	r0, [pc, #104]	@ (8001820 <MX_TIM4_Init+0xe0>)
 80017b6:	f004 ff2d 	bl	8006614 <HAL_TIM_ConfigClockSource>
 80017ba:	4603      	mov	r3, r0
 80017bc:	2b00      	cmp	r3, #0
 80017be:	d001      	beq.n	80017c4 <MX_TIM4_Init+0x84>
  {
    Error_Handler();
 80017c0:	f000 f926 	bl	8001a10 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 80017c4:	4816      	ldr	r0, [pc, #88]	@ (8001820 <MX_TIM4_Init+0xe0>)
 80017c6:	f004 fb5f 	bl	8005e88 <HAL_TIM_PWM_Init>
 80017ca:	4603      	mov	r3, r0
 80017cc:	2b00      	cmp	r3, #0
 80017ce:	d001      	beq.n	80017d4 <MX_TIM4_Init+0x94>
  {
    Error_Handler();
 80017d0:	f000 f91e 	bl	8001a10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80017d4:	2300      	movs	r3, #0
 80017d6:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017d8:	2300      	movs	r3, #0
 80017da:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80017dc:	f107 031c 	add.w	r3, r7, #28
 80017e0:	4619      	mov	r1, r3
 80017e2:	480f      	ldr	r0, [pc, #60]	@ (8001820 <MX_TIM4_Init+0xe0>)
 80017e4:	f005 fc96 	bl	8007114 <HAL_TIMEx_MasterConfigSynchronization>
 80017e8:	4603      	mov	r3, r0
 80017ea:	2b00      	cmp	r3, #0
 80017ec:	d001      	beq.n	80017f2 <MX_TIM4_Init+0xb2>
  {
    Error_Handler();
 80017ee:	f000 f90f 	bl	8001a10 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80017f2:	2360      	movs	r3, #96	@ 0x60
 80017f4:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80017f6:	2300      	movs	r3, #0
 80017f8:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80017fa:	2300      	movs	r3, #0
 80017fc:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80017fe:	2300      	movs	r3, #0
 8001800:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001802:	463b      	mov	r3, r7
 8001804:	2200      	movs	r2, #0
 8001806:	4619      	mov	r1, r3
 8001808:	4805      	ldr	r0, [pc, #20]	@ (8001820 <MX_TIM4_Init+0xe0>)
 800180a:	f004 fdef 	bl	80063ec <HAL_TIM_PWM_ConfigChannel>
 800180e:	4603      	mov	r3, r0
 8001810:	2b00      	cmp	r3, #0
 8001812:	d001      	beq.n	8001818 <MX_TIM4_Init+0xd8>
  {
    Error_Handler();
 8001814:	f000 f8fc 	bl	8001a10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8001818:	bf00      	nop
 800181a:	3738      	adds	r7, #56	@ 0x38
 800181c:	46bd      	mov	sp, r7
 800181e:	bd80      	pop	{r7, pc}
 8001820:	20000258 	.word	0x20000258
 8001824:	40000800 	.word	0x40000800

08001828 <MX_TIM6_Init>:
  * @brief TIM6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM6_Init(void)
{
 8001828:	b580      	push	{r7, lr}
 800182a:	b084      	sub	sp, #16
 800182c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800182e:	1d3b      	adds	r3, r7, #4
 8001830:	2200      	movs	r2, #0
 8001832:	601a      	str	r2, [r3, #0]
 8001834:	605a      	str	r2, [r3, #4]
 8001836:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 8001838:	4b14      	ldr	r3, [pc, #80]	@ (800188c <MX_TIM6_Init+0x64>)
 800183a:	4a15      	ldr	r2, [pc, #84]	@ (8001890 <MX_TIM6_Init+0x68>)
 800183c:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 0;
 800183e:	4b13      	ldr	r3, [pc, #76]	@ (800188c <MX_TIM6_Init+0x64>)
 8001840:	2200      	movs	r2, #0
 8001842:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001844:	4b11      	ldr	r3, [pc, #68]	@ (800188c <MX_TIM6_Init+0x64>)
 8001846:	2200      	movs	r2, #0
 8001848:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65535;
 800184a:	4b10      	ldr	r3, [pc, #64]	@ (800188c <MX_TIM6_Init+0x64>)
 800184c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001850:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001852:	4b0e      	ldr	r3, [pc, #56]	@ (800188c <MX_TIM6_Init+0x64>)
 8001854:	2200      	movs	r2, #0
 8001856:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 8001858:	480c      	ldr	r0, [pc, #48]	@ (800188c <MX_TIM6_Init+0x64>)
 800185a:	f004 fa53 	bl	8005d04 <HAL_TIM_Base_Init>
 800185e:	4603      	mov	r3, r0
 8001860:	2b00      	cmp	r3, #0
 8001862:	d001      	beq.n	8001868 <MX_TIM6_Init+0x40>
  {
    Error_Handler();
 8001864:	f000 f8d4 	bl	8001a10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001868:	2300      	movs	r3, #0
 800186a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800186c:	2300      	movs	r3, #0
 800186e:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 8001870:	1d3b      	adds	r3, r7, #4
 8001872:	4619      	mov	r1, r3
 8001874:	4805      	ldr	r0, [pc, #20]	@ (800188c <MX_TIM6_Init+0x64>)
 8001876:	f005 fc4d 	bl	8007114 <HAL_TIMEx_MasterConfigSynchronization>
 800187a:	4603      	mov	r3, r0
 800187c:	2b00      	cmp	r3, #0
 800187e:	d001      	beq.n	8001884 <MX_TIM6_Init+0x5c>
  {
    Error_Handler();
 8001880:	f000 f8c6 	bl	8001a10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 8001884:	bf00      	nop
 8001886:	3710      	adds	r7, #16
 8001888:	46bd      	mov	sp, r7
 800188a:	bd80      	pop	{r7, pc}
 800188c:	200002a4 	.word	0x200002a4
 8001890:	40001000 	.word	0x40001000

08001894 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 8001894:	b580      	push	{r7, lr}
 8001896:	b084      	sub	sp, #16
 8001898:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800189a:	1d3b      	adds	r3, r7, #4
 800189c:	2200      	movs	r2, #0
 800189e:	601a      	str	r2, [r3, #0]
 80018a0:	605a      	str	r2, [r3, #4]
 80018a2:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 80018a4:	4b14      	ldr	r3, [pc, #80]	@ (80018f8 <MX_TIM7_Init+0x64>)
 80018a6:	4a15      	ldr	r2, [pc, #84]	@ (80018fc <MX_TIM7_Init+0x68>)
 80018a8:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 0;
 80018aa:	4b13      	ldr	r3, [pc, #76]	@ (80018f8 <MX_TIM7_Init+0x64>)
 80018ac:	2200      	movs	r2, #0
 80018ae:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018b0:	4b11      	ldr	r3, [pc, #68]	@ (80018f8 <MX_TIM7_Init+0x64>)
 80018b2:	2200      	movs	r2, #0
 80018b4:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 65535;
 80018b6:	4b10      	ldr	r3, [pc, #64]	@ (80018f8 <MX_TIM7_Init+0x64>)
 80018b8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80018bc:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018be:	4b0e      	ldr	r3, [pc, #56]	@ (80018f8 <MX_TIM7_Init+0x64>)
 80018c0:	2200      	movs	r2, #0
 80018c2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80018c4:	480c      	ldr	r0, [pc, #48]	@ (80018f8 <MX_TIM7_Init+0x64>)
 80018c6:	f004 fa1d 	bl	8005d04 <HAL_TIM_Base_Init>
 80018ca:	4603      	mov	r3, r0
 80018cc:	2b00      	cmp	r3, #0
 80018ce:	d001      	beq.n	80018d4 <MX_TIM7_Init+0x40>
  {
    Error_Handler();
 80018d0:	f000 f89e 	bl	8001a10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80018d4:	2300      	movs	r3, #0
 80018d6:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018d8:	2300      	movs	r3, #0
 80018da:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80018dc:	1d3b      	adds	r3, r7, #4
 80018de:	4619      	mov	r1, r3
 80018e0:	4805      	ldr	r0, [pc, #20]	@ (80018f8 <MX_TIM7_Init+0x64>)
 80018e2:	f005 fc17 	bl	8007114 <HAL_TIMEx_MasterConfigSynchronization>
 80018e6:	4603      	mov	r3, r0
 80018e8:	2b00      	cmp	r3, #0
 80018ea:	d001      	beq.n	80018f0 <MX_TIM7_Init+0x5c>
  {
    Error_Handler();
 80018ec:	f000 f890 	bl	8001a10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 80018f0:	bf00      	nop
 80018f2:	3710      	adds	r7, #16
 80018f4:	46bd      	mov	sp, r7
 80018f6:	bd80      	pop	{r7, pc}
 80018f8:	200002f0 	.word	0x200002f0
 80018fc:	40001400 	.word	0x40001400

08001900 <MX_TIM16_Init>:
  * @brief TIM16 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM16_Init(void)
{
 8001900:	b580      	push	{r7, lr}
 8001902:	af00      	add	r7, sp, #0
  /* USER CODE END TIM16_Init 0 */

  /* USER CODE BEGIN TIM16_Init 1 */

  /* USER CODE END TIM16_Init 1 */
  htim16.Instance = TIM16;
 8001904:	4b0f      	ldr	r3, [pc, #60]	@ (8001944 <MX_TIM16_Init+0x44>)
 8001906:	4a10      	ldr	r2, [pc, #64]	@ (8001948 <MX_TIM16_Init+0x48>)
 8001908:	601a      	str	r2, [r3, #0]
  htim16.Init.Prescaler = 0;
 800190a:	4b0e      	ldr	r3, [pc, #56]	@ (8001944 <MX_TIM16_Init+0x44>)
 800190c:	2200      	movs	r2, #0
 800190e:	605a      	str	r2, [r3, #4]
  htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001910:	4b0c      	ldr	r3, [pc, #48]	@ (8001944 <MX_TIM16_Init+0x44>)
 8001912:	2200      	movs	r2, #0
 8001914:	609a      	str	r2, [r3, #8]
  htim16.Init.Period = 65535;
 8001916:	4b0b      	ldr	r3, [pc, #44]	@ (8001944 <MX_TIM16_Init+0x44>)
 8001918:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800191c:	60da      	str	r2, [r3, #12]
  htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800191e:	4b09      	ldr	r3, [pc, #36]	@ (8001944 <MX_TIM16_Init+0x44>)
 8001920:	2200      	movs	r2, #0
 8001922:	611a      	str	r2, [r3, #16]
  htim16.Init.RepetitionCounter = 0;
 8001924:	4b07      	ldr	r3, [pc, #28]	@ (8001944 <MX_TIM16_Init+0x44>)
 8001926:	2200      	movs	r2, #0
 8001928:	615a      	str	r2, [r3, #20]
  htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800192a:	4b06      	ldr	r3, [pc, #24]	@ (8001944 <MX_TIM16_Init+0x44>)
 800192c:	2200      	movs	r2, #0
 800192e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 8001930:	4804      	ldr	r0, [pc, #16]	@ (8001944 <MX_TIM16_Init+0x44>)
 8001932:	f004 f9e7 	bl	8005d04 <HAL_TIM_Base_Init>
 8001936:	4603      	mov	r3, r0
 8001938:	2b00      	cmp	r3, #0
 800193a:	d001      	beq.n	8001940 <MX_TIM16_Init+0x40>
  {
    Error_Handler();
 800193c:	f000 f868 	bl	8001a10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM16_Init 2 */

  /* USER CODE END TIM16_Init 2 */

}
 8001940:	bf00      	nop
 8001942:	bd80      	pop	{r7, pc}
 8001944:	2000033c 	.word	0x2000033c
 8001948:	40014400 	.word	0x40014400

0800194c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800194c:	b580      	push	{r7, lr}
 800194e:	b088      	sub	sp, #32
 8001950:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001952:	f107 030c 	add.w	r3, r7, #12
 8001956:	2200      	movs	r2, #0
 8001958:	601a      	str	r2, [r3, #0]
 800195a:	605a      	str	r2, [r3, #4]
 800195c:	609a      	str	r2, [r3, #8]
 800195e:	60da      	str	r2, [r3, #12]
 8001960:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001962:	4b29      	ldr	r3, [pc, #164]	@ (8001a08 <MX_GPIO_Init+0xbc>)
 8001964:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001966:	4a28      	ldr	r2, [pc, #160]	@ (8001a08 <MX_GPIO_Init+0xbc>)
 8001968:	f043 0320 	orr.w	r3, r3, #32
 800196c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800196e:	4b26      	ldr	r3, [pc, #152]	@ (8001a08 <MX_GPIO_Init+0xbc>)
 8001970:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001972:	f003 0320 	and.w	r3, r3, #32
 8001976:	60bb      	str	r3, [r7, #8]
 8001978:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800197a:	4b23      	ldr	r3, [pc, #140]	@ (8001a08 <MX_GPIO_Init+0xbc>)
 800197c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800197e:	4a22      	ldr	r2, [pc, #136]	@ (8001a08 <MX_GPIO_Init+0xbc>)
 8001980:	f043 0301 	orr.w	r3, r3, #1
 8001984:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001986:	4b20      	ldr	r3, [pc, #128]	@ (8001a08 <MX_GPIO_Init+0xbc>)
 8001988:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800198a:	f003 0301 	and.w	r3, r3, #1
 800198e:	607b      	str	r3, [r7, #4]
 8001990:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001992:	4b1d      	ldr	r3, [pc, #116]	@ (8001a08 <MX_GPIO_Init+0xbc>)
 8001994:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001996:	4a1c      	ldr	r2, [pc, #112]	@ (8001a08 <MX_GPIO_Init+0xbc>)
 8001998:	f043 0302 	orr.w	r3, r3, #2
 800199c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800199e:	4b1a      	ldr	r3, [pc, #104]	@ (8001a08 <MX_GPIO_Init+0xbc>)
 80019a0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80019a2:	f003 0302 	and.w	r3, r3, #2
 80019a6:	603b      	str	r3, [r7, #0]
 80019a8:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, IN1_2_Pin|IN0_2_Pin|LED2_Pin|IN3_Pin
 80019aa:	2200      	movs	r2, #0
 80019ac:	f248 6192 	movw	r1, #34450	@ 0x8692
 80019b0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80019b4:	f003 f9f4 	bl	8004da0 <HAL_GPIO_WritePin>
                          |IN2_Pin|IN1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED1_Pin|IN0_Pin|IN3_2_Pin|SEL1_Pin
 80019b8:	2200      	movs	r2, #0
 80019ba:	21f9      	movs	r1, #249	@ 0xf9
 80019bc:	4813      	ldr	r0, [pc, #76]	@ (8001a0c <MX_GPIO_Init+0xc0>)
 80019be:	f003 f9ef 	bl	8004da0 <HAL_GPIO_WritePin>
                          |SEL0_Pin|IN2_2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : IN1_2_Pin IN0_2_Pin LED2_Pin IN3_Pin
                           IN2_Pin IN1_Pin */
  GPIO_InitStruct.Pin = IN1_2_Pin|IN0_2_Pin|LED2_Pin|IN3_Pin
 80019c2:	f248 6392 	movw	r3, #34450	@ 0x8692
 80019c6:	60fb      	str	r3, [r7, #12]
                          |IN2_Pin|IN1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019c8:	2301      	movs	r3, #1
 80019ca:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019cc:	2300      	movs	r3, #0
 80019ce:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019d0:	2300      	movs	r3, #0
 80019d2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019d4:	f107 030c 	add.w	r3, r7, #12
 80019d8:	4619      	mov	r1, r3
 80019da:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80019de:	f003 f85d 	bl	8004a9c <HAL_GPIO_Init>

  /*Configure GPIO pins : LED1_Pin IN0_Pin IN3_2_Pin SEL1_Pin
                           SEL0_Pin IN2_2_Pin */
  GPIO_InitStruct.Pin = LED1_Pin|IN0_Pin|IN3_2_Pin|SEL1_Pin
 80019e2:	23f9      	movs	r3, #249	@ 0xf9
 80019e4:	60fb      	str	r3, [r7, #12]
                          |SEL0_Pin|IN2_2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019e6:	2301      	movs	r3, #1
 80019e8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019ea:	2300      	movs	r3, #0
 80019ec:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019ee:	2300      	movs	r3, #0
 80019f0:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019f2:	f107 030c 	add.w	r3, r7, #12
 80019f6:	4619      	mov	r1, r3
 80019f8:	4804      	ldr	r0, [pc, #16]	@ (8001a0c <MX_GPIO_Init+0xc0>)
 80019fa:	f003 f84f 	bl	8004a9c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80019fe:	bf00      	nop
 8001a00:	3720      	adds	r7, #32
 8001a02:	46bd      	mov	sp, r7
 8001a04:	bd80      	pop	{r7, pc}
 8001a06:	bf00      	nop
 8001a08:	40021000 	.word	0x40021000
 8001a0c:	48000400 	.word	0x48000400

08001a10 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001a10:	b480      	push	{r7}
 8001a12:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001a14:	b672      	cpsid	i
}
 8001a16:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001a18:	bf00      	nop
 8001a1a:	e7fd      	b.n	8001a18 <Error_Handler+0x8>

08001a1c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a1c:	b580      	push	{r7, lr}
 8001a1e:	b082      	sub	sp, #8
 8001a20:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a22:	4b0f      	ldr	r3, [pc, #60]	@ (8001a60 <HAL_MspInit+0x44>)
 8001a24:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001a26:	4a0e      	ldr	r2, [pc, #56]	@ (8001a60 <HAL_MspInit+0x44>)
 8001a28:	f043 0301 	orr.w	r3, r3, #1
 8001a2c:	6613      	str	r3, [r2, #96]	@ 0x60
 8001a2e:	4b0c      	ldr	r3, [pc, #48]	@ (8001a60 <HAL_MspInit+0x44>)
 8001a30:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001a32:	f003 0301 	and.w	r3, r3, #1
 8001a36:	607b      	str	r3, [r7, #4]
 8001a38:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a3a:	4b09      	ldr	r3, [pc, #36]	@ (8001a60 <HAL_MspInit+0x44>)
 8001a3c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001a3e:	4a08      	ldr	r2, [pc, #32]	@ (8001a60 <HAL_MspInit+0x44>)
 8001a40:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001a44:	6593      	str	r3, [r2, #88]	@ 0x58
 8001a46:	4b06      	ldr	r3, [pc, #24]	@ (8001a60 <HAL_MspInit+0x44>)
 8001a48:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001a4a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001a4e:	603b      	str	r3, [r7, #0]
 8001a50:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_PWREx_DisableUCPDDeadBattery();
 8001a52:	f003 fa61 	bl	8004f18 <HAL_PWREx_DisableUCPDDeadBattery>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a56:	bf00      	nop
 8001a58:	3708      	adds	r7, #8
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bd80      	pop	{r7, pc}
 8001a5e:	bf00      	nop
 8001a60:	40021000 	.word	0x40021000

08001a64 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001a64:	b580      	push	{r7, lr}
 8001a66:	b09c      	sub	sp, #112	@ 0x70
 8001a68:	af00      	add	r7, sp, #0
 8001a6a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a6c:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001a70:	2200      	movs	r2, #0
 8001a72:	601a      	str	r2, [r3, #0]
 8001a74:	605a      	str	r2, [r3, #4]
 8001a76:	609a      	str	r2, [r3, #8]
 8001a78:	60da      	str	r2, [r3, #12]
 8001a7a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001a7c:	f107 0318 	add.w	r3, r7, #24
 8001a80:	2244      	movs	r2, #68	@ 0x44
 8001a82:	2100      	movs	r1, #0
 8001a84:	4618      	mov	r0, r3
 8001a86:	f005 fc99 	bl	80073bc <memset>
  if(hadc->Instance==ADC1)
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	681b      	ldr	r3, [r3, #0]
 8001a8e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8001a92:	d13e      	bne.n	8001b12 <HAL_ADC_MspInit+0xae>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 8001a94:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8001a98:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 8001a9a:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 8001a9e:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001aa0:	f107 0318 	add.w	r3, r7, #24
 8001aa4:	4618      	mov	r0, r3
 8001aa6:	f003 ff3d 	bl	8005924 <HAL_RCCEx_PeriphCLKConfig>
 8001aaa:	4603      	mov	r3, r0
 8001aac:	2b00      	cmp	r3, #0
 8001aae:	d001      	beq.n	8001ab4 <HAL_ADC_MspInit+0x50>
    {
      Error_Handler();
 8001ab0:	f7ff ffae 	bl	8001a10 <Error_Handler>
    }

    /* Peripheral clock enable */
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001ab4:	4b3a      	ldr	r3, [pc, #232]	@ (8001ba0 <HAL_ADC_MspInit+0x13c>)
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	3301      	adds	r3, #1
 8001aba:	4a39      	ldr	r2, [pc, #228]	@ (8001ba0 <HAL_ADC_MspInit+0x13c>)
 8001abc:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 8001abe:	4b38      	ldr	r3, [pc, #224]	@ (8001ba0 <HAL_ADC_MspInit+0x13c>)
 8001ac0:	681b      	ldr	r3, [r3, #0]
 8001ac2:	2b01      	cmp	r3, #1
 8001ac4:	d10b      	bne.n	8001ade <HAL_ADC_MspInit+0x7a>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001ac6:	4b37      	ldr	r3, [pc, #220]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001ac8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001aca:	4a36      	ldr	r2, [pc, #216]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001acc:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001ad0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001ad2:	4b34      	ldr	r3, [pc, #208]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001ad4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001ad6:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001ada:	617b      	str	r3, [r7, #20]
 8001adc:	697b      	ldr	r3, [r7, #20]
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ade:	4b31      	ldr	r3, [pc, #196]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001ae0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001ae2:	4a30      	ldr	r2, [pc, #192]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001ae4:	f043 0301 	orr.w	r3, r3, #1
 8001ae8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001aea:	4b2e      	ldr	r3, [pc, #184]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001aec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001aee:	f003 0301 	and.w	r3, r3, #1
 8001af2:	613b      	str	r3, [r7, #16]
 8001af4:	693b      	ldr	r3, [r7, #16]
    /**ADC1 GPIO Configuration
    PA0     ------> ADC1_IN1
    PA2     ------> ADC1_IN3
    PA3     ------> ADC1_IN4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;
 8001af6:	230d      	movs	r3, #13
 8001af8:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001afa:	2303      	movs	r3, #3
 8001afc:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001afe:	2300      	movs	r3, #0
 8001b00:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b02:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001b06:	4619      	mov	r1, r3
 8001b08:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001b0c:	f002 ffc6 	bl	8004a9c <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8001b10:	e042      	b.n	8001b98 <HAL_ADC_MspInit+0x134>
  else if(hadc->Instance==ADC2)
 8001b12:	687b      	ldr	r3, [r7, #4]
 8001b14:	681b      	ldr	r3, [r3, #0]
 8001b16:	4a24      	ldr	r2, [pc, #144]	@ (8001ba8 <HAL_ADC_MspInit+0x144>)
 8001b18:	4293      	cmp	r3, r2
 8001b1a:	d13d      	bne.n	8001b98 <HAL_ADC_MspInit+0x134>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 8001b1c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8001b20:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 8001b22:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 8001b26:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001b28:	f107 0318 	add.w	r3, r7, #24
 8001b2c:	4618      	mov	r0, r3
 8001b2e:	f003 fef9 	bl	8005924 <HAL_RCCEx_PeriphCLKConfig>
 8001b32:	4603      	mov	r3, r0
 8001b34:	2b00      	cmp	r3, #0
 8001b36:	d001      	beq.n	8001b3c <HAL_ADC_MspInit+0xd8>
      Error_Handler();
 8001b38:	f7ff ff6a 	bl	8001a10 <Error_Handler>
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001b3c:	4b18      	ldr	r3, [pc, #96]	@ (8001ba0 <HAL_ADC_MspInit+0x13c>)
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	3301      	adds	r3, #1
 8001b42:	4a17      	ldr	r2, [pc, #92]	@ (8001ba0 <HAL_ADC_MspInit+0x13c>)
 8001b44:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 8001b46:	4b16      	ldr	r3, [pc, #88]	@ (8001ba0 <HAL_ADC_MspInit+0x13c>)
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	2b01      	cmp	r3, #1
 8001b4c:	d10b      	bne.n	8001b66 <HAL_ADC_MspInit+0x102>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001b4e:	4b15      	ldr	r3, [pc, #84]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001b50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b52:	4a14      	ldr	r2, [pc, #80]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001b54:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001b58:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001b5a:	4b12      	ldr	r3, [pc, #72]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001b5c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b5e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001b62:	60fb      	str	r3, [r7, #12]
 8001b64:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b66:	4b0f      	ldr	r3, [pc, #60]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001b68:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b6a:	4a0e      	ldr	r2, [pc, #56]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001b6c:	f043 0301 	orr.w	r3, r3, #1
 8001b70:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001b72:	4b0c      	ldr	r3, [pc, #48]	@ (8001ba4 <HAL_ADC_MspInit+0x140>)
 8001b74:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b76:	f003 0301 	and.w	r3, r3, #1
 8001b7a:	60bb      	str	r3, [r7, #8]
 8001b7c:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001b7e:	2340      	movs	r3, #64	@ 0x40
 8001b80:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b82:	2303      	movs	r3, #3
 8001b84:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b86:	2300      	movs	r3, #0
 8001b88:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b8a:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001b8e:	4619      	mov	r1, r3
 8001b90:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001b94:	f002 ff82 	bl	8004a9c <HAL_GPIO_Init>
}
 8001b98:	bf00      	nop
 8001b9a:	3770      	adds	r7, #112	@ 0x70
 8001b9c:	46bd      	mov	sp, r7
 8001b9e:	bd80      	pop	{r7, pc}
 8001ba0:	20000698 	.word	0x20000698
 8001ba4:	40021000 	.word	0x40021000
 8001ba8:	50000100 	.word	0x50000100

08001bac <HAL_FDCAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hfdcan: FDCAN handle pointer
* @retval None
*/
void HAL_FDCAN_MspInit(FDCAN_HandleTypeDef* hfdcan)
{
 8001bac:	b580      	push	{r7, lr}
 8001bae:	b09a      	sub	sp, #104	@ 0x68
 8001bb0:	af00      	add	r7, sp, #0
 8001bb2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bb4:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001bb8:	2200      	movs	r2, #0
 8001bba:	601a      	str	r2, [r3, #0]
 8001bbc:	605a      	str	r2, [r3, #4]
 8001bbe:	609a      	str	r2, [r3, #8]
 8001bc0:	60da      	str	r2, [r3, #12]
 8001bc2:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001bc4:	f107 0310 	add.w	r3, r7, #16
 8001bc8:	2244      	movs	r2, #68	@ 0x44
 8001bca:	2100      	movs	r1, #0
 8001bcc:	4618      	mov	r0, r3
 8001bce:	f005 fbf5 	bl	80073bc <memset>
  if(hfdcan->Instance==FDCAN1)
 8001bd2:	687b      	ldr	r3, [r7, #4]
 8001bd4:	681b      	ldr	r3, [r3, #0]
 8001bd6:	4a24      	ldr	r2, [pc, #144]	@ (8001c68 <HAL_FDCAN_MspInit+0xbc>)
 8001bd8:	4293      	cmp	r3, r2
 8001bda:	d141      	bne.n	8001c60 <HAL_FDCAN_MspInit+0xb4>

  /* USER CODE END FDCAN1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_FDCAN;
 8001bdc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001be0:	613b      	str	r3, [r7, #16]
    PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PLL;
 8001be2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8001be6:	643b      	str	r3, [r7, #64]	@ 0x40
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001be8:	f107 0310 	add.w	r3, r7, #16
 8001bec:	4618      	mov	r0, r3
 8001bee:	f003 fe99 	bl	8005924 <HAL_RCCEx_PeriphCLKConfig>
 8001bf2:	4603      	mov	r3, r0
 8001bf4:	2b00      	cmp	r3, #0
 8001bf6:	d001      	beq.n	8001bfc <HAL_FDCAN_MspInit+0x50>
    {
      Error_Handler();
 8001bf8:	f7ff ff0a 	bl	8001a10 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_FDCAN_CLK_ENABLE();
 8001bfc:	4b1b      	ldr	r3, [pc, #108]	@ (8001c6c <HAL_FDCAN_MspInit+0xc0>)
 8001bfe:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c00:	4a1a      	ldr	r2, [pc, #104]	@ (8001c6c <HAL_FDCAN_MspInit+0xc0>)
 8001c02:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001c06:	6593      	str	r3, [r2, #88]	@ 0x58
 8001c08:	4b18      	ldr	r3, [pc, #96]	@ (8001c6c <HAL_FDCAN_MspInit+0xc0>)
 8001c0a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c0c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001c10:	60fb      	str	r3, [r7, #12]
 8001c12:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c14:	4b15      	ldr	r3, [pc, #84]	@ (8001c6c <HAL_FDCAN_MspInit+0xc0>)
 8001c16:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001c18:	4a14      	ldr	r2, [pc, #80]	@ (8001c6c <HAL_FDCAN_MspInit+0xc0>)
 8001c1a:	f043 0301 	orr.w	r3, r3, #1
 8001c1e:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001c20:	4b12      	ldr	r3, [pc, #72]	@ (8001c6c <HAL_FDCAN_MspInit+0xc0>)
 8001c22:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001c24:	f003 0301 	and.w	r3, r3, #1
 8001c28:	60bb      	str	r3, [r7, #8]
 8001c2a:	68bb      	ldr	r3, [r7, #8]
    /**FDCAN1 GPIO Configuration
    PA11     ------> FDCAN1_RX
    PA12     ------> FDCAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 8001c2c:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 8001c30:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c32:	2302      	movs	r3, #2
 8001c34:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c36:	2300      	movs	r3, #0
 8001c38:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c3a:	2300      	movs	r3, #0
 8001c3c:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF9_FDCAN1;
 8001c3e:	2309      	movs	r3, #9
 8001c40:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c42:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001c46:	4619      	mov	r1, r3
 8001c48:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001c4c:	f002 ff26 	bl	8004a9c <HAL_GPIO_Init>

    /* FDCAN1 interrupt Init */
    HAL_NVIC_SetPriority(FDCAN1_IT0_IRQn, 0, 0);
 8001c50:	2200      	movs	r2, #0
 8001c52:	2100      	movs	r1, #0
 8001c54:	2015      	movs	r0, #21
 8001c56:	f002 f8c6 	bl	8003de6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(FDCAN1_IT0_IRQn);
 8001c5a:	2015      	movs	r0, #21
 8001c5c:	f002 f8dd 	bl	8003e1a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN FDCAN1_MspInit 1 */

  /* USER CODE END FDCAN1_MspInit 1 */
  }

}
 8001c60:	bf00      	nop
 8001c62:	3768      	adds	r7, #104	@ 0x68
 8001c64:	46bd      	mov	sp, r7
 8001c66:	bd80      	pop	{r7, pc}
 8001c68:	40006400 	.word	0x40006400
 8001c6c:	40021000 	.word	0x40021000

08001c70 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001c70:	b580      	push	{r7, lr}
 8001c72:	b08a      	sub	sp, #40	@ 0x28
 8001c74:	af00      	add	r7, sp, #0
 8001c76:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	681b      	ldr	r3, [r3, #0]
 8001c7c:	4a4f      	ldr	r2, [pc, #316]	@ (8001dbc <HAL_TIM_Base_MspInit+0x14c>)
 8001c7e:	4293      	cmp	r3, r2
 8001c80:	d10c      	bne.n	8001c9c <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001c82:	4b4f      	ldr	r3, [pc, #316]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001c84:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001c86:	4a4e      	ldr	r2, [pc, #312]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001c88:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001c8c:	6613      	str	r3, [r2, #96]	@ 0x60
 8001c8e:	4b4c      	ldr	r3, [pc, #304]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001c90:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001c92:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001c96:	627b      	str	r3, [r7, #36]	@ 0x24
 8001c98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
  /* USER CODE BEGIN TIM16_MspInit 1 */

  /* USER CODE END TIM16_MspInit 1 */
  }

}
 8001c9a:	e08a      	b.n	8001db2 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM2)
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	681b      	ldr	r3, [r3, #0]
 8001ca0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001ca4:	d114      	bne.n	8001cd0 <HAL_TIM_Base_MspInit+0x60>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001ca6:	4b46      	ldr	r3, [pc, #280]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001ca8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001caa:	4a45      	ldr	r2, [pc, #276]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001cac:	f043 0301 	orr.w	r3, r3, #1
 8001cb0:	6593      	str	r3, [r2, #88]	@ 0x58
 8001cb2:	4b43      	ldr	r3, [pc, #268]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001cb4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001cb6:	f003 0301 	and.w	r3, r3, #1
 8001cba:	623b      	str	r3, [r7, #32]
 8001cbc:	6a3b      	ldr	r3, [r7, #32]
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001cbe:	2200      	movs	r2, #0
 8001cc0:	2100      	movs	r1, #0
 8001cc2:	201c      	movs	r0, #28
 8001cc4:	f002 f88f 	bl	8003de6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001cc8:	201c      	movs	r0, #28
 8001cca:	f002 f8a6 	bl	8003e1a <HAL_NVIC_EnableIRQ>
}
 8001cce:	e070      	b.n	8001db2 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM3)
 8001cd0:	687b      	ldr	r3, [r7, #4]
 8001cd2:	681b      	ldr	r3, [r3, #0]
 8001cd4:	4a3b      	ldr	r2, [pc, #236]	@ (8001dc4 <HAL_TIM_Base_MspInit+0x154>)
 8001cd6:	4293      	cmp	r3, r2
 8001cd8:	d114      	bne.n	8001d04 <HAL_TIM_Base_MspInit+0x94>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001cda:	4b39      	ldr	r3, [pc, #228]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001cdc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001cde:	4a38      	ldr	r2, [pc, #224]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001ce0:	f043 0302 	orr.w	r3, r3, #2
 8001ce4:	6593      	str	r3, [r2, #88]	@ 0x58
 8001ce6:	4b36      	ldr	r3, [pc, #216]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001ce8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001cea:	f003 0302 	and.w	r3, r3, #2
 8001cee:	61fb      	str	r3, [r7, #28]
 8001cf0:	69fb      	ldr	r3, [r7, #28]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001cf2:	2200      	movs	r2, #0
 8001cf4:	2100      	movs	r1, #0
 8001cf6:	201d      	movs	r0, #29
 8001cf8:	f002 f875 	bl	8003de6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001cfc:	201d      	movs	r0, #29
 8001cfe:	f002 f88c 	bl	8003e1a <HAL_NVIC_EnableIRQ>
}
 8001d02:	e056      	b.n	8001db2 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM4)
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	4a2f      	ldr	r2, [pc, #188]	@ (8001dc8 <HAL_TIM_Base_MspInit+0x158>)
 8001d0a:	4293      	cmp	r3, r2
 8001d0c:	d114      	bne.n	8001d38 <HAL_TIM_Base_MspInit+0xc8>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001d0e:	4b2c      	ldr	r3, [pc, #176]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001d10:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d12:	4a2b      	ldr	r2, [pc, #172]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001d14:	f043 0304 	orr.w	r3, r3, #4
 8001d18:	6593      	str	r3, [r2, #88]	@ 0x58
 8001d1a:	4b29      	ldr	r3, [pc, #164]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001d1c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d1e:	f003 0304 	and.w	r3, r3, #4
 8001d22:	61bb      	str	r3, [r7, #24]
 8001d24:	69bb      	ldr	r3, [r7, #24]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001d26:	2200      	movs	r2, #0
 8001d28:	2100      	movs	r1, #0
 8001d2a:	201e      	movs	r0, #30
 8001d2c:	f002 f85b 	bl	8003de6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001d30:	201e      	movs	r0, #30
 8001d32:	f002 f872 	bl	8003e1a <HAL_NVIC_EnableIRQ>
}
 8001d36:	e03c      	b.n	8001db2 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM6)
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	4a23      	ldr	r2, [pc, #140]	@ (8001dcc <HAL_TIM_Base_MspInit+0x15c>)
 8001d3e:	4293      	cmp	r3, r2
 8001d40:	d10c      	bne.n	8001d5c <HAL_TIM_Base_MspInit+0xec>
    __HAL_RCC_TIM6_CLK_ENABLE();
 8001d42:	4b1f      	ldr	r3, [pc, #124]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001d44:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d46:	4a1e      	ldr	r2, [pc, #120]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001d48:	f043 0310 	orr.w	r3, r3, #16
 8001d4c:	6593      	str	r3, [r2, #88]	@ 0x58
 8001d4e:	4b1c      	ldr	r3, [pc, #112]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001d50:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d52:	f003 0310 	and.w	r3, r3, #16
 8001d56:	617b      	str	r3, [r7, #20]
 8001d58:	697b      	ldr	r3, [r7, #20]
}
 8001d5a:	e02a      	b.n	8001db2 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM7)
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	4a1b      	ldr	r2, [pc, #108]	@ (8001dd0 <HAL_TIM_Base_MspInit+0x160>)
 8001d62:	4293      	cmp	r3, r2
 8001d64:	d114      	bne.n	8001d90 <HAL_TIM_Base_MspInit+0x120>
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001d66:	4b16      	ldr	r3, [pc, #88]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001d68:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d6a:	4a15      	ldr	r2, [pc, #84]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001d6c:	f043 0320 	orr.w	r3, r3, #32
 8001d70:	6593      	str	r3, [r2, #88]	@ 0x58
 8001d72:	4b13      	ldr	r3, [pc, #76]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001d74:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d76:	f003 0320 	and.w	r3, r3, #32
 8001d7a:	613b      	str	r3, [r7, #16]
 8001d7c:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
 8001d7e:	2200      	movs	r2, #0
 8001d80:	2100      	movs	r1, #0
 8001d82:	2037      	movs	r0, #55	@ 0x37
 8001d84:	f002 f82f 	bl	8003de6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001d88:	2037      	movs	r0, #55	@ 0x37
 8001d8a:	f002 f846 	bl	8003e1a <HAL_NVIC_EnableIRQ>
}
 8001d8e:	e010      	b.n	8001db2 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM16)
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	681b      	ldr	r3, [r3, #0]
 8001d94:	4a0f      	ldr	r2, [pc, #60]	@ (8001dd4 <HAL_TIM_Base_MspInit+0x164>)
 8001d96:	4293      	cmp	r3, r2
 8001d98:	d10b      	bne.n	8001db2 <HAL_TIM_Base_MspInit+0x142>
    __HAL_RCC_TIM16_CLK_ENABLE();
 8001d9a:	4b09      	ldr	r3, [pc, #36]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001d9c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001d9e:	4a08      	ldr	r2, [pc, #32]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001da0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001da4:	6613      	str	r3, [r2, #96]	@ 0x60
 8001da6:	4b06      	ldr	r3, [pc, #24]	@ (8001dc0 <HAL_TIM_Base_MspInit+0x150>)
 8001da8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001daa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001dae:	60fb      	str	r3, [r7, #12]
 8001db0:	68fb      	ldr	r3, [r7, #12]
}
 8001db2:	bf00      	nop
 8001db4:	3728      	adds	r7, #40	@ 0x28
 8001db6:	46bd      	mov	sp, r7
 8001db8:	bd80      	pop	{r7, pc}
 8001dba:	bf00      	nop
 8001dbc:	40012c00 	.word	0x40012c00
 8001dc0:	40021000 	.word	0x40021000
 8001dc4:	40000400 	.word	0x40000400
 8001dc8:	40000800 	.word	0x40000800
 8001dcc:	40001000 	.word	0x40001000
 8001dd0:	40001400 	.word	0x40001400
 8001dd4:	40014400 	.word	0x40014400

08001dd8 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001dd8:	b580      	push	{r7, lr}
 8001dda:	b08a      	sub	sp, #40	@ 0x28
 8001ddc:	af00      	add	r7, sp, #0
 8001dde:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001de0:	f107 0314 	add.w	r3, r7, #20
 8001de4:	2200      	movs	r2, #0
 8001de6:	601a      	str	r2, [r3, #0]
 8001de8:	605a      	str	r2, [r3, #4]
 8001dea:	609a      	str	r2, [r3, #8]
 8001dec:	60da      	str	r2, [r3, #12]
 8001dee:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	4a23      	ldr	r2, [pc, #140]	@ (8001e84 <HAL_TIM_MspPostInit+0xac>)
 8001df6:	4293      	cmp	r3, r2
 8001df8:	d11e      	bne.n	8001e38 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001dfa:	4b23      	ldr	r3, [pc, #140]	@ (8001e88 <HAL_TIM_MspPostInit+0xb0>)
 8001dfc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001dfe:	4a22      	ldr	r2, [pc, #136]	@ (8001e88 <HAL_TIM_MspPostInit+0xb0>)
 8001e00:	f043 0301 	orr.w	r3, r3, #1
 8001e04:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001e06:	4b20      	ldr	r3, [pc, #128]	@ (8001e88 <HAL_TIM_MspPostInit+0xb0>)
 8001e08:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001e0a:	f003 0301 	and.w	r3, r3, #1
 8001e0e:	613b      	str	r3, [r7, #16]
 8001e10:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001e12:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001e16:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e18:	2302      	movs	r3, #2
 8001e1a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e1c:	2300      	movs	r3, #0
 8001e1e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e20:	2300      	movs	r3, #0
 8001e22:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 8001e24:	2306      	movs	r3, #6
 8001e26:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e28:	f107 0314 	add.w	r3, r7, #20
 8001e2c:	4619      	mov	r1, r3
 8001e2e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001e32:	f002 fe33 	bl	8004a9c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8001e36:	e021      	b.n	8001e7c <HAL_TIM_MspPostInit+0xa4>
  else if(htim->Instance==TIM2)
 8001e38:	687b      	ldr	r3, [r7, #4]
 8001e3a:	681b      	ldr	r3, [r3, #0]
 8001e3c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001e40:	d11c      	bne.n	8001e7c <HAL_TIM_MspPostInit+0xa4>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e42:	4b11      	ldr	r3, [pc, #68]	@ (8001e88 <HAL_TIM_MspPostInit+0xb0>)
 8001e44:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001e46:	4a10      	ldr	r2, [pc, #64]	@ (8001e88 <HAL_TIM_MspPostInit+0xb0>)
 8001e48:	f043 0301 	orr.w	r3, r3, #1
 8001e4c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001e4e:	4b0e      	ldr	r3, [pc, #56]	@ (8001e88 <HAL_TIM_MspPostInit+0xb0>)
 8001e50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001e52:	f003 0301 	and.w	r3, r3, #1
 8001e56:	60fb      	str	r3, [r7, #12]
 8001e58:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8001e5a:	2320      	movs	r3, #32
 8001e5c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e5e:	2302      	movs	r3, #2
 8001e60:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e62:	2300      	movs	r3, #0
 8001e64:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e66:	2300      	movs	r3, #0
 8001e68:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001e6a:	2301      	movs	r3, #1
 8001e6c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e6e:	f107 0314 	add.w	r3, r7, #20
 8001e72:	4619      	mov	r1, r3
 8001e74:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001e78:	f002 fe10 	bl	8004a9c <HAL_GPIO_Init>
}
 8001e7c:	bf00      	nop
 8001e7e:	3728      	adds	r7, #40	@ 0x28
 8001e80:	46bd      	mov	sp, r7
 8001e82:	bd80      	pop	{r7, pc}
 8001e84:	40012c00 	.word	0x40012c00
 8001e88:	40021000 	.word	0x40021000

08001e8c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001e8c:	b480      	push	{r7}
 8001e8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001e90:	bf00      	nop
 8001e92:	e7fd      	b.n	8001e90 <NMI_Handler+0x4>

08001e94 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001e94:	b480      	push	{r7}
 8001e96:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e98:	bf00      	nop
 8001e9a:	e7fd      	b.n	8001e98 <HardFault_Handler+0x4>

08001e9c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001e9c:	b480      	push	{r7}
 8001e9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001ea0:	bf00      	nop
 8001ea2:	e7fd      	b.n	8001ea0 <MemManage_Handler+0x4>

08001ea4 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001ea4:	b480      	push	{r7}
 8001ea6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ea8:	bf00      	nop
 8001eaa:	e7fd      	b.n	8001ea8 <BusFault_Handler+0x4>

08001eac <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001eac:	b480      	push	{r7}
 8001eae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001eb0:	bf00      	nop
 8001eb2:	e7fd      	b.n	8001eb0 <UsageFault_Handler+0x4>

08001eb4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001eb4:	b480      	push	{r7}
 8001eb6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001eb8:	bf00      	nop
 8001eba:	46bd      	mov	sp, r7
 8001ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec0:	4770      	bx	lr

08001ec2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001ec2:	b480      	push	{r7}
 8001ec4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001ec6:	bf00      	nop
 8001ec8:	46bd      	mov	sp, r7
 8001eca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ece:	4770      	bx	lr

08001ed0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001ed0:	b480      	push	{r7}
 8001ed2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001ed4:	bf00      	nop
 8001ed6:	46bd      	mov	sp, r7
 8001ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001edc:	4770      	bx	lr

08001ede <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001ede:	b580      	push	{r7, lr}
 8001ee0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001ee2:	f000 f8ed 	bl	80020c0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001ee6:	bf00      	nop
 8001ee8:	bd80      	pop	{r7, pc}
	...

08001eec <FDCAN1_IT0_IRQHandler>:

/**
  * @brief This function handles FDCAN1 interrupt 0.
  */
void FDCAN1_IT0_IRQHandler(void)
{
 8001eec:	b580      	push	{r7, lr}
 8001eee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FDCAN1_IT0_IRQn 0 */

  /* USER CODE END FDCAN1_IT0_IRQn 0 */
  HAL_FDCAN_IRQHandler(&hfdcan1);
 8001ef0:	4802      	ldr	r0, [pc, #8]	@ (8001efc <FDCAN1_IT0_IRQHandler+0x10>)
 8001ef2:	f002 fb73 	bl	80045dc <HAL_FDCAN_IRQHandler>
  /* USER CODE BEGIN FDCAN1_IT0_IRQn 1 */

  /* USER CODE END FDCAN1_IT0_IRQn 1 */
}
 8001ef6:	bf00      	nop
 8001ef8:	bd80      	pop	{r7, pc}
 8001efa:	bf00      	nop
 8001efc:	20000110 	.word	0x20000110

08001f00 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001f00:	b580      	push	{r7, lr}
 8001f02:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001f04:	4802      	ldr	r0, [pc, #8]	@ (8001f10 <TIM2_IRQHandler+0x10>)
 8001f06:	f004 f921 	bl	800614c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001f0a:	bf00      	nop
 8001f0c:	bd80      	pop	{r7, pc}
 8001f0e:	bf00      	nop
 8001f10:	200001c0 	.word	0x200001c0

08001f14 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001f14:	b580      	push	{r7, lr}
 8001f16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */
	millis++;
 8001f18:	4b14      	ldr	r3, [pc, #80]	@ (8001f6c <TIM3_IRQHandler+0x58>)
 8001f1a:	881b      	ldrh	r3, [r3, #0]
 8001f1c:	3301      	adds	r3, #1
 8001f1e:	b29a      	uxth	r2, r3
 8001f20:	4b12      	ldr	r3, [pc, #72]	@ (8001f6c <TIM3_IRQHandler+0x58>)
 8001f22:	801a      	strh	r2, [r3, #0]
	if(millis % (CAN_interval/2) == 0){
 8001f24:	4b11      	ldr	r3, [pc, #68]	@ (8001f6c <TIM3_IRQHandler+0x58>)
 8001f26:	881b      	ldrh	r3, [r3, #0]
 8001f28:	4a11      	ldr	r2, [pc, #68]	@ (8001f70 <TIM3_IRQHandler+0x5c>)
 8001f2a:	8812      	ldrh	r2, [r2, #0]
 8001f2c:	0852      	lsrs	r2, r2, #1
 8001f2e:	b292      	uxth	r2, r2
 8001f30:	fbb3 f1f2 	udiv	r1, r3, r2
 8001f34:	fb01 f202 	mul.w	r2, r1, r2
 8001f38:	1a9b      	subs	r3, r3, r2
 8001f3a:	b29b      	uxth	r3, r3
 8001f3c:	2b00      	cmp	r3, #0
 8001f3e:	d10f      	bne.n	8001f60 <TIM3_IRQHandler+0x4c>
		  CAN_switch_state(can_select);
 8001f40:	4b0c      	ldr	r3, [pc, #48]	@ (8001f74 <TIM3_IRQHandler+0x60>)
 8001f42:	781b      	ldrb	r3, [r3, #0]
 8001f44:	4618      	mov	r0, r3
 8001f46:	f7fe fab3 	bl	80004b0 <CAN_switch_state>
		  if(can_select == 0){
 8001f4a:	4b0a      	ldr	r3, [pc, #40]	@ (8001f74 <TIM3_IRQHandler+0x60>)
 8001f4c:	781b      	ldrb	r3, [r3, #0]
 8001f4e:	2b00      	cmp	r3, #0
 8001f50:	d103      	bne.n	8001f5a <TIM3_IRQHandler+0x46>
			  can_select = 1;
 8001f52:	4b08      	ldr	r3, [pc, #32]	@ (8001f74 <TIM3_IRQHandler+0x60>)
 8001f54:	2201      	movs	r2, #1
 8001f56:	701a      	strb	r2, [r3, #0]
 8001f58:	e002      	b.n	8001f60 <TIM3_IRQHandler+0x4c>
		  }else{
			  can_select = 0;
 8001f5a:	4b06      	ldr	r3, [pc, #24]	@ (8001f74 <TIM3_IRQHandler+0x60>)
 8001f5c:	2200      	movs	r2, #0
 8001f5e:	701a      	strb	r2, [r3, #0]
		  }
	}
  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001f60:	4805      	ldr	r0, [pc, #20]	@ (8001f78 <TIM3_IRQHandler+0x64>)
 8001f62:	f004 f8f3 	bl	800614c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001f66:	bf00      	nop
 8001f68:	bd80      	pop	{r7, pc}
 8001f6a:	bf00      	nop
 8001f6c:	2000062c 	.word	0x2000062c
 8001f70:	2000064a 	.word	0x2000064a
 8001f74:	2000062e 	.word	0x2000062e
 8001f78:	2000020c 	.word	0x2000020c

08001f7c <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001f7c:	b580      	push	{r7, lr}
 8001f7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001f80:	4802      	ldr	r0, [pc, #8]	@ (8001f8c <TIM4_IRQHandler+0x10>)
 8001f82:	f004 f8e3 	bl	800614c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001f86:	bf00      	nop
 8001f88:	bd80      	pop	{r7, pc}
 8001f8a:	bf00      	nop
 8001f8c:	20000258 	.word	0x20000258

08001f90 <TIM7_IRQHandler>:

/**
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
 8001f90:	b580      	push	{r7, lr}
 8001f92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001f94:	4802      	ldr	r0, [pc, #8]	@ (8001fa0 <TIM7_IRQHandler+0x10>)
 8001f96:	f004 f8d9 	bl	800614c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_IRQn 1 */

  /* USER CODE END TIM7_IRQn 1 */
}
 8001f9a:	bf00      	nop
 8001f9c:	bd80      	pop	{r7, pc}
 8001f9e:	bf00      	nop
 8001fa0:	200002f0 	.word	0x200002f0

08001fa4 <SystemInit>:
 8001fa4:	b480      	push	{r7}
 8001fa6:	af00      	add	r7, sp, #0
 8001fa8:	4b06      	ldr	r3, [pc, #24]	@ (8001fc4 <SystemInit+0x20>)
 8001faa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001fae:	4a05      	ldr	r2, [pc, #20]	@ (8001fc4 <SystemInit+0x20>)
 8001fb0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001fb4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001fb8:	bf00      	nop
 8001fba:	46bd      	mov	sp, r7
 8001fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fc0:	4770      	bx	lr
 8001fc2:	bf00      	nop
 8001fc4:	e000ed00 	.word	0xe000ed00

08001fc8 <Reset_Handler>:
 8001fc8:	480d      	ldr	r0, [pc, #52]	@ (8002000 <LoopForever+0x2>)
 8001fca:	4685      	mov	sp, r0
 8001fcc:	480d      	ldr	r0, [pc, #52]	@ (8002004 <LoopForever+0x6>)
 8001fce:	490e      	ldr	r1, [pc, #56]	@ (8002008 <LoopForever+0xa>)
 8001fd0:	4a0e      	ldr	r2, [pc, #56]	@ (800200c <LoopForever+0xe>)
 8001fd2:	2300      	movs	r3, #0
 8001fd4:	e002      	b.n	8001fdc <LoopCopyDataInit>

08001fd6 <CopyDataInit>:
 8001fd6:	58d4      	ldr	r4, [r2, r3]
 8001fd8:	50c4      	str	r4, [r0, r3]
 8001fda:	3304      	adds	r3, #4

08001fdc <LoopCopyDataInit>:
 8001fdc:	18c4      	adds	r4, r0, r3
 8001fde:	428c      	cmp	r4, r1
 8001fe0:	d3f9      	bcc.n	8001fd6 <CopyDataInit>
 8001fe2:	4a0b      	ldr	r2, [pc, #44]	@ (8002010 <LoopForever+0x12>)
 8001fe4:	4c0b      	ldr	r4, [pc, #44]	@ (8002014 <LoopForever+0x16>)
 8001fe6:	2300      	movs	r3, #0
 8001fe8:	e001      	b.n	8001fee <LoopFillZerobss>

08001fea <FillZerobss>:
 8001fea:	6013      	str	r3, [r2, #0]
 8001fec:	3204      	adds	r2, #4

08001fee <LoopFillZerobss>:
 8001fee:	42a2      	cmp	r2, r4
 8001ff0:	d3fb      	bcc.n	8001fea <FillZerobss>
 8001ff2:	f7ff ffd7 	bl	8001fa4 <SystemInit>
 8001ff6:	f005 f9e9 	bl	80073cc <__libc_init_array>
 8001ffa:	f7fe fff5 	bl	8000fe8 <main>

08001ffe <LoopForever>:
 8001ffe:	e7fe      	b.n	8001ffe <LoopForever>
 8002000:	20008000 	.word	0x20008000
 8002004:	20000000 	.word	0x20000000
 8002008:	2000000c 	.word	0x2000000c
 800200c:	08007454 	.word	0x08007454
 8002010:	2000000c 	.word	0x2000000c
 8002014:	200006a0 	.word	0x200006a0

08002018 <ADC1_2_IRQHandler>:
 8002018:	e7fe      	b.n	8002018 <ADC1_2_IRQHandler>

0800201a <HAL_Init>:
 800201a:	b580      	push	{r7, lr}
 800201c:	b082      	sub	sp, #8
 800201e:	af00      	add	r7, sp, #0
 8002020:	2300      	movs	r3, #0
 8002022:	71fb      	strb	r3, [r7, #7]
 8002024:	2003      	movs	r0, #3
 8002026:	f001 fed3 	bl	8003dd0 <HAL_NVIC_SetPriorityGrouping>
 800202a:	200f      	movs	r0, #15
 800202c:	f000 f80e 	bl	800204c <HAL_InitTick>
 8002030:	4603      	mov	r3, r0
 8002032:	2b00      	cmp	r3, #0
 8002034:	d002      	beq.n	800203c <HAL_Init+0x22>
 8002036:	2301      	movs	r3, #1
 8002038:	71fb      	strb	r3, [r7, #7]
 800203a:	e001      	b.n	8002040 <HAL_Init+0x26>
 800203c:	f7ff fcee 	bl	8001a1c <HAL_MspInit>
 8002040:	79fb      	ldrb	r3, [r7, #7]
 8002042:	4618      	mov	r0, r3
 8002044:	3708      	adds	r7, #8
 8002046:	46bd      	mov	sp, r7
 8002048:	bd80      	pop	{r7, pc}
	...

0800204c <HAL_InitTick>:
 800204c:	b580      	push	{r7, lr}
 800204e:	b084      	sub	sp, #16
 8002050:	af00      	add	r7, sp, #0
 8002052:	6078      	str	r0, [r7, #4]
 8002054:	2300      	movs	r3, #0
 8002056:	73fb      	strb	r3, [r7, #15]
 8002058:	4b16      	ldr	r3, [pc, #88]	@ (80020b4 <HAL_InitTick+0x68>)
 800205a:	681b      	ldr	r3, [r3, #0]
 800205c:	2b00      	cmp	r3, #0
 800205e:	d022      	beq.n	80020a6 <HAL_InitTick+0x5a>
 8002060:	4b15      	ldr	r3, [pc, #84]	@ (80020b8 <HAL_InitTick+0x6c>)
 8002062:	681a      	ldr	r2, [r3, #0]
 8002064:	4b13      	ldr	r3, [pc, #76]	@ (80020b4 <HAL_InitTick+0x68>)
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800206c:	fbb1 f3f3 	udiv	r3, r1, r3
 8002070:	fbb2 f3f3 	udiv	r3, r2, r3
 8002074:	4618      	mov	r0, r3
 8002076:	f001 fede 	bl	8003e36 <HAL_SYSTICK_Config>
 800207a:	4603      	mov	r3, r0
 800207c:	2b00      	cmp	r3, #0
 800207e:	d10f      	bne.n	80020a0 <HAL_InitTick+0x54>
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	2b0f      	cmp	r3, #15
 8002084:	d809      	bhi.n	800209a <HAL_InitTick+0x4e>
 8002086:	2200      	movs	r2, #0
 8002088:	6879      	ldr	r1, [r7, #4]
 800208a:	f04f 30ff 	mov.w	r0, #4294967295
 800208e:	f001 feaa 	bl	8003de6 <HAL_NVIC_SetPriority>
 8002092:	4a0a      	ldr	r2, [pc, #40]	@ (80020bc <HAL_InitTick+0x70>)
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	6013      	str	r3, [r2, #0]
 8002098:	e007      	b.n	80020aa <HAL_InitTick+0x5e>
 800209a:	2301      	movs	r3, #1
 800209c:	73fb      	strb	r3, [r7, #15]
 800209e:	e004      	b.n	80020aa <HAL_InitTick+0x5e>
 80020a0:	2301      	movs	r3, #1
 80020a2:	73fb      	strb	r3, [r7, #15]
 80020a4:	e001      	b.n	80020aa <HAL_InitTick+0x5e>
 80020a6:	2301      	movs	r3, #1
 80020a8:	73fb      	strb	r3, [r7, #15]
 80020aa:	7bfb      	ldrb	r3, [r7, #15]
 80020ac:	4618      	mov	r0, r3
 80020ae:	3710      	adds	r7, #16
 80020b0:	46bd      	mov	sp, r7
 80020b2:	bd80      	pop	{r7, pc}
 80020b4:	20000008 	.word	0x20000008
 80020b8:	20000000 	.word	0x20000000
 80020bc:	20000004 	.word	0x20000004

080020c0 <HAL_IncTick>:
 80020c0:	b480      	push	{r7}
 80020c2:	af00      	add	r7, sp, #0
 80020c4:	4b05      	ldr	r3, [pc, #20]	@ (80020dc <HAL_IncTick+0x1c>)
 80020c6:	681a      	ldr	r2, [r3, #0]
 80020c8:	4b05      	ldr	r3, [pc, #20]	@ (80020e0 <HAL_IncTick+0x20>)
 80020ca:	681b      	ldr	r3, [r3, #0]
 80020cc:	4413      	add	r3, r2
 80020ce:	4a03      	ldr	r2, [pc, #12]	@ (80020dc <HAL_IncTick+0x1c>)
 80020d0:	6013      	str	r3, [r2, #0]
 80020d2:	bf00      	nop
 80020d4:	46bd      	mov	sp, r7
 80020d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020da:	4770      	bx	lr
 80020dc:	2000069c 	.word	0x2000069c
 80020e0:	20000008 	.word	0x20000008

080020e4 <HAL_GetTick>:
 80020e4:	b480      	push	{r7}
 80020e6:	af00      	add	r7, sp, #0
 80020e8:	4b03      	ldr	r3, [pc, #12]	@ (80020f8 <HAL_GetTick+0x14>)
 80020ea:	681b      	ldr	r3, [r3, #0]
 80020ec:	4618      	mov	r0, r3
 80020ee:	46bd      	mov	sp, r7
 80020f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020f4:	4770      	bx	lr
 80020f6:	bf00      	nop
 80020f8:	2000069c 	.word	0x2000069c

080020fc <LL_ADC_SetCommonClock>:
 80020fc:	b480      	push	{r7}
 80020fe:	b083      	sub	sp, #12
 8002100:	af00      	add	r7, sp, #0
 8002102:	6078      	str	r0, [r7, #4]
 8002104:	6039      	str	r1, [r7, #0]
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	689b      	ldr	r3, [r3, #8]
 800210a:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 800210e:	683b      	ldr	r3, [r7, #0]
 8002110:	431a      	orrs	r2, r3
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	609a      	str	r2, [r3, #8]
 8002116:	bf00      	nop
 8002118:	370c      	adds	r7, #12
 800211a:	46bd      	mov	sp, r7
 800211c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002120:	4770      	bx	lr

08002122 <LL_ADC_SetCommonPathInternalCh>:
 8002122:	b480      	push	{r7}
 8002124:	b083      	sub	sp, #12
 8002126:	af00      	add	r7, sp, #0
 8002128:	6078      	str	r0, [r7, #4]
 800212a:	6039      	str	r1, [r7, #0]
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	689b      	ldr	r3, [r3, #8]
 8002130:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8002134:	683b      	ldr	r3, [r7, #0]
 8002136:	431a      	orrs	r2, r3
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	609a      	str	r2, [r3, #8]
 800213c:	bf00      	nop
 800213e:	370c      	adds	r7, #12
 8002140:	46bd      	mov	sp, r7
 8002142:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002146:	4770      	bx	lr

08002148 <LL_ADC_GetCommonPathInternalCh>:
 8002148:	b480      	push	{r7}
 800214a:	b083      	sub	sp, #12
 800214c:	af00      	add	r7, sp, #0
 800214e:	6078      	str	r0, [r7, #4]
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	689b      	ldr	r3, [r3, #8]
 8002154:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 8002158:	4618      	mov	r0, r3
 800215a:	370c      	adds	r7, #12
 800215c:	46bd      	mov	sp, r7
 800215e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002162:	4770      	bx	lr

08002164 <LL_ADC_SetOffset>:
 8002164:	b480      	push	{r7}
 8002166:	b087      	sub	sp, #28
 8002168:	af00      	add	r7, sp, #0
 800216a:	60f8      	str	r0, [r7, #12]
 800216c:	60b9      	str	r1, [r7, #8]
 800216e:	607a      	str	r2, [r7, #4]
 8002170:	603b      	str	r3, [r7, #0]
 8002172:	68fb      	ldr	r3, [r7, #12]
 8002174:	3360      	adds	r3, #96	@ 0x60
 8002176:	461a      	mov	r2, r3
 8002178:	68bb      	ldr	r3, [r7, #8]
 800217a:	009b      	lsls	r3, r3, #2
 800217c:	4413      	add	r3, r2
 800217e:	617b      	str	r3, [r7, #20]
 8002180:	697b      	ldr	r3, [r7, #20]
 8002182:	681a      	ldr	r2, [r3, #0]
 8002184:	4b08      	ldr	r3, [pc, #32]	@ (80021a8 <LL_ADC_SetOffset+0x44>)
 8002186:	4013      	ands	r3, r2
 8002188:	687a      	ldr	r2, [r7, #4]
 800218a:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 800218e:	683a      	ldr	r2, [r7, #0]
 8002190:	430a      	orrs	r2, r1
 8002192:	4313      	orrs	r3, r2
 8002194:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8002198:	697b      	ldr	r3, [r7, #20]
 800219a:	601a      	str	r2, [r3, #0]
 800219c:	bf00      	nop
 800219e:	371c      	adds	r7, #28
 80021a0:	46bd      	mov	sp, r7
 80021a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021a6:	4770      	bx	lr
 80021a8:	03fff000 	.word	0x03fff000

080021ac <LL_ADC_GetOffsetChannel>:
 80021ac:	b480      	push	{r7}
 80021ae:	b085      	sub	sp, #20
 80021b0:	af00      	add	r7, sp, #0
 80021b2:	6078      	str	r0, [r7, #4]
 80021b4:	6039      	str	r1, [r7, #0]
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	3360      	adds	r3, #96	@ 0x60
 80021ba:	461a      	mov	r2, r3
 80021bc:	683b      	ldr	r3, [r7, #0]
 80021be:	009b      	lsls	r3, r3, #2
 80021c0:	4413      	add	r3, r2
 80021c2:	60fb      	str	r3, [r7, #12]
 80021c4:	68fb      	ldr	r3, [r7, #12]
 80021c6:	681b      	ldr	r3, [r3, #0]
 80021c8:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 80021cc:	4618      	mov	r0, r3
 80021ce:	3714      	adds	r7, #20
 80021d0:	46bd      	mov	sp, r7
 80021d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021d6:	4770      	bx	lr

080021d8 <LL_ADC_SetOffsetState>:
 80021d8:	b480      	push	{r7}
 80021da:	b087      	sub	sp, #28
 80021dc:	af00      	add	r7, sp, #0
 80021de:	60f8      	str	r0, [r7, #12]
 80021e0:	60b9      	str	r1, [r7, #8]
 80021e2:	607a      	str	r2, [r7, #4]
 80021e4:	68fb      	ldr	r3, [r7, #12]
 80021e6:	3360      	adds	r3, #96	@ 0x60
 80021e8:	461a      	mov	r2, r3
 80021ea:	68bb      	ldr	r3, [r7, #8]
 80021ec:	009b      	lsls	r3, r3, #2
 80021ee:	4413      	add	r3, r2
 80021f0:	617b      	str	r3, [r7, #20]
 80021f2:	697b      	ldr	r3, [r7, #20]
 80021f4:	681b      	ldr	r3, [r3, #0]
 80021f6:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	431a      	orrs	r2, r3
 80021fe:	697b      	ldr	r3, [r7, #20]
 8002200:	601a      	str	r2, [r3, #0]
 8002202:	bf00      	nop
 8002204:	371c      	adds	r7, #28
 8002206:	46bd      	mov	sp, r7
 8002208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800220c:	4770      	bx	lr

0800220e <LL_ADC_SetOffsetSign>:
 800220e:	b480      	push	{r7}
 8002210:	b087      	sub	sp, #28
 8002212:	af00      	add	r7, sp, #0
 8002214:	60f8      	str	r0, [r7, #12]
 8002216:	60b9      	str	r1, [r7, #8]
 8002218:	607a      	str	r2, [r7, #4]
 800221a:	68fb      	ldr	r3, [r7, #12]
 800221c:	3360      	adds	r3, #96	@ 0x60
 800221e:	461a      	mov	r2, r3
 8002220:	68bb      	ldr	r3, [r7, #8]
 8002222:	009b      	lsls	r3, r3, #2
 8002224:	4413      	add	r3, r2
 8002226:	617b      	str	r3, [r7, #20]
 8002228:	697b      	ldr	r3, [r7, #20]
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	431a      	orrs	r2, r3
 8002234:	697b      	ldr	r3, [r7, #20]
 8002236:	601a      	str	r2, [r3, #0]
 8002238:	bf00      	nop
 800223a:	371c      	adds	r7, #28
 800223c:	46bd      	mov	sp, r7
 800223e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002242:	4770      	bx	lr

08002244 <LL_ADC_SetOffsetSaturation>:
 8002244:	b480      	push	{r7}
 8002246:	b087      	sub	sp, #28
 8002248:	af00      	add	r7, sp, #0
 800224a:	60f8      	str	r0, [r7, #12]
 800224c:	60b9      	str	r1, [r7, #8]
 800224e:	607a      	str	r2, [r7, #4]
 8002250:	68fb      	ldr	r3, [r7, #12]
 8002252:	3360      	adds	r3, #96	@ 0x60
 8002254:	461a      	mov	r2, r3
 8002256:	68bb      	ldr	r3, [r7, #8]
 8002258:	009b      	lsls	r3, r3, #2
 800225a:	4413      	add	r3, r2
 800225c:	617b      	str	r3, [r7, #20]
 800225e:	697b      	ldr	r3, [r7, #20]
 8002260:	681b      	ldr	r3, [r3, #0]
 8002262:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	431a      	orrs	r2, r3
 800226a:	697b      	ldr	r3, [r7, #20]
 800226c:	601a      	str	r2, [r3, #0]
 800226e:	bf00      	nop
 8002270:	371c      	adds	r7, #28
 8002272:	46bd      	mov	sp, r7
 8002274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002278:	4770      	bx	lr

0800227a <LL_ADC_SetSamplingTimeCommonConfig>:
 800227a:	b480      	push	{r7}
 800227c:	b083      	sub	sp, #12
 800227e:	af00      	add	r7, sp, #0
 8002280:	6078      	str	r0, [r7, #4]
 8002282:	6039      	str	r1, [r7, #0]
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	695b      	ldr	r3, [r3, #20]
 8002288:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 800228c:	683b      	ldr	r3, [r7, #0]
 800228e:	431a      	orrs	r2, r3
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	615a      	str	r2, [r3, #20]
 8002294:	bf00      	nop
 8002296:	370c      	adds	r7, #12
 8002298:	46bd      	mov	sp, r7
 800229a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800229e:	4770      	bx	lr

080022a0 <LL_ADC_REG_IsTriggerSourceSWStart>:
 80022a0:	b480      	push	{r7}
 80022a2:	b083      	sub	sp, #12
 80022a4:	af00      	add	r7, sp, #0
 80022a6:	6078      	str	r0, [r7, #4]
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	68db      	ldr	r3, [r3, #12]
 80022ac:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 80022b0:	2b00      	cmp	r3, #0
 80022b2:	d101      	bne.n	80022b8 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 80022b4:	2301      	movs	r3, #1
 80022b6:	e000      	b.n	80022ba <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 80022b8:	2300      	movs	r3, #0
 80022ba:	4618      	mov	r0, r3
 80022bc:	370c      	adds	r7, #12
 80022be:	46bd      	mov	sp, r7
 80022c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022c4:	4770      	bx	lr

080022c6 <LL_ADC_REG_SetSequencerRanks>:
 80022c6:	b480      	push	{r7}
 80022c8:	b087      	sub	sp, #28
 80022ca:	af00      	add	r7, sp, #0
 80022cc:	60f8      	str	r0, [r7, #12]
 80022ce:	60b9      	str	r1, [r7, #8]
 80022d0:	607a      	str	r2, [r7, #4]
 80022d2:	68fb      	ldr	r3, [r7, #12]
 80022d4:	3330      	adds	r3, #48	@ 0x30
 80022d6:	461a      	mov	r2, r3
 80022d8:	68bb      	ldr	r3, [r7, #8]
 80022da:	0a1b      	lsrs	r3, r3, #8
 80022dc:	009b      	lsls	r3, r3, #2
 80022de:	f003 030c 	and.w	r3, r3, #12
 80022e2:	4413      	add	r3, r2
 80022e4:	617b      	str	r3, [r7, #20]
 80022e6:	697b      	ldr	r3, [r7, #20]
 80022e8:	681a      	ldr	r2, [r3, #0]
 80022ea:	68bb      	ldr	r3, [r7, #8]
 80022ec:	f003 031f 	and.w	r3, r3, #31
 80022f0:	211f      	movs	r1, #31
 80022f2:	fa01 f303 	lsl.w	r3, r1, r3
 80022f6:	43db      	mvns	r3, r3
 80022f8:	401a      	ands	r2, r3
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	0e9b      	lsrs	r3, r3, #26
 80022fe:	f003 011f 	and.w	r1, r3, #31
 8002302:	68bb      	ldr	r3, [r7, #8]
 8002304:	f003 031f 	and.w	r3, r3, #31
 8002308:	fa01 f303 	lsl.w	r3, r1, r3
 800230c:	431a      	orrs	r2, r3
 800230e:	697b      	ldr	r3, [r7, #20]
 8002310:	601a      	str	r2, [r3, #0]
 8002312:	bf00      	nop
 8002314:	371c      	adds	r7, #28
 8002316:	46bd      	mov	sp, r7
 8002318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800231c:	4770      	bx	lr

0800231e <LL_ADC_SetChannelSamplingTime>:
 800231e:	b480      	push	{r7}
 8002320:	b087      	sub	sp, #28
 8002322:	af00      	add	r7, sp, #0
 8002324:	60f8      	str	r0, [r7, #12]
 8002326:	60b9      	str	r1, [r7, #8]
 8002328:	607a      	str	r2, [r7, #4]
 800232a:	68fb      	ldr	r3, [r7, #12]
 800232c:	3314      	adds	r3, #20
 800232e:	461a      	mov	r2, r3
 8002330:	68bb      	ldr	r3, [r7, #8]
 8002332:	0e5b      	lsrs	r3, r3, #25
 8002334:	009b      	lsls	r3, r3, #2
 8002336:	f003 0304 	and.w	r3, r3, #4
 800233a:	4413      	add	r3, r2
 800233c:	617b      	str	r3, [r7, #20]
 800233e:	697b      	ldr	r3, [r7, #20]
 8002340:	681a      	ldr	r2, [r3, #0]
 8002342:	68bb      	ldr	r3, [r7, #8]
 8002344:	0d1b      	lsrs	r3, r3, #20
 8002346:	f003 031f 	and.w	r3, r3, #31
 800234a:	2107      	movs	r1, #7
 800234c:	fa01 f303 	lsl.w	r3, r1, r3
 8002350:	43db      	mvns	r3, r3
 8002352:	401a      	ands	r2, r3
 8002354:	68bb      	ldr	r3, [r7, #8]
 8002356:	0d1b      	lsrs	r3, r3, #20
 8002358:	f003 031f 	and.w	r3, r3, #31
 800235c:	6879      	ldr	r1, [r7, #4]
 800235e:	fa01 f303 	lsl.w	r3, r1, r3
 8002362:	431a      	orrs	r2, r3
 8002364:	697b      	ldr	r3, [r7, #20]
 8002366:	601a      	str	r2, [r3, #0]
 8002368:	bf00      	nop
 800236a:	371c      	adds	r7, #28
 800236c:	46bd      	mov	sp, r7
 800236e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002372:	4770      	bx	lr

08002374 <LL_ADC_SetChannelSingleDiff>:
 8002374:	b480      	push	{r7}
 8002376:	b085      	sub	sp, #20
 8002378:	af00      	add	r7, sp, #0
 800237a:	60f8      	str	r0, [r7, #12]
 800237c:	60b9      	str	r1, [r7, #8]
 800237e:	607a      	str	r2, [r7, #4]
 8002380:	68fb      	ldr	r3, [r7, #12]
 8002382:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8002386:	68bb      	ldr	r3, [r7, #8]
 8002388:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800238c:	43db      	mvns	r3, r3
 800238e:	401a      	ands	r2, r3
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	f003 0318 	and.w	r3, r3, #24
 8002396:	4908      	ldr	r1, [pc, #32]	@ (80023b8 <LL_ADC_SetChannelSingleDiff+0x44>)
 8002398:	40d9      	lsrs	r1, r3
 800239a:	68bb      	ldr	r3, [r7, #8]
 800239c:	400b      	ands	r3, r1
 800239e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80023a2:	431a      	orrs	r2, r3
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 80023aa:	bf00      	nop
 80023ac:	3714      	adds	r7, #20
 80023ae:	46bd      	mov	sp, r7
 80023b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023b4:	4770      	bx	lr
 80023b6:	bf00      	nop
 80023b8:	0007ffff 	.word	0x0007ffff

080023bc <LL_ADC_GetMultimode>:
 80023bc:	b480      	push	{r7}
 80023be:	b083      	sub	sp, #12
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	6078      	str	r0, [r7, #4]
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	689b      	ldr	r3, [r3, #8]
 80023c8:	f003 031f 	and.w	r3, r3, #31
 80023cc:	4618      	mov	r0, r3
 80023ce:	370c      	adds	r7, #12
 80023d0:	46bd      	mov	sp, r7
 80023d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023d6:	4770      	bx	lr

080023d8 <LL_ADC_GetMultiDMATransfer>:
 80023d8:	b480      	push	{r7}
 80023da:	b083      	sub	sp, #12
 80023dc:	af00      	add	r7, sp, #0
 80023de:	6078      	str	r0, [r7, #4]
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	689b      	ldr	r3, [r3, #8]
 80023e4:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 80023e8:	4618      	mov	r0, r3
 80023ea:	370c      	adds	r7, #12
 80023ec:	46bd      	mov	sp, r7
 80023ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023f2:	4770      	bx	lr

080023f4 <LL_ADC_DisableDeepPowerDown>:
 80023f4:	b480      	push	{r7}
 80023f6:	b083      	sub	sp, #12
 80023f8:	af00      	add	r7, sp, #0
 80023fa:	6078      	str	r0, [r7, #4]
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	689b      	ldr	r3, [r3, #8]
 8002400:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 8002404:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002408:	687a      	ldr	r2, [r7, #4]
 800240a:	6093      	str	r3, [r2, #8]
 800240c:	bf00      	nop
 800240e:	370c      	adds	r7, #12
 8002410:	46bd      	mov	sp, r7
 8002412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002416:	4770      	bx	lr

08002418 <LL_ADC_IsDeepPowerDownEnabled>:
 8002418:	b480      	push	{r7}
 800241a:	b083      	sub	sp, #12
 800241c:	af00      	add	r7, sp, #0
 800241e:	6078      	str	r0, [r7, #4]
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	689b      	ldr	r3, [r3, #8]
 8002424:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8002428:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800242c:	d101      	bne.n	8002432 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 800242e:	2301      	movs	r3, #1
 8002430:	e000      	b.n	8002434 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8002432:	2300      	movs	r3, #0
 8002434:	4618      	mov	r0, r3
 8002436:	370c      	adds	r7, #12
 8002438:	46bd      	mov	sp, r7
 800243a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800243e:	4770      	bx	lr

08002440 <LL_ADC_EnableInternalRegulator>:
 8002440:	b480      	push	{r7}
 8002442:	b083      	sub	sp, #12
 8002444:	af00      	add	r7, sp, #0
 8002446:	6078      	str	r0, [r7, #4]
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	689b      	ldr	r3, [r3, #8]
 800244c:	f023 4310 	bic.w	r3, r3, #2415919104	@ 0x90000000
 8002450:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002454:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	609a      	str	r2, [r3, #8]
 800245c:	bf00      	nop
 800245e:	370c      	adds	r7, #12
 8002460:	46bd      	mov	sp, r7
 8002462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002466:	4770      	bx	lr

08002468 <LL_ADC_IsInternalRegulatorEnabled>:
 8002468:	b480      	push	{r7}
 800246a:	b083      	sub	sp, #12
 800246c:	af00      	add	r7, sp, #0
 800246e:	6078      	str	r0, [r7, #4]
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	689b      	ldr	r3, [r3, #8]
 8002474:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002478:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800247c:	d101      	bne.n	8002482 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 800247e:	2301      	movs	r3, #1
 8002480:	e000      	b.n	8002484 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8002482:	2300      	movs	r3, #0
 8002484:	4618      	mov	r0, r3
 8002486:	370c      	adds	r7, #12
 8002488:	46bd      	mov	sp, r7
 800248a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800248e:	4770      	bx	lr

08002490 <LL_ADC_Enable>:
 8002490:	b480      	push	{r7}
 8002492:	b083      	sub	sp, #12
 8002494:	af00      	add	r7, sp, #0
 8002496:	6078      	str	r0, [r7, #4]
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	689b      	ldr	r3, [r3, #8]
 800249c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80024a0:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80024a4:	f043 0201 	orr.w	r2, r3, #1
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	609a      	str	r2, [r3, #8]
 80024ac:	bf00      	nop
 80024ae:	370c      	adds	r7, #12
 80024b0:	46bd      	mov	sp, r7
 80024b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024b6:	4770      	bx	lr

080024b8 <LL_ADC_Disable>:
 80024b8:	b480      	push	{r7}
 80024ba:	b083      	sub	sp, #12
 80024bc:	af00      	add	r7, sp, #0
 80024be:	6078      	str	r0, [r7, #4]
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	689b      	ldr	r3, [r3, #8]
 80024c4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80024c8:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80024cc:	f043 0202 	orr.w	r2, r3, #2
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	609a      	str	r2, [r3, #8]
 80024d4:	bf00      	nop
 80024d6:	370c      	adds	r7, #12
 80024d8:	46bd      	mov	sp, r7
 80024da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024de:	4770      	bx	lr

080024e0 <LL_ADC_IsEnabled>:
 80024e0:	b480      	push	{r7}
 80024e2:	b083      	sub	sp, #12
 80024e4:	af00      	add	r7, sp, #0
 80024e6:	6078      	str	r0, [r7, #4]
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	689b      	ldr	r3, [r3, #8]
 80024ec:	f003 0301 	and.w	r3, r3, #1
 80024f0:	2b01      	cmp	r3, #1
 80024f2:	d101      	bne.n	80024f8 <LL_ADC_IsEnabled+0x18>
 80024f4:	2301      	movs	r3, #1
 80024f6:	e000      	b.n	80024fa <LL_ADC_IsEnabled+0x1a>
 80024f8:	2300      	movs	r3, #0
 80024fa:	4618      	mov	r0, r3
 80024fc:	370c      	adds	r7, #12
 80024fe:	46bd      	mov	sp, r7
 8002500:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002504:	4770      	bx	lr

08002506 <LL_ADC_IsDisableOngoing>:
 8002506:	b480      	push	{r7}
 8002508:	b083      	sub	sp, #12
 800250a:	af00      	add	r7, sp, #0
 800250c:	6078      	str	r0, [r7, #4]
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	689b      	ldr	r3, [r3, #8]
 8002512:	f003 0302 	and.w	r3, r3, #2
 8002516:	2b02      	cmp	r3, #2
 8002518:	d101      	bne.n	800251e <LL_ADC_IsDisableOngoing+0x18>
 800251a:	2301      	movs	r3, #1
 800251c:	e000      	b.n	8002520 <LL_ADC_IsDisableOngoing+0x1a>
 800251e:	2300      	movs	r3, #0
 8002520:	4618      	mov	r0, r3
 8002522:	370c      	adds	r7, #12
 8002524:	46bd      	mov	sp, r7
 8002526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800252a:	4770      	bx	lr

0800252c <LL_ADC_REG_StartConversion>:
 800252c:	b480      	push	{r7}
 800252e:	b083      	sub	sp, #12
 8002530:	af00      	add	r7, sp, #0
 8002532:	6078      	str	r0, [r7, #4]
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	689b      	ldr	r3, [r3, #8]
 8002538:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800253c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002540:	f043 0204 	orr.w	r2, r3, #4
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	609a      	str	r2, [r3, #8]
 8002548:	bf00      	nop
 800254a:	370c      	adds	r7, #12
 800254c:	46bd      	mov	sp, r7
 800254e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002552:	4770      	bx	lr

08002554 <LL_ADC_REG_StopConversion>:
 8002554:	b480      	push	{r7}
 8002556:	b083      	sub	sp, #12
 8002558:	af00      	add	r7, sp, #0
 800255a:	6078      	str	r0, [r7, #4]
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	689b      	ldr	r3, [r3, #8]
 8002560:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002564:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002568:	f043 0210 	orr.w	r2, r3, #16
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	609a      	str	r2, [r3, #8]
 8002570:	bf00      	nop
 8002572:	370c      	adds	r7, #12
 8002574:	46bd      	mov	sp, r7
 8002576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800257a:	4770      	bx	lr

0800257c <LL_ADC_REG_IsConversionOngoing>:
 800257c:	b480      	push	{r7}
 800257e:	b083      	sub	sp, #12
 8002580:	af00      	add	r7, sp, #0
 8002582:	6078      	str	r0, [r7, #4]
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	689b      	ldr	r3, [r3, #8]
 8002588:	f003 0304 	and.w	r3, r3, #4
 800258c:	2b04      	cmp	r3, #4
 800258e:	d101      	bne.n	8002594 <LL_ADC_REG_IsConversionOngoing+0x18>
 8002590:	2301      	movs	r3, #1
 8002592:	e000      	b.n	8002596 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8002594:	2300      	movs	r3, #0
 8002596:	4618      	mov	r0, r3
 8002598:	370c      	adds	r7, #12
 800259a:	46bd      	mov	sp, r7
 800259c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025a0:	4770      	bx	lr

080025a2 <LL_ADC_INJ_StopConversion>:
 80025a2:	b480      	push	{r7}
 80025a4:	b083      	sub	sp, #12
 80025a6:	af00      	add	r7, sp, #0
 80025a8:	6078      	str	r0, [r7, #4]
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	689b      	ldr	r3, [r3, #8]
 80025ae:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80025b2:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80025b6:	f043 0220 	orr.w	r2, r3, #32
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	609a      	str	r2, [r3, #8]
 80025be:	bf00      	nop
 80025c0:	370c      	adds	r7, #12
 80025c2:	46bd      	mov	sp, r7
 80025c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025c8:	4770      	bx	lr

080025ca <LL_ADC_INJ_IsConversionOngoing>:
 80025ca:	b480      	push	{r7}
 80025cc:	b083      	sub	sp, #12
 80025ce:	af00      	add	r7, sp, #0
 80025d0:	6078      	str	r0, [r7, #4]
 80025d2:	687b      	ldr	r3, [r7, #4]
 80025d4:	689b      	ldr	r3, [r3, #8]
 80025d6:	f003 0308 	and.w	r3, r3, #8
 80025da:	2b08      	cmp	r3, #8
 80025dc:	d101      	bne.n	80025e2 <LL_ADC_INJ_IsConversionOngoing+0x18>
 80025de:	2301      	movs	r3, #1
 80025e0:	e000      	b.n	80025e4 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 80025e2:	2300      	movs	r3, #0
 80025e4:	4618      	mov	r0, r3
 80025e6:	370c      	adds	r7, #12
 80025e8:	46bd      	mov	sp, r7
 80025ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ee:	4770      	bx	lr

080025f0 <HAL_ADC_Init>:
 80025f0:	b590      	push	{r4, r7, lr}
 80025f2:	b089      	sub	sp, #36	@ 0x24
 80025f4:	af00      	add	r7, sp, #0
 80025f6:	6078      	str	r0, [r7, #4]
 80025f8:	2300      	movs	r3, #0
 80025fa:	77fb      	strb	r3, [r7, #31]
 80025fc:	2300      	movs	r3, #0
 80025fe:	60fb      	str	r3, [r7, #12]
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	2b00      	cmp	r3, #0
 8002604:	d101      	bne.n	800260a <HAL_ADC_Init+0x1a>
 8002606:	2301      	movs	r3, #1
 8002608:	e167      	b.n	80028da <HAL_ADC_Init+0x2ea>
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	695b      	ldr	r3, [r3, #20]
 800260e:	2b00      	cmp	r3, #0
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002614:	2b00      	cmp	r3, #0
 8002616:	d109      	bne.n	800262c <HAL_ADC_Init+0x3c>
 8002618:	6878      	ldr	r0, [r7, #4]
 800261a:	f7ff fa23 	bl	8001a64 <HAL_ADC_MspInit>
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	2200      	movs	r2, #0
 8002622:	661a      	str	r2, [r3, #96]	@ 0x60
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	2200      	movs	r2, #0
 8002628:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	4618      	mov	r0, r3
 8002632:	f7ff fef1 	bl	8002418 <LL_ADC_IsDeepPowerDownEnabled>
 8002636:	4603      	mov	r3, r0
 8002638:	2b00      	cmp	r3, #0
 800263a:	d004      	beq.n	8002646 <HAL_ADC_Init+0x56>
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	4618      	mov	r0, r3
 8002642:	f7ff fed7 	bl	80023f4 <LL_ADC_DisableDeepPowerDown>
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	681b      	ldr	r3, [r3, #0]
 800264a:	4618      	mov	r0, r3
 800264c:	f7ff ff0c 	bl	8002468 <LL_ADC_IsInternalRegulatorEnabled>
 8002650:	4603      	mov	r3, r0
 8002652:	2b00      	cmp	r3, #0
 8002654:	d115      	bne.n	8002682 <HAL_ADC_Init+0x92>
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	681b      	ldr	r3, [r3, #0]
 800265a:	4618      	mov	r0, r3
 800265c:	f7ff fef0 	bl	8002440 <LL_ADC_EnableInternalRegulator>
 8002660:	4ba0      	ldr	r3, [pc, #640]	@ (80028e4 <HAL_ADC_Init+0x2f4>)
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	099b      	lsrs	r3, r3, #6
 8002666:	4aa0      	ldr	r2, [pc, #640]	@ (80028e8 <HAL_ADC_Init+0x2f8>)
 8002668:	fba2 2303 	umull	r2, r3, r2, r3
 800266c:	099b      	lsrs	r3, r3, #6
 800266e:	3301      	adds	r3, #1
 8002670:	005b      	lsls	r3, r3, #1
 8002672:	60fb      	str	r3, [r7, #12]
 8002674:	e002      	b.n	800267c <HAL_ADC_Init+0x8c>
 8002676:	68fb      	ldr	r3, [r7, #12]
 8002678:	3b01      	subs	r3, #1
 800267a:	60fb      	str	r3, [r7, #12]
 800267c:	68fb      	ldr	r3, [r7, #12]
 800267e:	2b00      	cmp	r3, #0
 8002680:	d1f9      	bne.n	8002676 <HAL_ADC_Init+0x86>
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	681b      	ldr	r3, [r3, #0]
 8002686:	4618      	mov	r0, r3
 8002688:	f7ff feee 	bl	8002468 <LL_ADC_IsInternalRegulatorEnabled>
 800268c:	4603      	mov	r3, r0
 800268e:	2b00      	cmp	r3, #0
 8002690:	d10d      	bne.n	80026ae <HAL_ADC_Init+0xbe>
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002696:	f043 0210 	orr.w	r2, r3, #16
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80026a2:	f043 0201 	orr.w	r2, r3, #1
 80026a6:	687b      	ldr	r3, [r7, #4]
 80026a8:	661a      	str	r2, [r3, #96]	@ 0x60
 80026aa:	2301      	movs	r3, #1
 80026ac:	77fb      	strb	r3, [r7, #31]
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	681b      	ldr	r3, [r3, #0]
 80026b2:	4618      	mov	r0, r3
 80026b4:	f7ff ff62 	bl	800257c <LL_ADC_REG_IsConversionOngoing>
 80026b8:	6178      	str	r0, [r7, #20]
 80026ba:	687b      	ldr	r3, [r7, #4]
 80026bc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80026be:	f003 0310 	and.w	r3, r3, #16
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	f040 8100 	bne.w	80028c8 <HAL_ADC_Init+0x2d8>
 80026c8:	697b      	ldr	r3, [r7, #20]
 80026ca:	2b00      	cmp	r3, #0
 80026cc:	f040 80fc 	bne.w	80028c8 <HAL_ADC_Init+0x2d8>
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80026d4:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 80026d8:	f043 0202 	orr.w	r2, r3, #2
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	65da      	str	r2, [r3, #92]	@ 0x5c
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	4618      	mov	r0, r3
 80026e6:	f7ff fefb 	bl	80024e0 <LL_ADC_IsEnabled>
 80026ea:	4603      	mov	r3, r0
 80026ec:	2b00      	cmp	r3, #0
 80026ee:	d111      	bne.n	8002714 <HAL_ADC_Init+0x124>
 80026f0:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 80026f4:	f7ff fef4 	bl	80024e0 <LL_ADC_IsEnabled>
 80026f8:	4604      	mov	r4, r0
 80026fa:	487c      	ldr	r0, [pc, #496]	@ (80028ec <HAL_ADC_Init+0x2fc>)
 80026fc:	f7ff fef0 	bl	80024e0 <LL_ADC_IsEnabled>
 8002700:	4603      	mov	r3, r0
 8002702:	4323      	orrs	r3, r4
 8002704:	2b00      	cmp	r3, #0
 8002706:	d105      	bne.n	8002714 <HAL_ADC_Init+0x124>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	685b      	ldr	r3, [r3, #4]
 800270c:	4619      	mov	r1, r3
 800270e:	4878      	ldr	r0, [pc, #480]	@ (80028f0 <HAL_ADC_Init+0x300>)
 8002710:	f7ff fcf4 	bl	80020fc <LL_ADC_SetCommonClock>
 8002714:	687b      	ldr	r3, [r7, #4]
 8002716:	7f5b      	ldrb	r3, [r3, #29]
 8002718:	035a      	lsls	r2, r3, #13
 800271a:	687b      	ldr	r3, [r7, #4]
 800271c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800271e:	431a      	orrs	r2, r3
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	68db      	ldr	r3, [r3, #12]
 8002724:	431a      	orrs	r2, r3
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	689b      	ldr	r3, [r3, #8]
 800272a:	431a      	orrs	r2, r3
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002732:	041b      	lsls	r3, r3, #16
 8002734:	4313      	orrs	r3, r2
 8002736:	61bb      	str	r3, [r7, #24]
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800273e:	2b01      	cmp	r3, #1
 8002740:	d106      	bne.n	8002750 <HAL_ADC_Init+0x160>
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002746:	3b01      	subs	r3, #1
 8002748:	045b      	lsls	r3, r3, #17
 800274a:	69ba      	ldr	r2, [r7, #24]
 800274c:	4313      	orrs	r3, r2
 800274e:	61bb      	str	r3, [r7, #24]
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002754:	2b00      	cmp	r3, #0
 8002756:	d009      	beq.n	800276c <HAL_ADC_Init+0x17c>
 8002758:	687b      	ldr	r3, [r7, #4]
 800275a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800275c:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002764:	4313      	orrs	r3, r2
 8002766:	69ba      	ldr	r2, [r7, #24]
 8002768:	4313      	orrs	r3, r2
 800276a:	61bb      	str	r3, [r7, #24]
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	68da      	ldr	r2, [r3, #12]
 8002772:	4b60      	ldr	r3, [pc, #384]	@ (80028f4 <HAL_ADC_Init+0x304>)
 8002774:	4013      	ands	r3, r2
 8002776:	687a      	ldr	r2, [r7, #4]
 8002778:	6812      	ldr	r2, [r2, #0]
 800277a:	69b9      	ldr	r1, [r7, #24]
 800277c:	430b      	orrs	r3, r1
 800277e:	60d3      	str	r3, [r2, #12]
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	691b      	ldr	r3, [r3, #16]
 8002786:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	681b      	ldr	r3, [r3, #0]
 8002792:	430a      	orrs	r2, r1
 8002794:	611a      	str	r2, [r3, #16]
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	4618      	mov	r0, r3
 800279c:	f7ff ff15 	bl	80025ca <LL_ADC_INJ_IsConversionOngoing>
 80027a0:	6138      	str	r0, [r7, #16]
 80027a2:	697b      	ldr	r3, [r7, #20]
 80027a4:	2b00      	cmp	r3, #0
 80027a6:	d16d      	bne.n	8002884 <HAL_ADC_Init+0x294>
 80027a8:	693b      	ldr	r3, [r7, #16]
 80027aa:	2b00      	cmp	r3, #0
 80027ac:	d16a      	bne.n	8002884 <HAL_ADC_Init+0x294>
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	7f1b      	ldrb	r3, [r3, #28]
 80027b2:	039a      	lsls	r2, r3, #14
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 80027ba:	005b      	lsls	r3, r3, #1
 80027bc:	4313      	orrs	r3, r2
 80027be:	61bb      	str	r3, [r7, #24]
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	68db      	ldr	r3, [r3, #12]
 80027c6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80027ca:	f023 0302 	bic.w	r3, r3, #2
 80027ce:	687a      	ldr	r2, [r7, #4]
 80027d0:	6812      	ldr	r2, [r2, #0]
 80027d2:	69b9      	ldr	r1, [r7, #24]
 80027d4:	430b      	orrs	r3, r1
 80027d6:	60d3      	str	r3, [r2, #12]
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	691b      	ldr	r3, [r3, #16]
 80027dc:	2b00      	cmp	r3, #0
 80027de:	d017      	beq.n	8002810 <HAL_ADC_Init+0x220>
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	681b      	ldr	r3, [r3, #0]
 80027e4:	691a      	ldr	r2, [r3, #16]
 80027e6:	687b      	ldr	r3, [r7, #4]
 80027e8:	681b      	ldr	r3, [r3, #0]
 80027ea:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80027ee:	611a      	str	r2, [r3, #16]
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	681b      	ldr	r3, [r3, #0]
 80027f4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80027f8:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 80027fc:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002800:	687a      	ldr	r2, [r7, #4]
 8002802:	6911      	ldr	r1, [r2, #16]
 8002804:	687a      	ldr	r2, [r7, #4]
 8002806:	6812      	ldr	r2, [r2, #0]
 8002808:	430b      	orrs	r3, r1
 800280a:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 800280e:	e013      	b.n	8002838 <HAL_ADC_Init+0x248>
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	691a      	ldr	r2, [r3, #16]
 8002816:	687b      	ldr	r3, [r7, #4]
 8002818:	681b      	ldr	r3, [r3, #0]
 800281a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800281e:	611a      	str	r2, [r3, #16]
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8002828:	687a      	ldr	r2, [r7, #4]
 800282a:	6812      	ldr	r2, [r2, #0]
 800282c:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8002830:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002834:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800283e:	2b01      	cmp	r3, #1
 8002840:	d118      	bne.n	8002874 <HAL_ADC_Init+0x284>
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	691b      	ldr	r3, [r3, #16]
 8002848:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800284c:	f023 0304 	bic.w	r3, r3, #4
 8002850:	687a      	ldr	r2, [r7, #4]
 8002852:	6c51      	ldr	r1, [r2, #68]	@ 0x44
 8002854:	687a      	ldr	r2, [r7, #4]
 8002856:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8002858:	4311      	orrs	r1, r2
 800285a:	687a      	ldr	r2, [r7, #4]
 800285c:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 800285e:	4311      	orrs	r1, r2
 8002860:	687a      	ldr	r2, [r7, #4]
 8002862:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8002864:	430a      	orrs	r2, r1
 8002866:	431a      	orrs	r2, r3
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	f042 0201 	orr.w	r2, r2, #1
 8002870:	611a      	str	r2, [r3, #16]
 8002872:	e007      	b.n	8002884 <HAL_ADC_Init+0x294>
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	691a      	ldr	r2, [r3, #16]
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	681b      	ldr	r3, [r3, #0]
 800287e:	f022 0201 	bic.w	r2, r2, #1
 8002882:	611a      	str	r2, [r3, #16]
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	695b      	ldr	r3, [r3, #20]
 8002888:	2b01      	cmp	r3, #1
 800288a:	d10c      	bne.n	80028a6 <HAL_ADC_Init+0x2b6>
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002892:	f023 010f 	bic.w	r1, r3, #15
 8002896:	687b      	ldr	r3, [r7, #4]
 8002898:	6a1b      	ldr	r3, [r3, #32]
 800289a:	1e5a      	subs	r2, r3, #1
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	430a      	orrs	r2, r1
 80028a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80028a4:	e007      	b.n	80028b6 <HAL_ADC_Init+0x2c6>
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	681b      	ldr	r3, [r3, #0]
 80028aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80028ac:	687b      	ldr	r3, [r7, #4]
 80028ae:	681b      	ldr	r3, [r3, #0]
 80028b0:	f022 020f 	bic.w	r2, r2, #15
 80028b4:	631a      	str	r2, [r3, #48]	@ 0x30
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80028ba:	f023 0303 	bic.w	r3, r3, #3
 80028be:	f043 0201 	orr.w	r2, r3, #1
 80028c2:	687b      	ldr	r3, [r7, #4]
 80028c4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80028c6:	e007      	b.n	80028d8 <HAL_ADC_Init+0x2e8>
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80028cc:	f043 0210 	orr.w	r2, r3, #16
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	65da      	str	r2, [r3, #92]	@ 0x5c
 80028d4:	2301      	movs	r3, #1
 80028d6:	77fb      	strb	r3, [r7, #31]
 80028d8:	7ffb      	ldrb	r3, [r7, #31]
 80028da:	4618      	mov	r0, r3
 80028dc:	3724      	adds	r7, #36	@ 0x24
 80028de:	46bd      	mov	sp, r7
 80028e0:	bd90      	pop	{r4, r7, pc}
 80028e2:	bf00      	nop
 80028e4:	20000000 	.word	0x20000000
 80028e8:	053e2d63 	.word	0x053e2d63
 80028ec:	50000100 	.word	0x50000100
 80028f0:	50000300 	.word	0x50000300
 80028f4:	fff04007 	.word	0xfff04007

080028f8 <HAL_ADC_Start>:
 80028f8:	b580      	push	{r7, lr}
 80028fa:	b086      	sub	sp, #24
 80028fc:	af00      	add	r7, sp, #0
 80028fe:	6078      	str	r0, [r7, #4]
 8002900:	4859      	ldr	r0, [pc, #356]	@ (8002a68 <HAL_ADC_Start+0x170>)
 8002902:	f7ff fd5b 	bl	80023bc <LL_ADC_GetMultimode>
 8002906:	6138      	str	r0, [r7, #16]
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	4618      	mov	r0, r3
 800290e:	f7ff fe35 	bl	800257c <LL_ADC_REG_IsConversionOngoing>
 8002912:	4603      	mov	r3, r0
 8002914:	2b00      	cmp	r3, #0
 8002916:	f040 809f 	bne.w	8002a58 <HAL_ADC_Start+0x160>
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002920:	2b01      	cmp	r3, #1
 8002922:	d101      	bne.n	8002928 <HAL_ADC_Start+0x30>
 8002924:	2302      	movs	r3, #2
 8002926:	e09a      	b.n	8002a5e <HAL_ADC_Start+0x166>
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	2201      	movs	r2, #1
 800292c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002930:	6878      	ldr	r0, [r7, #4]
 8002932:	f000 ffcd 	bl	80038d0 <ADC_Enable>
 8002936:	4603      	mov	r3, r0
 8002938:	75fb      	strb	r3, [r7, #23]
 800293a:	7dfb      	ldrb	r3, [r7, #23]
 800293c:	2b00      	cmp	r3, #0
 800293e:	f040 8086 	bne.w	8002a4e <HAL_ADC_Start+0x156>
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002946:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 800294a:	f023 0301 	bic.w	r3, r3, #1
 800294e:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	681b      	ldr	r3, [r3, #0]
 800295a:	4a44      	ldr	r2, [pc, #272]	@ (8002a6c <HAL_ADC_Start+0x174>)
 800295c:	4293      	cmp	r3, r2
 800295e:	d002      	beq.n	8002966 <HAL_ADC_Start+0x6e>
 8002960:	687b      	ldr	r3, [r7, #4]
 8002962:	681b      	ldr	r3, [r3, #0]
 8002964:	e001      	b.n	800296a <HAL_ADC_Start+0x72>
 8002966:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 800296a:	687a      	ldr	r2, [r7, #4]
 800296c:	6812      	ldr	r2, [r2, #0]
 800296e:	4293      	cmp	r3, r2
 8002970:	d002      	beq.n	8002978 <HAL_ADC_Start+0x80>
 8002972:	693b      	ldr	r3, [r7, #16]
 8002974:	2b00      	cmp	r3, #0
 8002976:	d105      	bne.n	8002984 <HAL_ADC_Start+0x8c>
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800297c:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002988:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800298c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002990:	d106      	bne.n	80029a0 <HAL_ADC_Start+0xa8>
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002996:	f023 0206 	bic.w	r2, r3, #6
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	661a      	str	r2, [r3, #96]	@ 0x60
 800299e:	e002      	b.n	80029a6 <HAL_ADC_Start+0xae>
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	2200      	movs	r2, #0
 80029a4:	661a      	str	r2, [r3, #96]	@ 0x60
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	221c      	movs	r2, #28
 80029ac:	601a      	str	r2, [r3, #0]
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	2200      	movs	r2, #0
 80029b2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	4a2c      	ldr	r2, [pc, #176]	@ (8002a6c <HAL_ADC_Start+0x174>)
 80029bc:	4293      	cmp	r3, r2
 80029be:	d002      	beq.n	80029c6 <HAL_ADC_Start+0xce>
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	681b      	ldr	r3, [r3, #0]
 80029c4:	e001      	b.n	80029ca <HAL_ADC_Start+0xd2>
 80029c6:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80029ca:	687a      	ldr	r2, [r7, #4]
 80029cc:	6812      	ldr	r2, [r2, #0]
 80029ce:	4293      	cmp	r3, r2
 80029d0:	d008      	beq.n	80029e4 <HAL_ADC_Start+0xec>
 80029d2:	693b      	ldr	r3, [r7, #16]
 80029d4:	2b00      	cmp	r3, #0
 80029d6:	d005      	beq.n	80029e4 <HAL_ADC_Start+0xec>
 80029d8:	693b      	ldr	r3, [r7, #16]
 80029da:	2b05      	cmp	r3, #5
 80029dc:	d002      	beq.n	80029e4 <HAL_ADC_Start+0xec>
 80029de:	693b      	ldr	r3, [r7, #16]
 80029e0:	2b09      	cmp	r3, #9
 80029e2:	d114      	bne.n	8002a0e <HAL_ADC_Start+0x116>
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	681b      	ldr	r3, [r3, #0]
 80029e8:	68db      	ldr	r3, [r3, #12]
 80029ea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80029ee:	2b00      	cmp	r3, #0
 80029f0:	d007      	beq.n	8002a02 <HAL_ADC_Start+0x10a>
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80029f6:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80029fa:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	4618      	mov	r0, r3
 8002a08:	f7ff fd90 	bl	800252c <LL_ADC_REG_StartConversion>
 8002a0c:	e026      	b.n	8002a5c <HAL_ADC_Start+0x164>
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a12:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	681b      	ldr	r3, [r3, #0]
 8002a1e:	4a13      	ldr	r2, [pc, #76]	@ (8002a6c <HAL_ADC_Start+0x174>)
 8002a20:	4293      	cmp	r3, r2
 8002a22:	d002      	beq.n	8002a2a <HAL_ADC_Start+0x132>
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	681b      	ldr	r3, [r3, #0]
 8002a28:	e001      	b.n	8002a2e <HAL_ADC_Start+0x136>
 8002a2a:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002a2e:	60fb      	str	r3, [r7, #12]
 8002a30:	68fb      	ldr	r3, [r7, #12]
 8002a32:	68db      	ldr	r3, [r3, #12]
 8002a34:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002a38:	2b00      	cmp	r3, #0
 8002a3a:	d00f      	beq.n	8002a5c <HAL_ADC_Start+0x164>
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a40:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002a44:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002a4c:	e006      	b.n	8002a5c <HAL_ADC_Start+0x164>
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	2200      	movs	r2, #0
 8002a52:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002a56:	e001      	b.n	8002a5c <HAL_ADC_Start+0x164>
 8002a58:	2302      	movs	r3, #2
 8002a5a:	75fb      	strb	r3, [r7, #23]
 8002a5c:	7dfb      	ldrb	r3, [r7, #23]
 8002a5e:	4618      	mov	r0, r3
 8002a60:	3718      	adds	r7, #24
 8002a62:	46bd      	mov	sp, r7
 8002a64:	bd80      	pop	{r7, pc}
 8002a66:	bf00      	nop
 8002a68:	50000300 	.word	0x50000300
 8002a6c:	50000100 	.word	0x50000100

08002a70 <HAL_ADC_Stop>:
 8002a70:	b580      	push	{r7, lr}
 8002a72:	b084      	sub	sp, #16
 8002a74:	af00      	add	r7, sp, #0
 8002a76:	6078      	str	r0, [r7, #4]
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002a7e:	2b01      	cmp	r3, #1
 8002a80:	d101      	bne.n	8002a86 <HAL_ADC_Stop+0x16>
 8002a82:	2302      	movs	r3, #2
 8002a84:	e023      	b.n	8002ace <HAL_ADC_Stop+0x5e>
 8002a86:	687b      	ldr	r3, [r7, #4]
 8002a88:	2201      	movs	r2, #1
 8002a8a:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002a8e:	2103      	movs	r1, #3
 8002a90:	6878      	ldr	r0, [r7, #4]
 8002a92:	f000 fe61 	bl	8003758 <ADC_ConversionStop>
 8002a96:	4603      	mov	r3, r0
 8002a98:	73fb      	strb	r3, [r7, #15]
 8002a9a:	7bfb      	ldrb	r3, [r7, #15]
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	d111      	bne.n	8002ac4 <HAL_ADC_Stop+0x54>
 8002aa0:	6878      	ldr	r0, [r7, #4]
 8002aa2:	f000 ff9b 	bl	80039dc <ADC_Disable>
 8002aa6:	4603      	mov	r3, r0
 8002aa8:	73fb      	strb	r3, [r7, #15]
 8002aaa:	7bfb      	ldrb	r3, [r7, #15]
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	d109      	bne.n	8002ac4 <HAL_ADC_Stop+0x54>
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ab4:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002ab8:	f023 0301 	bic.w	r3, r3, #1
 8002abc:	f043 0201 	orr.w	r2, r3, #1
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	2200      	movs	r2, #0
 8002ac8:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002acc:	7bfb      	ldrb	r3, [r7, #15]
 8002ace:	4618      	mov	r0, r3
 8002ad0:	3710      	adds	r7, #16
 8002ad2:	46bd      	mov	sp, r7
 8002ad4:	bd80      	pop	{r7, pc}
	...

08002ad8 <HAL_ADC_PollForConversion>:
 8002ad8:	b580      	push	{r7, lr}
 8002ada:	b088      	sub	sp, #32
 8002adc:	af00      	add	r7, sp, #0
 8002ade:	6078      	str	r0, [r7, #4]
 8002ae0:	6039      	str	r1, [r7, #0]
 8002ae2:	4867      	ldr	r0, [pc, #412]	@ (8002c80 <HAL_ADC_PollForConversion+0x1a8>)
 8002ae4:	f7ff fc6a 	bl	80023bc <LL_ADC_GetMultimode>
 8002ae8:	6178      	str	r0, [r7, #20]
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	699b      	ldr	r3, [r3, #24]
 8002aee:	2b08      	cmp	r3, #8
 8002af0:	d102      	bne.n	8002af8 <HAL_ADC_PollForConversion+0x20>
 8002af2:	2308      	movs	r3, #8
 8002af4:	61fb      	str	r3, [r7, #28]
 8002af6:	e02a      	b.n	8002b4e <HAL_ADC_PollForConversion+0x76>
 8002af8:	697b      	ldr	r3, [r7, #20]
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	d005      	beq.n	8002b0a <HAL_ADC_PollForConversion+0x32>
 8002afe:	697b      	ldr	r3, [r7, #20]
 8002b00:	2b05      	cmp	r3, #5
 8002b02:	d002      	beq.n	8002b0a <HAL_ADC_PollForConversion+0x32>
 8002b04:	697b      	ldr	r3, [r7, #20]
 8002b06:	2b09      	cmp	r3, #9
 8002b08:	d111      	bne.n	8002b2e <HAL_ADC_PollForConversion+0x56>
 8002b0a:	687b      	ldr	r3, [r7, #4]
 8002b0c:	681b      	ldr	r3, [r3, #0]
 8002b0e:	68db      	ldr	r3, [r3, #12]
 8002b10:	f003 0301 	and.w	r3, r3, #1
 8002b14:	2b00      	cmp	r3, #0
 8002b16:	d007      	beq.n	8002b28 <HAL_ADC_PollForConversion+0x50>
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b1c:	f043 0220 	orr.w	r2, r3, #32
 8002b20:	687b      	ldr	r3, [r7, #4]
 8002b22:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002b24:	2301      	movs	r3, #1
 8002b26:	e0a6      	b.n	8002c76 <HAL_ADC_PollForConversion+0x19e>
 8002b28:	2304      	movs	r3, #4
 8002b2a:	61fb      	str	r3, [r7, #28]
 8002b2c:	e00f      	b.n	8002b4e <HAL_ADC_PollForConversion+0x76>
 8002b2e:	4854      	ldr	r0, [pc, #336]	@ (8002c80 <HAL_ADC_PollForConversion+0x1a8>)
 8002b30:	f7ff fc52 	bl	80023d8 <LL_ADC_GetMultiDMATransfer>
 8002b34:	4603      	mov	r3, r0
 8002b36:	2b00      	cmp	r3, #0
 8002b38:	d007      	beq.n	8002b4a <HAL_ADC_PollForConversion+0x72>
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b3e:	f043 0220 	orr.w	r2, r3, #32
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002b46:	2301      	movs	r3, #1
 8002b48:	e095      	b.n	8002c76 <HAL_ADC_PollForConversion+0x19e>
 8002b4a:	2304      	movs	r3, #4
 8002b4c:	61fb      	str	r3, [r7, #28]
 8002b4e:	f7ff fac9 	bl	80020e4 <HAL_GetTick>
 8002b52:	6138      	str	r0, [r7, #16]
 8002b54:	e021      	b.n	8002b9a <HAL_ADC_PollForConversion+0xc2>
 8002b56:	683b      	ldr	r3, [r7, #0]
 8002b58:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b5c:	d01d      	beq.n	8002b9a <HAL_ADC_PollForConversion+0xc2>
 8002b5e:	f7ff fac1 	bl	80020e4 <HAL_GetTick>
 8002b62:	4602      	mov	r2, r0
 8002b64:	693b      	ldr	r3, [r7, #16]
 8002b66:	1ad3      	subs	r3, r2, r3
 8002b68:	683a      	ldr	r2, [r7, #0]
 8002b6a:	429a      	cmp	r2, r3
 8002b6c:	d302      	bcc.n	8002b74 <HAL_ADC_PollForConversion+0x9c>
 8002b6e:	683b      	ldr	r3, [r7, #0]
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	d112      	bne.n	8002b9a <HAL_ADC_PollForConversion+0xc2>
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	681b      	ldr	r3, [r3, #0]
 8002b78:	681a      	ldr	r2, [r3, #0]
 8002b7a:	69fb      	ldr	r3, [r7, #28]
 8002b7c:	4013      	ands	r3, r2
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d10b      	bne.n	8002b9a <HAL_ADC_PollForConversion+0xc2>
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b86:	f043 0204 	orr.w	r2, r3, #4
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	2200      	movs	r2, #0
 8002b92:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002b96:	2303      	movs	r3, #3
 8002b98:	e06d      	b.n	8002c76 <HAL_ADC_PollForConversion+0x19e>
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	681a      	ldr	r2, [r3, #0]
 8002ba0:	69fb      	ldr	r3, [r7, #28]
 8002ba2:	4013      	ands	r3, r2
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	d0d6      	beq.n	8002b56 <HAL_ADC_PollForConversion+0x7e>
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002bac:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	4618      	mov	r0, r3
 8002bba:	f7ff fb71 	bl	80022a0 <LL_ADC_REG_IsTriggerSourceSWStart>
 8002bbe:	4603      	mov	r3, r0
 8002bc0:	2b00      	cmp	r3, #0
 8002bc2:	d01c      	beq.n	8002bfe <HAL_ADC_PollForConversion+0x126>
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	7f5b      	ldrb	r3, [r3, #29]
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d118      	bne.n	8002bfe <HAL_ADC_PollForConversion+0x126>
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	681b      	ldr	r3, [r3, #0]
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	f003 0308 	and.w	r3, r3, #8
 8002bd6:	2b08      	cmp	r3, #8
 8002bd8:	d111      	bne.n	8002bfe <HAL_ADC_PollForConversion+0x126>
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002bde:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002bea:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d105      	bne.n	8002bfe <HAL_ADC_PollForConversion+0x126>
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002bf6:	f043 0201 	orr.w	r2, r3, #1
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	681b      	ldr	r3, [r3, #0]
 8002c02:	4a20      	ldr	r2, [pc, #128]	@ (8002c84 <HAL_ADC_PollForConversion+0x1ac>)
 8002c04:	4293      	cmp	r3, r2
 8002c06:	d002      	beq.n	8002c0e <HAL_ADC_PollForConversion+0x136>
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	e001      	b.n	8002c12 <HAL_ADC_PollForConversion+0x13a>
 8002c0e:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002c12:	687a      	ldr	r2, [r7, #4]
 8002c14:	6812      	ldr	r2, [r2, #0]
 8002c16:	4293      	cmp	r3, r2
 8002c18:	d008      	beq.n	8002c2c <HAL_ADC_PollForConversion+0x154>
 8002c1a:	697b      	ldr	r3, [r7, #20]
 8002c1c:	2b00      	cmp	r3, #0
 8002c1e:	d005      	beq.n	8002c2c <HAL_ADC_PollForConversion+0x154>
 8002c20:	697b      	ldr	r3, [r7, #20]
 8002c22:	2b05      	cmp	r3, #5
 8002c24:	d002      	beq.n	8002c2c <HAL_ADC_PollForConversion+0x154>
 8002c26:	697b      	ldr	r3, [r7, #20]
 8002c28:	2b09      	cmp	r3, #9
 8002c2a:	d104      	bne.n	8002c36 <HAL_ADC_PollForConversion+0x15e>
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	68db      	ldr	r3, [r3, #12]
 8002c32:	61bb      	str	r3, [r7, #24]
 8002c34:	e00d      	b.n	8002c52 <HAL_ADC_PollForConversion+0x17a>
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	681b      	ldr	r3, [r3, #0]
 8002c3a:	4a12      	ldr	r2, [pc, #72]	@ (8002c84 <HAL_ADC_PollForConversion+0x1ac>)
 8002c3c:	4293      	cmp	r3, r2
 8002c3e:	d002      	beq.n	8002c46 <HAL_ADC_PollForConversion+0x16e>
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	e001      	b.n	8002c4a <HAL_ADC_PollForConversion+0x172>
 8002c46:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002c4a:	60fb      	str	r3, [r7, #12]
 8002c4c:	68fb      	ldr	r3, [r7, #12]
 8002c4e:	68db      	ldr	r3, [r3, #12]
 8002c50:	61bb      	str	r3, [r7, #24]
 8002c52:	69fb      	ldr	r3, [r7, #28]
 8002c54:	2b08      	cmp	r3, #8
 8002c56:	d104      	bne.n	8002c62 <HAL_ADC_PollForConversion+0x18a>
 8002c58:	687b      	ldr	r3, [r7, #4]
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	2208      	movs	r2, #8
 8002c5e:	601a      	str	r2, [r3, #0]
 8002c60:	e008      	b.n	8002c74 <HAL_ADC_PollForConversion+0x19c>
 8002c62:	69bb      	ldr	r3, [r7, #24]
 8002c64:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002c68:	2b00      	cmp	r3, #0
 8002c6a:	d103      	bne.n	8002c74 <HAL_ADC_PollForConversion+0x19c>
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	220c      	movs	r2, #12
 8002c72:	601a      	str	r2, [r3, #0]
 8002c74:	2300      	movs	r3, #0
 8002c76:	4618      	mov	r0, r3
 8002c78:	3720      	adds	r7, #32
 8002c7a:	46bd      	mov	sp, r7
 8002c7c:	bd80      	pop	{r7, pc}
 8002c7e:	bf00      	nop
 8002c80:	50000300 	.word	0x50000300
 8002c84:	50000100 	.word	0x50000100

08002c88 <HAL_ADC_Start_IT>:
 8002c88:	b580      	push	{r7, lr}
 8002c8a:	b086      	sub	sp, #24
 8002c8c:	af00      	add	r7, sp, #0
 8002c8e:	6078      	str	r0, [r7, #4]
 8002c90:	4893      	ldr	r0, [pc, #588]	@ (8002ee0 <HAL_ADC_Start_IT+0x258>)
 8002c92:	f7ff fb93 	bl	80023bc <LL_ADC_GetMultimode>
 8002c96:	6138      	str	r0, [r7, #16]
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	4618      	mov	r0, r3
 8002c9e:	f7ff fc6d 	bl	800257c <LL_ADC_REG_IsConversionOngoing>
 8002ca2:	4603      	mov	r3, r0
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	f040 8113 	bne.w	8002ed0 <HAL_ADC_Start_IT+0x248>
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002cb0:	2b01      	cmp	r3, #1
 8002cb2:	d101      	bne.n	8002cb8 <HAL_ADC_Start_IT+0x30>
 8002cb4:	2302      	movs	r3, #2
 8002cb6:	e10e      	b.n	8002ed6 <HAL_ADC_Start_IT+0x24e>
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	2201      	movs	r2, #1
 8002cbc:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002cc0:	6878      	ldr	r0, [r7, #4]
 8002cc2:	f000 fe05 	bl	80038d0 <ADC_Enable>
 8002cc6:	4603      	mov	r3, r0
 8002cc8:	75fb      	strb	r3, [r7, #23]
 8002cca:	7dfb      	ldrb	r3, [r7, #23]
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	f040 80fa 	bne.w	8002ec6 <HAL_ADC_Start_IT+0x23e>
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002cd6:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8002cda:	f023 0301 	bic.w	r3, r3, #1
 8002cde:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002ce6:	687b      	ldr	r3, [r7, #4]
 8002ce8:	681b      	ldr	r3, [r3, #0]
 8002cea:	4a7e      	ldr	r2, [pc, #504]	@ (8002ee4 <HAL_ADC_Start_IT+0x25c>)
 8002cec:	4293      	cmp	r3, r2
 8002cee:	d002      	beq.n	8002cf6 <HAL_ADC_Start_IT+0x6e>
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	681b      	ldr	r3, [r3, #0]
 8002cf4:	e001      	b.n	8002cfa <HAL_ADC_Start_IT+0x72>
 8002cf6:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002cfa:	687a      	ldr	r2, [r7, #4]
 8002cfc:	6812      	ldr	r2, [r2, #0]
 8002cfe:	4293      	cmp	r3, r2
 8002d00:	d002      	beq.n	8002d08 <HAL_ADC_Start_IT+0x80>
 8002d02:	693b      	ldr	r3, [r7, #16]
 8002d04:	2b00      	cmp	r3, #0
 8002d06:	d105      	bne.n	8002d14 <HAL_ADC_Start_IT+0x8c>
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d0c:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d18:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d006      	beq.n	8002d2e <HAL_ADC_Start_IT+0xa6>
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002d24:	f023 0206 	bic.w	r2, r3, #6
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	661a      	str	r2, [r3, #96]	@ 0x60
 8002d2c:	e002      	b.n	8002d34 <HAL_ADC_Start_IT+0xac>
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	2200      	movs	r2, #0
 8002d32:	661a      	str	r2, [r3, #96]	@ 0x60
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	221c      	movs	r2, #28
 8002d3a:	601a      	str	r2, [r3, #0]
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	2200      	movs	r2, #0
 8002d40:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	685a      	ldr	r2, [r3, #4]
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	681b      	ldr	r3, [r3, #0]
 8002d4e:	f022 021c 	bic.w	r2, r2, #28
 8002d52:	605a      	str	r2, [r3, #4]
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	699b      	ldr	r3, [r3, #24]
 8002d58:	2b08      	cmp	r3, #8
 8002d5a:	d108      	bne.n	8002d6e <HAL_ADC_Start_IT+0xe6>
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	685a      	ldr	r2, [r3, #4]
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	f042 0208 	orr.w	r2, r2, #8
 8002d6a:	605a      	str	r2, [r3, #4]
 8002d6c:	e008      	b.n	8002d80 <HAL_ADC_Start_IT+0xf8>
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	685a      	ldr	r2, [r3, #4]
 8002d74:	687b      	ldr	r3, [r7, #4]
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	f042 0204 	orr.w	r2, r2, #4
 8002d7c:	605a      	str	r2, [r3, #4]
 8002d7e:	bf00      	nop
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d107      	bne.n	8002d98 <HAL_ADC_Start_IT+0x110>
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	685a      	ldr	r2, [r3, #4]
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	f042 0210 	orr.w	r2, r2, #16
 8002d96:	605a      	str	r2, [r3, #4]
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	681b      	ldr	r3, [r3, #0]
 8002d9c:	4a51      	ldr	r2, [pc, #324]	@ (8002ee4 <HAL_ADC_Start_IT+0x25c>)
 8002d9e:	4293      	cmp	r3, r2
 8002da0:	d002      	beq.n	8002da8 <HAL_ADC_Start_IT+0x120>
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	681b      	ldr	r3, [r3, #0]
 8002da6:	e001      	b.n	8002dac <HAL_ADC_Start_IT+0x124>
 8002da8:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002dac:	687a      	ldr	r2, [r7, #4]
 8002dae:	6812      	ldr	r2, [r2, #0]
 8002db0:	4293      	cmp	r3, r2
 8002db2:	d008      	beq.n	8002dc6 <HAL_ADC_Start_IT+0x13e>
 8002db4:	693b      	ldr	r3, [r7, #16]
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	d005      	beq.n	8002dc6 <HAL_ADC_Start_IT+0x13e>
 8002dba:	693b      	ldr	r3, [r7, #16]
 8002dbc:	2b05      	cmp	r3, #5
 8002dbe:	d002      	beq.n	8002dc6 <HAL_ADC_Start_IT+0x13e>
 8002dc0:	693b      	ldr	r3, [r7, #16]
 8002dc2:	2b09      	cmp	r3, #9
 8002dc4:	d13a      	bne.n	8002e3c <HAL_ADC_Start_IT+0x1b4>
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	68db      	ldr	r3, [r3, #12]
 8002dcc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002dd0:	2b00      	cmp	r3, #0
 8002dd2:	d02d      	beq.n	8002e30 <HAL_ADC_Start_IT+0x1a8>
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002dd8:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002ddc:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	699b      	ldr	r3, [r3, #24]
 8002de8:	2b08      	cmp	r3, #8
 8002dea:	d110      	bne.n	8002e0e <HAL_ADC_Start_IT+0x186>
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	685a      	ldr	r2, [r3, #4]
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	f022 0220 	bic.w	r2, r2, #32
 8002dfa:	605a      	str	r2, [r3, #4]
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	685a      	ldr	r2, [r3, #4]
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002e0a:	605a      	str	r2, [r3, #4]
 8002e0c:	e010      	b.n	8002e30 <HAL_ADC_Start_IT+0x1a8>
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	685a      	ldr	r2, [r3, #4]
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002e1c:	605a      	str	r2, [r3, #4]
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	685a      	ldr	r2, [r3, #4]
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	f042 0220 	orr.w	r2, r2, #32
 8002e2c:	605a      	str	r2, [r3, #4]
 8002e2e:	bf00      	nop
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	681b      	ldr	r3, [r3, #0]
 8002e34:	4618      	mov	r0, r3
 8002e36:	f7ff fb79 	bl	800252c <LL_ADC_REG_StartConversion>
 8002e3a:	e04b      	b.n	8002ed4 <HAL_ADC_Start_IT+0x24c>
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002e40:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	4a25      	ldr	r2, [pc, #148]	@ (8002ee4 <HAL_ADC_Start_IT+0x25c>)
 8002e4e:	4293      	cmp	r3, r2
 8002e50:	d002      	beq.n	8002e58 <HAL_ADC_Start_IT+0x1d0>
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	e001      	b.n	8002e5c <HAL_ADC_Start_IT+0x1d4>
 8002e58:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002e5c:	60fb      	str	r3, [r7, #12]
 8002e5e:	68fb      	ldr	r3, [r7, #12]
 8002e60:	68db      	ldr	r3, [r3, #12]
 8002e62:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002e66:	2b00      	cmp	r3, #0
 8002e68:	d034      	beq.n	8002ed4 <HAL_ADC_Start_IT+0x24c>
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002e6e:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002e72:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	699b      	ldr	r3, [r3, #24]
 8002e7e:	2b08      	cmp	r3, #8
 8002e80:	d110      	bne.n	8002ea4 <HAL_ADC_Start_IT+0x21c>
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	685a      	ldr	r2, [r3, #4]
 8002e88:	687b      	ldr	r3, [r7, #4]
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	f022 0220 	bic.w	r2, r2, #32
 8002e90:	605a      	str	r2, [r3, #4]
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	685a      	ldr	r2, [r3, #4]
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002ea0:	605a      	str	r2, [r3, #4]
 8002ea2:	e017      	b.n	8002ed4 <HAL_ADC_Start_IT+0x24c>
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	685a      	ldr	r2, [r3, #4]
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002eb2:	605a      	str	r2, [r3, #4]
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	681b      	ldr	r3, [r3, #0]
 8002eb8:	685a      	ldr	r2, [r3, #4]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	681b      	ldr	r3, [r3, #0]
 8002ebe:	f042 0220 	orr.w	r2, r2, #32
 8002ec2:	605a      	str	r2, [r3, #4]
 8002ec4:	e006      	b.n	8002ed4 <HAL_ADC_Start_IT+0x24c>
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	2200      	movs	r2, #0
 8002eca:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002ece:	e001      	b.n	8002ed4 <HAL_ADC_Start_IT+0x24c>
 8002ed0:	2302      	movs	r3, #2
 8002ed2:	75fb      	strb	r3, [r7, #23]
 8002ed4:	7dfb      	ldrb	r3, [r7, #23]
 8002ed6:	4618      	mov	r0, r3
 8002ed8:	3718      	adds	r7, #24
 8002eda:	46bd      	mov	sp, r7
 8002edc:	bd80      	pop	{r7, pc}
 8002ede:	bf00      	nop
 8002ee0:	50000300 	.word	0x50000300
 8002ee4:	50000100 	.word	0x50000100

08002ee8 <HAL_ADC_Stop_IT>:
 8002ee8:	b580      	push	{r7, lr}
 8002eea:	b084      	sub	sp, #16
 8002eec:	af00      	add	r7, sp, #0
 8002eee:	6078      	str	r0, [r7, #4]
 8002ef0:	687b      	ldr	r3, [r7, #4]
 8002ef2:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002ef6:	2b01      	cmp	r3, #1
 8002ef8:	d101      	bne.n	8002efe <HAL_ADC_Stop_IT+0x16>
 8002efa:	2302      	movs	r3, #2
 8002efc:	e02b      	b.n	8002f56 <HAL_ADC_Stop_IT+0x6e>
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	2201      	movs	r2, #1
 8002f02:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002f06:	2103      	movs	r1, #3
 8002f08:	6878      	ldr	r0, [r7, #4]
 8002f0a:	f000 fc25 	bl	8003758 <ADC_ConversionStop>
 8002f0e:	4603      	mov	r3, r0
 8002f10:	73fb      	strb	r3, [r7, #15]
 8002f12:	7bfb      	ldrb	r3, [r7, #15]
 8002f14:	2b00      	cmp	r3, #0
 8002f16:	d119      	bne.n	8002f4c <HAL_ADC_Stop_IT+0x64>
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	685a      	ldr	r2, [r3, #4]
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	f022 021c 	bic.w	r2, r2, #28
 8002f26:	605a      	str	r2, [r3, #4]
 8002f28:	6878      	ldr	r0, [r7, #4]
 8002f2a:	f000 fd57 	bl	80039dc <ADC_Disable>
 8002f2e:	4603      	mov	r3, r0
 8002f30:	73fb      	strb	r3, [r7, #15]
 8002f32:	7bfb      	ldrb	r3, [r7, #15]
 8002f34:	2b00      	cmp	r3, #0
 8002f36:	d109      	bne.n	8002f4c <HAL_ADC_Stop_IT+0x64>
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002f3c:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002f40:	f023 0301 	bic.w	r3, r3, #1
 8002f44:	f043 0201 	orr.w	r2, r3, #1
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	2200      	movs	r2, #0
 8002f50:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002f54:	7bfb      	ldrb	r3, [r7, #15]
 8002f56:	4618      	mov	r0, r3
 8002f58:	3710      	adds	r7, #16
 8002f5a:	46bd      	mov	sp, r7
 8002f5c:	bd80      	pop	{r7, pc}

08002f5e <HAL_ADC_GetValue>:
 8002f5e:	b480      	push	{r7}
 8002f60:	b083      	sub	sp, #12
 8002f62:	af00      	add	r7, sp, #0
 8002f64:	6078      	str	r0, [r7, #4]
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f6c:	4618      	mov	r0, r3
 8002f6e:	370c      	adds	r7, #12
 8002f70:	46bd      	mov	sp, r7
 8002f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f76:	4770      	bx	lr

08002f78 <HAL_ADC_ConfigChannel>:
 8002f78:	b580      	push	{r7, lr}
 8002f7a:	b0b6      	sub	sp, #216	@ 0xd8
 8002f7c:	af00      	add	r7, sp, #0
 8002f7e:	6078      	str	r0, [r7, #4]
 8002f80:	6039      	str	r1, [r7, #0]
 8002f82:	2300      	movs	r3, #0
 8002f84:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8002f88:	2300      	movs	r3, #0
 8002f8a:	60fb      	str	r3, [r7, #12]
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002f92:	2b01      	cmp	r3, #1
 8002f94:	d101      	bne.n	8002f9a <HAL_ADC_ConfigChannel+0x22>
 8002f96:	2302      	movs	r3, #2
 8002f98:	e3c8      	b.n	800372c <HAL_ADC_ConfigChannel+0x7b4>
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	2201      	movs	r2, #1
 8002f9e:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	681b      	ldr	r3, [r3, #0]
 8002fa6:	4618      	mov	r0, r3
 8002fa8:	f7ff fae8 	bl	800257c <LL_ADC_REG_IsConversionOngoing>
 8002fac:	4603      	mov	r3, r0
 8002fae:	2b00      	cmp	r3, #0
 8002fb0:	f040 83ad 	bne.w	800370e <HAL_ADC_ConfigChannel+0x796>
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	6818      	ldr	r0, [r3, #0]
 8002fb8:	683b      	ldr	r3, [r7, #0]
 8002fba:	6859      	ldr	r1, [r3, #4]
 8002fbc:	683b      	ldr	r3, [r7, #0]
 8002fbe:	681b      	ldr	r3, [r3, #0]
 8002fc0:	461a      	mov	r2, r3
 8002fc2:	f7ff f980 	bl	80022c6 <LL_ADC_REG_SetSequencerRanks>
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	4618      	mov	r0, r3
 8002fcc:	f7ff fad6 	bl	800257c <LL_ADC_REG_IsConversionOngoing>
 8002fd0:	f8c7 00d0 	str.w	r0, [r7, #208]	@ 0xd0
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	4618      	mov	r0, r3
 8002fda:	f7ff faf6 	bl	80025ca <LL_ADC_INJ_IsConversionOngoing>
 8002fde:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8002fe2:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8002fe6:	2b00      	cmp	r3, #0
 8002fe8:	f040 81d9 	bne.w	800339e <HAL_ADC_ConfigChannel+0x426>
 8002fec:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8002ff0:	2b00      	cmp	r3, #0
 8002ff2:	f040 81d4 	bne.w	800339e <HAL_ADC_ConfigChannel+0x426>
 8002ff6:	683b      	ldr	r3, [r7, #0]
 8002ff8:	689b      	ldr	r3, [r3, #8]
 8002ffa:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8002ffe:	d10f      	bne.n	8003020 <HAL_ADC_ConfigChannel+0xa8>
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	6818      	ldr	r0, [r3, #0]
 8003004:	683b      	ldr	r3, [r7, #0]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	2200      	movs	r2, #0
 800300a:	4619      	mov	r1, r3
 800300c:	f7ff f987 	bl	800231e <LL_ADC_SetChannelSamplingTime>
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8003018:	4618      	mov	r0, r3
 800301a:	f7ff f92e 	bl	800227a <LL_ADC_SetSamplingTimeCommonConfig>
 800301e:	e00e      	b.n	800303e <HAL_ADC_ConfigChannel+0xc6>
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	6818      	ldr	r0, [r3, #0]
 8003024:	683b      	ldr	r3, [r7, #0]
 8003026:	6819      	ldr	r1, [r3, #0]
 8003028:	683b      	ldr	r3, [r7, #0]
 800302a:	689b      	ldr	r3, [r3, #8]
 800302c:	461a      	mov	r2, r3
 800302e:	f7ff f976 	bl	800231e <LL_ADC_SetChannelSamplingTime>
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	2100      	movs	r1, #0
 8003038:	4618      	mov	r0, r3
 800303a:	f7ff f91e 	bl	800227a <LL_ADC_SetSamplingTimeCommonConfig>
 800303e:	683b      	ldr	r3, [r7, #0]
 8003040:	695a      	ldr	r2, [r3, #20]
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	68db      	ldr	r3, [r3, #12]
 8003048:	08db      	lsrs	r3, r3, #3
 800304a:	f003 0303 	and.w	r3, r3, #3
 800304e:	005b      	lsls	r3, r3, #1
 8003050:	fa02 f303 	lsl.w	r3, r2, r3
 8003054:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8003058:	683b      	ldr	r3, [r7, #0]
 800305a:	691b      	ldr	r3, [r3, #16]
 800305c:	2b04      	cmp	r3, #4
 800305e:	d022      	beq.n	80030a6 <HAL_ADC_ConfigChannel+0x12e>
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	6818      	ldr	r0, [r3, #0]
 8003064:	683b      	ldr	r3, [r7, #0]
 8003066:	6919      	ldr	r1, [r3, #16]
 8003068:	683b      	ldr	r3, [r7, #0]
 800306a:	681a      	ldr	r2, [r3, #0]
 800306c:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8003070:	f7ff f878 	bl	8002164 <LL_ADC_SetOffset>
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	6818      	ldr	r0, [r3, #0]
 8003078:	683b      	ldr	r3, [r7, #0]
 800307a:	6919      	ldr	r1, [r3, #16]
 800307c:	683b      	ldr	r3, [r7, #0]
 800307e:	699b      	ldr	r3, [r3, #24]
 8003080:	461a      	mov	r2, r3
 8003082:	f7ff f8c4 	bl	800220e <LL_ADC_SetOffsetSign>
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	6818      	ldr	r0, [r3, #0]
 800308a:	683b      	ldr	r3, [r7, #0]
 800308c:	6919      	ldr	r1, [r3, #16]
 800308e:	683b      	ldr	r3, [r7, #0]
 8003090:	7f1b      	ldrb	r3, [r3, #28]
 8003092:	2b01      	cmp	r3, #1
 8003094:	d102      	bne.n	800309c <HAL_ADC_ConfigChannel+0x124>
 8003096:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800309a:	e000      	b.n	800309e <HAL_ADC_ConfigChannel+0x126>
 800309c:	2300      	movs	r3, #0
 800309e:	461a      	mov	r2, r3
 80030a0:	f7ff f8d0 	bl	8002244 <LL_ADC_SetOffsetSaturation>
 80030a4:	e17b      	b.n	800339e <HAL_ADC_ConfigChannel+0x426>
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	2100      	movs	r1, #0
 80030ac:	4618      	mov	r0, r3
 80030ae:	f7ff f87d 	bl	80021ac <LL_ADC_GetOffsetChannel>
 80030b2:	4603      	mov	r3, r0
 80030b4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80030b8:	2b00      	cmp	r3, #0
 80030ba:	d10a      	bne.n	80030d2 <HAL_ADC_ConfigChannel+0x15a>
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	2100      	movs	r1, #0
 80030c2:	4618      	mov	r0, r3
 80030c4:	f7ff f872 	bl	80021ac <LL_ADC_GetOffsetChannel>
 80030c8:	4603      	mov	r3, r0
 80030ca:	0e9b      	lsrs	r3, r3, #26
 80030cc:	f003 021f 	and.w	r2, r3, #31
 80030d0:	e01e      	b.n	8003110 <HAL_ADC_ConfigChannel+0x198>
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	2100      	movs	r1, #0
 80030d8:	4618      	mov	r0, r3
 80030da:	f7ff f867 	bl	80021ac <LL_ADC_GetOffsetChannel>
 80030de:	4603      	mov	r3, r0
 80030e0:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 80030e4:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 80030e8:	fa93 f3a3 	rbit	r3, r3
 80030ec:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80030f0:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80030f4:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80030f8:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	d101      	bne.n	8003104 <HAL_ADC_ConfigChannel+0x18c>
 8003100:	2320      	movs	r3, #32
 8003102:	e004      	b.n	800310e <HAL_ADC_ConfigChannel+0x196>
 8003104:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8003108:	fab3 f383 	clz	r3, r3
 800310c:	b2db      	uxtb	r3, r3
 800310e:	461a      	mov	r2, r3
 8003110:	683b      	ldr	r3, [r7, #0]
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003118:	2b00      	cmp	r3, #0
 800311a:	d105      	bne.n	8003128 <HAL_ADC_ConfigChannel+0x1b0>
 800311c:	683b      	ldr	r3, [r7, #0]
 800311e:	681b      	ldr	r3, [r3, #0]
 8003120:	0e9b      	lsrs	r3, r3, #26
 8003122:	f003 031f 	and.w	r3, r3, #31
 8003126:	e018      	b.n	800315a <HAL_ADC_ConfigChannel+0x1e2>
 8003128:	683b      	ldr	r3, [r7, #0]
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003130:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8003134:	fa93 f3a3 	rbit	r3, r3
 8003138:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800313c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8003140:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003144:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8003148:	2b00      	cmp	r3, #0
 800314a:	d101      	bne.n	8003150 <HAL_ADC_ConfigChannel+0x1d8>
 800314c:	2320      	movs	r3, #32
 800314e:	e004      	b.n	800315a <HAL_ADC_ConfigChannel+0x1e2>
 8003150:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8003154:	fab3 f383 	clz	r3, r3
 8003158:	b2db      	uxtb	r3, r3
 800315a:	429a      	cmp	r2, r3
 800315c:	d106      	bne.n	800316c <HAL_ADC_ConfigChannel+0x1f4>
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	2200      	movs	r2, #0
 8003164:	2100      	movs	r1, #0
 8003166:	4618      	mov	r0, r3
 8003168:	f7ff f836 	bl	80021d8 <LL_ADC_SetOffsetState>
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	2101      	movs	r1, #1
 8003172:	4618      	mov	r0, r3
 8003174:	f7ff f81a 	bl	80021ac <LL_ADC_GetOffsetChannel>
 8003178:	4603      	mov	r3, r0
 800317a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800317e:	2b00      	cmp	r3, #0
 8003180:	d10a      	bne.n	8003198 <HAL_ADC_ConfigChannel+0x220>
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	681b      	ldr	r3, [r3, #0]
 8003186:	2101      	movs	r1, #1
 8003188:	4618      	mov	r0, r3
 800318a:	f7ff f80f 	bl	80021ac <LL_ADC_GetOffsetChannel>
 800318e:	4603      	mov	r3, r0
 8003190:	0e9b      	lsrs	r3, r3, #26
 8003192:	f003 021f 	and.w	r2, r3, #31
 8003196:	e01e      	b.n	80031d6 <HAL_ADC_ConfigChannel+0x25e>
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	2101      	movs	r1, #1
 800319e:	4618      	mov	r0, r3
 80031a0:	f7ff f804 	bl	80021ac <LL_ADC_GetOffsetChannel>
 80031a4:	4603      	mov	r3, r0
 80031a6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80031aa:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 80031ae:	fa93 f3a3 	rbit	r3, r3
 80031b2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80031b6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80031ba:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80031be:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d101      	bne.n	80031ca <HAL_ADC_ConfigChannel+0x252>
 80031c6:	2320      	movs	r3, #32
 80031c8:	e004      	b.n	80031d4 <HAL_ADC_ConfigChannel+0x25c>
 80031ca:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80031ce:	fab3 f383 	clz	r3, r3
 80031d2:	b2db      	uxtb	r3, r3
 80031d4:	461a      	mov	r2, r3
 80031d6:	683b      	ldr	r3, [r7, #0]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80031de:	2b00      	cmp	r3, #0
 80031e0:	d105      	bne.n	80031ee <HAL_ADC_ConfigChannel+0x276>
 80031e2:	683b      	ldr	r3, [r7, #0]
 80031e4:	681b      	ldr	r3, [r3, #0]
 80031e6:	0e9b      	lsrs	r3, r3, #26
 80031e8:	f003 031f 	and.w	r3, r3, #31
 80031ec:	e018      	b.n	8003220 <HAL_ADC_ConfigChannel+0x2a8>
 80031ee:	683b      	ldr	r3, [r7, #0]
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80031f6:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80031fa:	fa93 f3a3 	rbit	r3, r3
 80031fe:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003202:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8003206:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800320a:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800320e:	2b00      	cmp	r3, #0
 8003210:	d101      	bne.n	8003216 <HAL_ADC_ConfigChannel+0x29e>
 8003212:	2320      	movs	r3, #32
 8003214:	e004      	b.n	8003220 <HAL_ADC_ConfigChannel+0x2a8>
 8003216:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800321a:	fab3 f383 	clz	r3, r3
 800321e:	b2db      	uxtb	r3, r3
 8003220:	429a      	cmp	r2, r3
 8003222:	d106      	bne.n	8003232 <HAL_ADC_ConfigChannel+0x2ba>
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	2200      	movs	r2, #0
 800322a:	2101      	movs	r1, #1
 800322c:	4618      	mov	r0, r3
 800322e:	f7fe ffd3 	bl	80021d8 <LL_ADC_SetOffsetState>
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	2102      	movs	r1, #2
 8003238:	4618      	mov	r0, r3
 800323a:	f7fe ffb7 	bl	80021ac <LL_ADC_GetOffsetChannel>
 800323e:	4603      	mov	r3, r0
 8003240:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003244:	2b00      	cmp	r3, #0
 8003246:	d10a      	bne.n	800325e <HAL_ADC_ConfigChannel+0x2e6>
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	681b      	ldr	r3, [r3, #0]
 800324c:	2102      	movs	r1, #2
 800324e:	4618      	mov	r0, r3
 8003250:	f7fe ffac 	bl	80021ac <LL_ADC_GetOffsetChannel>
 8003254:	4603      	mov	r3, r0
 8003256:	0e9b      	lsrs	r3, r3, #26
 8003258:	f003 021f 	and.w	r2, r3, #31
 800325c:	e01e      	b.n	800329c <HAL_ADC_ConfigChannel+0x324>
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	2102      	movs	r1, #2
 8003264:	4618      	mov	r0, r3
 8003266:	f7fe ffa1 	bl	80021ac <LL_ADC_GetOffsetChannel>
 800326a:	4603      	mov	r3, r0
 800326c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003270:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003274:	fa93 f3a3 	rbit	r3, r3
 8003278:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800327c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8003280:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003284:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8003288:	2b00      	cmp	r3, #0
 800328a:	d101      	bne.n	8003290 <HAL_ADC_ConfigChannel+0x318>
 800328c:	2320      	movs	r3, #32
 800328e:	e004      	b.n	800329a <HAL_ADC_ConfigChannel+0x322>
 8003290:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8003294:	fab3 f383 	clz	r3, r3
 8003298:	b2db      	uxtb	r3, r3
 800329a:	461a      	mov	r2, r3
 800329c:	683b      	ldr	r3, [r7, #0]
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	d105      	bne.n	80032b4 <HAL_ADC_ConfigChannel+0x33c>
 80032a8:	683b      	ldr	r3, [r7, #0]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	0e9b      	lsrs	r3, r3, #26
 80032ae:	f003 031f 	and.w	r3, r3, #31
 80032b2:	e016      	b.n	80032e2 <HAL_ADC_ConfigChannel+0x36a>
 80032b4:	683b      	ldr	r3, [r7, #0]
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80032bc:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80032c0:	fa93 f3a3 	rbit	r3, r3
 80032c4:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80032c6:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 80032c8:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80032cc:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80032d0:	2b00      	cmp	r3, #0
 80032d2:	d101      	bne.n	80032d8 <HAL_ADC_ConfigChannel+0x360>
 80032d4:	2320      	movs	r3, #32
 80032d6:	e004      	b.n	80032e2 <HAL_ADC_ConfigChannel+0x36a>
 80032d8:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80032dc:	fab3 f383 	clz	r3, r3
 80032e0:	b2db      	uxtb	r3, r3
 80032e2:	429a      	cmp	r2, r3
 80032e4:	d106      	bne.n	80032f4 <HAL_ADC_ConfigChannel+0x37c>
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	681b      	ldr	r3, [r3, #0]
 80032ea:	2200      	movs	r2, #0
 80032ec:	2102      	movs	r1, #2
 80032ee:	4618      	mov	r0, r3
 80032f0:	f7fe ff72 	bl	80021d8 <LL_ADC_SetOffsetState>
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	681b      	ldr	r3, [r3, #0]
 80032f8:	2103      	movs	r1, #3
 80032fa:	4618      	mov	r0, r3
 80032fc:	f7fe ff56 	bl	80021ac <LL_ADC_GetOffsetChannel>
 8003300:	4603      	mov	r3, r0
 8003302:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003306:	2b00      	cmp	r3, #0
 8003308:	d10a      	bne.n	8003320 <HAL_ADC_ConfigChannel+0x3a8>
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	2103      	movs	r1, #3
 8003310:	4618      	mov	r0, r3
 8003312:	f7fe ff4b 	bl	80021ac <LL_ADC_GetOffsetChannel>
 8003316:	4603      	mov	r3, r0
 8003318:	0e9b      	lsrs	r3, r3, #26
 800331a:	f003 021f 	and.w	r2, r3, #31
 800331e:	e017      	b.n	8003350 <HAL_ADC_ConfigChannel+0x3d8>
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	2103      	movs	r1, #3
 8003326:	4618      	mov	r0, r3
 8003328:	f7fe ff40 	bl	80021ac <LL_ADC_GetOffsetChannel>
 800332c:	4603      	mov	r3, r0
 800332e:	677b      	str	r3, [r7, #116]	@ 0x74
 8003330:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003332:	fa93 f3a3 	rbit	r3, r3
 8003336:	673b      	str	r3, [r7, #112]	@ 0x70
 8003338:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800333a:	67bb      	str	r3, [r7, #120]	@ 0x78
 800333c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800333e:	2b00      	cmp	r3, #0
 8003340:	d101      	bne.n	8003346 <HAL_ADC_ConfigChannel+0x3ce>
 8003342:	2320      	movs	r3, #32
 8003344:	e003      	b.n	800334e <HAL_ADC_ConfigChannel+0x3d6>
 8003346:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003348:	fab3 f383 	clz	r3, r3
 800334c:	b2db      	uxtb	r3, r3
 800334e:	461a      	mov	r2, r3
 8003350:	683b      	ldr	r3, [r7, #0]
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003358:	2b00      	cmp	r3, #0
 800335a:	d105      	bne.n	8003368 <HAL_ADC_ConfigChannel+0x3f0>
 800335c:	683b      	ldr	r3, [r7, #0]
 800335e:	681b      	ldr	r3, [r3, #0]
 8003360:	0e9b      	lsrs	r3, r3, #26
 8003362:	f003 031f 	and.w	r3, r3, #31
 8003366:	e011      	b.n	800338c <HAL_ADC_ConfigChannel+0x414>
 8003368:	683b      	ldr	r3, [r7, #0]
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800336e:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8003370:	fa93 f3a3 	rbit	r3, r3
 8003374:	667b      	str	r3, [r7, #100]	@ 0x64
 8003376:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003378:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800337a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800337c:	2b00      	cmp	r3, #0
 800337e:	d101      	bne.n	8003384 <HAL_ADC_ConfigChannel+0x40c>
 8003380:	2320      	movs	r3, #32
 8003382:	e003      	b.n	800338c <HAL_ADC_ConfigChannel+0x414>
 8003384:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003386:	fab3 f383 	clz	r3, r3
 800338a:	b2db      	uxtb	r3, r3
 800338c:	429a      	cmp	r2, r3
 800338e:	d106      	bne.n	800339e <HAL_ADC_ConfigChannel+0x426>
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	681b      	ldr	r3, [r3, #0]
 8003394:	2200      	movs	r2, #0
 8003396:	2103      	movs	r1, #3
 8003398:	4618      	mov	r0, r3
 800339a:	f7fe ff1d 	bl	80021d8 <LL_ADC_SetOffsetState>
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	4618      	mov	r0, r3
 80033a4:	f7ff f89c 	bl	80024e0 <LL_ADC_IsEnabled>
 80033a8:	4603      	mov	r3, r0
 80033aa:	2b00      	cmp	r3, #0
 80033ac:	f040 8140 	bne.w	8003630 <HAL_ADC_ConfigChannel+0x6b8>
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	6818      	ldr	r0, [r3, #0]
 80033b4:	683b      	ldr	r3, [r7, #0]
 80033b6:	6819      	ldr	r1, [r3, #0]
 80033b8:	683b      	ldr	r3, [r7, #0]
 80033ba:	68db      	ldr	r3, [r3, #12]
 80033bc:	461a      	mov	r2, r3
 80033be:	f7fe ffd9 	bl	8002374 <LL_ADC_SetChannelSingleDiff>
 80033c2:	683b      	ldr	r3, [r7, #0]
 80033c4:	68db      	ldr	r3, [r3, #12]
 80033c6:	4a8f      	ldr	r2, [pc, #572]	@ (8003604 <HAL_ADC_ConfigChannel+0x68c>)
 80033c8:	4293      	cmp	r3, r2
 80033ca:	f040 8131 	bne.w	8003630 <HAL_ADC_ConfigChannel+0x6b8>
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	6818      	ldr	r0, [r3, #0]
 80033d2:	683b      	ldr	r3, [r7, #0]
 80033d4:	681b      	ldr	r3, [r3, #0]
 80033d6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80033da:	2b00      	cmp	r3, #0
 80033dc:	d10b      	bne.n	80033f6 <HAL_ADC_ConfigChannel+0x47e>
 80033de:	683b      	ldr	r3, [r7, #0]
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	0e9b      	lsrs	r3, r3, #26
 80033e4:	3301      	adds	r3, #1
 80033e6:	f003 031f 	and.w	r3, r3, #31
 80033ea:	2b09      	cmp	r3, #9
 80033ec:	bf94      	ite	ls
 80033ee:	2301      	movls	r3, #1
 80033f0:	2300      	movhi	r3, #0
 80033f2:	b2db      	uxtb	r3, r3
 80033f4:	e019      	b.n	800342a <HAL_ADC_ConfigChannel+0x4b2>
 80033f6:	683b      	ldr	r3, [r7, #0]
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80033fc:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80033fe:	fa93 f3a3 	rbit	r3, r3
 8003402:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003404:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8003406:	663b      	str	r3, [r7, #96]	@ 0x60
 8003408:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800340a:	2b00      	cmp	r3, #0
 800340c:	d101      	bne.n	8003412 <HAL_ADC_ConfigChannel+0x49a>
 800340e:	2320      	movs	r3, #32
 8003410:	e003      	b.n	800341a <HAL_ADC_ConfigChannel+0x4a2>
 8003412:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003414:	fab3 f383 	clz	r3, r3
 8003418:	b2db      	uxtb	r3, r3
 800341a:	3301      	adds	r3, #1
 800341c:	f003 031f 	and.w	r3, r3, #31
 8003420:	2b09      	cmp	r3, #9
 8003422:	bf94      	ite	ls
 8003424:	2301      	movls	r3, #1
 8003426:	2300      	movhi	r3, #0
 8003428:	b2db      	uxtb	r3, r3
 800342a:	2b00      	cmp	r3, #0
 800342c:	d079      	beq.n	8003522 <HAL_ADC_ConfigChannel+0x5aa>
 800342e:	683b      	ldr	r3, [r7, #0]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003436:	2b00      	cmp	r3, #0
 8003438:	d107      	bne.n	800344a <HAL_ADC_ConfigChannel+0x4d2>
 800343a:	683b      	ldr	r3, [r7, #0]
 800343c:	681b      	ldr	r3, [r3, #0]
 800343e:	0e9b      	lsrs	r3, r3, #26
 8003440:	3301      	adds	r3, #1
 8003442:	069b      	lsls	r3, r3, #26
 8003444:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003448:	e015      	b.n	8003476 <HAL_ADC_ConfigChannel+0x4fe>
 800344a:	683b      	ldr	r3, [r7, #0]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	653b      	str	r3, [r7, #80]	@ 0x50
 8003450:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003452:	fa93 f3a3 	rbit	r3, r3
 8003456:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003458:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800345a:	657b      	str	r3, [r7, #84]	@ 0x54
 800345c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800345e:	2b00      	cmp	r3, #0
 8003460:	d101      	bne.n	8003466 <HAL_ADC_ConfigChannel+0x4ee>
 8003462:	2320      	movs	r3, #32
 8003464:	e003      	b.n	800346e <HAL_ADC_ConfigChannel+0x4f6>
 8003466:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003468:	fab3 f383 	clz	r3, r3
 800346c:	b2db      	uxtb	r3, r3
 800346e:	3301      	adds	r3, #1
 8003470:	069b      	lsls	r3, r3, #26
 8003472:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003476:	683b      	ldr	r3, [r7, #0]
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800347e:	2b00      	cmp	r3, #0
 8003480:	d109      	bne.n	8003496 <HAL_ADC_ConfigChannel+0x51e>
 8003482:	683b      	ldr	r3, [r7, #0]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	0e9b      	lsrs	r3, r3, #26
 8003488:	3301      	adds	r3, #1
 800348a:	f003 031f 	and.w	r3, r3, #31
 800348e:	2101      	movs	r1, #1
 8003490:	fa01 f303 	lsl.w	r3, r1, r3
 8003494:	e017      	b.n	80034c6 <HAL_ADC_ConfigChannel+0x54e>
 8003496:	683b      	ldr	r3, [r7, #0]
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	647b      	str	r3, [r7, #68]	@ 0x44
 800349c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800349e:	fa93 f3a3 	rbit	r3, r3
 80034a2:	643b      	str	r3, [r7, #64]	@ 0x40
 80034a4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80034a6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80034a8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d101      	bne.n	80034b2 <HAL_ADC_ConfigChannel+0x53a>
 80034ae:	2320      	movs	r3, #32
 80034b0:	e003      	b.n	80034ba <HAL_ADC_ConfigChannel+0x542>
 80034b2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80034b4:	fab3 f383 	clz	r3, r3
 80034b8:	b2db      	uxtb	r3, r3
 80034ba:	3301      	adds	r3, #1
 80034bc:	f003 031f 	and.w	r3, r3, #31
 80034c0:	2101      	movs	r1, #1
 80034c2:	fa01 f303 	lsl.w	r3, r1, r3
 80034c6:	ea42 0103 	orr.w	r1, r2, r3
 80034ca:	683b      	ldr	r3, [r7, #0]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80034d2:	2b00      	cmp	r3, #0
 80034d4:	d10a      	bne.n	80034ec <HAL_ADC_ConfigChannel+0x574>
 80034d6:	683b      	ldr	r3, [r7, #0]
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	0e9b      	lsrs	r3, r3, #26
 80034dc:	3301      	adds	r3, #1
 80034de:	f003 021f 	and.w	r2, r3, #31
 80034e2:	4613      	mov	r3, r2
 80034e4:	005b      	lsls	r3, r3, #1
 80034e6:	4413      	add	r3, r2
 80034e8:	051b      	lsls	r3, r3, #20
 80034ea:	e018      	b.n	800351e <HAL_ADC_ConfigChannel+0x5a6>
 80034ec:	683b      	ldr	r3, [r7, #0]
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80034f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80034f4:	fa93 f3a3 	rbit	r3, r3
 80034f8:	637b      	str	r3, [r7, #52]	@ 0x34
 80034fa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80034fc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80034fe:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003500:	2b00      	cmp	r3, #0
 8003502:	d101      	bne.n	8003508 <HAL_ADC_ConfigChannel+0x590>
 8003504:	2320      	movs	r3, #32
 8003506:	e003      	b.n	8003510 <HAL_ADC_ConfigChannel+0x598>
 8003508:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800350a:	fab3 f383 	clz	r3, r3
 800350e:	b2db      	uxtb	r3, r3
 8003510:	3301      	adds	r3, #1
 8003512:	f003 021f 	and.w	r2, r3, #31
 8003516:	4613      	mov	r3, r2
 8003518:	005b      	lsls	r3, r3, #1
 800351a:	4413      	add	r3, r2
 800351c:	051b      	lsls	r3, r3, #20
 800351e:	430b      	orrs	r3, r1
 8003520:	e081      	b.n	8003626 <HAL_ADC_ConfigChannel+0x6ae>
 8003522:	683b      	ldr	r3, [r7, #0]
 8003524:	681b      	ldr	r3, [r3, #0]
 8003526:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800352a:	2b00      	cmp	r3, #0
 800352c:	d107      	bne.n	800353e <HAL_ADC_ConfigChannel+0x5c6>
 800352e:	683b      	ldr	r3, [r7, #0]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	0e9b      	lsrs	r3, r3, #26
 8003534:	3301      	adds	r3, #1
 8003536:	069b      	lsls	r3, r3, #26
 8003538:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800353c:	e015      	b.n	800356a <HAL_ADC_ConfigChannel+0x5f2>
 800353e:	683b      	ldr	r3, [r7, #0]
 8003540:	681b      	ldr	r3, [r3, #0]
 8003542:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003544:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003546:	fa93 f3a3 	rbit	r3, r3
 800354a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800354c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800354e:	633b      	str	r3, [r7, #48]	@ 0x30
 8003550:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003552:	2b00      	cmp	r3, #0
 8003554:	d101      	bne.n	800355a <HAL_ADC_ConfigChannel+0x5e2>
 8003556:	2320      	movs	r3, #32
 8003558:	e003      	b.n	8003562 <HAL_ADC_ConfigChannel+0x5ea>
 800355a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800355c:	fab3 f383 	clz	r3, r3
 8003560:	b2db      	uxtb	r3, r3
 8003562:	3301      	adds	r3, #1
 8003564:	069b      	lsls	r3, r3, #26
 8003566:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800356a:	683b      	ldr	r3, [r7, #0]
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003572:	2b00      	cmp	r3, #0
 8003574:	d109      	bne.n	800358a <HAL_ADC_ConfigChannel+0x612>
 8003576:	683b      	ldr	r3, [r7, #0]
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	0e9b      	lsrs	r3, r3, #26
 800357c:	3301      	adds	r3, #1
 800357e:	f003 031f 	and.w	r3, r3, #31
 8003582:	2101      	movs	r1, #1
 8003584:	fa01 f303 	lsl.w	r3, r1, r3
 8003588:	e017      	b.n	80035ba <HAL_ADC_ConfigChannel+0x642>
 800358a:	683b      	ldr	r3, [r7, #0]
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	623b      	str	r3, [r7, #32]
 8003590:	6a3b      	ldr	r3, [r7, #32]
 8003592:	fa93 f3a3 	rbit	r3, r3
 8003596:	61fb      	str	r3, [r7, #28]
 8003598:	69fb      	ldr	r3, [r7, #28]
 800359a:	627b      	str	r3, [r7, #36]	@ 0x24
 800359c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800359e:	2b00      	cmp	r3, #0
 80035a0:	d101      	bne.n	80035a6 <HAL_ADC_ConfigChannel+0x62e>
 80035a2:	2320      	movs	r3, #32
 80035a4:	e003      	b.n	80035ae <HAL_ADC_ConfigChannel+0x636>
 80035a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80035a8:	fab3 f383 	clz	r3, r3
 80035ac:	b2db      	uxtb	r3, r3
 80035ae:	3301      	adds	r3, #1
 80035b0:	f003 031f 	and.w	r3, r3, #31
 80035b4:	2101      	movs	r1, #1
 80035b6:	fa01 f303 	lsl.w	r3, r1, r3
 80035ba:	ea42 0103 	orr.w	r1, r2, r3
 80035be:	683b      	ldr	r3, [r7, #0]
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80035c6:	2b00      	cmp	r3, #0
 80035c8:	d10d      	bne.n	80035e6 <HAL_ADC_ConfigChannel+0x66e>
 80035ca:	683b      	ldr	r3, [r7, #0]
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	0e9b      	lsrs	r3, r3, #26
 80035d0:	3301      	adds	r3, #1
 80035d2:	f003 021f 	and.w	r2, r3, #31
 80035d6:	4613      	mov	r3, r2
 80035d8:	005b      	lsls	r3, r3, #1
 80035da:	4413      	add	r3, r2
 80035dc:	3b1e      	subs	r3, #30
 80035de:	051b      	lsls	r3, r3, #20
 80035e0:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80035e4:	e01e      	b.n	8003624 <HAL_ADC_ConfigChannel+0x6ac>
 80035e6:	683b      	ldr	r3, [r7, #0]
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	617b      	str	r3, [r7, #20]
 80035ec:	697b      	ldr	r3, [r7, #20]
 80035ee:	fa93 f3a3 	rbit	r3, r3
 80035f2:	613b      	str	r3, [r7, #16]
 80035f4:	693b      	ldr	r3, [r7, #16]
 80035f6:	61bb      	str	r3, [r7, #24]
 80035f8:	69bb      	ldr	r3, [r7, #24]
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	d104      	bne.n	8003608 <HAL_ADC_ConfigChannel+0x690>
 80035fe:	2320      	movs	r3, #32
 8003600:	e006      	b.n	8003610 <HAL_ADC_ConfigChannel+0x698>
 8003602:	bf00      	nop
 8003604:	407f0000 	.word	0x407f0000
 8003608:	69bb      	ldr	r3, [r7, #24]
 800360a:	fab3 f383 	clz	r3, r3
 800360e:	b2db      	uxtb	r3, r3
 8003610:	3301      	adds	r3, #1
 8003612:	f003 021f 	and.w	r2, r3, #31
 8003616:	4613      	mov	r3, r2
 8003618:	005b      	lsls	r3, r3, #1
 800361a:	4413      	add	r3, r2
 800361c:	3b1e      	subs	r3, #30
 800361e:	051b      	lsls	r3, r3, #20
 8003620:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003624:	430b      	orrs	r3, r1
 8003626:	683a      	ldr	r2, [r7, #0]
 8003628:	6892      	ldr	r2, [r2, #8]
 800362a:	4619      	mov	r1, r3
 800362c:	f7fe fe77 	bl	800231e <LL_ADC_SetChannelSamplingTime>
 8003630:	683b      	ldr	r3, [r7, #0]
 8003632:	681a      	ldr	r2, [r3, #0]
 8003634:	4b3f      	ldr	r3, [pc, #252]	@ (8003734 <HAL_ADC_ConfigChannel+0x7bc>)
 8003636:	4013      	ands	r3, r2
 8003638:	2b00      	cmp	r3, #0
 800363a:	d071      	beq.n	8003720 <HAL_ADC_ConfigChannel+0x7a8>
 800363c:	483e      	ldr	r0, [pc, #248]	@ (8003738 <HAL_ADC_ConfigChannel+0x7c0>)
 800363e:	f7fe fd83 	bl	8002148 <LL_ADC_GetCommonPathInternalCh>
 8003642:	f8c7 00c4 	str.w	r0, [r7, #196]	@ 0xc4
 8003646:	683b      	ldr	r3, [r7, #0]
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	4a3c      	ldr	r2, [pc, #240]	@ (800373c <HAL_ADC_ConfigChannel+0x7c4>)
 800364c:	4293      	cmp	r3, r2
 800364e:	d004      	beq.n	800365a <HAL_ADC_ConfigChannel+0x6e2>
 8003650:	683b      	ldr	r3, [r7, #0]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	4a3a      	ldr	r2, [pc, #232]	@ (8003740 <HAL_ADC_ConfigChannel+0x7c8>)
 8003656:	4293      	cmp	r3, r2
 8003658:	d127      	bne.n	80036aa <HAL_ADC_ConfigChannel+0x732>
 800365a:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800365e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003662:	2b00      	cmp	r3, #0
 8003664:	d121      	bne.n	80036aa <HAL_ADC_ConfigChannel+0x732>
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800366e:	d157      	bne.n	8003720 <HAL_ADC_ConfigChannel+0x7a8>
 8003670:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003674:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003678:	4619      	mov	r1, r3
 800367a:	482f      	ldr	r0, [pc, #188]	@ (8003738 <HAL_ADC_ConfigChannel+0x7c0>)
 800367c:	f7fe fd51 	bl	8002122 <LL_ADC_SetCommonPathInternalCh>
 8003680:	4b30      	ldr	r3, [pc, #192]	@ (8003744 <HAL_ADC_ConfigChannel+0x7cc>)
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	099b      	lsrs	r3, r3, #6
 8003686:	4a30      	ldr	r2, [pc, #192]	@ (8003748 <HAL_ADC_ConfigChannel+0x7d0>)
 8003688:	fba2 2303 	umull	r2, r3, r2, r3
 800368c:	099b      	lsrs	r3, r3, #6
 800368e:	1c5a      	adds	r2, r3, #1
 8003690:	4613      	mov	r3, r2
 8003692:	005b      	lsls	r3, r3, #1
 8003694:	4413      	add	r3, r2
 8003696:	009b      	lsls	r3, r3, #2
 8003698:	60fb      	str	r3, [r7, #12]
 800369a:	e002      	b.n	80036a2 <HAL_ADC_ConfigChannel+0x72a>
 800369c:	68fb      	ldr	r3, [r7, #12]
 800369e:	3b01      	subs	r3, #1
 80036a0:	60fb      	str	r3, [r7, #12]
 80036a2:	68fb      	ldr	r3, [r7, #12]
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	d1f9      	bne.n	800369c <HAL_ADC_ConfigChannel+0x724>
 80036a8:	e03a      	b.n	8003720 <HAL_ADC_ConfigChannel+0x7a8>
 80036aa:	683b      	ldr	r3, [r7, #0]
 80036ac:	681b      	ldr	r3, [r3, #0]
 80036ae:	4a27      	ldr	r2, [pc, #156]	@ (800374c <HAL_ADC_ConfigChannel+0x7d4>)
 80036b0:	4293      	cmp	r3, r2
 80036b2:	d113      	bne.n	80036dc <HAL_ADC_ConfigChannel+0x764>
 80036b4:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80036b8:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80036bc:	2b00      	cmp	r3, #0
 80036be:	d10d      	bne.n	80036dc <HAL_ADC_ConfigChannel+0x764>
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	4a22      	ldr	r2, [pc, #136]	@ (8003750 <HAL_ADC_ConfigChannel+0x7d8>)
 80036c6:	4293      	cmp	r3, r2
 80036c8:	d02a      	beq.n	8003720 <HAL_ADC_ConfigChannel+0x7a8>
 80036ca:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80036ce:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80036d2:	4619      	mov	r1, r3
 80036d4:	4818      	ldr	r0, [pc, #96]	@ (8003738 <HAL_ADC_ConfigChannel+0x7c0>)
 80036d6:	f7fe fd24 	bl	8002122 <LL_ADC_SetCommonPathInternalCh>
 80036da:	e021      	b.n	8003720 <HAL_ADC_ConfigChannel+0x7a8>
 80036dc:	683b      	ldr	r3, [r7, #0]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	4a1c      	ldr	r2, [pc, #112]	@ (8003754 <HAL_ADC_ConfigChannel+0x7dc>)
 80036e2:	4293      	cmp	r3, r2
 80036e4:	d11c      	bne.n	8003720 <HAL_ADC_ConfigChannel+0x7a8>
 80036e6:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80036ea:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80036ee:	2b00      	cmp	r3, #0
 80036f0:	d116      	bne.n	8003720 <HAL_ADC_ConfigChannel+0x7a8>
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	681b      	ldr	r3, [r3, #0]
 80036f6:	4a16      	ldr	r2, [pc, #88]	@ (8003750 <HAL_ADC_ConfigChannel+0x7d8>)
 80036f8:	4293      	cmp	r3, r2
 80036fa:	d011      	beq.n	8003720 <HAL_ADC_ConfigChannel+0x7a8>
 80036fc:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003700:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8003704:	4619      	mov	r1, r3
 8003706:	480c      	ldr	r0, [pc, #48]	@ (8003738 <HAL_ADC_ConfigChannel+0x7c0>)
 8003708:	f7fe fd0b 	bl	8002122 <LL_ADC_SetCommonPathInternalCh>
 800370c:	e008      	b.n	8003720 <HAL_ADC_ConfigChannel+0x7a8>
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003712:	f043 0220 	orr.w	r2, r3, #32
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	65da      	str	r2, [r3, #92]	@ 0x5c
 800371a:	2301      	movs	r3, #1
 800371c:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	2200      	movs	r2, #0
 8003724:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003728:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 800372c:	4618      	mov	r0, r3
 800372e:	37d8      	adds	r7, #216	@ 0xd8
 8003730:	46bd      	mov	sp, r7
 8003732:	bd80      	pop	{r7, pc}
 8003734:	80080000 	.word	0x80080000
 8003738:	50000300 	.word	0x50000300
 800373c:	c3210000 	.word	0xc3210000
 8003740:	90c00010 	.word	0x90c00010
 8003744:	20000000 	.word	0x20000000
 8003748:	053e2d63 	.word	0x053e2d63
 800374c:	c7520000 	.word	0xc7520000
 8003750:	50000100 	.word	0x50000100
 8003754:	cb840000 	.word	0xcb840000

08003758 <ADC_ConversionStop>:
 8003758:	b580      	push	{r7, lr}
 800375a:	b088      	sub	sp, #32
 800375c:	af00      	add	r7, sp, #0
 800375e:	6078      	str	r0, [r7, #4]
 8003760:	6039      	str	r1, [r7, #0]
 8003762:	2300      	movs	r3, #0
 8003764:	61fb      	str	r3, [r7, #28]
 8003766:	683b      	ldr	r3, [r7, #0]
 8003768:	61bb      	str	r3, [r7, #24]
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	4618      	mov	r0, r3
 8003770:	f7fe ff04 	bl	800257c <LL_ADC_REG_IsConversionOngoing>
 8003774:	6138      	str	r0, [r7, #16]
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	4618      	mov	r0, r3
 800377c:	f7fe ff25 	bl	80025ca <LL_ADC_INJ_IsConversionOngoing>
 8003780:	60f8      	str	r0, [r7, #12]
 8003782:	693b      	ldr	r3, [r7, #16]
 8003784:	2b00      	cmp	r3, #0
 8003786:	d103      	bne.n	8003790 <ADC_ConversionStop+0x38>
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	2b00      	cmp	r3, #0
 800378c:	f000 8098 	beq.w	80038c0 <ADC_ConversionStop+0x168>
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	68db      	ldr	r3, [r3, #12]
 8003796:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800379a:	2b00      	cmp	r3, #0
 800379c:	d02a      	beq.n	80037f4 <ADC_ConversionStop+0x9c>
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	7f5b      	ldrb	r3, [r3, #29]
 80037a2:	2b01      	cmp	r3, #1
 80037a4:	d126      	bne.n	80037f4 <ADC_ConversionStop+0x9c>
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	7f1b      	ldrb	r3, [r3, #28]
 80037aa:	2b01      	cmp	r3, #1
 80037ac:	d122      	bne.n	80037f4 <ADC_ConversionStop+0x9c>
 80037ae:	2301      	movs	r3, #1
 80037b0:	61bb      	str	r3, [r7, #24]
 80037b2:	e014      	b.n	80037de <ADC_ConversionStop+0x86>
 80037b4:	69fb      	ldr	r3, [r7, #28]
 80037b6:	4a45      	ldr	r2, [pc, #276]	@ (80038cc <ADC_ConversionStop+0x174>)
 80037b8:	4293      	cmp	r3, r2
 80037ba:	d90d      	bls.n	80037d8 <ADC_ConversionStop+0x80>
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80037c0:	f043 0210 	orr.w	r2, r3, #16
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	65da      	str	r2, [r3, #92]	@ 0x5c
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80037cc:	f043 0201 	orr.w	r2, r3, #1
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	661a      	str	r2, [r3, #96]	@ 0x60
 80037d4:	2301      	movs	r3, #1
 80037d6:	e074      	b.n	80038c2 <ADC_ConversionStop+0x16a>
 80037d8:	69fb      	ldr	r3, [r7, #28]
 80037da:	3301      	adds	r3, #1
 80037dc:	61fb      	str	r3, [r7, #28]
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	681b      	ldr	r3, [r3, #0]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80037e8:	2b40      	cmp	r3, #64	@ 0x40
 80037ea:	d1e3      	bne.n	80037b4 <ADC_ConversionStop+0x5c>
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	681b      	ldr	r3, [r3, #0]
 80037f0:	2240      	movs	r2, #64	@ 0x40
 80037f2:	601a      	str	r2, [r3, #0]
 80037f4:	69bb      	ldr	r3, [r7, #24]
 80037f6:	2b02      	cmp	r3, #2
 80037f8:	d014      	beq.n	8003824 <ADC_ConversionStop+0xcc>
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	4618      	mov	r0, r3
 8003800:	f7fe febc 	bl	800257c <LL_ADC_REG_IsConversionOngoing>
 8003804:	4603      	mov	r3, r0
 8003806:	2b00      	cmp	r3, #0
 8003808:	d00c      	beq.n	8003824 <ADC_ConversionStop+0xcc>
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	4618      	mov	r0, r3
 8003810:	f7fe fe79 	bl	8002506 <LL_ADC_IsDisableOngoing>
 8003814:	4603      	mov	r3, r0
 8003816:	2b00      	cmp	r3, #0
 8003818:	d104      	bne.n	8003824 <ADC_ConversionStop+0xcc>
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	4618      	mov	r0, r3
 8003820:	f7fe fe98 	bl	8002554 <LL_ADC_REG_StopConversion>
 8003824:	69bb      	ldr	r3, [r7, #24]
 8003826:	2b01      	cmp	r3, #1
 8003828:	d014      	beq.n	8003854 <ADC_ConversionStop+0xfc>
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	4618      	mov	r0, r3
 8003830:	f7fe fecb 	bl	80025ca <LL_ADC_INJ_IsConversionOngoing>
 8003834:	4603      	mov	r3, r0
 8003836:	2b00      	cmp	r3, #0
 8003838:	d00c      	beq.n	8003854 <ADC_ConversionStop+0xfc>
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	681b      	ldr	r3, [r3, #0]
 800383e:	4618      	mov	r0, r3
 8003840:	f7fe fe61 	bl	8002506 <LL_ADC_IsDisableOngoing>
 8003844:	4603      	mov	r3, r0
 8003846:	2b00      	cmp	r3, #0
 8003848:	d104      	bne.n	8003854 <ADC_ConversionStop+0xfc>
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	4618      	mov	r0, r3
 8003850:	f7fe fea7 	bl	80025a2 <LL_ADC_INJ_StopConversion>
 8003854:	69bb      	ldr	r3, [r7, #24]
 8003856:	2b02      	cmp	r3, #2
 8003858:	d005      	beq.n	8003866 <ADC_ConversionStop+0x10e>
 800385a:	69bb      	ldr	r3, [r7, #24]
 800385c:	2b03      	cmp	r3, #3
 800385e:	d105      	bne.n	800386c <ADC_ConversionStop+0x114>
 8003860:	230c      	movs	r3, #12
 8003862:	617b      	str	r3, [r7, #20]
 8003864:	e005      	b.n	8003872 <ADC_ConversionStop+0x11a>
 8003866:	2308      	movs	r3, #8
 8003868:	617b      	str	r3, [r7, #20]
 800386a:	e002      	b.n	8003872 <ADC_ConversionStop+0x11a>
 800386c:	2304      	movs	r3, #4
 800386e:	617b      	str	r3, [r7, #20]
 8003870:	bf00      	nop
 8003872:	f7fe fc37 	bl	80020e4 <HAL_GetTick>
 8003876:	60b8      	str	r0, [r7, #8]
 8003878:	e01b      	b.n	80038b2 <ADC_ConversionStop+0x15a>
 800387a:	f7fe fc33 	bl	80020e4 <HAL_GetTick>
 800387e:	4602      	mov	r2, r0
 8003880:	68bb      	ldr	r3, [r7, #8]
 8003882:	1ad3      	subs	r3, r2, r3
 8003884:	2b05      	cmp	r3, #5
 8003886:	d914      	bls.n	80038b2 <ADC_ConversionStop+0x15a>
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	689a      	ldr	r2, [r3, #8]
 800388e:	697b      	ldr	r3, [r7, #20]
 8003890:	4013      	ands	r3, r2
 8003892:	2b00      	cmp	r3, #0
 8003894:	d00d      	beq.n	80038b2 <ADC_ConversionStop+0x15a>
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800389a:	f043 0210 	orr.w	r2, r3, #16
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80038a6:	f043 0201 	orr.w	r2, r3, #1
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	661a      	str	r2, [r3, #96]	@ 0x60
 80038ae:	2301      	movs	r3, #1
 80038b0:	e007      	b.n	80038c2 <ADC_ConversionStop+0x16a>
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	689a      	ldr	r2, [r3, #8]
 80038b8:	697b      	ldr	r3, [r7, #20]
 80038ba:	4013      	ands	r3, r2
 80038bc:	2b00      	cmp	r3, #0
 80038be:	d1dc      	bne.n	800387a <ADC_ConversionStop+0x122>
 80038c0:	2300      	movs	r3, #0
 80038c2:	4618      	mov	r0, r3
 80038c4:	3720      	adds	r7, #32
 80038c6:	46bd      	mov	sp, r7
 80038c8:	bd80      	pop	{r7, pc}
 80038ca:	bf00      	nop
 80038cc:	a33fffff 	.word	0xa33fffff

080038d0 <ADC_Enable>:
 80038d0:	b580      	push	{r7, lr}
 80038d2:	b084      	sub	sp, #16
 80038d4:	af00      	add	r7, sp, #0
 80038d6:	6078      	str	r0, [r7, #4]
 80038d8:	2300      	movs	r3, #0
 80038da:	60bb      	str	r3, [r7, #8]
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	4618      	mov	r0, r3
 80038e2:	f7fe fdfd 	bl	80024e0 <LL_ADC_IsEnabled>
 80038e6:	4603      	mov	r3, r0
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	d169      	bne.n	80039c0 <ADC_Enable+0xf0>
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	681b      	ldr	r3, [r3, #0]
 80038f0:	689a      	ldr	r2, [r3, #8]
 80038f2:	4b36      	ldr	r3, [pc, #216]	@ (80039cc <ADC_Enable+0xfc>)
 80038f4:	4013      	ands	r3, r2
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	d00d      	beq.n	8003916 <ADC_Enable+0x46>
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038fe:	f043 0210 	orr.w	r2, r3, #16
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800390a:	f043 0201 	orr.w	r2, r3, #1
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	661a      	str	r2, [r3, #96]	@ 0x60
 8003912:	2301      	movs	r3, #1
 8003914:	e055      	b.n	80039c2 <ADC_Enable+0xf2>
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	4618      	mov	r0, r3
 800391c:	f7fe fdb8 	bl	8002490 <LL_ADC_Enable>
 8003920:	482b      	ldr	r0, [pc, #172]	@ (80039d0 <ADC_Enable+0x100>)
 8003922:	f7fe fc11 	bl	8002148 <LL_ADC_GetCommonPathInternalCh>
 8003926:	4603      	mov	r3, r0
 8003928:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800392c:	2b00      	cmp	r3, #0
 800392e:	d013      	beq.n	8003958 <ADC_Enable+0x88>
 8003930:	4b28      	ldr	r3, [pc, #160]	@ (80039d4 <ADC_Enable+0x104>)
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	099b      	lsrs	r3, r3, #6
 8003936:	4a28      	ldr	r2, [pc, #160]	@ (80039d8 <ADC_Enable+0x108>)
 8003938:	fba2 2303 	umull	r2, r3, r2, r3
 800393c:	099b      	lsrs	r3, r3, #6
 800393e:	1c5a      	adds	r2, r3, #1
 8003940:	4613      	mov	r3, r2
 8003942:	005b      	lsls	r3, r3, #1
 8003944:	4413      	add	r3, r2
 8003946:	009b      	lsls	r3, r3, #2
 8003948:	60bb      	str	r3, [r7, #8]
 800394a:	e002      	b.n	8003952 <ADC_Enable+0x82>
 800394c:	68bb      	ldr	r3, [r7, #8]
 800394e:	3b01      	subs	r3, #1
 8003950:	60bb      	str	r3, [r7, #8]
 8003952:	68bb      	ldr	r3, [r7, #8]
 8003954:	2b00      	cmp	r3, #0
 8003956:	d1f9      	bne.n	800394c <ADC_Enable+0x7c>
 8003958:	f7fe fbc4 	bl	80020e4 <HAL_GetTick>
 800395c:	60f8      	str	r0, [r7, #12]
 800395e:	e028      	b.n	80039b2 <ADC_Enable+0xe2>
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	681b      	ldr	r3, [r3, #0]
 8003964:	4618      	mov	r0, r3
 8003966:	f7fe fdbb 	bl	80024e0 <LL_ADC_IsEnabled>
 800396a:	4603      	mov	r3, r0
 800396c:	2b00      	cmp	r3, #0
 800396e:	d104      	bne.n	800397a <ADC_Enable+0xaa>
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	4618      	mov	r0, r3
 8003976:	f7fe fd8b 	bl	8002490 <LL_ADC_Enable>
 800397a:	f7fe fbb3 	bl	80020e4 <HAL_GetTick>
 800397e:	4602      	mov	r2, r0
 8003980:	68fb      	ldr	r3, [r7, #12]
 8003982:	1ad3      	subs	r3, r2, r3
 8003984:	2b02      	cmp	r3, #2
 8003986:	d914      	bls.n	80039b2 <ADC_Enable+0xe2>
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	681b      	ldr	r3, [r3, #0]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	f003 0301 	and.w	r3, r3, #1
 8003992:	2b01      	cmp	r3, #1
 8003994:	d00d      	beq.n	80039b2 <ADC_Enable+0xe2>
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800399a:	f043 0210 	orr.w	r2, r3, #16
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80039a6:	f043 0201 	orr.w	r2, r3, #1
 80039aa:	687b      	ldr	r3, [r7, #4]
 80039ac:	661a      	str	r2, [r3, #96]	@ 0x60
 80039ae:	2301      	movs	r3, #1
 80039b0:	e007      	b.n	80039c2 <ADC_Enable+0xf2>
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	f003 0301 	and.w	r3, r3, #1
 80039bc:	2b01      	cmp	r3, #1
 80039be:	d1cf      	bne.n	8003960 <ADC_Enable+0x90>
 80039c0:	2300      	movs	r3, #0
 80039c2:	4618      	mov	r0, r3
 80039c4:	3710      	adds	r7, #16
 80039c6:	46bd      	mov	sp, r7
 80039c8:	bd80      	pop	{r7, pc}
 80039ca:	bf00      	nop
 80039cc:	8000003f 	.word	0x8000003f
 80039d0:	50000300 	.word	0x50000300
 80039d4:	20000000 	.word	0x20000000
 80039d8:	053e2d63 	.word	0x053e2d63

080039dc <ADC_Disable>:
 80039dc:	b580      	push	{r7, lr}
 80039de:	b084      	sub	sp, #16
 80039e0:	af00      	add	r7, sp, #0
 80039e2:	6078      	str	r0, [r7, #4]
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	4618      	mov	r0, r3
 80039ea:	f7fe fd8c 	bl	8002506 <LL_ADC_IsDisableOngoing>
 80039ee:	60f8      	str	r0, [r7, #12]
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	4618      	mov	r0, r3
 80039f6:	f7fe fd73 	bl	80024e0 <LL_ADC_IsEnabled>
 80039fa:	4603      	mov	r3, r0
 80039fc:	2b00      	cmp	r3, #0
 80039fe:	d047      	beq.n	8003a90 <ADC_Disable+0xb4>
 8003a00:	68fb      	ldr	r3, [r7, #12]
 8003a02:	2b00      	cmp	r3, #0
 8003a04:	d144      	bne.n	8003a90 <ADC_Disable+0xb4>
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	681b      	ldr	r3, [r3, #0]
 8003a0a:	689b      	ldr	r3, [r3, #8]
 8003a0c:	f003 030d 	and.w	r3, r3, #13
 8003a10:	2b01      	cmp	r3, #1
 8003a12:	d10c      	bne.n	8003a2e <ADC_Disable+0x52>
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	681b      	ldr	r3, [r3, #0]
 8003a18:	4618      	mov	r0, r3
 8003a1a:	f7fe fd4d 	bl	80024b8 <LL_ADC_Disable>
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	2203      	movs	r2, #3
 8003a24:	601a      	str	r2, [r3, #0]
 8003a26:	f7fe fb5d 	bl	80020e4 <HAL_GetTick>
 8003a2a:	60b8      	str	r0, [r7, #8]
 8003a2c:	e029      	b.n	8003a82 <ADC_Disable+0xa6>
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a32:	f043 0210 	orr.w	r2, r3, #16
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003a3e:	f043 0201 	orr.w	r2, r3, #1
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	661a      	str	r2, [r3, #96]	@ 0x60
 8003a46:	2301      	movs	r3, #1
 8003a48:	e023      	b.n	8003a92 <ADC_Disable+0xb6>
 8003a4a:	f7fe fb4b 	bl	80020e4 <HAL_GetTick>
 8003a4e:	4602      	mov	r2, r0
 8003a50:	68bb      	ldr	r3, [r7, #8]
 8003a52:	1ad3      	subs	r3, r2, r3
 8003a54:	2b02      	cmp	r3, #2
 8003a56:	d914      	bls.n	8003a82 <ADC_Disable+0xa6>
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	681b      	ldr	r3, [r3, #0]
 8003a5c:	689b      	ldr	r3, [r3, #8]
 8003a5e:	f003 0301 	and.w	r3, r3, #1
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d00d      	beq.n	8003a82 <ADC_Disable+0xa6>
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a6a:	f043 0210 	orr.w	r2, r3, #16
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003a76:	f043 0201 	orr.w	r2, r3, #1
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	661a      	str	r2, [r3, #96]	@ 0x60
 8003a7e:	2301      	movs	r3, #1
 8003a80:	e007      	b.n	8003a92 <ADC_Disable+0xb6>
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	689b      	ldr	r3, [r3, #8]
 8003a88:	f003 0301 	and.w	r3, r3, #1
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	d1dc      	bne.n	8003a4a <ADC_Disable+0x6e>
 8003a90:	2300      	movs	r3, #0
 8003a92:	4618      	mov	r0, r3
 8003a94:	3710      	adds	r7, #16
 8003a96:	46bd      	mov	sp, r7
 8003a98:	bd80      	pop	{r7, pc}

08003a9a <LL_ADC_IsEnabled>:
 8003a9a:	b480      	push	{r7}
 8003a9c:	b083      	sub	sp, #12
 8003a9e:	af00      	add	r7, sp, #0
 8003aa0:	6078      	str	r0, [r7, #4]
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	689b      	ldr	r3, [r3, #8]
 8003aa6:	f003 0301 	and.w	r3, r3, #1
 8003aaa:	2b01      	cmp	r3, #1
 8003aac:	d101      	bne.n	8003ab2 <LL_ADC_IsEnabled+0x18>
 8003aae:	2301      	movs	r3, #1
 8003ab0:	e000      	b.n	8003ab4 <LL_ADC_IsEnabled+0x1a>
 8003ab2:	2300      	movs	r3, #0
 8003ab4:	4618      	mov	r0, r3
 8003ab6:	370c      	adds	r7, #12
 8003ab8:	46bd      	mov	sp, r7
 8003aba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003abe:	4770      	bx	lr

08003ac0 <LL_ADC_REG_IsConversionOngoing>:
 8003ac0:	b480      	push	{r7}
 8003ac2:	b083      	sub	sp, #12
 8003ac4:	af00      	add	r7, sp, #0
 8003ac6:	6078      	str	r0, [r7, #4]
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	689b      	ldr	r3, [r3, #8]
 8003acc:	f003 0304 	and.w	r3, r3, #4
 8003ad0:	2b04      	cmp	r3, #4
 8003ad2:	d101      	bne.n	8003ad8 <LL_ADC_REG_IsConversionOngoing+0x18>
 8003ad4:	2301      	movs	r3, #1
 8003ad6:	e000      	b.n	8003ada <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003ad8:	2300      	movs	r3, #0
 8003ada:	4618      	mov	r0, r3
 8003adc:	370c      	adds	r7, #12
 8003ade:	46bd      	mov	sp, r7
 8003ae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ae4:	4770      	bx	lr
	...

08003ae8 <HAL_ADCEx_MultiModeConfigChannel>:
 8003ae8:	b590      	push	{r4, r7, lr}
 8003aea:	b0a1      	sub	sp, #132	@ 0x84
 8003aec:	af00      	add	r7, sp, #0
 8003aee:	6078      	str	r0, [r7, #4]
 8003af0:	6039      	str	r1, [r7, #0]
 8003af2:	2300      	movs	r3, #0
 8003af4:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8003afe:	2b01      	cmp	r3, #1
 8003b00:	d101      	bne.n	8003b06 <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 8003b02:	2302      	movs	r3, #2
 8003b04:	e08b      	b.n	8003c1e <HAL_ADCEx_MultiModeConfigChannel+0x136>
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	2201      	movs	r2, #1
 8003b0a:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003b0e:	2300      	movs	r3, #0
 8003b10:	667b      	str	r3, [r7, #100]	@ 0x64
 8003b12:	2300      	movs	r3, #0
 8003b14:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003b1e:	d102      	bne.n	8003b26 <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 8003b20:	4b41      	ldr	r3, [pc, #260]	@ (8003c28 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8003b22:	60bb      	str	r3, [r7, #8]
 8003b24:	e001      	b.n	8003b2a <HAL_ADCEx_MultiModeConfigChannel+0x42>
 8003b26:	2300      	movs	r3, #0
 8003b28:	60bb      	str	r3, [r7, #8]
 8003b2a:	68bb      	ldr	r3, [r7, #8]
 8003b2c:	2b00      	cmp	r3, #0
 8003b2e:	d10b      	bne.n	8003b48 <HAL_ADCEx_MultiModeConfigChannel+0x60>
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b34:	f043 0220 	orr.w	r2, r3, #32
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	2200      	movs	r2, #0
 8003b40:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003b44:	2301      	movs	r3, #1
 8003b46:	e06a      	b.n	8003c1e <HAL_ADCEx_MultiModeConfigChannel+0x136>
 8003b48:	68bb      	ldr	r3, [r7, #8]
 8003b4a:	4618      	mov	r0, r3
 8003b4c:	f7ff ffb8 	bl	8003ac0 <LL_ADC_REG_IsConversionOngoing>
 8003b50:	67b8      	str	r0, [r7, #120]	@ 0x78
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	4618      	mov	r0, r3
 8003b58:	f7ff ffb2 	bl	8003ac0 <LL_ADC_REG_IsConversionOngoing>
 8003b5c:	4603      	mov	r3, r0
 8003b5e:	2b00      	cmp	r3, #0
 8003b60:	d14c      	bne.n	8003bfc <HAL_ADCEx_MultiModeConfigChannel+0x114>
 8003b62:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	d149      	bne.n	8003bfc <HAL_ADCEx_MultiModeConfigChannel+0x114>
 8003b68:	4b30      	ldr	r3, [pc, #192]	@ (8003c2c <HAL_ADCEx_MultiModeConfigChannel+0x144>)
 8003b6a:	677b      	str	r3, [r7, #116]	@ 0x74
 8003b6c:	683b      	ldr	r3, [r7, #0]
 8003b6e:	681b      	ldr	r3, [r3, #0]
 8003b70:	2b00      	cmp	r3, #0
 8003b72:	d028      	beq.n	8003bc6 <HAL_ADCEx_MultiModeConfigChannel+0xde>
 8003b74:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003b76:	689b      	ldr	r3, [r3, #8]
 8003b78:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003b7c:	683b      	ldr	r3, [r7, #0]
 8003b7e:	6859      	ldr	r1, [r3, #4]
 8003b80:	687b      	ldr	r3, [r7, #4]
 8003b82:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8003b86:	035b      	lsls	r3, r3, #13
 8003b88:	430b      	orrs	r3, r1
 8003b8a:	431a      	orrs	r2, r3
 8003b8c:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003b8e:	609a      	str	r2, [r3, #8]
 8003b90:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8003b94:	f7ff ff81 	bl	8003a9a <LL_ADC_IsEnabled>
 8003b98:	4604      	mov	r4, r0
 8003b9a:	4823      	ldr	r0, [pc, #140]	@ (8003c28 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8003b9c:	f7ff ff7d 	bl	8003a9a <LL_ADC_IsEnabled>
 8003ba0:	4603      	mov	r3, r0
 8003ba2:	4323      	orrs	r3, r4
 8003ba4:	2b00      	cmp	r3, #0
 8003ba6:	d133      	bne.n	8003c10 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003ba8:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003baa:	689b      	ldr	r3, [r3, #8]
 8003bac:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 8003bb0:	f023 030f 	bic.w	r3, r3, #15
 8003bb4:	683a      	ldr	r2, [r7, #0]
 8003bb6:	6811      	ldr	r1, [r2, #0]
 8003bb8:	683a      	ldr	r2, [r7, #0]
 8003bba:	6892      	ldr	r2, [r2, #8]
 8003bbc:	430a      	orrs	r2, r1
 8003bbe:	431a      	orrs	r2, r3
 8003bc0:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003bc2:	609a      	str	r2, [r3, #8]
 8003bc4:	e024      	b.n	8003c10 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003bc6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003bc8:	689b      	ldr	r3, [r3, #8]
 8003bca:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003bce:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003bd0:	609a      	str	r2, [r3, #8]
 8003bd2:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8003bd6:	f7ff ff60 	bl	8003a9a <LL_ADC_IsEnabled>
 8003bda:	4604      	mov	r4, r0
 8003bdc:	4812      	ldr	r0, [pc, #72]	@ (8003c28 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8003bde:	f7ff ff5c 	bl	8003a9a <LL_ADC_IsEnabled>
 8003be2:	4603      	mov	r3, r0
 8003be4:	4323      	orrs	r3, r4
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d112      	bne.n	8003c10 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003bea:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003bec:	689b      	ldr	r3, [r3, #8]
 8003bee:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 8003bf2:	f023 030f 	bic.w	r3, r3, #15
 8003bf6:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8003bf8:	6093      	str	r3, [r2, #8]
 8003bfa:	e009      	b.n	8003c10 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c00:	f043 0220 	orr.w	r2, r3, #32
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003c08:	2301      	movs	r3, #1
 8003c0a:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8003c0e:	e000      	b.n	8003c12 <HAL_ADCEx_MultiModeConfigChannel+0x12a>
 8003c10:	bf00      	nop
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	2200      	movs	r2, #0
 8003c16:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003c1a:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 8003c1e:	4618      	mov	r0, r3
 8003c20:	3784      	adds	r7, #132	@ 0x84
 8003c22:	46bd      	mov	sp, r7
 8003c24:	bd90      	pop	{r4, r7, pc}
 8003c26:	bf00      	nop
 8003c28:	50000100 	.word	0x50000100
 8003c2c:	50000300 	.word	0x50000300

08003c30 <__NVIC_SetPriorityGrouping>:
 8003c30:	b480      	push	{r7}
 8003c32:	b085      	sub	sp, #20
 8003c34:	af00      	add	r7, sp, #0
 8003c36:	6078      	str	r0, [r7, #4]
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	f003 0307 	and.w	r3, r3, #7
 8003c3e:	60fb      	str	r3, [r7, #12]
 8003c40:	4b0c      	ldr	r3, [pc, #48]	@ (8003c74 <__NVIC_SetPriorityGrouping+0x44>)
 8003c42:	68db      	ldr	r3, [r3, #12]
 8003c44:	60bb      	str	r3, [r7, #8]
 8003c46:	68ba      	ldr	r2, [r7, #8]
 8003c48:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003c4c:	4013      	ands	r3, r2
 8003c4e:	60bb      	str	r3, [r7, #8]
 8003c50:	68fb      	ldr	r3, [r7, #12]
 8003c52:	021a      	lsls	r2, r3, #8
 8003c54:	68bb      	ldr	r3, [r7, #8]
 8003c56:	4313      	orrs	r3, r2
 8003c58:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003c5c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003c60:	60bb      	str	r3, [r7, #8]
 8003c62:	4a04      	ldr	r2, [pc, #16]	@ (8003c74 <__NVIC_SetPriorityGrouping+0x44>)
 8003c64:	68bb      	ldr	r3, [r7, #8]
 8003c66:	60d3      	str	r3, [r2, #12]
 8003c68:	bf00      	nop
 8003c6a:	3714      	adds	r7, #20
 8003c6c:	46bd      	mov	sp, r7
 8003c6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c72:	4770      	bx	lr
 8003c74:	e000ed00 	.word	0xe000ed00

08003c78 <__NVIC_GetPriorityGrouping>:
 8003c78:	b480      	push	{r7}
 8003c7a:	af00      	add	r7, sp, #0
 8003c7c:	4b04      	ldr	r3, [pc, #16]	@ (8003c90 <__NVIC_GetPriorityGrouping+0x18>)
 8003c7e:	68db      	ldr	r3, [r3, #12]
 8003c80:	0a1b      	lsrs	r3, r3, #8
 8003c82:	f003 0307 	and.w	r3, r3, #7
 8003c86:	4618      	mov	r0, r3
 8003c88:	46bd      	mov	sp, r7
 8003c8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c8e:	4770      	bx	lr
 8003c90:	e000ed00 	.word	0xe000ed00

08003c94 <__NVIC_EnableIRQ>:
 8003c94:	b480      	push	{r7}
 8003c96:	b083      	sub	sp, #12
 8003c98:	af00      	add	r7, sp, #0
 8003c9a:	4603      	mov	r3, r0
 8003c9c:	71fb      	strb	r3, [r7, #7]
 8003c9e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	db0b      	blt.n	8003cbe <__NVIC_EnableIRQ+0x2a>
 8003ca6:	79fb      	ldrb	r3, [r7, #7]
 8003ca8:	f003 021f 	and.w	r2, r3, #31
 8003cac:	4907      	ldr	r1, [pc, #28]	@ (8003ccc <__NVIC_EnableIRQ+0x38>)
 8003cae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003cb2:	095b      	lsrs	r3, r3, #5
 8003cb4:	2001      	movs	r0, #1
 8003cb6:	fa00 f202 	lsl.w	r2, r0, r2
 8003cba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003cbe:	bf00      	nop
 8003cc0:	370c      	adds	r7, #12
 8003cc2:	46bd      	mov	sp, r7
 8003cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cc8:	4770      	bx	lr
 8003cca:	bf00      	nop
 8003ccc:	e000e100 	.word	0xe000e100

08003cd0 <__NVIC_SetPriority>:
 8003cd0:	b480      	push	{r7}
 8003cd2:	b083      	sub	sp, #12
 8003cd4:	af00      	add	r7, sp, #0
 8003cd6:	4603      	mov	r3, r0
 8003cd8:	6039      	str	r1, [r7, #0]
 8003cda:	71fb      	strb	r3, [r7, #7]
 8003cdc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003ce0:	2b00      	cmp	r3, #0
 8003ce2:	db0a      	blt.n	8003cfa <__NVIC_SetPriority+0x2a>
 8003ce4:	683b      	ldr	r3, [r7, #0]
 8003ce6:	b2da      	uxtb	r2, r3
 8003ce8:	490c      	ldr	r1, [pc, #48]	@ (8003d1c <__NVIC_SetPriority+0x4c>)
 8003cea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003cee:	0112      	lsls	r2, r2, #4
 8003cf0:	b2d2      	uxtb	r2, r2
 8003cf2:	440b      	add	r3, r1
 8003cf4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003cf8:	e00a      	b.n	8003d10 <__NVIC_SetPriority+0x40>
 8003cfa:	683b      	ldr	r3, [r7, #0]
 8003cfc:	b2da      	uxtb	r2, r3
 8003cfe:	4908      	ldr	r1, [pc, #32]	@ (8003d20 <__NVIC_SetPriority+0x50>)
 8003d00:	79fb      	ldrb	r3, [r7, #7]
 8003d02:	f003 030f 	and.w	r3, r3, #15
 8003d06:	3b04      	subs	r3, #4
 8003d08:	0112      	lsls	r2, r2, #4
 8003d0a:	b2d2      	uxtb	r2, r2
 8003d0c:	440b      	add	r3, r1
 8003d0e:	761a      	strb	r2, [r3, #24]
 8003d10:	bf00      	nop
 8003d12:	370c      	adds	r7, #12
 8003d14:	46bd      	mov	sp, r7
 8003d16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d1a:	4770      	bx	lr
 8003d1c:	e000e100 	.word	0xe000e100
 8003d20:	e000ed00 	.word	0xe000ed00

08003d24 <NVIC_EncodePriority>:
 8003d24:	b480      	push	{r7}
 8003d26:	b089      	sub	sp, #36	@ 0x24
 8003d28:	af00      	add	r7, sp, #0
 8003d2a:	60f8      	str	r0, [r7, #12]
 8003d2c:	60b9      	str	r1, [r7, #8]
 8003d2e:	607a      	str	r2, [r7, #4]
 8003d30:	68fb      	ldr	r3, [r7, #12]
 8003d32:	f003 0307 	and.w	r3, r3, #7
 8003d36:	61fb      	str	r3, [r7, #28]
 8003d38:	69fb      	ldr	r3, [r7, #28]
 8003d3a:	f1c3 0307 	rsb	r3, r3, #7
 8003d3e:	2b04      	cmp	r3, #4
 8003d40:	bf28      	it	cs
 8003d42:	2304      	movcs	r3, #4
 8003d44:	61bb      	str	r3, [r7, #24]
 8003d46:	69fb      	ldr	r3, [r7, #28]
 8003d48:	3304      	adds	r3, #4
 8003d4a:	2b06      	cmp	r3, #6
 8003d4c:	d902      	bls.n	8003d54 <NVIC_EncodePriority+0x30>
 8003d4e:	69fb      	ldr	r3, [r7, #28]
 8003d50:	3b03      	subs	r3, #3
 8003d52:	e000      	b.n	8003d56 <NVIC_EncodePriority+0x32>
 8003d54:	2300      	movs	r3, #0
 8003d56:	617b      	str	r3, [r7, #20]
 8003d58:	f04f 32ff 	mov.w	r2, #4294967295
 8003d5c:	69bb      	ldr	r3, [r7, #24]
 8003d5e:	fa02 f303 	lsl.w	r3, r2, r3
 8003d62:	43da      	mvns	r2, r3
 8003d64:	68bb      	ldr	r3, [r7, #8]
 8003d66:	401a      	ands	r2, r3
 8003d68:	697b      	ldr	r3, [r7, #20]
 8003d6a:	409a      	lsls	r2, r3
 8003d6c:	f04f 31ff 	mov.w	r1, #4294967295
 8003d70:	697b      	ldr	r3, [r7, #20]
 8003d72:	fa01 f303 	lsl.w	r3, r1, r3
 8003d76:	43d9      	mvns	r1, r3
 8003d78:	687b      	ldr	r3, [r7, #4]
 8003d7a:	400b      	ands	r3, r1
 8003d7c:	4313      	orrs	r3, r2
 8003d7e:	4618      	mov	r0, r3
 8003d80:	3724      	adds	r7, #36	@ 0x24
 8003d82:	46bd      	mov	sp, r7
 8003d84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d88:	4770      	bx	lr
	...

08003d8c <SysTick_Config>:
 8003d8c:	b580      	push	{r7, lr}
 8003d8e:	b082      	sub	sp, #8
 8003d90:	af00      	add	r7, sp, #0
 8003d92:	6078      	str	r0, [r7, #4]
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	3b01      	subs	r3, #1
 8003d98:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003d9c:	d301      	bcc.n	8003da2 <SysTick_Config+0x16>
 8003d9e:	2301      	movs	r3, #1
 8003da0:	e00f      	b.n	8003dc2 <SysTick_Config+0x36>
 8003da2:	4a0a      	ldr	r2, [pc, #40]	@ (8003dcc <SysTick_Config+0x40>)
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	3b01      	subs	r3, #1
 8003da8:	6053      	str	r3, [r2, #4]
 8003daa:	210f      	movs	r1, #15
 8003dac:	f04f 30ff 	mov.w	r0, #4294967295
 8003db0:	f7ff ff8e 	bl	8003cd0 <__NVIC_SetPriority>
 8003db4:	4b05      	ldr	r3, [pc, #20]	@ (8003dcc <SysTick_Config+0x40>)
 8003db6:	2200      	movs	r2, #0
 8003db8:	609a      	str	r2, [r3, #8]
 8003dba:	4b04      	ldr	r3, [pc, #16]	@ (8003dcc <SysTick_Config+0x40>)
 8003dbc:	2207      	movs	r2, #7
 8003dbe:	601a      	str	r2, [r3, #0]
 8003dc0:	2300      	movs	r3, #0
 8003dc2:	4618      	mov	r0, r3
 8003dc4:	3708      	adds	r7, #8
 8003dc6:	46bd      	mov	sp, r7
 8003dc8:	bd80      	pop	{r7, pc}
 8003dca:	bf00      	nop
 8003dcc:	e000e010 	.word	0xe000e010

08003dd0 <HAL_NVIC_SetPriorityGrouping>:
 8003dd0:	b580      	push	{r7, lr}
 8003dd2:	b082      	sub	sp, #8
 8003dd4:	af00      	add	r7, sp, #0
 8003dd6:	6078      	str	r0, [r7, #4]
 8003dd8:	6878      	ldr	r0, [r7, #4]
 8003dda:	f7ff ff29 	bl	8003c30 <__NVIC_SetPriorityGrouping>
 8003dde:	bf00      	nop
 8003de0:	3708      	adds	r7, #8
 8003de2:	46bd      	mov	sp, r7
 8003de4:	bd80      	pop	{r7, pc}

08003de6 <HAL_NVIC_SetPriority>:
 8003de6:	b580      	push	{r7, lr}
 8003de8:	b086      	sub	sp, #24
 8003dea:	af00      	add	r7, sp, #0
 8003dec:	4603      	mov	r3, r0
 8003dee:	60b9      	str	r1, [r7, #8]
 8003df0:	607a      	str	r2, [r7, #4]
 8003df2:	73fb      	strb	r3, [r7, #15]
 8003df4:	f7ff ff40 	bl	8003c78 <__NVIC_GetPriorityGrouping>
 8003df8:	6178      	str	r0, [r7, #20]
 8003dfa:	687a      	ldr	r2, [r7, #4]
 8003dfc:	68b9      	ldr	r1, [r7, #8]
 8003dfe:	6978      	ldr	r0, [r7, #20]
 8003e00:	f7ff ff90 	bl	8003d24 <NVIC_EncodePriority>
 8003e04:	4602      	mov	r2, r0
 8003e06:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003e0a:	4611      	mov	r1, r2
 8003e0c:	4618      	mov	r0, r3
 8003e0e:	f7ff ff5f 	bl	8003cd0 <__NVIC_SetPriority>
 8003e12:	bf00      	nop
 8003e14:	3718      	adds	r7, #24
 8003e16:	46bd      	mov	sp, r7
 8003e18:	bd80      	pop	{r7, pc}

08003e1a <HAL_NVIC_EnableIRQ>:
 8003e1a:	b580      	push	{r7, lr}
 8003e1c:	b082      	sub	sp, #8
 8003e1e:	af00      	add	r7, sp, #0
 8003e20:	4603      	mov	r3, r0
 8003e22:	71fb      	strb	r3, [r7, #7]
 8003e24:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003e28:	4618      	mov	r0, r3
 8003e2a:	f7ff ff33 	bl	8003c94 <__NVIC_EnableIRQ>
 8003e2e:	bf00      	nop
 8003e30:	3708      	adds	r7, #8
 8003e32:	46bd      	mov	sp, r7
 8003e34:	bd80      	pop	{r7, pc}

08003e36 <HAL_SYSTICK_Config>:
 8003e36:	b580      	push	{r7, lr}
 8003e38:	b082      	sub	sp, #8
 8003e3a:	af00      	add	r7, sp, #0
 8003e3c:	6078      	str	r0, [r7, #4]
 8003e3e:	6878      	ldr	r0, [r7, #4]
 8003e40:	f7ff ffa4 	bl	8003d8c <SysTick_Config>
 8003e44:	4603      	mov	r3, r0
 8003e46:	4618      	mov	r0, r3
 8003e48:	3708      	adds	r7, #8
 8003e4a:	46bd      	mov	sp, r7
 8003e4c:	bd80      	pop	{r7, pc}
	...

08003e50 <HAL_FDCAN_Init>:
 8003e50:	b580      	push	{r7, lr}
 8003e52:	b084      	sub	sp, #16
 8003e54:	af00      	add	r7, sp, #0
 8003e56:	6078      	str	r0, [r7, #4]
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	2b00      	cmp	r3, #0
 8003e5c:	d101      	bne.n	8003e62 <HAL_FDCAN_Init+0x12>
 8003e5e:	2301      	movs	r3, #1
 8003e60:	e147      	b.n	80040f2 <HAL_FDCAN_Init+0x2a2>
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003e68:	b2db      	uxtb	r3, r3
 8003e6a:	2b00      	cmp	r3, #0
 8003e6c:	d106      	bne.n	8003e7c <HAL_FDCAN_Init+0x2c>
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	2200      	movs	r2, #0
 8003e72:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8003e76:	6878      	ldr	r0, [r7, #4]
 8003e78:	f7fd fe98 	bl	8001bac <HAL_FDCAN_MspInit>
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	699a      	ldr	r2, [r3, #24]
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	f022 0210 	bic.w	r2, r2, #16
 8003e8a:	619a      	str	r2, [r3, #24]
 8003e8c:	f7fe f92a 	bl	80020e4 <HAL_GetTick>
 8003e90:	60f8      	str	r0, [r7, #12]
 8003e92:	e012      	b.n	8003eba <HAL_FDCAN_Init+0x6a>
 8003e94:	f7fe f926 	bl	80020e4 <HAL_GetTick>
 8003e98:	4602      	mov	r2, r0
 8003e9a:	68fb      	ldr	r3, [r7, #12]
 8003e9c:	1ad3      	subs	r3, r2, r3
 8003e9e:	2b0a      	cmp	r3, #10
 8003ea0:	d90b      	bls.n	8003eba <HAL_FDCAN_Init+0x6a>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003ea6:	f043 0201 	orr.w	r2, r3, #1
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	661a      	str	r2, [r3, #96]	@ 0x60
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	2203      	movs	r2, #3
 8003eb2:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8003eb6:	2301      	movs	r3, #1
 8003eb8:	e11b      	b.n	80040f2 <HAL_FDCAN_Init+0x2a2>
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	681b      	ldr	r3, [r3, #0]
 8003ebe:	699b      	ldr	r3, [r3, #24]
 8003ec0:	f003 0308 	and.w	r3, r3, #8
 8003ec4:	2b08      	cmp	r3, #8
 8003ec6:	d0e5      	beq.n	8003e94 <HAL_FDCAN_Init+0x44>
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	699a      	ldr	r2, [r3, #24]
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	681b      	ldr	r3, [r3, #0]
 8003ed2:	f042 0201 	orr.w	r2, r2, #1
 8003ed6:	619a      	str	r2, [r3, #24]
 8003ed8:	f7fe f904 	bl	80020e4 <HAL_GetTick>
 8003edc:	60f8      	str	r0, [r7, #12]
 8003ede:	e012      	b.n	8003f06 <HAL_FDCAN_Init+0xb6>
 8003ee0:	f7fe f900 	bl	80020e4 <HAL_GetTick>
 8003ee4:	4602      	mov	r2, r0
 8003ee6:	68fb      	ldr	r3, [r7, #12]
 8003ee8:	1ad3      	subs	r3, r2, r3
 8003eea:	2b0a      	cmp	r3, #10
 8003eec:	d90b      	bls.n	8003f06 <HAL_FDCAN_Init+0xb6>
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003ef2:	f043 0201 	orr.w	r2, r3, #1
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	661a      	str	r2, [r3, #96]	@ 0x60
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	2203      	movs	r2, #3
 8003efe:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8003f02:	2301      	movs	r3, #1
 8003f04:	e0f5      	b.n	80040f2 <HAL_FDCAN_Init+0x2a2>
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	681b      	ldr	r3, [r3, #0]
 8003f0a:	699b      	ldr	r3, [r3, #24]
 8003f0c:	f003 0301 	and.w	r3, r3, #1
 8003f10:	2b00      	cmp	r3, #0
 8003f12:	d0e5      	beq.n	8003ee0 <HAL_FDCAN_Init+0x90>
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	699a      	ldr	r2, [r3, #24]
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	f042 0202 	orr.w	r2, r2, #2
 8003f22:	619a      	str	r2, [r3, #24]
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	4a74      	ldr	r2, [pc, #464]	@ (80040fc <HAL_FDCAN_Init+0x2ac>)
 8003f2a:	4293      	cmp	r3, r2
 8003f2c:	d103      	bne.n	8003f36 <HAL_FDCAN_Init+0xe6>
 8003f2e:	4a74      	ldr	r2, [pc, #464]	@ (8004100 <HAL_FDCAN_Init+0x2b0>)
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	685b      	ldr	r3, [r3, #4]
 8003f34:	6013      	str	r3, [r2, #0]
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	7c1b      	ldrb	r3, [r3, #16]
 8003f3a:	2b01      	cmp	r3, #1
 8003f3c:	d108      	bne.n	8003f50 <HAL_FDCAN_Init+0x100>
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	699a      	ldr	r2, [r3, #24]
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003f4c:	619a      	str	r2, [r3, #24]
 8003f4e:	e007      	b.n	8003f60 <HAL_FDCAN_Init+0x110>
 8003f50:	687b      	ldr	r3, [r7, #4]
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	699a      	ldr	r2, [r3, #24]
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	681b      	ldr	r3, [r3, #0]
 8003f5a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003f5e:	619a      	str	r2, [r3, #24]
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	7c5b      	ldrb	r3, [r3, #17]
 8003f64:	2b01      	cmp	r3, #1
 8003f66:	d108      	bne.n	8003f7a <HAL_FDCAN_Init+0x12a>
 8003f68:	687b      	ldr	r3, [r7, #4]
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	699a      	ldr	r2, [r3, #24]
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003f76:	619a      	str	r2, [r3, #24]
 8003f78:	e007      	b.n	8003f8a <HAL_FDCAN_Init+0x13a>
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	699a      	ldr	r2, [r3, #24]
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	681b      	ldr	r3, [r3, #0]
 8003f84:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8003f88:	619a      	str	r2, [r3, #24]
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	7c9b      	ldrb	r3, [r3, #18]
 8003f8e:	2b01      	cmp	r3, #1
 8003f90:	d108      	bne.n	8003fa4 <HAL_FDCAN_Init+0x154>
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	681b      	ldr	r3, [r3, #0]
 8003f96:	699a      	ldr	r2, [r3, #24]
 8003f98:	687b      	ldr	r3, [r7, #4]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003fa0:	619a      	str	r2, [r3, #24]
 8003fa2:	e007      	b.n	8003fb4 <HAL_FDCAN_Init+0x164>
 8003fa4:	687b      	ldr	r3, [r7, #4]
 8003fa6:	681b      	ldr	r3, [r3, #0]
 8003fa8:	699a      	ldr	r2, [r3, #24]
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8003fb2:	619a      	str	r2, [r3, #24]
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	681b      	ldr	r3, [r3, #0]
 8003fb8:	699b      	ldr	r3, [r3, #24]
 8003fba:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	689a      	ldr	r2, [r3, #8]
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	430a      	orrs	r2, r1
 8003fc8:	619a      	str	r2, [r3, #24]
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	681b      	ldr	r3, [r3, #0]
 8003fce:	699a      	ldr	r2, [r3, #24]
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	f022 02a4 	bic.w	r2, r2, #164	@ 0xa4
 8003fd8:	619a      	str	r2, [r3, #24]
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	681b      	ldr	r3, [r3, #0]
 8003fde:	691a      	ldr	r2, [r3, #16]
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	681b      	ldr	r3, [r3, #0]
 8003fe4:	f022 0210 	bic.w	r2, r2, #16
 8003fe8:	611a      	str	r2, [r3, #16]
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	68db      	ldr	r3, [r3, #12]
 8003fee:	2b01      	cmp	r3, #1
 8003ff0:	d108      	bne.n	8004004 <HAL_FDCAN_Init+0x1b4>
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	681b      	ldr	r3, [r3, #0]
 8003ff6:	699a      	ldr	r2, [r3, #24]
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	f042 0204 	orr.w	r2, r2, #4
 8004000:	619a      	str	r2, [r3, #24]
 8004002:	e02c      	b.n	800405e <HAL_FDCAN_Init+0x20e>
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	68db      	ldr	r3, [r3, #12]
 8004008:	2b00      	cmp	r3, #0
 800400a:	d028      	beq.n	800405e <HAL_FDCAN_Init+0x20e>
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	68db      	ldr	r3, [r3, #12]
 8004010:	2b02      	cmp	r3, #2
 8004012:	d01c      	beq.n	800404e <HAL_FDCAN_Init+0x1fe>
 8004014:	687b      	ldr	r3, [r7, #4]
 8004016:	681b      	ldr	r3, [r3, #0]
 8004018:	699a      	ldr	r2, [r3, #24]
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8004022:	619a      	str	r2, [r3, #24]
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	681b      	ldr	r3, [r3, #0]
 8004028:	691a      	ldr	r2, [r3, #16]
 800402a:	687b      	ldr	r3, [r7, #4]
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	f042 0210 	orr.w	r2, r2, #16
 8004032:	611a      	str	r2, [r3, #16]
 8004034:	687b      	ldr	r3, [r7, #4]
 8004036:	68db      	ldr	r3, [r3, #12]
 8004038:	2b03      	cmp	r3, #3
 800403a:	d110      	bne.n	800405e <HAL_FDCAN_Init+0x20e>
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	681b      	ldr	r3, [r3, #0]
 8004040:	699a      	ldr	r2, [r3, #24]
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	f042 0220 	orr.w	r2, r2, #32
 800404a:	619a      	str	r2, [r3, #24]
 800404c:	e007      	b.n	800405e <HAL_FDCAN_Init+0x20e>
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	699a      	ldr	r2, [r3, #24]
 8004054:	687b      	ldr	r3, [r7, #4]
 8004056:	681b      	ldr	r3, [r3, #0]
 8004058:	f042 0220 	orr.w	r2, r2, #32
 800405c:	619a      	str	r2, [r3, #24]
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	699b      	ldr	r3, [r3, #24]
 8004062:	3b01      	subs	r3, #1
 8004064:	065a      	lsls	r2, r3, #25
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	69db      	ldr	r3, [r3, #28]
 800406a:	3b01      	subs	r3, #1
 800406c:	021b      	lsls	r3, r3, #8
 800406e:	431a      	orrs	r2, r3
 8004070:	687b      	ldr	r3, [r7, #4]
 8004072:	6a1b      	ldr	r3, [r3, #32]
 8004074:	3b01      	subs	r3, #1
 8004076:	ea42 0103 	orr.w	r1, r2, r3
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	695b      	ldr	r3, [r3, #20]
 800407e:	3b01      	subs	r3, #1
 8004080:	041a      	lsls	r2, r3, #16
 8004082:	687b      	ldr	r3, [r7, #4]
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	430a      	orrs	r2, r1
 8004088:	61da      	str	r2, [r3, #28]
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	689b      	ldr	r3, [r3, #8]
 800408e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004092:	d115      	bne.n	80040c0 <HAL_FDCAN_Init+0x270>
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004098:	1e5a      	subs	r2, r3, #1
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800409e:	3b01      	subs	r3, #1
 80040a0:	021b      	lsls	r3, r3, #8
 80040a2:	431a      	orrs	r2, r3
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80040a8:	3b01      	subs	r3, #1
 80040aa:	011b      	lsls	r3, r3, #4
 80040ac:	ea42 0103 	orr.w	r1, r2, r3
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80040b4:	3b01      	subs	r3, #1
 80040b6:	041a      	lsls	r2, r3, #16
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	430a      	orrs	r2, r1
 80040be:	60da      	str	r2, [r3, #12]
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	681b      	ldr	r3, [r3, #0]
 80040c4:	f8d3 10c0 	ldr.w	r1, [r3, #192]	@ 0xc0
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	430a      	orrs	r2, r1
 80040d2:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 80040d6:	6878      	ldr	r0, [r7, #4]
 80040d8:	f000 fc0e 	bl	80048f8 <FDCAN_CalcultateRamBlockAddresses>
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	2200      	movs	r2, #0
 80040e0:	659a      	str	r2, [r3, #88]	@ 0x58
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	2200      	movs	r2, #0
 80040e6:	661a      	str	r2, [r3, #96]	@ 0x60
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	2201      	movs	r2, #1
 80040ec:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80040f0:	2300      	movs	r3, #0
 80040f2:	4618      	mov	r0, r3
 80040f4:	3710      	adds	r7, #16
 80040f6:	46bd      	mov	sp, r7
 80040f8:	bd80      	pop	{r7, pc}
 80040fa:	bf00      	nop
 80040fc:	40006400 	.word	0x40006400
 8004100:	40006500 	.word	0x40006500

08004104 <HAL_FDCAN_Start>:
 8004104:	b480      	push	{r7}
 8004106:	b083      	sub	sp, #12
 8004108:	af00      	add	r7, sp, #0
 800410a:	6078      	str	r0, [r7, #4]
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8004112:	b2db      	uxtb	r3, r3
 8004114:	2b01      	cmp	r3, #1
 8004116:	d110      	bne.n	800413a <HAL_FDCAN_Start+0x36>
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	2202      	movs	r2, #2
 800411c:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	681b      	ldr	r3, [r3, #0]
 8004124:	699a      	ldr	r2, [r3, #24]
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	681b      	ldr	r3, [r3, #0]
 800412a:	f022 0201 	bic.w	r2, r2, #1
 800412e:	619a      	str	r2, [r3, #24]
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	2200      	movs	r2, #0
 8004134:	661a      	str	r2, [r3, #96]	@ 0x60
 8004136:	2300      	movs	r3, #0
 8004138:	e006      	b.n	8004148 <HAL_FDCAN_Start+0x44>
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800413e:	f043 0204 	orr.w	r2, r3, #4
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	661a      	str	r2, [r3, #96]	@ 0x60
 8004146:	2301      	movs	r3, #1
 8004148:	4618      	mov	r0, r3
 800414a:	370c      	adds	r7, #12
 800414c:	46bd      	mov	sp, r7
 800414e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004152:	4770      	bx	lr

08004154 <HAL_FDCAN_AddMessageToTxFifoQ>:
 8004154:	b580      	push	{r7, lr}
 8004156:	b086      	sub	sp, #24
 8004158:	af00      	add	r7, sp, #0
 800415a:	60f8      	str	r0, [r7, #12]
 800415c:	60b9      	str	r1, [r7, #8]
 800415e:	607a      	str	r2, [r7, #4]
 8004160:	68fb      	ldr	r3, [r7, #12]
 8004162:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8004166:	b2db      	uxtb	r3, r3
 8004168:	2b02      	cmp	r3, #2
 800416a:	d12c      	bne.n	80041c6 <HAL_FDCAN_AddMessageToTxFifoQ+0x72>
 800416c:	68fb      	ldr	r3, [r7, #12]
 800416e:	681b      	ldr	r3, [r3, #0]
 8004170:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8004174:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004178:	2b00      	cmp	r3, #0
 800417a:	d007      	beq.n	800418c <HAL_FDCAN_AddMessageToTxFifoQ+0x38>
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004180:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8004184:	68fb      	ldr	r3, [r7, #12]
 8004186:	661a      	str	r2, [r3, #96]	@ 0x60
 8004188:	2301      	movs	r3, #1
 800418a:	e023      	b.n	80041d4 <HAL_FDCAN_AddMessageToTxFifoQ+0x80>
 800418c:	68fb      	ldr	r3, [r7, #12]
 800418e:	681b      	ldr	r3, [r3, #0]
 8004190:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8004194:	0c1b      	lsrs	r3, r3, #16
 8004196:	f003 0303 	and.w	r3, r3, #3
 800419a:	617b      	str	r3, [r7, #20]
 800419c:	697b      	ldr	r3, [r7, #20]
 800419e:	687a      	ldr	r2, [r7, #4]
 80041a0:	68b9      	ldr	r1, [r7, #8]
 80041a2:	68f8      	ldr	r0, [r7, #12]
 80041a4:	f000 fbfe 	bl	80049a4 <FDCAN_CopyMessageToRAM>
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	681b      	ldr	r3, [r3, #0]
 80041ac:	2101      	movs	r1, #1
 80041ae:	697a      	ldr	r2, [r7, #20]
 80041b0:	fa01 f202 	lsl.w	r2, r1, r2
 80041b4:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
 80041b8:	2201      	movs	r2, #1
 80041ba:	697b      	ldr	r3, [r7, #20]
 80041bc:	409a      	lsls	r2, r3
 80041be:	68fb      	ldr	r3, [r7, #12]
 80041c0:	659a      	str	r2, [r3, #88]	@ 0x58
 80041c2:	2300      	movs	r3, #0
 80041c4:	e006      	b.n	80041d4 <HAL_FDCAN_AddMessageToTxFifoQ+0x80>
 80041c6:	68fb      	ldr	r3, [r7, #12]
 80041c8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80041ca:	f043 0208 	orr.w	r2, r3, #8
 80041ce:	68fb      	ldr	r3, [r7, #12]
 80041d0:	661a      	str	r2, [r3, #96]	@ 0x60
 80041d2:	2301      	movs	r3, #1
 80041d4:	4618      	mov	r0, r3
 80041d6:	3718      	adds	r7, #24
 80041d8:	46bd      	mov	sp, r7
 80041da:	bd80      	pop	{r7, pc}

080041dc <HAL_FDCAN_GetRxMessage>:
 80041dc:	b480      	push	{r7}
 80041de:	b08b      	sub	sp, #44	@ 0x2c
 80041e0:	af00      	add	r7, sp, #0
 80041e2:	60f8      	str	r0, [r7, #12]
 80041e4:	60b9      	str	r1, [r7, #8]
 80041e6:	607a      	str	r2, [r7, #4]
 80041e8:	603b      	str	r3, [r7, #0]
 80041ea:	2300      	movs	r3, #0
 80041ec:	61fb      	str	r3, [r7, #28]
 80041ee:	68fb      	ldr	r3, [r7, #12]
 80041f0:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 80041f4:	76fb      	strb	r3, [r7, #27]
 80041f6:	7efb      	ldrb	r3, [r7, #27]
 80041f8:	2b02      	cmp	r3, #2
 80041fa:	f040 80e8 	bne.w	80043ce <HAL_FDCAN_GetRxMessage+0x1f2>
 80041fe:	68bb      	ldr	r3, [r7, #8]
 8004200:	2b40      	cmp	r3, #64	@ 0x40
 8004202:	d137      	bne.n	8004274 <HAL_FDCAN_GetRxMessage+0x98>
 8004204:	68fb      	ldr	r3, [r7, #12]
 8004206:	681b      	ldr	r3, [r3, #0]
 8004208:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800420c:	f003 030f 	and.w	r3, r3, #15
 8004210:	2b00      	cmp	r3, #0
 8004212:	d107      	bne.n	8004224 <HAL_FDCAN_GetRxMessage+0x48>
 8004214:	68fb      	ldr	r3, [r7, #12]
 8004216:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004218:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800421c:	68fb      	ldr	r3, [r7, #12]
 800421e:	661a      	str	r2, [r3, #96]	@ 0x60
 8004220:	2301      	movs	r3, #1
 8004222:	e0db      	b.n	80043dc <HAL_FDCAN_GetRxMessage+0x200>
 8004224:	68fb      	ldr	r3, [r7, #12]
 8004226:	681b      	ldr	r3, [r3, #0]
 8004228:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800422c:	0e1b      	lsrs	r3, r3, #24
 800422e:	f003 0301 	and.w	r3, r3, #1
 8004232:	2b01      	cmp	r3, #1
 8004234:	d10a      	bne.n	800424c <HAL_FDCAN_GetRxMessage+0x70>
 8004236:	68fb      	ldr	r3, [r7, #12]
 8004238:	681b      	ldr	r3, [r3, #0]
 800423a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800423e:	0a5b      	lsrs	r3, r3, #9
 8004240:	f003 0301 	and.w	r3, r3, #1
 8004244:	2b01      	cmp	r3, #1
 8004246:	d101      	bne.n	800424c <HAL_FDCAN_GetRxMessage+0x70>
 8004248:	2301      	movs	r3, #1
 800424a:	61fb      	str	r3, [r7, #28]
 800424c:	68fb      	ldr	r3, [r7, #12]
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004254:	0a1b      	lsrs	r3, r3, #8
 8004256:	f003 0303 	and.w	r3, r3, #3
 800425a:	69fa      	ldr	r2, [r7, #28]
 800425c:	4413      	add	r3, r2
 800425e:	61fb      	str	r3, [r7, #28]
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	6c99      	ldr	r1, [r3, #72]	@ 0x48
 8004264:	69fa      	ldr	r2, [r7, #28]
 8004266:	4613      	mov	r3, r2
 8004268:	00db      	lsls	r3, r3, #3
 800426a:	4413      	add	r3, r2
 800426c:	00db      	lsls	r3, r3, #3
 800426e:	440b      	add	r3, r1
 8004270:	627b      	str	r3, [r7, #36]	@ 0x24
 8004272:	e036      	b.n	80042e2 <HAL_FDCAN_GetRxMessage+0x106>
 8004274:	68fb      	ldr	r3, [r7, #12]
 8004276:	681b      	ldr	r3, [r3, #0]
 8004278:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800427c:	f003 030f 	and.w	r3, r3, #15
 8004280:	2b00      	cmp	r3, #0
 8004282:	d107      	bne.n	8004294 <HAL_FDCAN_GetRxMessage+0xb8>
 8004284:	68fb      	ldr	r3, [r7, #12]
 8004286:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004288:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800428c:	68fb      	ldr	r3, [r7, #12]
 800428e:	661a      	str	r2, [r3, #96]	@ 0x60
 8004290:	2301      	movs	r3, #1
 8004292:	e0a3      	b.n	80043dc <HAL_FDCAN_GetRxMessage+0x200>
 8004294:	68fb      	ldr	r3, [r7, #12]
 8004296:	681b      	ldr	r3, [r3, #0]
 8004298:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800429c:	0e1b      	lsrs	r3, r3, #24
 800429e:	f003 0301 	and.w	r3, r3, #1
 80042a2:	2b01      	cmp	r3, #1
 80042a4:	d10a      	bne.n	80042bc <HAL_FDCAN_GetRxMessage+0xe0>
 80042a6:	68fb      	ldr	r3, [r7, #12]
 80042a8:	681b      	ldr	r3, [r3, #0]
 80042aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80042ae:	0a1b      	lsrs	r3, r3, #8
 80042b0:	f003 0301 	and.w	r3, r3, #1
 80042b4:	2b01      	cmp	r3, #1
 80042b6:	d101      	bne.n	80042bc <HAL_FDCAN_GetRxMessage+0xe0>
 80042b8:	2301      	movs	r3, #1
 80042ba:	61fb      	str	r3, [r7, #28]
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	681b      	ldr	r3, [r3, #0]
 80042c0:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80042c4:	0a1b      	lsrs	r3, r3, #8
 80042c6:	f003 0303 	and.w	r3, r3, #3
 80042ca:	69fa      	ldr	r2, [r7, #28]
 80042cc:	4413      	add	r3, r2
 80042ce:	61fb      	str	r3, [r7, #28]
 80042d0:	68fb      	ldr	r3, [r7, #12]
 80042d2:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 80042d4:	69fa      	ldr	r2, [r7, #28]
 80042d6:	4613      	mov	r3, r2
 80042d8:	00db      	lsls	r3, r3, #3
 80042da:	4413      	add	r3, r2
 80042dc:	00db      	lsls	r3, r3, #3
 80042de:	440b      	add	r3, r1
 80042e0:	627b      	str	r3, [r7, #36]	@ 0x24
 80042e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80042e4:	681b      	ldr	r3, [r3, #0]
 80042e6:	f003 4280 	and.w	r2, r3, #1073741824	@ 0x40000000
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	605a      	str	r2, [r3, #4]
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	685b      	ldr	r3, [r3, #4]
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d107      	bne.n	8004306 <HAL_FDCAN_GetRxMessage+0x12a>
 80042f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	0c9b      	lsrs	r3, r3, #18
 80042fc:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	601a      	str	r2, [r3, #0]
 8004304:	e005      	b.n	8004312 <HAL_FDCAN_GetRxMessage+0x136>
 8004306:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004308:	681b      	ldr	r3, [r3, #0]
 800430a:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	601a      	str	r2, [r3, #0]
 8004312:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	f003 5200 	and.w	r2, r3, #536870912	@ 0x20000000
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	609a      	str	r2, [r3, #8]
 800431e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	611a      	str	r2, [r3, #16]
 800432a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800432c:	3304      	adds	r3, #4
 800432e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004330:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004332:	681b      	ldr	r3, [r3, #0]
 8004334:	b29a      	uxth	r2, r3
 8004336:	687b      	ldr	r3, [r7, #4]
 8004338:	61da      	str	r2, [r3, #28]
 800433a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800433c:	681b      	ldr	r3, [r3, #0]
 800433e:	0c1b      	lsrs	r3, r3, #16
 8004340:	f003 020f 	and.w	r2, r3, #15
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	60da      	str	r2, [r3, #12]
 8004348:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	f403 1280 	and.w	r2, r3, #1048576	@ 0x100000
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	615a      	str	r2, [r3, #20]
 8004354:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	f403 1200 	and.w	r2, r3, #2097152	@ 0x200000
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	619a      	str	r2, [r3, #24]
 8004360:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004362:	681b      	ldr	r3, [r3, #0]
 8004364:	0e1b      	lsrs	r3, r3, #24
 8004366:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	621a      	str	r2, [r3, #32]
 800436e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	0fda      	lsrs	r2, r3, #31
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	625a      	str	r2, [r3, #36]	@ 0x24
 8004378:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800437a:	3304      	adds	r3, #4
 800437c:	627b      	str	r3, [r7, #36]	@ 0x24
 800437e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004380:	617b      	str	r3, [r7, #20]
 8004382:	2300      	movs	r3, #0
 8004384:	623b      	str	r3, [r7, #32]
 8004386:	e00a      	b.n	800439e <HAL_FDCAN_GetRxMessage+0x1c2>
 8004388:	697a      	ldr	r2, [r7, #20]
 800438a:	6a3b      	ldr	r3, [r7, #32]
 800438c:	441a      	add	r2, r3
 800438e:	6839      	ldr	r1, [r7, #0]
 8004390:	6a3b      	ldr	r3, [r7, #32]
 8004392:	440b      	add	r3, r1
 8004394:	7812      	ldrb	r2, [r2, #0]
 8004396:	701a      	strb	r2, [r3, #0]
 8004398:	6a3b      	ldr	r3, [r7, #32]
 800439a:	3301      	adds	r3, #1
 800439c:	623b      	str	r3, [r7, #32]
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	68db      	ldr	r3, [r3, #12]
 80043a2:	4a11      	ldr	r2, [pc, #68]	@ (80043e8 <HAL_FDCAN_GetRxMessage+0x20c>)
 80043a4:	5cd3      	ldrb	r3, [r2, r3]
 80043a6:	461a      	mov	r2, r3
 80043a8:	6a3b      	ldr	r3, [r7, #32]
 80043aa:	4293      	cmp	r3, r2
 80043ac:	d3ec      	bcc.n	8004388 <HAL_FDCAN_GetRxMessage+0x1ac>
 80043ae:	68bb      	ldr	r3, [r7, #8]
 80043b0:	2b40      	cmp	r3, #64	@ 0x40
 80043b2:	d105      	bne.n	80043c0 <HAL_FDCAN_GetRxMessage+0x1e4>
 80043b4:	68fb      	ldr	r3, [r7, #12]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	69fa      	ldr	r2, [r7, #28]
 80043ba:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 80043be:	e004      	b.n	80043ca <HAL_FDCAN_GetRxMessage+0x1ee>
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	681b      	ldr	r3, [r3, #0]
 80043c4:	69fa      	ldr	r2, [r7, #28]
 80043c6:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 80043ca:	2300      	movs	r3, #0
 80043cc:	e006      	b.n	80043dc <HAL_FDCAN_GetRxMessage+0x200>
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80043d2:	f043 0208 	orr.w	r2, r3, #8
 80043d6:	68fb      	ldr	r3, [r7, #12]
 80043d8:	661a      	str	r2, [r3, #96]	@ 0x60
 80043da:	2301      	movs	r3, #1
 80043dc:	4618      	mov	r0, r3
 80043de:	372c      	adds	r7, #44	@ 0x2c
 80043e0:	46bd      	mov	sp, r7
 80043e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043e6:	4770      	bx	lr
 80043e8:	0800743c 	.word	0x0800743c

080043ec <HAL_FDCAN_GetTxFifoFreeLevel>:
 80043ec:	b480      	push	{r7}
 80043ee:	b085      	sub	sp, #20
 80043f0:	af00      	add	r7, sp, #0
 80043f2:	6078      	str	r0, [r7, #4]
 80043f4:	687b      	ldr	r3, [r7, #4]
 80043f6:	681b      	ldr	r3, [r3, #0]
 80043f8:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 80043fc:	f003 0307 	and.w	r3, r3, #7
 8004400:	60fb      	str	r3, [r7, #12]
 8004402:	68fb      	ldr	r3, [r7, #12]
 8004404:	4618      	mov	r0, r3
 8004406:	3714      	adds	r7, #20
 8004408:	46bd      	mov	sp, r7
 800440a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800440e:	4770      	bx	lr

08004410 <HAL_FDCAN_ActivateNotification>:
 8004410:	b480      	push	{r7}
 8004412:	b087      	sub	sp, #28
 8004414:	af00      	add	r7, sp, #0
 8004416:	60f8      	str	r0, [r7, #12]
 8004418:	60b9      	str	r1, [r7, #8]
 800441a:	607a      	str	r2, [r7, #4]
 800441c:	68fb      	ldr	r3, [r7, #12]
 800441e:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8004422:	75fb      	strb	r3, [r7, #23]
 8004424:	7dfb      	ldrb	r3, [r7, #23]
 8004426:	2b01      	cmp	r3, #1
 8004428:	d003      	beq.n	8004432 <HAL_FDCAN_ActivateNotification+0x22>
 800442a:	7dfb      	ldrb	r3, [r7, #23]
 800442c:	2b02      	cmp	r3, #2
 800442e:	f040 80c8 	bne.w	80045c2 <HAL_FDCAN_ActivateNotification+0x1b2>
 8004432:	68fb      	ldr	r3, [r7, #12]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004438:	613b      	str	r3, [r7, #16]
 800443a:	68bb      	ldr	r3, [r7, #8]
 800443c:	f003 0307 	and.w	r3, r3, #7
 8004440:	2b00      	cmp	r3, #0
 8004442:	d004      	beq.n	800444e <HAL_FDCAN_ActivateNotification+0x3e>
 8004444:	693b      	ldr	r3, [r7, #16]
 8004446:	f003 0301 	and.w	r3, r3, #1
 800444a:	2b00      	cmp	r3, #0
 800444c:	d03b      	beq.n	80044c6 <HAL_FDCAN_ActivateNotification+0xb6>
 800444e:	68bb      	ldr	r3, [r7, #8]
 8004450:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004454:	2b00      	cmp	r3, #0
 8004456:	d004      	beq.n	8004462 <HAL_FDCAN_ActivateNotification+0x52>
 8004458:	693b      	ldr	r3, [r7, #16]
 800445a:	f003 0302 	and.w	r3, r3, #2
 800445e:	2b00      	cmp	r3, #0
 8004460:	d031      	beq.n	80044c6 <HAL_FDCAN_ActivateNotification+0xb6>
 8004462:	68bb      	ldr	r3, [r7, #8]
 8004464:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
 8004468:	2b00      	cmp	r3, #0
 800446a:	d004      	beq.n	8004476 <HAL_FDCAN_ActivateNotification+0x66>
 800446c:	693b      	ldr	r3, [r7, #16]
 800446e:	f003 0304 	and.w	r3, r3, #4
 8004472:	2b00      	cmp	r3, #0
 8004474:	d027      	beq.n	80044c6 <HAL_FDCAN_ActivateNotification+0xb6>
 8004476:	68bb      	ldr	r3, [r7, #8]
 8004478:	f403 53f0 	and.w	r3, r3, #7680	@ 0x1e00
 800447c:	2b00      	cmp	r3, #0
 800447e:	d004      	beq.n	800448a <HAL_FDCAN_ActivateNotification+0x7a>
 8004480:	693b      	ldr	r3, [r7, #16]
 8004482:	f003 0308 	and.w	r3, r3, #8
 8004486:	2b00      	cmp	r3, #0
 8004488:	d01d      	beq.n	80044c6 <HAL_FDCAN_ActivateNotification+0xb6>
 800448a:	68bb      	ldr	r3, [r7, #8]
 800448c:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8004490:	2b00      	cmp	r3, #0
 8004492:	d004      	beq.n	800449e <HAL_FDCAN_ActivateNotification+0x8e>
 8004494:	693b      	ldr	r3, [r7, #16]
 8004496:	f003 0310 	and.w	r3, r3, #16
 800449a:	2b00      	cmp	r3, #0
 800449c:	d013      	beq.n	80044c6 <HAL_FDCAN_ActivateNotification+0xb6>
 800449e:	68bb      	ldr	r3, [r7, #8]
 80044a0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80044a4:	2b00      	cmp	r3, #0
 80044a6:	d004      	beq.n	80044b2 <HAL_FDCAN_ActivateNotification+0xa2>
 80044a8:	693b      	ldr	r3, [r7, #16]
 80044aa:	f003 0320 	and.w	r3, r3, #32
 80044ae:	2b00      	cmp	r3, #0
 80044b0:	d009      	beq.n	80044c6 <HAL_FDCAN_ActivateNotification+0xb6>
 80044b2:	68bb      	ldr	r3, [r7, #8]
 80044b4:	f403 037c 	and.w	r3, r3, #16515072	@ 0xfc0000
 80044b8:	2b00      	cmp	r3, #0
 80044ba:	d00c      	beq.n	80044d6 <HAL_FDCAN_ActivateNotification+0xc6>
 80044bc:	693b      	ldr	r3, [r7, #16]
 80044be:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80044c2:	2b00      	cmp	r3, #0
 80044c4:	d107      	bne.n	80044d6 <HAL_FDCAN_ActivateNotification+0xc6>
 80044c6:	68fb      	ldr	r3, [r7, #12]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 80044cc:	68fb      	ldr	r3, [r7, #12]
 80044ce:	681b      	ldr	r3, [r3, #0]
 80044d0:	f042 0201 	orr.w	r2, r2, #1
 80044d4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80044d6:	68bb      	ldr	r3, [r7, #8]
 80044d8:	f003 0307 	and.w	r3, r3, #7
 80044dc:	2b00      	cmp	r3, #0
 80044de:	d004      	beq.n	80044ea <HAL_FDCAN_ActivateNotification+0xda>
 80044e0:	693b      	ldr	r3, [r7, #16]
 80044e2:	f003 0301 	and.w	r3, r3, #1
 80044e6:	2b00      	cmp	r3, #0
 80044e8:	d13b      	bne.n	8004562 <HAL_FDCAN_ActivateNotification+0x152>
 80044ea:	68bb      	ldr	r3, [r7, #8]
 80044ec:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80044f0:	2b00      	cmp	r3, #0
 80044f2:	d004      	beq.n	80044fe <HAL_FDCAN_ActivateNotification+0xee>
 80044f4:	693b      	ldr	r3, [r7, #16]
 80044f6:	f003 0302 	and.w	r3, r3, #2
 80044fa:	2b00      	cmp	r3, #0
 80044fc:	d131      	bne.n	8004562 <HAL_FDCAN_ActivateNotification+0x152>
 80044fe:	68bb      	ldr	r3, [r7, #8]
 8004500:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
 8004504:	2b00      	cmp	r3, #0
 8004506:	d004      	beq.n	8004512 <HAL_FDCAN_ActivateNotification+0x102>
 8004508:	693b      	ldr	r3, [r7, #16]
 800450a:	f003 0304 	and.w	r3, r3, #4
 800450e:	2b00      	cmp	r3, #0
 8004510:	d127      	bne.n	8004562 <HAL_FDCAN_ActivateNotification+0x152>
 8004512:	68bb      	ldr	r3, [r7, #8]
 8004514:	f403 53f0 	and.w	r3, r3, #7680	@ 0x1e00
 8004518:	2b00      	cmp	r3, #0
 800451a:	d004      	beq.n	8004526 <HAL_FDCAN_ActivateNotification+0x116>
 800451c:	693b      	ldr	r3, [r7, #16]
 800451e:	f003 0308 	and.w	r3, r3, #8
 8004522:	2b00      	cmp	r3, #0
 8004524:	d11d      	bne.n	8004562 <HAL_FDCAN_ActivateNotification+0x152>
 8004526:	68bb      	ldr	r3, [r7, #8]
 8004528:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 800452c:	2b00      	cmp	r3, #0
 800452e:	d004      	beq.n	800453a <HAL_FDCAN_ActivateNotification+0x12a>
 8004530:	693b      	ldr	r3, [r7, #16]
 8004532:	f003 0310 	and.w	r3, r3, #16
 8004536:	2b00      	cmp	r3, #0
 8004538:	d113      	bne.n	8004562 <HAL_FDCAN_ActivateNotification+0x152>
 800453a:	68bb      	ldr	r3, [r7, #8]
 800453c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004540:	2b00      	cmp	r3, #0
 8004542:	d004      	beq.n	800454e <HAL_FDCAN_ActivateNotification+0x13e>
 8004544:	693b      	ldr	r3, [r7, #16]
 8004546:	f003 0320 	and.w	r3, r3, #32
 800454a:	2b00      	cmp	r3, #0
 800454c:	d109      	bne.n	8004562 <HAL_FDCAN_ActivateNotification+0x152>
 800454e:	68bb      	ldr	r3, [r7, #8]
 8004550:	f403 037c 	and.w	r3, r3, #16515072	@ 0xfc0000
 8004554:	2b00      	cmp	r3, #0
 8004556:	d00c      	beq.n	8004572 <HAL_FDCAN_ActivateNotification+0x162>
 8004558:	693b      	ldr	r3, [r7, #16]
 800455a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800455e:	2b00      	cmp	r3, #0
 8004560:	d007      	beq.n	8004572 <HAL_FDCAN_ActivateNotification+0x162>
 8004562:	68fb      	ldr	r3, [r7, #12]
 8004564:	681b      	ldr	r3, [r3, #0]
 8004566:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004568:	68fb      	ldr	r3, [r7, #12]
 800456a:	681b      	ldr	r3, [r3, #0]
 800456c:	f042 0202 	orr.w	r2, r2, #2
 8004570:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004572:	68bb      	ldr	r3, [r7, #8]
 8004574:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004578:	2b00      	cmp	r3, #0
 800457a:	d009      	beq.n	8004590 <HAL_FDCAN_ActivateNotification+0x180>
 800457c:	68fb      	ldr	r3, [r7, #12]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	f8d3 10dc 	ldr.w	r1, [r3, #220]	@ 0xdc
 8004584:	68fb      	ldr	r3, [r7, #12]
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	687a      	ldr	r2, [r7, #4]
 800458a:	430a      	orrs	r2, r1
 800458c:	f8c3 20dc 	str.w	r2, [r3, #220]	@ 0xdc
 8004590:	68bb      	ldr	r3, [r7, #8]
 8004592:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004596:	2b00      	cmp	r3, #0
 8004598:	d009      	beq.n	80045ae <HAL_FDCAN_ActivateNotification+0x19e>
 800459a:	68fb      	ldr	r3, [r7, #12]
 800459c:	681b      	ldr	r3, [r3, #0]
 800459e:	f8d3 10e0 	ldr.w	r1, [r3, #224]	@ 0xe0
 80045a2:	68fb      	ldr	r3, [r7, #12]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	687a      	ldr	r2, [r7, #4]
 80045a8:	430a      	orrs	r2, r1
 80045aa:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
 80045ae:	68fb      	ldr	r3, [r7, #12]
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80045b4:	68fb      	ldr	r3, [r7, #12]
 80045b6:	681b      	ldr	r3, [r3, #0]
 80045b8:	68ba      	ldr	r2, [r7, #8]
 80045ba:	430a      	orrs	r2, r1
 80045bc:	655a      	str	r2, [r3, #84]	@ 0x54
 80045be:	2300      	movs	r3, #0
 80045c0:	e006      	b.n	80045d0 <HAL_FDCAN_ActivateNotification+0x1c0>
 80045c2:	68fb      	ldr	r3, [r7, #12]
 80045c4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80045c6:	f043 0202 	orr.w	r2, r3, #2
 80045ca:	68fb      	ldr	r3, [r7, #12]
 80045cc:	661a      	str	r2, [r3, #96]	@ 0x60
 80045ce:	2301      	movs	r3, #1
 80045d0:	4618      	mov	r0, r3
 80045d2:	371c      	adds	r7, #28
 80045d4:	46bd      	mov	sp, r7
 80045d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045da:	4770      	bx	lr

080045dc <HAL_FDCAN_IRQHandler>:
 80045dc:	b580      	push	{r7, lr}
 80045de:	b08c      	sub	sp, #48	@ 0x30
 80045e0:	af00      	add	r7, sp, #0
 80045e2:	6078      	str	r0, [r7, #4]
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	681b      	ldr	r3, [r3, #0]
 80045e8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80045ea:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 80045ee:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	681b      	ldr	r3, [r3, #0]
 80045f4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80045f6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80045f8:	4013      	ands	r3, r2
 80045fa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004602:	f003 0307 	and.w	r3, r3, #7
 8004606:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800460e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8004610:	4013      	ands	r3, r2
 8004612:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	681b      	ldr	r3, [r3, #0]
 8004618:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800461a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800461e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004626:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004628:	4013      	ands	r3, r2
 800462a:	627b      	str	r3, [r7, #36]	@ 0x24
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004632:	f403 0371 	and.w	r3, r3, #15794176	@ 0xf10000
 8004636:	623b      	str	r3, [r7, #32]
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	681b      	ldr	r3, [r3, #0]
 800463c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800463e:	6a3a      	ldr	r2, [r7, #32]
 8004640:	4013      	ands	r3, r2
 8004642:	623b      	str	r3, [r7, #32]
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	681b      	ldr	r3, [r3, #0]
 8004648:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800464a:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 800464e:	61fb      	str	r3, [r7, #28]
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004656:	69fa      	ldr	r2, [r7, #28]
 8004658:	4013      	ands	r3, r2
 800465a:	61fb      	str	r3, [r7, #28]
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004662:	61bb      	str	r3, [r7, #24]
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800466a:	617b      	str	r3, [r7, #20]
 800466c:	697b      	ldr	r3, [r7, #20]
 800466e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004672:	2b00      	cmp	r3, #0
 8004674:	d00b      	beq.n	800468e <HAL_FDCAN_IRQHandler+0xb2>
 8004676:	69bb      	ldr	r3, [r7, #24]
 8004678:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800467c:	2b00      	cmp	r3, #0
 800467e:	d006      	beq.n	800468e <HAL_FDCAN_IRQHandler+0xb2>
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	681b      	ldr	r3, [r3, #0]
 8004684:	2240      	movs	r2, #64	@ 0x40
 8004686:	651a      	str	r2, [r3, #80]	@ 0x50
 8004688:	6878      	ldr	r0, [r7, #4]
 800468a:	f000 f916 	bl	80048ba <HAL_FDCAN_HighPriorityMessageCallback>
 800468e:	697b      	ldr	r3, [r7, #20]
 8004690:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004694:	2b00      	cmp	r3, #0
 8004696:	d019      	beq.n	80046cc <HAL_FDCAN_IRQHandler+0xf0>
 8004698:	69bb      	ldr	r3, [r7, #24]
 800469a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800469e:	2b00      	cmp	r3, #0
 80046a0:	d014      	beq.n	80046cc <HAL_FDCAN_IRQHandler+0xf0>
 80046a2:	687b      	ldr	r3, [r7, #4]
 80046a4:	681b      	ldr	r3, [r3, #0]
 80046a6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80046aa:	613b      	str	r3, [r7, #16]
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80046b4:	693a      	ldr	r2, [r7, #16]
 80046b6:	4013      	ands	r3, r2
 80046b8:	613b      	str	r3, [r7, #16]
 80046ba:	687b      	ldr	r3, [r7, #4]
 80046bc:	681b      	ldr	r3, [r3, #0]
 80046be:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80046c2:	651a      	str	r2, [r3, #80]	@ 0x50
 80046c4:	6939      	ldr	r1, [r7, #16]
 80046c6:	6878      	ldr	r0, [r7, #4]
 80046c8:	f000 f8d8 	bl	800487c <HAL_FDCAN_TxBufferAbortCallback>
 80046cc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80046ce:	2b00      	cmp	r3, #0
 80046d0:	d007      	beq.n	80046e2 <HAL_FDCAN_IRQHandler+0x106>
 80046d2:	687b      	ldr	r3, [r7, #4]
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80046d8:	651a      	str	r2, [r3, #80]	@ 0x50
 80046da:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80046dc:	6878      	ldr	r0, [r7, #4]
 80046de:	f000 f8a2 	bl	8004826 <HAL_FDCAN_TxEventFifoCallback>
 80046e2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80046e4:	2b00      	cmp	r3, #0
 80046e6:	d007      	beq.n	80046f8 <HAL_FDCAN_IRQHandler+0x11c>
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	681b      	ldr	r3, [r3, #0]
 80046ec:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80046ee:	651a      	str	r2, [r3, #80]	@ 0x50
 80046f0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80046f2:	6878      	ldr	r0, [r7, #4]
 80046f4:	f7fb fe86 	bl	8000404 <HAL_FDCAN_RxFifo0Callback>
 80046f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80046fa:	2b00      	cmp	r3, #0
 80046fc:	d007      	beq.n	800470e <HAL_FDCAN_IRQHandler+0x132>
 80046fe:	687b      	ldr	r3, [r7, #4]
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004704:	651a      	str	r2, [r3, #80]	@ 0x50
 8004706:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004708:	6878      	ldr	r0, [r7, #4]
 800470a:	f000 f897 	bl	800483c <HAL_FDCAN_RxFifo1Callback>
 800470e:	697b      	ldr	r3, [r7, #20]
 8004710:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004714:	2b00      	cmp	r3, #0
 8004716:	d00c      	beq.n	8004732 <HAL_FDCAN_IRQHandler+0x156>
 8004718:	69bb      	ldr	r3, [r7, #24]
 800471a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800471e:	2b00      	cmp	r3, #0
 8004720:	d007      	beq.n	8004732 <HAL_FDCAN_IRQHandler+0x156>
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800472a:	651a      	str	r2, [r3, #80]	@ 0x50
 800472c:	6878      	ldr	r0, [r7, #4]
 800472e:	f000 f890 	bl	8004852 <HAL_FDCAN_TxFifoEmptyCallback>
 8004732:	697b      	ldr	r3, [r7, #20]
 8004734:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004738:	2b00      	cmp	r3, #0
 800473a:	d018      	beq.n	800476e <HAL_FDCAN_IRQHandler+0x192>
 800473c:	69bb      	ldr	r3, [r7, #24]
 800473e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004742:	2b00      	cmp	r3, #0
 8004744:	d013      	beq.n	800476e <HAL_FDCAN_IRQHandler+0x192>
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	681b      	ldr	r3, [r3, #0]
 800474a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800474e:	60fb      	str	r3, [r7, #12]
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004758:	68fa      	ldr	r2, [r7, #12]
 800475a:	4013      	ands	r3, r2
 800475c:	60fb      	str	r3, [r7, #12]
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	2280      	movs	r2, #128	@ 0x80
 8004764:	651a      	str	r2, [r3, #80]	@ 0x50
 8004766:	68f9      	ldr	r1, [r7, #12]
 8004768:	6878      	ldr	r0, [r7, #4]
 800476a:	f000 f87c 	bl	8004866 <HAL_FDCAN_TxBufferCompleteCallback>
 800476e:	697b      	ldr	r3, [r7, #20]
 8004770:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004774:	2b00      	cmp	r3, #0
 8004776:	d00c      	beq.n	8004792 <HAL_FDCAN_IRQHandler+0x1b6>
 8004778:	69bb      	ldr	r3, [r7, #24]
 800477a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800477e:	2b00      	cmp	r3, #0
 8004780:	d007      	beq.n	8004792 <HAL_FDCAN_IRQHandler+0x1b6>
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800478a:	651a      	str	r2, [r3, #80]	@ 0x50
 800478c:	6878      	ldr	r0, [r7, #4]
 800478e:	f000 f880 	bl	8004892 <HAL_FDCAN_TimestampWraparoundCallback>
 8004792:	697b      	ldr	r3, [r7, #20]
 8004794:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004798:	2b00      	cmp	r3, #0
 800479a:	d00c      	beq.n	80047b6 <HAL_FDCAN_IRQHandler+0x1da>
 800479c:	69bb      	ldr	r3, [r7, #24]
 800479e:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80047a2:	2b00      	cmp	r3, #0
 80047a4:	d007      	beq.n	80047b6 <HAL_FDCAN_IRQHandler+0x1da>
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 80047ae:	651a      	str	r2, [r3, #80]	@ 0x50
 80047b0:	6878      	ldr	r0, [r7, #4]
 80047b2:	f000 f878 	bl	80048a6 <HAL_FDCAN_TimeoutOccurredCallback>
 80047b6:	697b      	ldr	r3, [r7, #20]
 80047b8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80047bc:	2b00      	cmp	r3, #0
 80047be:	d00f      	beq.n	80047e0 <HAL_FDCAN_IRQHandler+0x204>
 80047c0:	69bb      	ldr	r3, [r7, #24]
 80047c2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80047c6:	2b00      	cmp	r3, #0
 80047c8:	d00a      	beq.n	80047e0 <HAL_FDCAN_IRQHandler+0x204>
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80047d2:	651a      	str	r2, [r3, #80]	@ 0x50
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80047d8:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	661a      	str	r2, [r3, #96]	@ 0x60
 80047e0:	69fb      	ldr	r3, [r7, #28]
 80047e2:	2b00      	cmp	r3, #0
 80047e4:	d007      	beq.n	80047f6 <HAL_FDCAN_IRQHandler+0x21a>
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	681b      	ldr	r3, [r3, #0]
 80047ea:	69fa      	ldr	r2, [r7, #28]
 80047ec:	651a      	str	r2, [r3, #80]	@ 0x50
 80047ee:	69f9      	ldr	r1, [r7, #28]
 80047f0:	6878      	ldr	r0, [r7, #4]
 80047f2:	f000 f876 	bl	80048e2 <HAL_FDCAN_ErrorStatusCallback>
 80047f6:	6a3b      	ldr	r3, [r7, #32]
 80047f8:	2b00      	cmp	r3, #0
 80047fa:	d009      	beq.n	8004810 <HAL_FDCAN_IRQHandler+0x234>
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	6a3a      	ldr	r2, [r7, #32]
 8004802:	651a      	str	r2, [r3, #80]	@ 0x50
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8004808:	6a3b      	ldr	r3, [r7, #32]
 800480a:	431a      	orrs	r2, r3
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	661a      	str	r2, [r3, #96]	@ 0x60
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004814:	2b00      	cmp	r3, #0
 8004816:	d002      	beq.n	800481e <HAL_FDCAN_IRQHandler+0x242>
 8004818:	6878      	ldr	r0, [r7, #4]
 800481a:	f000 f858 	bl	80048ce <HAL_FDCAN_ErrorCallback>
 800481e:	bf00      	nop
 8004820:	3730      	adds	r7, #48	@ 0x30
 8004822:	46bd      	mov	sp, r7
 8004824:	bd80      	pop	{r7, pc}

08004826 <HAL_FDCAN_TxEventFifoCallback>:
 8004826:	b480      	push	{r7}
 8004828:	b083      	sub	sp, #12
 800482a:	af00      	add	r7, sp, #0
 800482c:	6078      	str	r0, [r7, #4]
 800482e:	6039      	str	r1, [r7, #0]
 8004830:	bf00      	nop
 8004832:	370c      	adds	r7, #12
 8004834:	46bd      	mov	sp, r7
 8004836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800483a:	4770      	bx	lr

0800483c <HAL_FDCAN_RxFifo1Callback>:
 800483c:	b480      	push	{r7}
 800483e:	b083      	sub	sp, #12
 8004840:	af00      	add	r7, sp, #0
 8004842:	6078      	str	r0, [r7, #4]
 8004844:	6039      	str	r1, [r7, #0]
 8004846:	bf00      	nop
 8004848:	370c      	adds	r7, #12
 800484a:	46bd      	mov	sp, r7
 800484c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004850:	4770      	bx	lr

08004852 <HAL_FDCAN_TxFifoEmptyCallback>:
 8004852:	b480      	push	{r7}
 8004854:	b083      	sub	sp, #12
 8004856:	af00      	add	r7, sp, #0
 8004858:	6078      	str	r0, [r7, #4]
 800485a:	bf00      	nop
 800485c:	370c      	adds	r7, #12
 800485e:	46bd      	mov	sp, r7
 8004860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004864:	4770      	bx	lr

08004866 <HAL_FDCAN_TxBufferCompleteCallback>:
 8004866:	b480      	push	{r7}
 8004868:	b083      	sub	sp, #12
 800486a:	af00      	add	r7, sp, #0
 800486c:	6078      	str	r0, [r7, #4]
 800486e:	6039      	str	r1, [r7, #0]
 8004870:	bf00      	nop
 8004872:	370c      	adds	r7, #12
 8004874:	46bd      	mov	sp, r7
 8004876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800487a:	4770      	bx	lr

0800487c <HAL_FDCAN_TxBufferAbortCallback>:
 800487c:	b480      	push	{r7}
 800487e:	b083      	sub	sp, #12
 8004880:	af00      	add	r7, sp, #0
 8004882:	6078      	str	r0, [r7, #4]
 8004884:	6039      	str	r1, [r7, #0]
 8004886:	bf00      	nop
 8004888:	370c      	adds	r7, #12
 800488a:	46bd      	mov	sp, r7
 800488c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004890:	4770      	bx	lr

08004892 <HAL_FDCAN_TimestampWraparoundCallback>:
 8004892:	b480      	push	{r7}
 8004894:	b083      	sub	sp, #12
 8004896:	af00      	add	r7, sp, #0
 8004898:	6078      	str	r0, [r7, #4]
 800489a:	bf00      	nop
 800489c:	370c      	adds	r7, #12
 800489e:	46bd      	mov	sp, r7
 80048a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048a4:	4770      	bx	lr

080048a6 <HAL_FDCAN_TimeoutOccurredCallback>:
 80048a6:	b480      	push	{r7}
 80048a8:	b083      	sub	sp, #12
 80048aa:	af00      	add	r7, sp, #0
 80048ac:	6078      	str	r0, [r7, #4]
 80048ae:	bf00      	nop
 80048b0:	370c      	adds	r7, #12
 80048b2:	46bd      	mov	sp, r7
 80048b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048b8:	4770      	bx	lr

080048ba <HAL_FDCAN_HighPriorityMessageCallback>:
 80048ba:	b480      	push	{r7}
 80048bc:	b083      	sub	sp, #12
 80048be:	af00      	add	r7, sp, #0
 80048c0:	6078      	str	r0, [r7, #4]
 80048c2:	bf00      	nop
 80048c4:	370c      	adds	r7, #12
 80048c6:	46bd      	mov	sp, r7
 80048c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048cc:	4770      	bx	lr

080048ce <HAL_FDCAN_ErrorCallback>:
 80048ce:	b480      	push	{r7}
 80048d0:	b083      	sub	sp, #12
 80048d2:	af00      	add	r7, sp, #0
 80048d4:	6078      	str	r0, [r7, #4]
 80048d6:	bf00      	nop
 80048d8:	370c      	adds	r7, #12
 80048da:	46bd      	mov	sp, r7
 80048dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048e0:	4770      	bx	lr

080048e2 <HAL_FDCAN_ErrorStatusCallback>:
 80048e2:	b480      	push	{r7}
 80048e4:	b083      	sub	sp, #12
 80048e6:	af00      	add	r7, sp, #0
 80048e8:	6078      	str	r0, [r7, #4]
 80048ea:	6039      	str	r1, [r7, #0]
 80048ec:	bf00      	nop
 80048ee:	370c      	adds	r7, #12
 80048f0:	46bd      	mov	sp, r7
 80048f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048f6:	4770      	bx	lr

080048f8 <FDCAN_CalcultateRamBlockAddresses>:
 80048f8:	b480      	push	{r7}
 80048fa:	b085      	sub	sp, #20
 80048fc:	af00      	add	r7, sp, #0
 80048fe:	6078      	str	r0, [r7, #4]
 8004900:	4b27      	ldr	r3, [pc, #156]	@ (80049a0 <FDCAN_CalcultateRamBlockAddresses+0xa8>)
 8004902:	60bb      	str	r3, [r7, #8]
 8004904:	687b      	ldr	r3, [r7, #4]
 8004906:	68ba      	ldr	r2, [r7, #8]
 8004908:	641a      	str	r2, [r3, #64]	@ 0x40
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	681b      	ldr	r3, [r3, #0]
 800490e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004912:	f423 11f8 	bic.w	r1, r3, #2031616	@ 0x1f0000
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800491a:	041a      	lsls	r2, r3, #16
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	430a      	orrs	r2, r1
 8004922:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004926:	68bb      	ldr	r3, [r7, #8]
 8004928:	f103 0270 	add.w	r2, r3, #112	@ 0x70
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	645a      	str	r2, [r3, #68]	@ 0x44
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004938:	f023 6170 	bic.w	r1, r3, #251658240	@ 0xf000000
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004940:	061a      	lsls	r2, r3, #24
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	430a      	orrs	r2, r1
 8004948:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800494c:	68bb      	ldr	r3, [r7, #8]
 800494e:	f103 02b0 	add.w	r2, r3, #176	@ 0xb0
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	649a      	str	r2, [r3, #72]	@ 0x48
 8004956:	68bb      	ldr	r3, [r7, #8]
 8004958:	f503 72c4 	add.w	r2, r3, #392	@ 0x188
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	64da      	str	r2, [r3, #76]	@ 0x4c
 8004960:	68bb      	ldr	r3, [r7, #8]
 8004962:	f503 7218 	add.w	r2, r3, #608	@ 0x260
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	651a      	str	r2, [r3, #80]	@ 0x50
 800496a:	68bb      	ldr	r3, [r7, #8]
 800496c:	f503 721e 	add.w	r2, r3, #632	@ 0x278
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	655a      	str	r2, [r3, #84]	@ 0x54
 8004974:	68bb      	ldr	r3, [r7, #8]
 8004976:	60fb      	str	r3, [r7, #12]
 8004978:	e005      	b.n	8004986 <FDCAN_CalcultateRamBlockAddresses+0x8e>
 800497a:	68fb      	ldr	r3, [r7, #12]
 800497c:	2200      	movs	r2, #0
 800497e:	601a      	str	r2, [r3, #0]
 8004980:	68fb      	ldr	r3, [r7, #12]
 8004982:	3304      	adds	r3, #4
 8004984:	60fb      	str	r3, [r7, #12]
 8004986:	68bb      	ldr	r3, [r7, #8]
 8004988:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 800498c:	68fa      	ldr	r2, [r7, #12]
 800498e:	429a      	cmp	r2, r3
 8004990:	d3f3      	bcc.n	800497a <FDCAN_CalcultateRamBlockAddresses+0x82>
 8004992:	bf00      	nop
 8004994:	bf00      	nop
 8004996:	3714      	adds	r7, #20
 8004998:	46bd      	mov	sp, r7
 800499a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800499e:	4770      	bx	lr
 80049a0:	4000a400 	.word	0x4000a400

080049a4 <FDCAN_CopyMessageToRAM>:
 80049a4:	b480      	push	{r7}
 80049a6:	b089      	sub	sp, #36	@ 0x24
 80049a8:	af00      	add	r7, sp, #0
 80049aa:	60f8      	str	r0, [r7, #12]
 80049ac:	60b9      	str	r1, [r7, #8]
 80049ae:	607a      	str	r2, [r7, #4]
 80049b0:	603b      	str	r3, [r7, #0]
 80049b2:	68bb      	ldr	r3, [r7, #8]
 80049b4:	685b      	ldr	r3, [r3, #4]
 80049b6:	2b00      	cmp	r3, #0
 80049b8:	d10a      	bne.n	80049d0 <FDCAN_CopyMessageToRAM+0x2c>
 80049ba:	68bb      	ldr	r3, [r7, #8]
 80049bc:	691a      	ldr	r2, [r3, #16]
 80049be:	68bb      	ldr	r3, [r7, #8]
 80049c0:	689b      	ldr	r3, [r3, #8]
 80049c2:	431a      	orrs	r2, r3
 80049c4:	68bb      	ldr	r3, [r7, #8]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	049b      	lsls	r3, r3, #18
 80049ca:	4313      	orrs	r3, r2
 80049cc:	61fb      	str	r3, [r7, #28]
 80049ce:	e00a      	b.n	80049e6 <FDCAN_CopyMessageToRAM+0x42>
 80049d0:	68bb      	ldr	r3, [r7, #8]
 80049d2:	691a      	ldr	r2, [r3, #16]
 80049d4:	68bb      	ldr	r3, [r7, #8]
 80049d6:	689b      	ldr	r3, [r3, #8]
 80049d8:	431a      	orrs	r2, r3
 80049da:	68bb      	ldr	r3, [r7, #8]
 80049dc:	681b      	ldr	r3, [r3, #0]
 80049de:	4313      	orrs	r3, r2
 80049e0:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80049e4:	61fb      	str	r3, [r7, #28]
 80049e6:	68bb      	ldr	r3, [r7, #8]
 80049e8:	6a1b      	ldr	r3, [r3, #32]
 80049ea:	061a      	lsls	r2, r3, #24
 80049ec:	68bb      	ldr	r3, [r7, #8]
 80049ee:	69db      	ldr	r3, [r3, #28]
 80049f0:	431a      	orrs	r2, r3
 80049f2:	68bb      	ldr	r3, [r7, #8]
 80049f4:	699b      	ldr	r3, [r3, #24]
 80049f6:	431a      	orrs	r2, r3
 80049f8:	68bb      	ldr	r3, [r7, #8]
 80049fa:	695b      	ldr	r3, [r3, #20]
 80049fc:	431a      	orrs	r2, r3
 80049fe:	68bb      	ldr	r3, [r7, #8]
 8004a00:	68db      	ldr	r3, [r3, #12]
 8004a02:	041b      	lsls	r3, r3, #16
 8004a04:	4313      	orrs	r3, r2
 8004a06:	613b      	str	r3, [r7, #16]
 8004a08:	68fb      	ldr	r3, [r7, #12]
 8004a0a:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8004a0c:	683a      	ldr	r2, [r7, #0]
 8004a0e:	4613      	mov	r3, r2
 8004a10:	00db      	lsls	r3, r3, #3
 8004a12:	4413      	add	r3, r2
 8004a14:	00db      	lsls	r3, r3, #3
 8004a16:	440b      	add	r3, r1
 8004a18:	61bb      	str	r3, [r7, #24]
 8004a1a:	69bb      	ldr	r3, [r7, #24]
 8004a1c:	69fa      	ldr	r2, [r7, #28]
 8004a1e:	601a      	str	r2, [r3, #0]
 8004a20:	69bb      	ldr	r3, [r7, #24]
 8004a22:	3304      	adds	r3, #4
 8004a24:	61bb      	str	r3, [r7, #24]
 8004a26:	69bb      	ldr	r3, [r7, #24]
 8004a28:	693a      	ldr	r2, [r7, #16]
 8004a2a:	601a      	str	r2, [r3, #0]
 8004a2c:	69bb      	ldr	r3, [r7, #24]
 8004a2e:	3304      	adds	r3, #4
 8004a30:	61bb      	str	r3, [r7, #24]
 8004a32:	2300      	movs	r3, #0
 8004a34:	617b      	str	r3, [r7, #20]
 8004a36:	e020      	b.n	8004a7a <FDCAN_CopyMessageToRAM+0xd6>
 8004a38:	697b      	ldr	r3, [r7, #20]
 8004a3a:	3303      	adds	r3, #3
 8004a3c:	687a      	ldr	r2, [r7, #4]
 8004a3e:	4413      	add	r3, r2
 8004a40:	781b      	ldrb	r3, [r3, #0]
 8004a42:	061a      	lsls	r2, r3, #24
 8004a44:	697b      	ldr	r3, [r7, #20]
 8004a46:	3302      	adds	r3, #2
 8004a48:	6879      	ldr	r1, [r7, #4]
 8004a4a:	440b      	add	r3, r1
 8004a4c:	781b      	ldrb	r3, [r3, #0]
 8004a4e:	041b      	lsls	r3, r3, #16
 8004a50:	431a      	orrs	r2, r3
 8004a52:	697b      	ldr	r3, [r7, #20]
 8004a54:	3301      	adds	r3, #1
 8004a56:	6879      	ldr	r1, [r7, #4]
 8004a58:	440b      	add	r3, r1
 8004a5a:	781b      	ldrb	r3, [r3, #0]
 8004a5c:	021b      	lsls	r3, r3, #8
 8004a5e:	4313      	orrs	r3, r2
 8004a60:	6879      	ldr	r1, [r7, #4]
 8004a62:	697a      	ldr	r2, [r7, #20]
 8004a64:	440a      	add	r2, r1
 8004a66:	7812      	ldrb	r2, [r2, #0]
 8004a68:	431a      	orrs	r2, r3
 8004a6a:	69bb      	ldr	r3, [r7, #24]
 8004a6c:	601a      	str	r2, [r3, #0]
 8004a6e:	69bb      	ldr	r3, [r7, #24]
 8004a70:	3304      	adds	r3, #4
 8004a72:	61bb      	str	r3, [r7, #24]
 8004a74:	697b      	ldr	r3, [r7, #20]
 8004a76:	3304      	adds	r3, #4
 8004a78:	617b      	str	r3, [r7, #20]
 8004a7a:	68bb      	ldr	r3, [r7, #8]
 8004a7c:	68db      	ldr	r3, [r3, #12]
 8004a7e:	4a06      	ldr	r2, [pc, #24]	@ (8004a98 <FDCAN_CopyMessageToRAM+0xf4>)
 8004a80:	5cd3      	ldrb	r3, [r2, r3]
 8004a82:	461a      	mov	r2, r3
 8004a84:	697b      	ldr	r3, [r7, #20]
 8004a86:	4293      	cmp	r3, r2
 8004a88:	d3d6      	bcc.n	8004a38 <FDCAN_CopyMessageToRAM+0x94>
 8004a8a:	bf00      	nop
 8004a8c:	bf00      	nop
 8004a8e:	3724      	adds	r7, #36	@ 0x24
 8004a90:	46bd      	mov	sp, r7
 8004a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a96:	4770      	bx	lr
 8004a98:	0800743c 	.word	0x0800743c

08004a9c <HAL_GPIO_Init>:
 8004a9c:	b480      	push	{r7}
 8004a9e:	b087      	sub	sp, #28
 8004aa0:	af00      	add	r7, sp, #0
 8004aa2:	6078      	str	r0, [r7, #4]
 8004aa4:	6039      	str	r1, [r7, #0]
 8004aa6:	2300      	movs	r3, #0
 8004aa8:	617b      	str	r3, [r7, #20]
 8004aaa:	e15a      	b.n	8004d62 <HAL_GPIO_Init+0x2c6>
 8004aac:	683b      	ldr	r3, [r7, #0]
 8004aae:	681a      	ldr	r2, [r3, #0]
 8004ab0:	2101      	movs	r1, #1
 8004ab2:	697b      	ldr	r3, [r7, #20]
 8004ab4:	fa01 f303 	lsl.w	r3, r1, r3
 8004ab8:	4013      	ands	r3, r2
 8004aba:	60fb      	str	r3, [r7, #12]
 8004abc:	68fb      	ldr	r3, [r7, #12]
 8004abe:	2b00      	cmp	r3, #0
 8004ac0:	f000 814c 	beq.w	8004d5c <HAL_GPIO_Init+0x2c0>
 8004ac4:	683b      	ldr	r3, [r7, #0]
 8004ac6:	685b      	ldr	r3, [r3, #4]
 8004ac8:	f003 0303 	and.w	r3, r3, #3
 8004acc:	2b01      	cmp	r3, #1
 8004ace:	d005      	beq.n	8004adc <HAL_GPIO_Init+0x40>
 8004ad0:	683b      	ldr	r3, [r7, #0]
 8004ad2:	685b      	ldr	r3, [r3, #4]
 8004ad4:	f003 0303 	and.w	r3, r3, #3
 8004ad8:	2b02      	cmp	r3, #2
 8004ada:	d130      	bne.n	8004b3e <HAL_GPIO_Init+0xa2>
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	689b      	ldr	r3, [r3, #8]
 8004ae0:	613b      	str	r3, [r7, #16]
 8004ae2:	697b      	ldr	r3, [r7, #20]
 8004ae4:	005b      	lsls	r3, r3, #1
 8004ae6:	2203      	movs	r2, #3
 8004ae8:	fa02 f303 	lsl.w	r3, r2, r3
 8004aec:	43db      	mvns	r3, r3
 8004aee:	693a      	ldr	r2, [r7, #16]
 8004af0:	4013      	ands	r3, r2
 8004af2:	613b      	str	r3, [r7, #16]
 8004af4:	683b      	ldr	r3, [r7, #0]
 8004af6:	68da      	ldr	r2, [r3, #12]
 8004af8:	697b      	ldr	r3, [r7, #20]
 8004afa:	005b      	lsls	r3, r3, #1
 8004afc:	fa02 f303 	lsl.w	r3, r2, r3
 8004b00:	693a      	ldr	r2, [r7, #16]
 8004b02:	4313      	orrs	r3, r2
 8004b04:	613b      	str	r3, [r7, #16]
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	693a      	ldr	r2, [r7, #16]
 8004b0a:	609a      	str	r2, [r3, #8]
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	685b      	ldr	r3, [r3, #4]
 8004b10:	613b      	str	r3, [r7, #16]
 8004b12:	2201      	movs	r2, #1
 8004b14:	697b      	ldr	r3, [r7, #20]
 8004b16:	fa02 f303 	lsl.w	r3, r2, r3
 8004b1a:	43db      	mvns	r3, r3
 8004b1c:	693a      	ldr	r2, [r7, #16]
 8004b1e:	4013      	ands	r3, r2
 8004b20:	613b      	str	r3, [r7, #16]
 8004b22:	683b      	ldr	r3, [r7, #0]
 8004b24:	685b      	ldr	r3, [r3, #4]
 8004b26:	091b      	lsrs	r3, r3, #4
 8004b28:	f003 0201 	and.w	r2, r3, #1
 8004b2c:	697b      	ldr	r3, [r7, #20]
 8004b2e:	fa02 f303 	lsl.w	r3, r2, r3
 8004b32:	693a      	ldr	r2, [r7, #16]
 8004b34:	4313      	orrs	r3, r2
 8004b36:	613b      	str	r3, [r7, #16]
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	693a      	ldr	r2, [r7, #16]
 8004b3c:	605a      	str	r2, [r3, #4]
 8004b3e:	683b      	ldr	r3, [r7, #0]
 8004b40:	685b      	ldr	r3, [r3, #4]
 8004b42:	f003 0303 	and.w	r3, r3, #3
 8004b46:	2b03      	cmp	r3, #3
 8004b48:	d017      	beq.n	8004b7a <HAL_GPIO_Init+0xde>
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	68db      	ldr	r3, [r3, #12]
 8004b4e:	613b      	str	r3, [r7, #16]
 8004b50:	697b      	ldr	r3, [r7, #20]
 8004b52:	005b      	lsls	r3, r3, #1
 8004b54:	2203      	movs	r2, #3
 8004b56:	fa02 f303 	lsl.w	r3, r2, r3
 8004b5a:	43db      	mvns	r3, r3
 8004b5c:	693a      	ldr	r2, [r7, #16]
 8004b5e:	4013      	ands	r3, r2
 8004b60:	613b      	str	r3, [r7, #16]
 8004b62:	683b      	ldr	r3, [r7, #0]
 8004b64:	689a      	ldr	r2, [r3, #8]
 8004b66:	697b      	ldr	r3, [r7, #20]
 8004b68:	005b      	lsls	r3, r3, #1
 8004b6a:	fa02 f303 	lsl.w	r3, r2, r3
 8004b6e:	693a      	ldr	r2, [r7, #16]
 8004b70:	4313      	orrs	r3, r2
 8004b72:	613b      	str	r3, [r7, #16]
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	693a      	ldr	r2, [r7, #16]
 8004b78:	60da      	str	r2, [r3, #12]
 8004b7a:	683b      	ldr	r3, [r7, #0]
 8004b7c:	685b      	ldr	r3, [r3, #4]
 8004b7e:	f003 0303 	and.w	r3, r3, #3
 8004b82:	2b02      	cmp	r3, #2
 8004b84:	d123      	bne.n	8004bce <HAL_GPIO_Init+0x132>
 8004b86:	697b      	ldr	r3, [r7, #20]
 8004b88:	08da      	lsrs	r2, r3, #3
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	3208      	adds	r2, #8
 8004b8e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004b92:	613b      	str	r3, [r7, #16]
 8004b94:	697b      	ldr	r3, [r7, #20]
 8004b96:	f003 0307 	and.w	r3, r3, #7
 8004b9a:	009b      	lsls	r3, r3, #2
 8004b9c:	220f      	movs	r2, #15
 8004b9e:	fa02 f303 	lsl.w	r3, r2, r3
 8004ba2:	43db      	mvns	r3, r3
 8004ba4:	693a      	ldr	r2, [r7, #16]
 8004ba6:	4013      	ands	r3, r2
 8004ba8:	613b      	str	r3, [r7, #16]
 8004baa:	683b      	ldr	r3, [r7, #0]
 8004bac:	691a      	ldr	r2, [r3, #16]
 8004bae:	697b      	ldr	r3, [r7, #20]
 8004bb0:	f003 0307 	and.w	r3, r3, #7
 8004bb4:	009b      	lsls	r3, r3, #2
 8004bb6:	fa02 f303 	lsl.w	r3, r2, r3
 8004bba:	693a      	ldr	r2, [r7, #16]
 8004bbc:	4313      	orrs	r3, r2
 8004bbe:	613b      	str	r3, [r7, #16]
 8004bc0:	697b      	ldr	r3, [r7, #20]
 8004bc2:	08da      	lsrs	r2, r3, #3
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	3208      	adds	r2, #8
 8004bc8:	6939      	ldr	r1, [r7, #16]
 8004bca:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	681b      	ldr	r3, [r3, #0]
 8004bd2:	613b      	str	r3, [r7, #16]
 8004bd4:	697b      	ldr	r3, [r7, #20]
 8004bd6:	005b      	lsls	r3, r3, #1
 8004bd8:	2203      	movs	r2, #3
 8004bda:	fa02 f303 	lsl.w	r3, r2, r3
 8004bde:	43db      	mvns	r3, r3
 8004be0:	693a      	ldr	r2, [r7, #16]
 8004be2:	4013      	ands	r3, r2
 8004be4:	613b      	str	r3, [r7, #16]
 8004be6:	683b      	ldr	r3, [r7, #0]
 8004be8:	685b      	ldr	r3, [r3, #4]
 8004bea:	f003 0203 	and.w	r2, r3, #3
 8004bee:	697b      	ldr	r3, [r7, #20]
 8004bf0:	005b      	lsls	r3, r3, #1
 8004bf2:	fa02 f303 	lsl.w	r3, r2, r3
 8004bf6:	693a      	ldr	r2, [r7, #16]
 8004bf8:	4313      	orrs	r3, r2
 8004bfa:	613b      	str	r3, [r7, #16]
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	693a      	ldr	r2, [r7, #16]
 8004c00:	601a      	str	r2, [r3, #0]
 8004c02:	683b      	ldr	r3, [r7, #0]
 8004c04:	685b      	ldr	r3, [r3, #4]
 8004c06:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004c0a:	2b00      	cmp	r3, #0
 8004c0c:	f000 80a6 	beq.w	8004d5c <HAL_GPIO_Init+0x2c0>
 8004c10:	4b5b      	ldr	r3, [pc, #364]	@ (8004d80 <HAL_GPIO_Init+0x2e4>)
 8004c12:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004c14:	4a5a      	ldr	r2, [pc, #360]	@ (8004d80 <HAL_GPIO_Init+0x2e4>)
 8004c16:	f043 0301 	orr.w	r3, r3, #1
 8004c1a:	6613      	str	r3, [r2, #96]	@ 0x60
 8004c1c:	4b58      	ldr	r3, [pc, #352]	@ (8004d80 <HAL_GPIO_Init+0x2e4>)
 8004c1e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004c20:	f003 0301 	and.w	r3, r3, #1
 8004c24:	60bb      	str	r3, [r7, #8]
 8004c26:	68bb      	ldr	r3, [r7, #8]
 8004c28:	4a56      	ldr	r2, [pc, #344]	@ (8004d84 <HAL_GPIO_Init+0x2e8>)
 8004c2a:	697b      	ldr	r3, [r7, #20]
 8004c2c:	089b      	lsrs	r3, r3, #2
 8004c2e:	3302      	adds	r3, #2
 8004c30:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004c34:	613b      	str	r3, [r7, #16]
 8004c36:	697b      	ldr	r3, [r7, #20]
 8004c38:	f003 0303 	and.w	r3, r3, #3
 8004c3c:	009b      	lsls	r3, r3, #2
 8004c3e:	220f      	movs	r2, #15
 8004c40:	fa02 f303 	lsl.w	r3, r2, r3
 8004c44:	43db      	mvns	r3, r3
 8004c46:	693a      	ldr	r2, [r7, #16]
 8004c48:	4013      	ands	r3, r2
 8004c4a:	613b      	str	r3, [r7, #16]
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8004c52:	d01f      	beq.n	8004c94 <HAL_GPIO_Init+0x1f8>
 8004c54:	687b      	ldr	r3, [r7, #4]
 8004c56:	4a4c      	ldr	r2, [pc, #304]	@ (8004d88 <HAL_GPIO_Init+0x2ec>)
 8004c58:	4293      	cmp	r3, r2
 8004c5a:	d019      	beq.n	8004c90 <HAL_GPIO_Init+0x1f4>
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	4a4b      	ldr	r2, [pc, #300]	@ (8004d8c <HAL_GPIO_Init+0x2f0>)
 8004c60:	4293      	cmp	r3, r2
 8004c62:	d013      	beq.n	8004c8c <HAL_GPIO_Init+0x1f0>
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	4a4a      	ldr	r2, [pc, #296]	@ (8004d90 <HAL_GPIO_Init+0x2f4>)
 8004c68:	4293      	cmp	r3, r2
 8004c6a:	d00d      	beq.n	8004c88 <HAL_GPIO_Init+0x1ec>
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	4a49      	ldr	r2, [pc, #292]	@ (8004d94 <HAL_GPIO_Init+0x2f8>)
 8004c70:	4293      	cmp	r3, r2
 8004c72:	d007      	beq.n	8004c84 <HAL_GPIO_Init+0x1e8>
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	4a48      	ldr	r2, [pc, #288]	@ (8004d98 <HAL_GPIO_Init+0x2fc>)
 8004c78:	4293      	cmp	r3, r2
 8004c7a:	d101      	bne.n	8004c80 <HAL_GPIO_Init+0x1e4>
 8004c7c:	2305      	movs	r3, #5
 8004c7e:	e00a      	b.n	8004c96 <HAL_GPIO_Init+0x1fa>
 8004c80:	2306      	movs	r3, #6
 8004c82:	e008      	b.n	8004c96 <HAL_GPIO_Init+0x1fa>
 8004c84:	2304      	movs	r3, #4
 8004c86:	e006      	b.n	8004c96 <HAL_GPIO_Init+0x1fa>
 8004c88:	2303      	movs	r3, #3
 8004c8a:	e004      	b.n	8004c96 <HAL_GPIO_Init+0x1fa>
 8004c8c:	2302      	movs	r3, #2
 8004c8e:	e002      	b.n	8004c96 <HAL_GPIO_Init+0x1fa>
 8004c90:	2301      	movs	r3, #1
 8004c92:	e000      	b.n	8004c96 <HAL_GPIO_Init+0x1fa>
 8004c94:	2300      	movs	r3, #0
 8004c96:	697a      	ldr	r2, [r7, #20]
 8004c98:	f002 0203 	and.w	r2, r2, #3
 8004c9c:	0092      	lsls	r2, r2, #2
 8004c9e:	4093      	lsls	r3, r2
 8004ca0:	693a      	ldr	r2, [r7, #16]
 8004ca2:	4313      	orrs	r3, r2
 8004ca4:	613b      	str	r3, [r7, #16]
 8004ca6:	4937      	ldr	r1, [pc, #220]	@ (8004d84 <HAL_GPIO_Init+0x2e8>)
 8004ca8:	697b      	ldr	r3, [r7, #20]
 8004caa:	089b      	lsrs	r3, r3, #2
 8004cac:	3302      	adds	r3, #2
 8004cae:	693a      	ldr	r2, [r7, #16]
 8004cb0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004cb4:	4b39      	ldr	r3, [pc, #228]	@ (8004d9c <HAL_GPIO_Init+0x300>)
 8004cb6:	689b      	ldr	r3, [r3, #8]
 8004cb8:	613b      	str	r3, [r7, #16]
 8004cba:	68fb      	ldr	r3, [r7, #12]
 8004cbc:	43db      	mvns	r3, r3
 8004cbe:	693a      	ldr	r2, [r7, #16]
 8004cc0:	4013      	ands	r3, r2
 8004cc2:	613b      	str	r3, [r7, #16]
 8004cc4:	683b      	ldr	r3, [r7, #0]
 8004cc6:	685b      	ldr	r3, [r3, #4]
 8004cc8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004ccc:	2b00      	cmp	r3, #0
 8004cce:	d003      	beq.n	8004cd8 <HAL_GPIO_Init+0x23c>
 8004cd0:	693a      	ldr	r2, [r7, #16]
 8004cd2:	68fb      	ldr	r3, [r7, #12]
 8004cd4:	4313      	orrs	r3, r2
 8004cd6:	613b      	str	r3, [r7, #16]
 8004cd8:	4a30      	ldr	r2, [pc, #192]	@ (8004d9c <HAL_GPIO_Init+0x300>)
 8004cda:	693b      	ldr	r3, [r7, #16]
 8004cdc:	6093      	str	r3, [r2, #8]
 8004cde:	4b2f      	ldr	r3, [pc, #188]	@ (8004d9c <HAL_GPIO_Init+0x300>)
 8004ce0:	68db      	ldr	r3, [r3, #12]
 8004ce2:	613b      	str	r3, [r7, #16]
 8004ce4:	68fb      	ldr	r3, [r7, #12]
 8004ce6:	43db      	mvns	r3, r3
 8004ce8:	693a      	ldr	r2, [r7, #16]
 8004cea:	4013      	ands	r3, r2
 8004cec:	613b      	str	r3, [r7, #16]
 8004cee:	683b      	ldr	r3, [r7, #0]
 8004cf0:	685b      	ldr	r3, [r3, #4]
 8004cf2:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004cf6:	2b00      	cmp	r3, #0
 8004cf8:	d003      	beq.n	8004d02 <HAL_GPIO_Init+0x266>
 8004cfa:	693a      	ldr	r2, [r7, #16]
 8004cfc:	68fb      	ldr	r3, [r7, #12]
 8004cfe:	4313      	orrs	r3, r2
 8004d00:	613b      	str	r3, [r7, #16]
 8004d02:	4a26      	ldr	r2, [pc, #152]	@ (8004d9c <HAL_GPIO_Init+0x300>)
 8004d04:	693b      	ldr	r3, [r7, #16]
 8004d06:	60d3      	str	r3, [r2, #12]
 8004d08:	4b24      	ldr	r3, [pc, #144]	@ (8004d9c <HAL_GPIO_Init+0x300>)
 8004d0a:	685b      	ldr	r3, [r3, #4]
 8004d0c:	613b      	str	r3, [r7, #16]
 8004d0e:	68fb      	ldr	r3, [r7, #12]
 8004d10:	43db      	mvns	r3, r3
 8004d12:	693a      	ldr	r2, [r7, #16]
 8004d14:	4013      	ands	r3, r2
 8004d16:	613b      	str	r3, [r7, #16]
 8004d18:	683b      	ldr	r3, [r7, #0]
 8004d1a:	685b      	ldr	r3, [r3, #4]
 8004d1c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004d20:	2b00      	cmp	r3, #0
 8004d22:	d003      	beq.n	8004d2c <HAL_GPIO_Init+0x290>
 8004d24:	693a      	ldr	r2, [r7, #16]
 8004d26:	68fb      	ldr	r3, [r7, #12]
 8004d28:	4313      	orrs	r3, r2
 8004d2a:	613b      	str	r3, [r7, #16]
 8004d2c:	4a1b      	ldr	r2, [pc, #108]	@ (8004d9c <HAL_GPIO_Init+0x300>)
 8004d2e:	693b      	ldr	r3, [r7, #16]
 8004d30:	6053      	str	r3, [r2, #4]
 8004d32:	4b1a      	ldr	r3, [pc, #104]	@ (8004d9c <HAL_GPIO_Init+0x300>)
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	613b      	str	r3, [r7, #16]
 8004d38:	68fb      	ldr	r3, [r7, #12]
 8004d3a:	43db      	mvns	r3, r3
 8004d3c:	693a      	ldr	r2, [r7, #16]
 8004d3e:	4013      	ands	r3, r2
 8004d40:	613b      	str	r3, [r7, #16]
 8004d42:	683b      	ldr	r3, [r7, #0]
 8004d44:	685b      	ldr	r3, [r3, #4]
 8004d46:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004d4a:	2b00      	cmp	r3, #0
 8004d4c:	d003      	beq.n	8004d56 <HAL_GPIO_Init+0x2ba>
 8004d4e:	693a      	ldr	r2, [r7, #16]
 8004d50:	68fb      	ldr	r3, [r7, #12]
 8004d52:	4313      	orrs	r3, r2
 8004d54:	613b      	str	r3, [r7, #16]
 8004d56:	4a11      	ldr	r2, [pc, #68]	@ (8004d9c <HAL_GPIO_Init+0x300>)
 8004d58:	693b      	ldr	r3, [r7, #16]
 8004d5a:	6013      	str	r3, [r2, #0]
 8004d5c:	697b      	ldr	r3, [r7, #20]
 8004d5e:	3301      	adds	r3, #1
 8004d60:	617b      	str	r3, [r7, #20]
 8004d62:	683b      	ldr	r3, [r7, #0]
 8004d64:	681a      	ldr	r2, [r3, #0]
 8004d66:	697b      	ldr	r3, [r7, #20]
 8004d68:	fa22 f303 	lsr.w	r3, r2, r3
 8004d6c:	2b00      	cmp	r3, #0
 8004d6e:	f47f ae9d 	bne.w	8004aac <HAL_GPIO_Init+0x10>
 8004d72:	bf00      	nop
 8004d74:	bf00      	nop
 8004d76:	371c      	adds	r7, #28
 8004d78:	46bd      	mov	sp, r7
 8004d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d7e:	4770      	bx	lr
 8004d80:	40021000 	.word	0x40021000
 8004d84:	40010000 	.word	0x40010000
 8004d88:	48000400 	.word	0x48000400
 8004d8c:	48000800 	.word	0x48000800
 8004d90:	48000c00 	.word	0x48000c00
 8004d94:	48001000 	.word	0x48001000
 8004d98:	48001400 	.word	0x48001400
 8004d9c:	40010400 	.word	0x40010400

08004da0 <HAL_GPIO_WritePin>:
 8004da0:	b480      	push	{r7}
 8004da2:	b083      	sub	sp, #12
 8004da4:	af00      	add	r7, sp, #0
 8004da6:	6078      	str	r0, [r7, #4]
 8004da8:	460b      	mov	r3, r1
 8004daa:	807b      	strh	r3, [r7, #2]
 8004dac:	4613      	mov	r3, r2
 8004dae:	707b      	strb	r3, [r7, #1]
 8004db0:	787b      	ldrb	r3, [r7, #1]
 8004db2:	2b00      	cmp	r3, #0
 8004db4:	d003      	beq.n	8004dbe <HAL_GPIO_WritePin+0x1e>
 8004db6:	887a      	ldrh	r2, [r7, #2]
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	619a      	str	r2, [r3, #24]
 8004dbc:	e002      	b.n	8004dc4 <HAL_GPIO_WritePin+0x24>
 8004dbe:	887a      	ldrh	r2, [r7, #2]
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	629a      	str	r2, [r3, #40]	@ 0x28
 8004dc4:	bf00      	nop
 8004dc6:	370c      	adds	r7, #12
 8004dc8:	46bd      	mov	sp, r7
 8004dca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dce:	4770      	bx	lr

08004dd0 <HAL_PWREx_ControlVoltageScaling>:
 8004dd0:	b480      	push	{r7}
 8004dd2:	b085      	sub	sp, #20
 8004dd4:	af00      	add	r7, sp, #0
 8004dd6:	6078      	str	r0, [r7, #4]
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	2b00      	cmp	r3, #0
 8004ddc:	d141      	bne.n	8004e62 <HAL_PWREx_ControlVoltageScaling+0x92>
 8004dde:	4b4b      	ldr	r3, [pc, #300]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8004de6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004dea:	d131      	bne.n	8004e50 <HAL_PWREx_ControlVoltageScaling+0x80>
 8004dec:	4b47      	ldr	r3, [pc, #284]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004dee:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004df2:	4a46      	ldr	r2, [pc, #280]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004df4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004df8:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004dfc:	4b43      	ldr	r3, [pc, #268]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8004e04:	4a41      	ldr	r2, [pc, #260]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e06:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004e0a:	6013      	str	r3, [r2, #0]
 8004e0c:	4b40      	ldr	r3, [pc, #256]	@ (8004f10 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8004e0e:	681b      	ldr	r3, [r3, #0]
 8004e10:	2232      	movs	r2, #50	@ 0x32
 8004e12:	fb02 f303 	mul.w	r3, r2, r3
 8004e16:	4a3f      	ldr	r2, [pc, #252]	@ (8004f14 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8004e18:	fba2 2303 	umull	r2, r3, r2, r3
 8004e1c:	0c9b      	lsrs	r3, r3, #18
 8004e1e:	3301      	adds	r3, #1
 8004e20:	60fb      	str	r3, [r7, #12]
 8004e22:	e002      	b.n	8004e2a <HAL_PWREx_ControlVoltageScaling+0x5a>
 8004e24:	68fb      	ldr	r3, [r7, #12]
 8004e26:	3b01      	subs	r3, #1
 8004e28:	60fb      	str	r3, [r7, #12]
 8004e2a:	4b38      	ldr	r3, [pc, #224]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e2c:	695b      	ldr	r3, [r3, #20]
 8004e2e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004e32:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004e36:	d102      	bne.n	8004e3e <HAL_PWREx_ControlVoltageScaling+0x6e>
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	2b00      	cmp	r3, #0
 8004e3c:	d1f2      	bne.n	8004e24 <HAL_PWREx_ControlVoltageScaling+0x54>
 8004e3e:	4b33      	ldr	r3, [pc, #204]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e40:	695b      	ldr	r3, [r3, #20]
 8004e42:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004e46:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004e4a:	d158      	bne.n	8004efe <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004e4c:	2303      	movs	r3, #3
 8004e4e:	e057      	b.n	8004f00 <HAL_PWREx_ControlVoltageScaling+0x130>
 8004e50:	4b2e      	ldr	r3, [pc, #184]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e52:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004e56:	4a2d      	ldr	r2, [pc, #180]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e58:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004e5c:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004e60:	e04d      	b.n	8004efe <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004e68:	d141      	bne.n	8004eee <HAL_PWREx_ControlVoltageScaling+0x11e>
 8004e6a:	4b28      	ldr	r3, [pc, #160]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8004e72:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004e76:	d131      	bne.n	8004edc <HAL_PWREx_ControlVoltageScaling+0x10c>
 8004e78:	4b24      	ldr	r3, [pc, #144]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e7a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004e7e:	4a23      	ldr	r2, [pc, #140]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e80:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004e84:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004e88:	4b20      	ldr	r3, [pc, #128]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8004e90:	4a1e      	ldr	r2, [pc, #120]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004e92:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004e96:	6013      	str	r3, [r2, #0]
 8004e98:	4b1d      	ldr	r3, [pc, #116]	@ (8004f10 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	2232      	movs	r2, #50	@ 0x32
 8004e9e:	fb02 f303 	mul.w	r3, r2, r3
 8004ea2:	4a1c      	ldr	r2, [pc, #112]	@ (8004f14 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8004ea4:	fba2 2303 	umull	r2, r3, r2, r3
 8004ea8:	0c9b      	lsrs	r3, r3, #18
 8004eaa:	3301      	adds	r3, #1
 8004eac:	60fb      	str	r3, [r7, #12]
 8004eae:	e002      	b.n	8004eb6 <HAL_PWREx_ControlVoltageScaling+0xe6>
 8004eb0:	68fb      	ldr	r3, [r7, #12]
 8004eb2:	3b01      	subs	r3, #1
 8004eb4:	60fb      	str	r3, [r7, #12]
 8004eb6:	4b15      	ldr	r3, [pc, #84]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004eb8:	695b      	ldr	r3, [r3, #20]
 8004eba:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004ebe:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004ec2:	d102      	bne.n	8004eca <HAL_PWREx_ControlVoltageScaling+0xfa>
 8004ec4:	68fb      	ldr	r3, [r7, #12]
 8004ec6:	2b00      	cmp	r3, #0
 8004ec8:	d1f2      	bne.n	8004eb0 <HAL_PWREx_ControlVoltageScaling+0xe0>
 8004eca:	4b10      	ldr	r3, [pc, #64]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004ecc:	695b      	ldr	r3, [r3, #20]
 8004ece:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004ed2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004ed6:	d112      	bne.n	8004efe <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004ed8:	2303      	movs	r3, #3
 8004eda:	e011      	b.n	8004f00 <HAL_PWREx_ControlVoltageScaling+0x130>
 8004edc:	4b0b      	ldr	r3, [pc, #44]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004ede:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004ee2:	4a0a      	ldr	r2, [pc, #40]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004ee4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004ee8:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004eec:	e007      	b.n	8004efe <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004eee:	4b07      	ldr	r3, [pc, #28]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8004ef6:	4a05      	ldr	r2, [pc, #20]	@ (8004f0c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004ef8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8004efc:	6013      	str	r3, [r2, #0]
 8004efe:	2300      	movs	r3, #0
 8004f00:	4618      	mov	r0, r3
 8004f02:	3714      	adds	r7, #20
 8004f04:	46bd      	mov	sp, r7
 8004f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f0a:	4770      	bx	lr
 8004f0c:	40007000 	.word	0x40007000
 8004f10:	20000000 	.word	0x20000000
 8004f14:	431bde83 	.word	0x431bde83

08004f18 <HAL_PWREx_DisableUCPDDeadBattery>:
 8004f18:	b480      	push	{r7}
 8004f1a:	af00      	add	r7, sp, #0
 8004f1c:	4b05      	ldr	r3, [pc, #20]	@ (8004f34 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8004f1e:	689b      	ldr	r3, [r3, #8]
 8004f20:	4a04      	ldr	r2, [pc, #16]	@ (8004f34 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8004f22:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004f26:	6093      	str	r3, [r2, #8]
 8004f28:	bf00      	nop
 8004f2a:	46bd      	mov	sp, r7
 8004f2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f30:	4770      	bx	lr
 8004f32:	bf00      	nop
 8004f34:	40007000 	.word	0x40007000

08004f38 <HAL_RCC_OscConfig>:
 8004f38:	b580      	push	{r7, lr}
 8004f3a:	b088      	sub	sp, #32
 8004f3c:	af00      	add	r7, sp, #0
 8004f3e:	6078      	str	r0, [r7, #4]
 8004f40:	687b      	ldr	r3, [r7, #4]
 8004f42:	2b00      	cmp	r3, #0
 8004f44:	d101      	bne.n	8004f4a <HAL_RCC_OscConfig+0x12>
 8004f46:	2301      	movs	r3, #1
 8004f48:	e2fe      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	f003 0301 	and.w	r3, r3, #1
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d075      	beq.n	8005042 <HAL_RCC_OscConfig+0x10a>
 8004f56:	4b97      	ldr	r3, [pc, #604]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004f58:	689b      	ldr	r3, [r3, #8]
 8004f5a:	f003 030c 	and.w	r3, r3, #12
 8004f5e:	61bb      	str	r3, [r7, #24]
 8004f60:	4b94      	ldr	r3, [pc, #592]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004f62:	68db      	ldr	r3, [r3, #12]
 8004f64:	f003 0303 	and.w	r3, r3, #3
 8004f68:	617b      	str	r3, [r7, #20]
 8004f6a:	69bb      	ldr	r3, [r7, #24]
 8004f6c:	2b0c      	cmp	r3, #12
 8004f6e:	d102      	bne.n	8004f76 <HAL_RCC_OscConfig+0x3e>
 8004f70:	697b      	ldr	r3, [r7, #20]
 8004f72:	2b03      	cmp	r3, #3
 8004f74:	d002      	beq.n	8004f7c <HAL_RCC_OscConfig+0x44>
 8004f76:	69bb      	ldr	r3, [r7, #24]
 8004f78:	2b08      	cmp	r3, #8
 8004f7a:	d10b      	bne.n	8004f94 <HAL_RCC_OscConfig+0x5c>
 8004f7c:	4b8d      	ldr	r3, [pc, #564]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004f7e:	681b      	ldr	r3, [r3, #0]
 8004f80:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004f84:	2b00      	cmp	r3, #0
 8004f86:	d05b      	beq.n	8005040 <HAL_RCC_OscConfig+0x108>
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	685b      	ldr	r3, [r3, #4]
 8004f8c:	2b00      	cmp	r3, #0
 8004f8e:	d157      	bne.n	8005040 <HAL_RCC_OscConfig+0x108>
 8004f90:	2301      	movs	r3, #1
 8004f92:	e2d9      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	685b      	ldr	r3, [r3, #4]
 8004f98:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004f9c:	d106      	bne.n	8004fac <HAL_RCC_OscConfig+0x74>
 8004f9e:	4b85      	ldr	r3, [pc, #532]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004fa0:	681b      	ldr	r3, [r3, #0]
 8004fa2:	4a84      	ldr	r2, [pc, #528]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004fa4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004fa8:	6013      	str	r3, [r2, #0]
 8004faa:	e01d      	b.n	8004fe8 <HAL_RCC_OscConfig+0xb0>
 8004fac:	687b      	ldr	r3, [r7, #4]
 8004fae:	685b      	ldr	r3, [r3, #4]
 8004fb0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004fb4:	d10c      	bne.n	8004fd0 <HAL_RCC_OscConfig+0x98>
 8004fb6:	4b7f      	ldr	r3, [pc, #508]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	4a7e      	ldr	r2, [pc, #504]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004fbc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004fc0:	6013      	str	r3, [r2, #0]
 8004fc2:	4b7c      	ldr	r3, [pc, #496]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	4a7b      	ldr	r2, [pc, #492]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004fc8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004fcc:	6013      	str	r3, [r2, #0]
 8004fce:	e00b      	b.n	8004fe8 <HAL_RCC_OscConfig+0xb0>
 8004fd0:	4b78      	ldr	r3, [pc, #480]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004fd2:	681b      	ldr	r3, [r3, #0]
 8004fd4:	4a77      	ldr	r2, [pc, #476]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004fd6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004fda:	6013      	str	r3, [r2, #0]
 8004fdc:	4b75      	ldr	r3, [pc, #468]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004fde:	681b      	ldr	r3, [r3, #0]
 8004fe0:	4a74      	ldr	r2, [pc, #464]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8004fe2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004fe6:	6013      	str	r3, [r2, #0]
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	685b      	ldr	r3, [r3, #4]
 8004fec:	2b00      	cmp	r3, #0
 8004fee:	d013      	beq.n	8005018 <HAL_RCC_OscConfig+0xe0>
 8004ff0:	f7fd f878 	bl	80020e4 <HAL_GetTick>
 8004ff4:	6138      	str	r0, [r7, #16]
 8004ff6:	e008      	b.n	800500a <HAL_RCC_OscConfig+0xd2>
 8004ff8:	f7fd f874 	bl	80020e4 <HAL_GetTick>
 8004ffc:	4602      	mov	r2, r0
 8004ffe:	693b      	ldr	r3, [r7, #16]
 8005000:	1ad3      	subs	r3, r2, r3
 8005002:	2b64      	cmp	r3, #100	@ 0x64
 8005004:	d901      	bls.n	800500a <HAL_RCC_OscConfig+0xd2>
 8005006:	2303      	movs	r3, #3
 8005008:	e29e      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 800500a:	4b6a      	ldr	r3, [pc, #424]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005012:	2b00      	cmp	r3, #0
 8005014:	d0f0      	beq.n	8004ff8 <HAL_RCC_OscConfig+0xc0>
 8005016:	e014      	b.n	8005042 <HAL_RCC_OscConfig+0x10a>
 8005018:	f7fd f864 	bl	80020e4 <HAL_GetTick>
 800501c:	6138      	str	r0, [r7, #16]
 800501e:	e008      	b.n	8005032 <HAL_RCC_OscConfig+0xfa>
 8005020:	f7fd f860 	bl	80020e4 <HAL_GetTick>
 8005024:	4602      	mov	r2, r0
 8005026:	693b      	ldr	r3, [r7, #16]
 8005028:	1ad3      	subs	r3, r2, r3
 800502a:	2b64      	cmp	r3, #100	@ 0x64
 800502c:	d901      	bls.n	8005032 <HAL_RCC_OscConfig+0xfa>
 800502e:	2303      	movs	r3, #3
 8005030:	e28a      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 8005032:	4b60      	ldr	r3, [pc, #384]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8005034:	681b      	ldr	r3, [r3, #0]
 8005036:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800503a:	2b00      	cmp	r3, #0
 800503c:	d1f0      	bne.n	8005020 <HAL_RCC_OscConfig+0xe8>
 800503e:	e000      	b.n	8005042 <HAL_RCC_OscConfig+0x10a>
 8005040:	bf00      	nop
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	681b      	ldr	r3, [r3, #0]
 8005046:	f003 0302 	and.w	r3, r3, #2
 800504a:	2b00      	cmp	r3, #0
 800504c:	d075      	beq.n	800513a <HAL_RCC_OscConfig+0x202>
 800504e:	4b59      	ldr	r3, [pc, #356]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8005050:	689b      	ldr	r3, [r3, #8]
 8005052:	f003 030c 	and.w	r3, r3, #12
 8005056:	61bb      	str	r3, [r7, #24]
 8005058:	4b56      	ldr	r3, [pc, #344]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 800505a:	68db      	ldr	r3, [r3, #12]
 800505c:	f003 0303 	and.w	r3, r3, #3
 8005060:	617b      	str	r3, [r7, #20]
 8005062:	69bb      	ldr	r3, [r7, #24]
 8005064:	2b0c      	cmp	r3, #12
 8005066:	d102      	bne.n	800506e <HAL_RCC_OscConfig+0x136>
 8005068:	697b      	ldr	r3, [r7, #20]
 800506a:	2b02      	cmp	r3, #2
 800506c:	d002      	beq.n	8005074 <HAL_RCC_OscConfig+0x13c>
 800506e:	69bb      	ldr	r3, [r7, #24]
 8005070:	2b04      	cmp	r3, #4
 8005072:	d11f      	bne.n	80050b4 <HAL_RCC_OscConfig+0x17c>
 8005074:	4b4f      	ldr	r3, [pc, #316]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800507c:	2b00      	cmp	r3, #0
 800507e:	d005      	beq.n	800508c <HAL_RCC_OscConfig+0x154>
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	68db      	ldr	r3, [r3, #12]
 8005084:	2b00      	cmp	r3, #0
 8005086:	d101      	bne.n	800508c <HAL_RCC_OscConfig+0x154>
 8005088:	2301      	movs	r3, #1
 800508a:	e25d      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 800508c:	4b49      	ldr	r3, [pc, #292]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 800508e:	685b      	ldr	r3, [r3, #4]
 8005090:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8005094:	687b      	ldr	r3, [r7, #4]
 8005096:	691b      	ldr	r3, [r3, #16]
 8005098:	061b      	lsls	r3, r3, #24
 800509a:	4946      	ldr	r1, [pc, #280]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 800509c:	4313      	orrs	r3, r2
 800509e:	604b      	str	r3, [r1, #4]
 80050a0:	4b45      	ldr	r3, [pc, #276]	@ (80051b8 <HAL_RCC_OscConfig+0x280>)
 80050a2:	681b      	ldr	r3, [r3, #0]
 80050a4:	4618      	mov	r0, r3
 80050a6:	f7fc ffd1 	bl	800204c <HAL_InitTick>
 80050aa:	4603      	mov	r3, r0
 80050ac:	2b00      	cmp	r3, #0
 80050ae:	d043      	beq.n	8005138 <HAL_RCC_OscConfig+0x200>
 80050b0:	2301      	movs	r3, #1
 80050b2:	e249      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	68db      	ldr	r3, [r3, #12]
 80050b8:	2b00      	cmp	r3, #0
 80050ba:	d023      	beq.n	8005104 <HAL_RCC_OscConfig+0x1cc>
 80050bc:	4b3d      	ldr	r3, [pc, #244]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	4a3c      	ldr	r2, [pc, #240]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 80050c2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80050c6:	6013      	str	r3, [r2, #0]
 80050c8:	f7fd f80c 	bl	80020e4 <HAL_GetTick>
 80050cc:	6138      	str	r0, [r7, #16]
 80050ce:	e008      	b.n	80050e2 <HAL_RCC_OscConfig+0x1aa>
 80050d0:	f7fd f808 	bl	80020e4 <HAL_GetTick>
 80050d4:	4602      	mov	r2, r0
 80050d6:	693b      	ldr	r3, [r7, #16]
 80050d8:	1ad3      	subs	r3, r2, r3
 80050da:	2b02      	cmp	r3, #2
 80050dc:	d901      	bls.n	80050e2 <HAL_RCC_OscConfig+0x1aa>
 80050de:	2303      	movs	r3, #3
 80050e0:	e232      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 80050e2:	4b34      	ldr	r3, [pc, #208]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 80050e4:	681b      	ldr	r3, [r3, #0]
 80050e6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80050ea:	2b00      	cmp	r3, #0
 80050ec:	d0f0      	beq.n	80050d0 <HAL_RCC_OscConfig+0x198>
 80050ee:	4b31      	ldr	r3, [pc, #196]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 80050f0:	685b      	ldr	r3, [r3, #4]
 80050f2:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	691b      	ldr	r3, [r3, #16]
 80050fa:	061b      	lsls	r3, r3, #24
 80050fc:	492d      	ldr	r1, [pc, #180]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 80050fe:	4313      	orrs	r3, r2
 8005100:	604b      	str	r3, [r1, #4]
 8005102:	e01a      	b.n	800513a <HAL_RCC_OscConfig+0x202>
 8005104:	4b2b      	ldr	r3, [pc, #172]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	4a2a      	ldr	r2, [pc, #168]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 800510a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800510e:	6013      	str	r3, [r2, #0]
 8005110:	f7fc ffe8 	bl	80020e4 <HAL_GetTick>
 8005114:	6138      	str	r0, [r7, #16]
 8005116:	e008      	b.n	800512a <HAL_RCC_OscConfig+0x1f2>
 8005118:	f7fc ffe4 	bl	80020e4 <HAL_GetTick>
 800511c:	4602      	mov	r2, r0
 800511e:	693b      	ldr	r3, [r7, #16]
 8005120:	1ad3      	subs	r3, r2, r3
 8005122:	2b02      	cmp	r3, #2
 8005124:	d901      	bls.n	800512a <HAL_RCC_OscConfig+0x1f2>
 8005126:	2303      	movs	r3, #3
 8005128:	e20e      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 800512a:	4b22      	ldr	r3, [pc, #136]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 800512c:	681b      	ldr	r3, [r3, #0]
 800512e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005132:	2b00      	cmp	r3, #0
 8005134:	d1f0      	bne.n	8005118 <HAL_RCC_OscConfig+0x1e0>
 8005136:	e000      	b.n	800513a <HAL_RCC_OscConfig+0x202>
 8005138:	bf00      	nop
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	681b      	ldr	r3, [r3, #0]
 800513e:	f003 0308 	and.w	r3, r3, #8
 8005142:	2b00      	cmp	r3, #0
 8005144:	d041      	beq.n	80051ca <HAL_RCC_OscConfig+0x292>
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	695b      	ldr	r3, [r3, #20]
 800514a:	2b00      	cmp	r3, #0
 800514c:	d01c      	beq.n	8005188 <HAL_RCC_OscConfig+0x250>
 800514e:	4b19      	ldr	r3, [pc, #100]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8005150:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005154:	4a17      	ldr	r2, [pc, #92]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8005156:	f043 0301 	orr.w	r3, r3, #1
 800515a:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 800515e:	f7fc ffc1 	bl	80020e4 <HAL_GetTick>
 8005162:	6138      	str	r0, [r7, #16]
 8005164:	e008      	b.n	8005178 <HAL_RCC_OscConfig+0x240>
 8005166:	f7fc ffbd 	bl	80020e4 <HAL_GetTick>
 800516a:	4602      	mov	r2, r0
 800516c:	693b      	ldr	r3, [r7, #16]
 800516e:	1ad3      	subs	r3, r2, r3
 8005170:	2b02      	cmp	r3, #2
 8005172:	d901      	bls.n	8005178 <HAL_RCC_OscConfig+0x240>
 8005174:	2303      	movs	r3, #3
 8005176:	e1e7      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 8005178:	4b0e      	ldr	r3, [pc, #56]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 800517a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800517e:	f003 0302 	and.w	r3, r3, #2
 8005182:	2b00      	cmp	r3, #0
 8005184:	d0ef      	beq.n	8005166 <HAL_RCC_OscConfig+0x22e>
 8005186:	e020      	b.n	80051ca <HAL_RCC_OscConfig+0x292>
 8005188:	4b0a      	ldr	r3, [pc, #40]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 800518a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800518e:	4a09      	ldr	r2, [pc, #36]	@ (80051b4 <HAL_RCC_OscConfig+0x27c>)
 8005190:	f023 0301 	bic.w	r3, r3, #1
 8005194:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8005198:	f7fc ffa4 	bl	80020e4 <HAL_GetTick>
 800519c:	6138      	str	r0, [r7, #16]
 800519e:	e00d      	b.n	80051bc <HAL_RCC_OscConfig+0x284>
 80051a0:	f7fc ffa0 	bl	80020e4 <HAL_GetTick>
 80051a4:	4602      	mov	r2, r0
 80051a6:	693b      	ldr	r3, [r7, #16]
 80051a8:	1ad3      	subs	r3, r2, r3
 80051aa:	2b02      	cmp	r3, #2
 80051ac:	d906      	bls.n	80051bc <HAL_RCC_OscConfig+0x284>
 80051ae:	2303      	movs	r3, #3
 80051b0:	e1ca      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 80051b2:	bf00      	nop
 80051b4:	40021000 	.word	0x40021000
 80051b8:	20000004 	.word	0x20000004
 80051bc:	4b8c      	ldr	r3, [pc, #560]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 80051be:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80051c2:	f003 0302 	and.w	r3, r3, #2
 80051c6:	2b00      	cmp	r3, #0
 80051c8:	d1ea      	bne.n	80051a0 <HAL_RCC_OscConfig+0x268>
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	f003 0304 	and.w	r3, r3, #4
 80051d2:	2b00      	cmp	r3, #0
 80051d4:	f000 80a6 	beq.w	8005324 <HAL_RCC_OscConfig+0x3ec>
 80051d8:	2300      	movs	r3, #0
 80051da:	77fb      	strb	r3, [r7, #31]
 80051dc:	4b84      	ldr	r3, [pc, #528]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 80051de:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80051e0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80051e4:	2b00      	cmp	r3, #0
 80051e6:	d101      	bne.n	80051ec <HAL_RCC_OscConfig+0x2b4>
 80051e8:	2301      	movs	r3, #1
 80051ea:	e000      	b.n	80051ee <HAL_RCC_OscConfig+0x2b6>
 80051ec:	2300      	movs	r3, #0
 80051ee:	2b00      	cmp	r3, #0
 80051f0:	d00d      	beq.n	800520e <HAL_RCC_OscConfig+0x2d6>
 80051f2:	4b7f      	ldr	r3, [pc, #508]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 80051f4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80051f6:	4a7e      	ldr	r2, [pc, #504]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 80051f8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80051fc:	6593      	str	r3, [r2, #88]	@ 0x58
 80051fe:	4b7c      	ldr	r3, [pc, #496]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005200:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005202:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005206:	60fb      	str	r3, [r7, #12]
 8005208:	68fb      	ldr	r3, [r7, #12]
 800520a:	2301      	movs	r3, #1
 800520c:	77fb      	strb	r3, [r7, #31]
 800520e:	4b79      	ldr	r3, [pc, #484]	@ (80053f4 <HAL_RCC_OscConfig+0x4bc>)
 8005210:	681b      	ldr	r3, [r3, #0]
 8005212:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005216:	2b00      	cmp	r3, #0
 8005218:	d118      	bne.n	800524c <HAL_RCC_OscConfig+0x314>
 800521a:	4b76      	ldr	r3, [pc, #472]	@ (80053f4 <HAL_RCC_OscConfig+0x4bc>)
 800521c:	681b      	ldr	r3, [r3, #0]
 800521e:	4a75      	ldr	r2, [pc, #468]	@ (80053f4 <HAL_RCC_OscConfig+0x4bc>)
 8005220:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005224:	6013      	str	r3, [r2, #0]
 8005226:	f7fc ff5d 	bl	80020e4 <HAL_GetTick>
 800522a:	6138      	str	r0, [r7, #16]
 800522c:	e008      	b.n	8005240 <HAL_RCC_OscConfig+0x308>
 800522e:	f7fc ff59 	bl	80020e4 <HAL_GetTick>
 8005232:	4602      	mov	r2, r0
 8005234:	693b      	ldr	r3, [r7, #16]
 8005236:	1ad3      	subs	r3, r2, r3
 8005238:	2b02      	cmp	r3, #2
 800523a:	d901      	bls.n	8005240 <HAL_RCC_OscConfig+0x308>
 800523c:	2303      	movs	r3, #3
 800523e:	e183      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 8005240:	4b6c      	ldr	r3, [pc, #432]	@ (80053f4 <HAL_RCC_OscConfig+0x4bc>)
 8005242:	681b      	ldr	r3, [r3, #0]
 8005244:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005248:	2b00      	cmp	r3, #0
 800524a:	d0f0      	beq.n	800522e <HAL_RCC_OscConfig+0x2f6>
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	689b      	ldr	r3, [r3, #8]
 8005250:	2b01      	cmp	r3, #1
 8005252:	d108      	bne.n	8005266 <HAL_RCC_OscConfig+0x32e>
 8005254:	4b66      	ldr	r3, [pc, #408]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005256:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800525a:	4a65      	ldr	r2, [pc, #404]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 800525c:	f043 0301 	orr.w	r3, r3, #1
 8005260:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005264:	e024      	b.n	80052b0 <HAL_RCC_OscConfig+0x378>
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	689b      	ldr	r3, [r3, #8]
 800526a:	2b05      	cmp	r3, #5
 800526c:	d110      	bne.n	8005290 <HAL_RCC_OscConfig+0x358>
 800526e:	4b60      	ldr	r3, [pc, #384]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005270:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005274:	4a5e      	ldr	r2, [pc, #376]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005276:	f043 0304 	orr.w	r3, r3, #4
 800527a:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800527e:	4b5c      	ldr	r3, [pc, #368]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005280:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005284:	4a5a      	ldr	r2, [pc, #360]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005286:	f043 0301 	orr.w	r3, r3, #1
 800528a:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800528e:	e00f      	b.n	80052b0 <HAL_RCC_OscConfig+0x378>
 8005290:	4b57      	ldr	r3, [pc, #348]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005292:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005296:	4a56      	ldr	r2, [pc, #344]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005298:	f023 0301 	bic.w	r3, r3, #1
 800529c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80052a0:	4b53      	ldr	r3, [pc, #332]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 80052a2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80052a6:	4a52      	ldr	r2, [pc, #328]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 80052a8:	f023 0304 	bic.w	r3, r3, #4
 80052ac:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	689b      	ldr	r3, [r3, #8]
 80052b4:	2b00      	cmp	r3, #0
 80052b6:	d016      	beq.n	80052e6 <HAL_RCC_OscConfig+0x3ae>
 80052b8:	f7fc ff14 	bl	80020e4 <HAL_GetTick>
 80052bc:	6138      	str	r0, [r7, #16]
 80052be:	e00a      	b.n	80052d6 <HAL_RCC_OscConfig+0x39e>
 80052c0:	f7fc ff10 	bl	80020e4 <HAL_GetTick>
 80052c4:	4602      	mov	r2, r0
 80052c6:	693b      	ldr	r3, [r7, #16]
 80052c8:	1ad3      	subs	r3, r2, r3
 80052ca:	f241 3288 	movw	r2, #5000	@ 0x1388
 80052ce:	4293      	cmp	r3, r2
 80052d0:	d901      	bls.n	80052d6 <HAL_RCC_OscConfig+0x39e>
 80052d2:	2303      	movs	r3, #3
 80052d4:	e138      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 80052d6:	4b46      	ldr	r3, [pc, #280]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 80052d8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80052dc:	f003 0302 	and.w	r3, r3, #2
 80052e0:	2b00      	cmp	r3, #0
 80052e2:	d0ed      	beq.n	80052c0 <HAL_RCC_OscConfig+0x388>
 80052e4:	e015      	b.n	8005312 <HAL_RCC_OscConfig+0x3da>
 80052e6:	f7fc fefd 	bl	80020e4 <HAL_GetTick>
 80052ea:	6138      	str	r0, [r7, #16]
 80052ec:	e00a      	b.n	8005304 <HAL_RCC_OscConfig+0x3cc>
 80052ee:	f7fc fef9 	bl	80020e4 <HAL_GetTick>
 80052f2:	4602      	mov	r2, r0
 80052f4:	693b      	ldr	r3, [r7, #16]
 80052f6:	1ad3      	subs	r3, r2, r3
 80052f8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80052fc:	4293      	cmp	r3, r2
 80052fe:	d901      	bls.n	8005304 <HAL_RCC_OscConfig+0x3cc>
 8005300:	2303      	movs	r3, #3
 8005302:	e121      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 8005304:	4b3a      	ldr	r3, [pc, #232]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005306:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800530a:	f003 0302 	and.w	r3, r3, #2
 800530e:	2b00      	cmp	r3, #0
 8005310:	d1ed      	bne.n	80052ee <HAL_RCC_OscConfig+0x3b6>
 8005312:	7ffb      	ldrb	r3, [r7, #31]
 8005314:	2b01      	cmp	r3, #1
 8005316:	d105      	bne.n	8005324 <HAL_RCC_OscConfig+0x3ec>
 8005318:	4b35      	ldr	r3, [pc, #212]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 800531a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800531c:	4a34      	ldr	r2, [pc, #208]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 800531e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005322:	6593      	str	r3, [r2, #88]	@ 0x58
 8005324:	687b      	ldr	r3, [r7, #4]
 8005326:	681b      	ldr	r3, [r3, #0]
 8005328:	f003 0320 	and.w	r3, r3, #32
 800532c:	2b00      	cmp	r3, #0
 800532e:	d03c      	beq.n	80053aa <HAL_RCC_OscConfig+0x472>
 8005330:	687b      	ldr	r3, [r7, #4]
 8005332:	699b      	ldr	r3, [r3, #24]
 8005334:	2b00      	cmp	r3, #0
 8005336:	d01c      	beq.n	8005372 <HAL_RCC_OscConfig+0x43a>
 8005338:	4b2d      	ldr	r3, [pc, #180]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 800533a:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800533e:	4a2c      	ldr	r2, [pc, #176]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005340:	f043 0301 	orr.w	r3, r3, #1
 8005344:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8005348:	f7fc fecc 	bl	80020e4 <HAL_GetTick>
 800534c:	6138      	str	r0, [r7, #16]
 800534e:	e008      	b.n	8005362 <HAL_RCC_OscConfig+0x42a>
 8005350:	f7fc fec8 	bl	80020e4 <HAL_GetTick>
 8005354:	4602      	mov	r2, r0
 8005356:	693b      	ldr	r3, [r7, #16]
 8005358:	1ad3      	subs	r3, r2, r3
 800535a:	2b02      	cmp	r3, #2
 800535c:	d901      	bls.n	8005362 <HAL_RCC_OscConfig+0x42a>
 800535e:	2303      	movs	r3, #3
 8005360:	e0f2      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 8005362:	4b23      	ldr	r3, [pc, #140]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005364:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005368:	f003 0302 	and.w	r3, r3, #2
 800536c:	2b00      	cmp	r3, #0
 800536e:	d0ef      	beq.n	8005350 <HAL_RCC_OscConfig+0x418>
 8005370:	e01b      	b.n	80053aa <HAL_RCC_OscConfig+0x472>
 8005372:	4b1f      	ldr	r3, [pc, #124]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 8005374:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005378:	4a1d      	ldr	r2, [pc, #116]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 800537a:	f023 0301 	bic.w	r3, r3, #1
 800537e:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8005382:	f7fc feaf 	bl	80020e4 <HAL_GetTick>
 8005386:	6138      	str	r0, [r7, #16]
 8005388:	e008      	b.n	800539c <HAL_RCC_OscConfig+0x464>
 800538a:	f7fc feab 	bl	80020e4 <HAL_GetTick>
 800538e:	4602      	mov	r2, r0
 8005390:	693b      	ldr	r3, [r7, #16]
 8005392:	1ad3      	subs	r3, r2, r3
 8005394:	2b02      	cmp	r3, #2
 8005396:	d901      	bls.n	800539c <HAL_RCC_OscConfig+0x464>
 8005398:	2303      	movs	r3, #3
 800539a:	e0d5      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 800539c:	4b14      	ldr	r3, [pc, #80]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 800539e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80053a2:	f003 0302 	and.w	r3, r3, #2
 80053a6:	2b00      	cmp	r3, #0
 80053a8:	d1ef      	bne.n	800538a <HAL_RCC_OscConfig+0x452>
 80053aa:	687b      	ldr	r3, [r7, #4]
 80053ac:	69db      	ldr	r3, [r3, #28]
 80053ae:	2b00      	cmp	r3, #0
 80053b0:	f000 80c9 	beq.w	8005546 <HAL_RCC_OscConfig+0x60e>
 80053b4:	4b0e      	ldr	r3, [pc, #56]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 80053b6:	689b      	ldr	r3, [r3, #8]
 80053b8:	f003 030c 	and.w	r3, r3, #12
 80053bc:	2b0c      	cmp	r3, #12
 80053be:	f000 8083 	beq.w	80054c8 <HAL_RCC_OscConfig+0x590>
 80053c2:	687b      	ldr	r3, [r7, #4]
 80053c4:	69db      	ldr	r3, [r3, #28]
 80053c6:	2b02      	cmp	r3, #2
 80053c8:	d15e      	bne.n	8005488 <HAL_RCC_OscConfig+0x550>
 80053ca:	4b09      	ldr	r3, [pc, #36]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	4a08      	ldr	r2, [pc, #32]	@ (80053f0 <HAL_RCC_OscConfig+0x4b8>)
 80053d0:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80053d4:	6013      	str	r3, [r2, #0]
 80053d6:	f7fc fe85 	bl	80020e4 <HAL_GetTick>
 80053da:	6138      	str	r0, [r7, #16]
 80053dc:	e00c      	b.n	80053f8 <HAL_RCC_OscConfig+0x4c0>
 80053de:	f7fc fe81 	bl	80020e4 <HAL_GetTick>
 80053e2:	4602      	mov	r2, r0
 80053e4:	693b      	ldr	r3, [r7, #16]
 80053e6:	1ad3      	subs	r3, r2, r3
 80053e8:	2b02      	cmp	r3, #2
 80053ea:	d905      	bls.n	80053f8 <HAL_RCC_OscConfig+0x4c0>
 80053ec:	2303      	movs	r3, #3
 80053ee:	e0ab      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 80053f0:	40021000 	.word	0x40021000
 80053f4:	40007000 	.word	0x40007000
 80053f8:	4b55      	ldr	r3, [pc, #340]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 80053fa:	681b      	ldr	r3, [r3, #0]
 80053fc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005400:	2b00      	cmp	r3, #0
 8005402:	d1ec      	bne.n	80053de <HAL_RCC_OscConfig+0x4a6>
 8005404:	4b52      	ldr	r3, [pc, #328]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 8005406:	68da      	ldr	r2, [r3, #12]
 8005408:	4b52      	ldr	r3, [pc, #328]	@ (8005554 <HAL_RCC_OscConfig+0x61c>)
 800540a:	4013      	ands	r3, r2
 800540c:	687a      	ldr	r2, [r7, #4]
 800540e:	6a11      	ldr	r1, [r2, #32]
 8005410:	687a      	ldr	r2, [r7, #4]
 8005412:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005414:	3a01      	subs	r2, #1
 8005416:	0112      	lsls	r2, r2, #4
 8005418:	4311      	orrs	r1, r2
 800541a:	687a      	ldr	r2, [r7, #4]
 800541c:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800541e:	0212      	lsls	r2, r2, #8
 8005420:	4311      	orrs	r1, r2
 8005422:	687a      	ldr	r2, [r7, #4]
 8005424:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8005426:	0852      	lsrs	r2, r2, #1
 8005428:	3a01      	subs	r2, #1
 800542a:	0552      	lsls	r2, r2, #21
 800542c:	4311      	orrs	r1, r2
 800542e:	687a      	ldr	r2, [r7, #4]
 8005430:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8005432:	0852      	lsrs	r2, r2, #1
 8005434:	3a01      	subs	r2, #1
 8005436:	0652      	lsls	r2, r2, #25
 8005438:	4311      	orrs	r1, r2
 800543a:	687a      	ldr	r2, [r7, #4]
 800543c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800543e:	06d2      	lsls	r2, r2, #27
 8005440:	430a      	orrs	r2, r1
 8005442:	4943      	ldr	r1, [pc, #268]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 8005444:	4313      	orrs	r3, r2
 8005446:	60cb      	str	r3, [r1, #12]
 8005448:	4b41      	ldr	r3, [pc, #260]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	4a40      	ldr	r2, [pc, #256]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 800544e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8005452:	6013      	str	r3, [r2, #0]
 8005454:	4b3e      	ldr	r3, [pc, #248]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 8005456:	68db      	ldr	r3, [r3, #12]
 8005458:	4a3d      	ldr	r2, [pc, #244]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 800545a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800545e:	60d3      	str	r3, [r2, #12]
 8005460:	f7fc fe40 	bl	80020e4 <HAL_GetTick>
 8005464:	6138      	str	r0, [r7, #16]
 8005466:	e008      	b.n	800547a <HAL_RCC_OscConfig+0x542>
 8005468:	f7fc fe3c 	bl	80020e4 <HAL_GetTick>
 800546c:	4602      	mov	r2, r0
 800546e:	693b      	ldr	r3, [r7, #16]
 8005470:	1ad3      	subs	r3, r2, r3
 8005472:	2b02      	cmp	r3, #2
 8005474:	d901      	bls.n	800547a <HAL_RCC_OscConfig+0x542>
 8005476:	2303      	movs	r3, #3
 8005478:	e066      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 800547a:	4b35      	ldr	r3, [pc, #212]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 800547c:	681b      	ldr	r3, [r3, #0]
 800547e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005482:	2b00      	cmp	r3, #0
 8005484:	d0f0      	beq.n	8005468 <HAL_RCC_OscConfig+0x530>
 8005486:	e05e      	b.n	8005546 <HAL_RCC_OscConfig+0x60e>
 8005488:	4b31      	ldr	r3, [pc, #196]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 800548a:	681b      	ldr	r3, [r3, #0]
 800548c:	4a30      	ldr	r2, [pc, #192]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 800548e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8005492:	6013      	str	r3, [r2, #0]
 8005494:	f7fc fe26 	bl	80020e4 <HAL_GetTick>
 8005498:	6138      	str	r0, [r7, #16]
 800549a:	e008      	b.n	80054ae <HAL_RCC_OscConfig+0x576>
 800549c:	f7fc fe22 	bl	80020e4 <HAL_GetTick>
 80054a0:	4602      	mov	r2, r0
 80054a2:	693b      	ldr	r3, [r7, #16]
 80054a4:	1ad3      	subs	r3, r2, r3
 80054a6:	2b02      	cmp	r3, #2
 80054a8:	d901      	bls.n	80054ae <HAL_RCC_OscConfig+0x576>
 80054aa:	2303      	movs	r3, #3
 80054ac:	e04c      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 80054ae:	4b28      	ldr	r3, [pc, #160]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 80054b0:	681b      	ldr	r3, [r3, #0]
 80054b2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80054b6:	2b00      	cmp	r3, #0
 80054b8:	d1f0      	bne.n	800549c <HAL_RCC_OscConfig+0x564>
 80054ba:	4b25      	ldr	r3, [pc, #148]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 80054bc:	68da      	ldr	r2, [r3, #12]
 80054be:	4924      	ldr	r1, [pc, #144]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 80054c0:	4b25      	ldr	r3, [pc, #148]	@ (8005558 <HAL_RCC_OscConfig+0x620>)
 80054c2:	4013      	ands	r3, r2
 80054c4:	60cb      	str	r3, [r1, #12]
 80054c6:	e03e      	b.n	8005546 <HAL_RCC_OscConfig+0x60e>
 80054c8:	687b      	ldr	r3, [r7, #4]
 80054ca:	69db      	ldr	r3, [r3, #28]
 80054cc:	2b01      	cmp	r3, #1
 80054ce:	d101      	bne.n	80054d4 <HAL_RCC_OscConfig+0x59c>
 80054d0:	2301      	movs	r3, #1
 80054d2:	e039      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 80054d4:	4b1e      	ldr	r3, [pc, #120]	@ (8005550 <HAL_RCC_OscConfig+0x618>)
 80054d6:	68db      	ldr	r3, [r3, #12]
 80054d8:	617b      	str	r3, [r7, #20]
 80054da:	697b      	ldr	r3, [r7, #20]
 80054dc:	f003 0203 	and.w	r2, r3, #3
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	6a1b      	ldr	r3, [r3, #32]
 80054e4:	429a      	cmp	r2, r3
 80054e6:	d12c      	bne.n	8005542 <HAL_RCC_OscConfig+0x60a>
 80054e8:	697b      	ldr	r3, [r7, #20]
 80054ea:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80054f2:	3b01      	subs	r3, #1
 80054f4:	011b      	lsls	r3, r3, #4
 80054f6:	429a      	cmp	r2, r3
 80054f8:	d123      	bne.n	8005542 <HAL_RCC_OscConfig+0x60a>
 80054fa:	697b      	ldr	r3, [r7, #20]
 80054fc:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005504:	021b      	lsls	r3, r3, #8
 8005506:	429a      	cmp	r2, r3
 8005508:	d11b      	bne.n	8005542 <HAL_RCC_OscConfig+0x60a>
 800550a:	697b      	ldr	r3, [r7, #20]
 800550c:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8005510:	687b      	ldr	r3, [r7, #4]
 8005512:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005514:	06db      	lsls	r3, r3, #27
 8005516:	429a      	cmp	r2, r3
 8005518:	d113      	bne.n	8005542 <HAL_RCC_OscConfig+0x60a>
 800551a:	697b      	ldr	r3, [r7, #20]
 800551c:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8005520:	687b      	ldr	r3, [r7, #4]
 8005522:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005524:	085b      	lsrs	r3, r3, #1
 8005526:	3b01      	subs	r3, #1
 8005528:	055b      	lsls	r3, r3, #21
 800552a:	429a      	cmp	r2, r3
 800552c:	d109      	bne.n	8005542 <HAL_RCC_OscConfig+0x60a>
 800552e:	697b      	ldr	r3, [r7, #20]
 8005530:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005538:	085b      	lsrs	r3, r3, #1
 800553a:	3b01      	subs	r3, #1
 800553c:	065b      	lsls	r3, r3, #25
 800553e:	429a      	cmp	r2, r3
 8005540:	d001      	beq.n	8005546 <HAL_RCC_OscConfig+0x60e>
 8005542:	2301      	movs	r3, #1
 8005544:	e000      	b.n	8005548 <HAL_RCC_OscConfig+0x610>
 8005546:	2300      	movs	r3, #0
 8005548:	4618      	mov	r0, r3
 800554a:	3720      	adds	r7, #32
 800554c:	46bd      	mov	sp, r7
 800554e:	bd80      	pop	{r7, pc}
 8005550:	40021000 	.word	0x40021000
 8005554:	019f800c 	.word	0x019f800c
 8005558:	feeefffc 	.word	0xfeeefffc

0800555c <HAL_RCC_ClockConfig>:
 800555c:	b580      	push	{r7, lr}
 800555e:	b086      	sub	sp, #24
 8005560:	af00      	add	r7, sp, #0
 8005562:	6078      	str	r0, [r7, #4]
 8005564:	6039      	str	r1, [r7, #0]
 8005566:	2300      	movs	r3, #0
 8005568:	617b      	str	r3, [r7, #20]
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	2b00      	cmp	r3, #0
 800556e:	d101      	bne.n	8005574 <HAL_RCC_ClockConfig+0x18>
 8005570:	2301      	movs	r3, #1
 8005572:	e11e      	b.n	80057b2 <HAL_RCC_ClockConfig+0x256>
 8005574:	4b91      	ldr	r3, [pc, #580]	@ (80057bc <HAL_RCC_ClockConfig+0x260>)
 8005576:	681b      	ldr	r3, [r3, #0]
 8005578:	f003 030f 	and.w	r3, r3, #15
 800557c:	683a      	ldr	r2, [r7, #0]
 800557e:	429a      	cmp	r2, r3
 8005580:	d910      	bls.n	80055a4 <HAL_RCC_ClockConfig+0x48>
 8005582:	4b8e      	ldr	r3, [pc, #568]	@ (80057bc <HAL_RCC_ClockConfig+0x260>)
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	f023 020f 	bic.w	r2, r3, #15
 800558a:	498c      	ldr	r1, [pc, #560]	@ (80057bc <HAL_RCC_ClockConfig+0x260>)
 800558c:	683b      	ldr	r3, [r7, #0]
 800558e:	4313      	orrs	r3, r2
 8005590:	600b      	str	r3, [r1, #0]
 8005592:	4b8a      	ldr	r3, [pc, #552]	@ (80057bc <HAL_RCC_ClockConfig+0x260>)
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	f003 030f 	and.w	r3, r3, #15
 800559a:	683a      	ldr	r2, [r7, #0]
 800559c:	429a      	cmp	r2, r3
 800559e:	d001      	beq.n	80055a4 <HAL_RCC_ClockConfig+0x48>
 80055a0:	2301      	movs	r3, #1
 80055a2:	e106      	b.n	80057b2 <HAL_RCC_ClockConfig+0x256>
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	f003 0301 	and.w	r3, r3, #1
 80055ac:	2b00      	cmp	r3, #0
 80055ae:	d073      	beq.n	8005698 <HAL_RCC_ClockConfig+0x13c>
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	685b      	ldr	r3, [r3, #4]
 80055b4:	2b03      	cmp	r3, #3
 80055b6:	d129      	bne.n	800560c <HAL_RCC_ClockConfig+0xb0>
 80055b8:	4b81      	ldr	r3, [pc, #516]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80055ba:	681b      	ldr	r3, [r3, #0]
 80055bc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80055c0:	2b00      	cmp	r3, #0
 80055c2:	d101      	bne.n	80055c8 <HAL_RCC_ClockConfig+0x6c>
 80055c4:	2301      	movs	r3, #1
 80055c6:	e0f4      	b.n	80057b2 <HAL_RCC_ClockConfig+0x256>
 80055c8:	f000 f966 	bl	8005898 <RCC_GetSysClockFreqFromPLLSource>
 80055cc:	6138      	str	r0, [r7, #16]
 80055ce:	693b      	ldr	r3, [r7, #16]
 80055d0:	4a7c      	ldr	r2, [pc, #496]	@ (80057c4 <HAL_RCC_ClockConfig+0x268>)
 80055d2:	4293      	cmp	r3, r2
 80055d4:	d93f      	bls.n	8005656 <HAL_RCC_ClockConfig+0xfa>
 80055d6:	4b7a      	ldr	r3, [pc, #488]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80055d8:	689b      	ldr	r3, [r3, #8]
 80055da:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80055de:	2b00      	cmp	r3, #0
 80055e0:	d009      	beq.n	80055f6 <HAL_RCC_ClockConfig+0x9a>
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	681b      	ldr	r3, [r3, #0]
 80055e6:	f003 0302 	and.w	r3, r3, #2
 80055ea:	2b00      	cmp	r3, #0
 80055ec:	d033      	beq.n	8005656 <HAL_RCC_ClockConfig+0xfa>
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	689b      	ldr	r3, [r3, #8]
 80055f2:	2b00      	cmp	r3, #0
 80055f4:	d12f      	bne.n	8005656 <HAL_RCC_ClockConfig+0xfa>
 80055f6:	4b72      	ldr	r3, [pc, #456]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80055f8:	689b      	ldr	r3, [r3, #8]
 80055fa:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80055fe:	4a70      	ldr	r2, [pc, #448]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005600:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005604:	6093      	str	r3, [r2, #8]
 8005606:	2380      	movs	r3, #128	@ 0x80
 8005608:	617b      	str	r3, [r7, #20]
 800560a:	e024      	b.n	8005656 <HAL_RCC_ClockConfig+0xfa>
 800560c:	687b      	ldr	r3, [r7, #4]
 800560e:	685b      	ldr	r3, [r3, #4]
 8005610:	2b02      	cmp	r3, #2
 8005612:	d107      	bne.n	8005624 <HAL_RCC_ClockConfig+0xc8>
 8005614:	4b6a      	ldr	r3, [pc, #424]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005616:	681b      	ldr	r3, [r3, #0]
 8005618:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800561c:	2b00      	cmp	r3, #0
 800561e:	d109      	bne.n	8005634 <HAL_RCC_ClockConfig+0xd8>
 8005620:	2301      	movs	r3, #1
 8005622:	e0c6      	b.n	80057b2 <HAL_RCC_ClockConfig+0x256>
 8005624:	4b66      	ldr	r3, [pc, #408]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005626:	681b      	ldr	r3, [r3, #0]
 8005628:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800562c:	2b00      	cmp	r3, #0
 800562e:	d101      	bne.n	8005634 <HAL_RCC_ClockConfig+0xd8>
 8005630:	2301      	movs	r3, #1
 8005632:	e0be      	b.n	80057b2 <HAL_RCC_ClockConfig+0x256>
 8005634:	f000 f8ce 	bl	80057d4 <HAL_RCC_GetSysClockFreq>
 8005638:	6138      	str	r0, [r7, #16]
 800563a:	693b      	ldr	r3, [r7, #16]
 800563c:	4a61      	ldr	r2, [pc, #388]	@ (80057c4 <HAL_RCC_ClockConfig+0x268>)
 800563e:	4293      	cmp	r3, r2
 8005640:	d909      	bls.n	8005656 <HAL_RCC_ClockConfig+0xfa>
 8005642:	4b5f      	ldr	r3, [pc, #380]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005644:	689b      	ldr	r3, [r3, #8]
 8005646:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800564a:	4a5d      	ldr	r2, [pc, #372]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 800564c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005650:	6093      	str	r3, [r2, #8]
 8005652:	2380      	movs	r3, #128	@ 0x80
 8005654:	617b      	str	r3, [r7, #20]
 8005656:	4b5a      	ldr	r3, [pc, #360]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005658:	689b      	ldr	r3, [r3, #8]
 800565a:	f023 0203 	bic.w	r2, r3, #3
 800565e:	687b      	ldr	r3, [r7, #4]
 8005660:	685b      	ldr	r3, [r3, #4]
 8005662:	4957      	ldr	r1, [pc, #348]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005664:	4313      	orrs	r3, r2
 8005666:	608b      	str	r3, [r1, #8]
 8005668:	f7fc fd3c 	bl	80020e4 <HAL_GetTick>
 800566c:	60f8      	str	r0, [r7, #12]
 800566e:	e00a      	b.n	8005686 <HAL_RCC_ClockConfig+0x12a>
 8005670:	f7fc fd38 	bl	80020e4 <HAL_GetTick>
 8005674:	4602      	mov	r2, r0
 8005676:	68fb      	ldr	r3, [r7, #12]
 8005678:	1ad3      	subs	r3, r2, r3
 800567a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800567e:	4293      	cmp	r3, r2
 8005680:	d901      	bls.n	8005686 <HAL_RCC_ClockConfig+0x12a>
 8005682:	2303      	movs	r3, #3
 8005684:	e095      	b.n	80057b2 <HAL_RCC_ClockConfig+0x256>
 8005686:	4b4e      	ldr	r3, [pc, #312]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005688:	689b      	ldr	r3, [r3, #8]
 800568a:	f003 020c 	and.w	r2, r3, #12
 800568e:	687b      	ldr	r3, [r7, #4]
 8005690:	685b      	ldr	r3, [r3, #4]
 8005692:	009b      	lsls	r3, r3, #2
 8005694:	429a      	cmp	r2, r3
 8005696:	d1eb      	bne.n	8005670 <HAL_RCC_ClockConfig+0x114>
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	681b      	ldr	r3, [r3, #0]
 800569c:	f003 0302 	and.w	r3, r3, #2
 80056a0:	2b00      	cmp	r3, #0
 80056a2:	d023      	beq.n	80056ec <HAL_RCC_ClockConfig+0x190>
 80056a4:	687b      	ldr	r3, [r7, #4]
 80056a6:	681b      	ldr	r3, [r3, #0]
 80056a8:	f003 0304 	and.w	r3, r3, #4
 80056ac:	2b00      	cmp	r3, #0
 80056ae:	d005      	beq.n	80056bc <HAL_RCC_ClockConfig+0x160>
 80056b0:	4b43      	ldr	r3, [pc, #268]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80056b2:	689b      	ldr	r3, [r3, #8]
 80056b4:	4a42      	ldr	r2, [pc, #264]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80056b6:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80056ba:	6093      	str	r3, [r2, #8]
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	681b      	ldr	r3, [r3, #0]
 80056c0:	f003 0308 	and.w	r3, r3, #8
 80056c4:	2b00      	cmp	r3, #0
 80056c6:	d007      	beq.n	80056d8 <HAL_RCC_ClockConfig+0x17c>
 80056c8:	4b3d      	ldr	r3, [pc, #244]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80056ca:	689b      	ldr	r3, [r3, #8]
 80056cc:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 80056d0:	4a3b      	ldr	r2, [pc, #236]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80056d2:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80056d6:	6093      	str	r3, [r2, #8]
 80056d8:	4b39      	ldr	r3, [pc, #228]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80056da:	689b      	ldr	r3, [r3, #8]
 80056dc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80056e0:	687b      	ldr	r3, [r7, #4]
 80056e2:	689b      	ldr	r3, [r3, #8]
 80056e4:	4936      	ldr	r1, [pc, #216]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80056e6:	4313      	orrs	r3, r2
 80056e8:	608b      	str	r3, [r1, #8]
 80056ea:	e008      	b.n	80056fe <HAL_RCC_ClockConfig+0x1a2>
 80056ec:	697b      	ldr	r3, [r7, #20]
 80056ee:	2b80      	cmp	r3, #128	@ 0x80
 80056f0:	d105      	bne.n	80056fe <HAL_RCC_ClockConfig+0x1a2>
 80056f2:	4b33      	ldr	r3, [pc, #204]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80056f4:	689b      	ldr	r3, [r3, #8]
 80056f6:	4a32      	ldr	r2, [pc, #200]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 80056f8:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80056fc:	6093      	str	r3, [r2, #8]
 80056fe:	4b2f      	ldr	r3, [pc, #188]	@ (80057bc <HAL_RCC_ClockConfig+0x260>)
 8005700:	681b      	ldr	r3, [r3, #0]
 8005702:	f003 030f 	and.w	r3, r3, #15
 8005706:	683a      	ldr	r2, [r7, #0]
 8005708:	429a      	cmp	r2, r3
 800570a:	d21d      	bcs.n	8005748 <HAL_RCC_ClockConfig+0x1ec>
 800570c:	4b2b      	ldr	r3, [pc, #172]	@ (80057bc <HAL_RCC_ClockConfig+0x260>)
 800570e:	681b      	ldr	r3, [r3, #0]
 8005710:	f023 020f 	bic.w	r2, r3, #15
 8005714:	4929      	ldr	r1, [pc, #164]	@ (80057bc <HAL_RCC_ClockConfig+0x260>)
 8005716:	683b      	ldr	r3, [r7, #0]
 8005718:	4313      	orrs	r3, r2
 800571a:	600b      	str	r3, [r1, #0]
 800571c:	f7fc fce2 	bl	80020e4 <HAL_GetTick>
 8005720:	60f8      	str	r0, [r7, #12]
 8005722:	e00a      	b.n	800573a <HAL_RCC_ClockConfig+0x1de>
 8005724:	f7fc fcde 	bl	80020e4 <HAL_GetTick>
 8005728:	4602      	mov	r2, r0
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	1ad3      	subs	r3, r2, r3
 800572e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005732:	4293      	cmp	r3, r2
 8005734:	d901      	bls.n	800573a <HAL_RCC_ClockConfig+0x1de>
 8005736:	2303      	movs	r3, #3
 8005738:	e03b      	b.n	80057b2 <HAL_RCC_ClockConfig+0x256>
 800573a:	4b20      	ldr	r3, [pc, #128]	@ (80057bc <HAL_RCC_ClockConfig+0x260>)
 800573c:	681b      	ldr	r3, [r3, #0]
 800573e:	f003 030f 	and.w	r3, r3, #15
 8005742:	683a      	ldr	r2, [r7, #0]
 8005744:	429a      	cmp	r2, r3
 8005746:	d1ed      	bne.n	8005724 <HAL_RCC_ClockConfig+0x1c8>
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	f003 0304 	and.w	r3, r3, #4
 8005750:	2b00      	cmp	r3, #0
 8005752:	d008      	beq.n	8005766 <HAL_RCC_ClockConfig+0x20a>
 8005754:	4b1a      	ldr	r3, [pc, #104]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005756:	689b      	ldr	r3, [r3, #8]
 8005758:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800575c:	687b      	ldr	r3, [r7, #4]
 800575e:	68db      	ldr	r3, [r3, #12]
 8005760:	4917      	ldr	r1, [pc, #92]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005762:	4313      	orrs	r3, r2
 8005764:	608b      	str	r3, [r1, #8]
 8005766:	687b      	ldr	r3, [r7, #4]
 8005768:	681b      	ldr	r3, [r3, #0]
 800576a:	f003 0308 	and.w	r3, r3, #8
 800576e:	2b00      	cmp	r3, #0
 8005770:	d009      	beq.n	8005786 <HAL_RCC_ClockConfig+0x22a>
 8005772:	4b13      	ldr	r3, [pc, #76]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005774:	689b      	ldr	r3, [r3, #8]
 8005776:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 800577a:	687b      	ldr	r3, [r7, #4]
 800577c:	691b      	ldr	r3, [r3, #16]
 800577e:	00db      	lsls	r3, r3, #3
 8005780:	490f      	ldr	r1, [pc, #60]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 8005782:	4313      	orrs	r3, r2
 8005784:	608b      	str	r3, [r1, #8]
 8005786:	f000 f825 	bl	80057d4 <HAL_RCC_GetSysClockFreq>
 800578a:	4602      	mov	r2, r0
 800578c:	4b0c      	ldr	r3, [pc, #48]	@ (80057c0 <HAL_RCC_ClockConfig+0x264>)
 800578e:	689b      	ldr	r3, [r3, #8]
 8005790:	091b      	lsrs	r3, r3, #4
 8005792:	f003 030f 	and.w	r3, r3, #15
 8005796:	490c      	ldr	r1, [pc, #48]	@ (80057c8 <HAL_RCC_ClockConfig+0x26c>)
 8005798:	5ccb      	ldrb	r3, [r1, r3]
 800579a:	f003 031f 	and.w	r3, r3, #31
 800579e:	fa22 f303 	lsr.w	r3, r2, r3
 80057a2:	4a0a      	ldr	r2, [pc, #40]	@ (80057cc <HAL_RCC_ClockConfig+0x270>)
 80057a4:	6013      	str	r3, [r2, #0]
 80057a6:	4b0a      	ldr	r3, [pc, #40]	@ (80057d0 <HAL_RCC_ClockConfig+0x274>)
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	4618      	mov	r0, r3
 80057ac:	f7fc fc4e 	bl	800204c <HAL_InitTick>
 80057b0:	4603      	mov	r3, r0
 80057b2:	4618      	mov	r0, r3
 80057b4:	3718      	adds	r7, #24
 80057b6:	46bd      	mov	sp, r7
 80057b8:	bd80      	pop	{r7, pc}
 80057ba:	bf00      	nop
 80057bc:	40022000 	.word	0x40022000
 80057c0:	40021000 	.word	0x40021000
 80057c4:	04c4b400 	.word	0x04c4b400
 80057c8:	0800742c 	.word	0x0800742c
 80057cc:	20000000 	.word	0x20000000
 80057d0:	20000004 	.word	0x20000004

080057d4 <HAL_RCC_GetSysClockFreq>:
 80057d4:	b480      	push	{r7}
 80057d6:	b087      	sub	sp, #28
 80057d8:	af00      	add	r7, sp, #0
 80057da:	4b2c      	ldr	r3, [pc, #176]	@ (800588c <HAL_RCC_GetSysClockFreq+0xb8>)
 80057dc:	689b      	ldr	r3, [r3, #8]
 80057de:	f003 030c 	and.w	r3, r3, #12
 80057e2:	2b04      	cmp	r3, #4
 80057e4:	d102      	bne.n	80057ec <HAL_RCC_GetSysClockFreq+0x18>
 80057e6:	4b2a      	ldr	r3, [pc, #168]	@ (8005890 <HAL_RCC_GetSysClockFreq+0xbc>)
 80057e8:	613b      	str	r3, [r7, #16]
 80057ea:	e047      	b.n	800587c <HAL_RCC_GetSysClockFreq+0xa8>
 80057ec:	4b27      	ldr	r3, [pc, #156]	@ (800588c <HAL_RCC_GetSysClockFreq+0xb8>)
 80057ee:	689b      	ldr	r3, [r3, #8]
 80057f0:	f003 030c 	and.w	r3, r3, #12
 80057f4:	2b08      	cmp	r3, #8
 80057f6:	d102      	bne.n	80057fe <HAL_RCC_GetSysClockFreq+0x2a>
 80057f8:	4b26      	ldr	r3, [pc, #152]	@ (8005894 <HAL_RCC_GetSysClockFreq+0xc0>)
 80057fa:	613b      	str	r3, [r7, #16]
 80057fc:	e03e      	b.n	800587c <HAL_RCC_GetSysClockFreq+0xa8>
 80057fe:	4b23      	ldr	r3, [pc, #140]	@ (800588c <HAL_RCC_GetSysClockFreq+0xb8>)
 8005800:	689b      	ldr	r3, [r3, #8]
 8005802:	f003 030c 	and.w	r3, r3, #12
 8005806:	2b0c      	cmp	r3, #12
 8005808:	d136      	bne.n	8005878 <HAL_RCC_GetSysClockFreq+0xa4>
 800580a:	4b20      	ldr	r3, [pc, #128]	@ (800588c <HAL_RCC_GetSysClockFreq+0xb8>)
 800580c:	68db      	ldr	r3, [r3, #12]
 800580e:	f003 0303 	and.w	r3, r3, #3
 8005812:	60fb      	str	r3, [r7, #12]
 8005814:	4b1d      	ldr	r3, [pc, #116]	@ (800588c <HAL_RCC_GetSysClockFreq+0xb8>)
 8005816:	68db      	ldr	r3, [r3, #12]
 8005818:	091b      	lsrs	r3, r3, #4
 800581a:	f003 030f 	and.w	r3, r3, #15
 800581e:	3301      	adds	r3, #1
 8005820:	60bb      	str	r3, [r7, #8]
 8005822:	68fb      	ldr	r3, [r7, #12]
 8005824:	2b03      	cmp	r3, #3
 8005826:	d10c      	bne.n	8005842 <HAL_RCC_GetSysClockFreq+0x6e>
 8005828:	4a1a      	ldr	r2, [pc, #104]	@ (8005894 <HAL_RCC_GetSysClockFreq+0xc0>)
 800582a:	68bb      	ldr	r3, [r7, #8]
 800582c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005830:	4a16      	ldr	r2, [pc, #88]	@ (800588c <HAL_RCC_GetSysClockFreq+0xb8>)
 8005832:	68d2      	ldr	r2, [r2, #12]
 8005834:	0a12      	lsrs	r2, r2, #8
 8005836:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800583a:	fb02 f303 	mul.w	r3, r2, r3
 800583e:	617b      	str	r3, [r7, #20]
 8005840:	e00c      	b.n	800585c <HAL_RCC_GetSysClockFreq+0x88>
 8005842:	4a13      	ldr	r2, [pc, #76]	@ (8005890 <HAL_RCC_GetSysClockFreq+0xbc>)
 8005844:	68bb      	ldr	r3, [r7, #8]
 8005846:	fbb2 f3f3 	udiv	r3, r2, r3
 800584a:	4a10      	ldr	r2, [pc, #64]	@ (800588c <HAL_RCC_GetSysClockFreq+0xb8>)
 800584c:	68d2      	ldr	r2, [r2, #12]
 800584e:	0a12      	lsrs	r2, r2, #8
 8005850:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8005854:	fb02 f303 	mul.w	r3, r2, r3
 8005858:	617b      	str	r3, [r7, #20]
 800585a:	bf00      	nop
 800585c:	4b0b      	ldr	r3, [pc, #44]	@ (800588c <HAL_RCC_GetSysClockFreq+0xb8>)
 800585e:	68db      	ldr	r3, [r3, #12]
 8005860:	0e5b      	lsrs	r3, r3, #25
 8005862:	f003 0303 	and.w	r3, r3, #3
 8005866:	3301      	adds	r3, #1
 8005868:	005b      	lsls	r3, r3, #1
 800586a:	607b      	str	r3, [r7, #4]
 800586c:	697a      	ldr	r2, [r7, #20]
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	fbb2 f3f3 	udiv	r3, r2, r3
 8005874:	613b      	str	r3, [r7, #16]
 8005876:	e001      	b.n	800587c <HAL_RCC_GetSysClockFreq+0xa8>
 8005878:	2300      	movs	r3, #0
 800587a:	613b      	str	r3, [r7, #16]
 800587c:	693b      	ldr	r3, [r7, #16]
 800587e:	4618      	mov	r0, r3
 8005880:	371c      	adds	r7, #28
 8005882:	46bd      	mov	sp, r7
 8005884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005888:	4770      	bx	lr
 800588a:	bf00      	nop
 800588c:	40021000 	.word	0x40021000
 8005890:	00f42400 	.word	0x00f42400
 8005894:	007a1200 	.word	0x007a1200

08005898 <RCC_GetSysClockFreqFromPLLSource>:
 8005898:	b480      	push	{r7}
 800589a:	b087      	sub	sp, #28
 800589c:	af00      	add	r7, sp, #0
 800589e:	4b1e      	ldr	r3, [pc, #120]	@ (8005918 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80058a0:	68db      	ldr	r3, [r3, #12]
 80058a2:	f003 0303 	and.w	r3, r3, #3
 80058a6:	613b      	str	r3, [r7, #16]
 80058a8:	4b1b      	ldr	r3, [pc, #108]	@ (8005918 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80058aa:	68db      	ldr	r3, [r3, #12]
 80058ac:	091b      	lsrs	r3, r3, #4
 80058ae:	f003 030f 	and.w	r3, r3, #15
 80058b2:	3301      	adds	r3, #1
 80058b4:	60fb      	str	r3, [r7, #12]
 80058b6:	693b      	ldr	r3, [r7, #16]
 80058b8:	2b03      	cmp	r3, #3
 80058ba:	d10c      	bne.n	80058d6 <RCC_GetSysClockFreqFromPLLSource+0x3e>
 80058bc:	4a17      	ldr	r2, [pc, #92]	@ (800591c <RCC_GetSysClockFreqFromPLLSource+0x84>)
 80058be:	68fb      	ldr	r3, [r7, #12]
 80058c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80058c4:	4a14      	ldr	r2, [pc, #80]	@ (8005918 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80058c6:	68d2      	ldr	r2, [r2, #12]
 80058c8:	0a12      	lsrs	r2, r2, #8
 80058ca:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80058ce:	fb02 f303 	mul.w	r3, r2, r3
 80058d2:	617b      	str	r3, [r7, #20]
 80058d4:	e00c      	b.n	80058f0 <RCC_GetSysClockFreqFromPLLSource+0x58>
 80058d6:	4a12      	ldr	r2, [pc, #72]	@ (8005920 <RCC_GetSysClockFreqFromPLLSource+0x88>)
 80058d8:	68fb      	ldr	r3, [r7, #12]
 80058da:	fbb2 f3f3 	udiv	r3, r2, r3
 80058de:	4a0e      	ldr	r2, [pc, #56]	@ (8005918 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80058e0:	68d2      	ldr	r2, [r2, #12]
 80058e2:	0a12      	lsrs	r2, r2, #8
 80058e4:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80058e8:	fb02 f303 	mul.w	r3, r2, r3
 80058ec:	617b      	str	r3, [r7, #20]
 80058ee:	bf00      	nop
 80058f0:	4b09      	ldr	r3, [pc, #36]	@ (8005918 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80058f2:	68db      	ldr	r3, [r3, #12]
 80058f4:	0e5b      	lsrs	r3, r3, #25
 80058f6:	f003 0303 	and.w	r3, r3, #3
 80058fa:	3301      	adds	r3, #1
 80058fc:	005b      	lsls	r3, r3, #1
 80058fe:	60bb      	str	r3, [r7, #8]
 8005900:	697a      	ldr	r2, [r7, #20]
 8005902:	68bb      	ldr	r3, [r7, #8]
 8005904:	fbb2 f3f3 	udiv	r3, r2, r3
 8005908:	607b      	str	r3, [r7, #4]
 800590a:	687b      	ldr	r3, [r7, #4]
 800590c:	4618      	mov	r0, r3
 800590e:	371c      	adds	r7, #28
 8005910:	46bd      	mov	sp, r7
 8005912:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005916:	4770      	bx	lr
 8005918:	40021000 	.word	0x40021000
 800591c:	007a1200 	.word	0x007a1200
 8005920:	00f42400 	.word	0x00f42400

08005924 <HAL_RCCEx_PeriphCLKConfig>:
 8005924:	b580      	push	{r7, lr}
 8005926:	b086      	sub	sp, #24
 8005928:	af00      	add	r7, sp, #0
 800592a:	6078      	str	r0, [r7, #4]
 800592c:	2300      	movs	r3, #0
 800592e:	74fb      	strb	r3, [r7, #19]
 8005930:	2300      	movs	r3, #0
 8005932:	74bb      	strb	r3, [r7, #18]
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800593c:	2b00      	cmp	r3, #0
 800593e:	f000 8098 	beq.w	8005a72 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8005942:	2300      	movs	r3, #0
 8005944:	747b      	strb	r3, [r7, #17]
 8005946:	4b43      	ldr	r3, [pc, #268]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005948:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800594a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800594e:	2b00      	cmp	r3, #0
 8005950:	d10d      	bne.n	800596e <HAL_RCCEx_PeriphCLKConfig+0x4a>
 8005952:	4b40      	ldr	r3, [pc, #256]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005954:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005956:	4a3f      	ldr	r2, [pc, #252]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005958:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800595c:	6593      	str	r3, [r2, #88]	@ 0x58
 800595e:	4b3d      	ldr	r3, [pc, #244]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005960:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005962:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005966:	60bb      	str	r3, [r7, #8]
 8005968:	68bb      	ldr	r3, [r7, #8]
 800596a:	2301      	movs	r3, #1
 800596c:	747b      	strb	r3, [r7, #17]
 800596e:	4b3a      	ldr	r3, [pc, #232]	@ (8005a58 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8005970:	681b      	ldr	r3, [r3, #0]
 8005972:	4a39      	ldr	r2, [pc, #228]	@ (8005a58 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8005974:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005978:	6013      	str	r3, [r2, #0]
 800597a:	f7fc fbb3 	bl	80020e4 <HAL_GetTick>
 800597e:	60f8      	str	r0, [r7, #12]
 8005980:	e009      	b.n	8005996 <HAL_RCCEx_PeriphCLKConfig+0x72>
 8005982:	f7fc fbaf 	bl	80020e4 <HAL_GetTick>
 8005986:	4602      	mov	r2, r0
 8005988:	68fb      	ldr	r3, [r7, #12]
 800598a:	1ad3      	subs	r3, r2, r3
 800598c:	2b02      	cmp	r3, #2
 800598e:	d902      	bls.n	8005996 <HAL_RCCEx_PeriphCLKConfig+0x72>
 8005990:	2303      	movs	r3, #3
 8005992:	74fb      	strb	r3, [r7, #19]
 8005994:	e005      	b.n	80059a2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8005996:	4b30      	ldr	r3, [pc, #192]	@ (8005a58 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8005998:	681b      	ldr	r3, [r3, #0]
 800599a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800599e:	2b00      	cmp	r3, #0
 80059a0:	d0ef      	beq.n	8005982 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 80059a2:	7cfb      	ldrb	r3, [r7, #19]
 80059a4:	2b00      	cmp	r3, #0
 80059a6:	d159      	bne.n	8005a5c <HAL_RCCEx_PeriphCLKConfig+0x138>
 80059a8:	4b2a      	ldr	r3, [pc, #168]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80059aa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80059ae:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80059b2:	617b      	str	r3, [r7, #20]
 80059b4:	697b      	ldr	r3, [r7, #20]
 80059b6:	2b00      	cmp	r3, #0
 80059b8:	d01e      	beq.n	80059f8 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80059be:	697a      	ldr	r2, [r7, #20]
 80059c0:	429a      	cmp	r2, r3
 80059c2:	d019      	beq.n	80059f8 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80059c4:	4b23      	ldr	r3, [pc, #140]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80059c6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80059ca:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80059ce:	617b      	str	r3, [r7, #20]
 80059d0:	4b20      	ldr	r3, [pc, #128]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80059d2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80059d6:	4a1f      	ldr	r2, [pc, #124]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80059d8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80059dc:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80059e0:	4b1c      	ldr	r3, [pc, #112]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80059e2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80059e6:	4a1b      	ldr	r2, [pc, #108]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80059e8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80059ec:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80059f0:	4a18      	ldr	r2, [pc, #96]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80059f2:	697b      	ldr	r3, [r7, #20]
 80059f4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80059f8:	697b      	ldr	r3, [r7, #20]
 80059fa:	f003 0301 	and.w	r3, r3, #1
 80059fe:	2b00      	cmp	r3, #0
 8005a00:	d016      	beq.n	8005a30 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8005a02:	f7fc fb6f 	bl	80020e4 <HAL_GetTick>
 8005a06:	60f8      	str	r0, [r7, #12]
 8005a08:	e00b      	b.n	8005a22 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8005a0a:	f7fc fb6b 	bl	80020e4 <HAL_GetTick>
 8005a0e:	4602      	mov	r2, r0
 8005a10:	68fb      	ldr	r3, [r7, #12]
 8005a12:	1ad3      	subs	r3, r2, r3
 8005a14:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005a18:	4293      	cmp	r3, r2
 8005a1a:	d902      	bls.n	8005a22 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8005a1c:	2303      	movs	r3, #3
 8005a1e:	74fb      	strb	r3, [r7, #19]
 8005a20:	e006      	b.n	8005a30 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8005a22:	4b0c      	ldr	r3, [pc, #48]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005a24:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005a28:	f003 0302 	and.w	r3, r3, #2
 8005a2c:	2b00      	cmp	r3, #0
 8005a2e:	d0ec      	beq.n	8005a0a <HAL_RCCEx_PeriphCLKConfig+0xe6>
 8005a30:	7cfb      	ldrb	r3, [r7, #19]
 8005a32:	2b00      	cmp	r3, #0
 8005a34:	d10b      	bne.n	8005a4e <HAL_RCCEx_PeriphCLKConfig+0x12a>
 8005a36:	4b07      	ldr	r3, [pc, #28]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005a38:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005a3c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005a40:	687b      	ldr	r3, [r7, #4]
 8005a42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005a44:	4903      	ldr	r1, [pc, #12]	@ (8005a54 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005a46:	4313      	orrs	r3, r2
 8005a48:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8005a4c:	e008      	b.n	8005a60 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8005a4e:	7cfb      	ldrb	r3, [r7, #19]
 8005a50:	74bb      	strb	r3, [r7, #18]
 8005a52:	e005      	b.n	8005a60 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8005a54:	40021000 	.word	0x40021000
 8005a58:	40007000 	.word	0x40007000
 8005a5c:	7cfb      	ldrb	r3, [r7, #19]
 8005a5e:	74bb      	strb	r3, [r7, #18]
 8005a60:	7c7b      	ldrb	r3, [r7, #17]
 8005a62:	2b01      	cmp	r3, #1
 8005a64:	d105      	bne.n	8005a72 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8005a66:	4ba6      	ldr	r3, [pc, #664]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a68:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005a6a:	4aa5      	ldr	r2, [pc, #660]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a6c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005a70:	6593      	str	r3, [r2, #88]	@ 0x58
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	f003 0301 	and.w	r3, r3, #1
 8005a7a:	2b00      	cmp	r3, #0
 8005a7c:	d00a      	beq.n	8005a94 <HAL_RCCEx_PeriphCLKConfig+0x170>
 8005a7e:	4ba0      	ldr	r3, [pc, #640]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a80:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005a84:	f023 0203 	bic.w	r2, r3, #3
 8005a88:	687b      	ldr	r3, [r7, #4]
 8005a8a:	685b      	ldr	r3, [r3, #4]
 8005a8c:	499c      	ldr	r1, [pc, #624]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005a8e:	4313      	orrs	r3, r2
 8005a90:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	681b      	ldr	r3, [r3, #0]
 8005a98:	f003 0302 	and.w	r3, r3, #2
 8005a9c:	2b00      	cmp	r3, #0
 8005a9e:	d00a      	beq.n	8005ab6 <HAL_RCCEx_PeriphCLKConfig+0x192>
 8005aa0:	4b97      	ldr	r3, [pc, #604]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005aa2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005aa6:	f023 020c 	bic.w	r2, r3, #12
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	689b      	ldr	r3, [r3, #8]
 8005aae:	4994      	ldr	r1, [pc, #592]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005ab0:	4313      	orrs	r3, r2
 8005ab2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	681b      	ldr	r3, [r3, #0]
 8005aba:	f003 0304 	and.w	r3, r3, #4
 8005abe:	2b00      	cmp	r3, #0
 8005ac0:	d00a      	beq.n	8005ad8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8005ac2:	4b8f      	ldr	r3, [pc, #572]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005ac4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005ac8:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	68db      	ldr	r3, [r3, #12]
 8005ad0:	498b      	ldr	r1, [pc, #556]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005ad2:	4313      	orrs	r3, r2
 8005ad4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	681b      	ldr	r3, [r3, #0]
 8005adc:	f003 0308 	and.w	r3, r3, #8
 8005ae0:	2b00      	cmp	r3, #0
 8005ae2:	d00a      	beq.n	8005afa <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 8005ae4:	4b86      	ldr	r3, [pc, #536]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005ae6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005aea:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	691b      	ldr	r3, [r3, #16]
 8005af2:	4983      	ldr	r1, [pc, #524]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005af4:	4313      	orrs	r3, r2
 8005af6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005afa:	687b      	ldr	r3, [r7, #4]
 8005afc:	681b      	ldr	r3, [r3, #0]
 8005afe:	f003 0320 	and.w	r3, r3, #32
 8005b02:	2b00      	cmp	r3, #0
 8005b04:	d00a      	beq.n	8005b1c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8005b06:	4b7e      	ldr	r3, [pc, #504]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b08:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005b0c:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	695b      	ldr	r3, [r3, #20]
 8005b14:	497a      	ldr	r1, [pc, #488]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b16:	4313      	orrs	r3, r2
 8005b18:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005b1c:	687b      	ldr	r3, [r7, #4]
 8005b1e:	681b      	ldr	r3, [r3, #0]
 8005b20:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005b24:	2b00      	cmp	r3, #0
 8005b26:	d00a      	beq.n	8005b3e <HAL_RCCEx_PeriphCLKConfig+0x21a>
 8005b28:	4b75      	ldr	r3, [pc, #468]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b2a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005b2e:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	699b      	ldr	r3, [r3, #24]
 8005b36:	4972      	ldr	r1, [pc, #456]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b38:	4313      	orrs	r3, r2
 8005b3a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005b3e:	687b      	ldr	r3, [r7, #4]
 8005b40:	681b      	ldr	r3, [r3, #0]
 8005b42:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005b46:	2b00      	cmp	r3, #0
 8005b48:	d00a      	beq.n	8005b60 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8005b4a:	4b6d      	ldr	r3, [pc, #436]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b4c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005b50:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8005b54:	687b      	ldr	r3, [r7, #4]
 8005b56:	69db      	ldr	r3, [r3, #28]
 8005b58:	4969      	ldr	r1, [pc, #420]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b5a:	4313      	orrs	r3, r2
 8005b5c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	681b      	ldr	r3, [r3, #0]
 8005b64:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005b68:	2b00      	cmp	r3, #0
 8005b6a:	d00a      	beq.n	8005b82 <HAL_RCCEx_PeriphCLKConfig+0x25e>
 8005b6c:	4b64      	ldr	r3, [pc, #400]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b6e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005b72:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	6a1b      	ldr	r3, [r3, #32]
 8005b7a:	4961      	ldr	r1, [pc, #388]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b7c:	4313      	orrs	r3, r2
 8005b7e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005b82:	687b      	ldr	r3, [r7, #4]
 8005b84:	681b      	ldr	r3, [r3, #0]
 8005b86:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	d00a      	beq.n	8005ba4 <HAL_RCCEx_PeriphCLKConfig+0x280>
 8005b8e:	4b5c      	ldr	r3, [pc, #368]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b90:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005b94:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005b9c:	4958      	ldr	r1, [pc, #352]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005b9e:	4313      	orrs	r3, r2
 8005ba0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005ba4:	687b      	ldr	r3, [r7, #4]
 8005ba6:	681b      	ldr	r3, [r3, #0]
 8005ba8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005bac:	2b00      	cmp	r3, #0
 8005bae:	d015      	beq.n	8005bdc <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8005bb0:	4b53      	ldr	r3, [pc, #332]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bb2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005bb6:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005bbe:	4950      	ldr	r1, [pc, #320]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bc0:	4313      	orrs	r3, r2
 8005bc2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005bc6:	687b      	ldr	r3, [r7, #4]
 8005bc8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005bca:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8005bce:	d105      	bne.n	8005bdc <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8005bd0:	4b4b      	ldr	r3, [pc, #300]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bd2:	68db      	ldr	r3, [r3, #12]
 8005bd4:	4a4a      	ldr	r2, [pc, #296]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bd6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005bda:	60d3      	str	r3, [r2, #12]
 8005bdc:	687b      	ldr	r3, [r7, #4]
 8005bde:	681b      	ldr	r3, [r3, #0]
 8005be0:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005be4:	2b00      	cmp	r3, #0
 8005be6:	d015      	beq.n	8005c14 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 8005be8:	4b45      	ldr	r3, [pc, #276]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005bee:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8005bf2:	687b      	ldr	r3, [r7, #4]
 8005bf4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005bf6:	4942      	ldr	r1, [pc, #264]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005bf8:	4313      	orrs	r3, r2
 8005bfa:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005c02:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005c06:	d105      	bne.n	8005c14 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 8005c08:	4b3d      	ldr	r3, [pc, #244]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c0a:	68db      	ldr	r3, [r3, #12]
 8005c0c:	4a3c      	ldr	r2, [pc, #240]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c0e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005c12:	60d3      	str	r3, [r2, #12]
 8005c14:	687b      	ldr	r3, [r7, #4]
 8005c16:	681b      	ldr	r3, [r3, #0]
 8005c18:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8005c1c:	2b00      	cmp	r3, #0
 8005c1e:	d015      	beq.n	8005c4c <HAL_RCCEx_PeriphCLKConfig+0x328>
 8005c20:	4b37      	ldr	r3, [pc, #220]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c22:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005c26:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8005c2a:	687b      	ldr	r3, [r7, #4]
 8005c2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c2e:	4934      	ldr	r1, [pc, #208]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c30:	4313      	orrs	r3, r2
 8005c32:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c3a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8005c3e:	d105      	bne.n	8005c4c <HAL_RCCEx_PeriphCLKConfig+0x328>
 8005c40:	4b2f      	ldr	r3, [pc, #188]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c42:	68db      	ldr	r3, [r3, #12]
 8005c44:	4a2e      	ldr	r2, [pc, #184]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c46:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005c4a:	60d3      	str	r3, [r2, #12]
 8005c4c:	687b      	ldr	r3, [r7, #4]
 8005c4e:	681b      	ldr	r3, [r3, #0]
 8005c50:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8005c54:	2b00      	cmp	r3, #0
 8005c56:	d015      	beq.n	8005c84 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8005c58:	4b29      	ldr	r3, [pc, #164]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c5a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005c5e:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005c66:	4926      	ldr	r1, [pc, #152]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c68:	4313      	orrs	r3, r2
 8005c6a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005c6e:	687b      	ldr	r3, [r7, #4]
 8005c70:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005c72:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8005c76:	d105      	bne.n	8005c84 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8005c78:	4b21      	ldr	r3, [pc, #132]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c7a:	68db      	ldr	r3, [r3, #12]
 8005c7c:	4a20      	ldr	r2, [pc, #128]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c7e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005c82:	60d3      	str	r3, [r2, #12]
 8005c84:	687b      	ldr	r3, [r7, #4]
 8005c86:	681b      	ldr	r3, [r3, #0]
 8005c88:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d015      	beq.n	8005cbc <HAL_RCCEx_PeriphCLKConfig+0x398>
 8005c90:	4b1b      	ldr	r3, [pc, #108]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005c92:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005c96:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8005c9a:	687b      	ldr	r3, [r7, #4]
 8005c9c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005c9e:	4918      	ldr	r1, [pc, #96]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005ca0:	4313      	orrs	r3, r2
 8005ca2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005ca6:	687b      	ldr	r3, [r7, #4]
 8005ca8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005caa:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8005cae:	d105      	bne.n	8005cbc <HAL_RCCEx_PeriphCLKConfig+0x398>
 8005cb0:	4b13      	ldr	r3, [pc, #76]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005cb2:	68db      	ldr	r3, [r3, #12]
 8005cb4:	4a12      	ldr	r2, [pc, #72]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005cb6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005cba:	60d3      	str	r3, [r2, #12]
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	681b      	ldr	r3, [r3, #0]
 8005cc0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8005cc4:	2b00      	cmp	r3, #0
 8005cc6:	d015      	beq.n	8005cf4 <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8005cc8:	4b0d      	ldr	r3, [pc, #52]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005cca:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005cce:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 8005cd2:	687b      	ldr	r3, [r7, #4]
 8005cd4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005cd6:	490a      	ldr	r1, [pc, #40]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005cd8:	4313      	orrs	r3, r2
 8005cda:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005cde:	687b      	ldr	r3, [r7, #4]
 8005ce0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005ce2:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005ce6:	d105      	bne.n	8005cf4 <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8005ce8:	4b05      	ldr	r3, [pc, #20]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005cea:	68db      	ldr	r3, [r3, #12]
 8005cec:	4a04      	ldr	r2, [pc, #16]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005cee:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005cf2:	60d3      	str	r3, [r2, #12]
 8005cf4:	7cbb      	ldrb	r3, [r7, #18]
 8005cf6:	4618      	mov	r0, r3
 8005cf8:	3718      	adds	r7, #24
 8005cfa:	46bd      	mov	sp, r7
 8005cfc:	bd80      	pop	{r7, pc}
 8005cfe:	bf00      	nop
 8005d00:	40021000 	.word	0x40021000

08005d04 <HAL_TIM_Base_Init>:
 8005d04:	b580      	push	{r7, lr}
 8005d06:	b082      	sub	sp, #8
 8005d08:	af00      	add	r7, sp, #0
 8005d0a:	6078      	str	r0, [r7, #4]
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	2b00      	cmp	r3, #0
 8005d10:	d101      	bne.n	8005d16 <HAL_TIM_Base_Init+0x12>
 8005d12:	2301      	movs	r3, #1
 8005d14:	e049      	b.n	8005daa <HAL_TIM_Base_Init+0xa6>
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005d1c:	b2db      	uxtb	r3, r3
 8005d1e:	2b00      	cmp	r3, #0
 8005d20:	d106      	bne.n	8005d30 <HAL_TIM_Base_Init+0x2c>
 8005d22:	687b      	ldr	r3, [r7, #4]
 8005d24:	2200      	movs	r2, #0
 8005d26:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005d2a:	6878      	ldr	r0, [r7, #4]
 8005d2c:	f7fb ffa0 	bl	8001c70 <HAL_TIM_Base_MspInit>
 8005d30:	687b      	ldr	r3, [r7, #4]
 8005d32:	2202      	movs	r2, #2
 8005d34:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	681a      	ldr	r2, [r3, #0]
 8005d3c:	687b      	ldr	r3, [r7, #4]
 8005d3e:	3304      	adds	r3, #4
 8005d40:	4619      	mov	r1, r3
 8005d42:	4610      	mov	r0, r2
 8005d44:	f000 fd92 	bl	800686c <TIM_Base_SetConfig>
 8005d48:	687b      	ldr	r3, [r7, #4]
 8005d4a:	2201      	movs	r2, #1
 8005d4c:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	2201      	movs	r2, #1
 8005d54:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	2201      	movs	r2, #1
 8005d5c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005d60:	687b      	ldr	r3, [r7, #4]
 8005d62:	2201      	movs	r2, #1
 8005d64:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005d68:	687b      	ldr	r3, [r7, #4]
 8005d6a:	2201      	movs	r2, #1
 8005d6c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	2201      	movs	r2, #1
 8005d74:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	2201      	movs	r2, #1
 8005d7c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	2201      	movs	r2, #1
 8005d84:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	2201      	movs	r2, #1
 8005d8c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	2201      	movs	r2, #1
 8005d94:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005d98:	687b      	ldr	r3, [r7, #4]
 8005d9a:	2201      	movs	r2, #1
 8005d9c:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8005da0:	687b      	ldr	r3, [r7, #4]
 8005da2:	2201      	movs	r2, #1
 8005da4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005da8:	2300      	movs	r3, #0
 8005daa:	4618      	mov	r0, r3
 8005dac:	3708      	adds	r7, #8
 8005dae:	46bd      	mov	sp, r7
 8005db0:	bd80      	pop	{r7, pc}
	...

08005db4 <HAL_TIM_Base_Start_IT>:
 8005db4:	b480      	push	{r7}
 8005db6:	b085      	sub	sp, #20
 8005db8:	af00      	add	r7, sp, #0
 8005dba:	6078      	str	r0, [r7, #4]
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005dc2:	b2db      	uxtb	r3, r3
 8005dc4:	2b01      	cmp	r3, #1
 8005dc6:	d001      	beq.n	8005dcc <HAL_TIM_Base_Start_IT+0x18>
 8005dc8:	2301      	movs	r3, #1
 8005dca:	e04a      	b.n	8005e62 <HAL_TIM_Base_Start_IT+0xae>
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	2202      	movs	r2, #2
 8005dd0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	68da      	ldr	r2, [r3, #12]
 8005dda:	687b      	ldr	r3, [r7, #4]
 8005ddc:	681b      	ldr	r3, [r3, #0]
 8005dde:	f042 0201 	orr.w	r2, r2, #1
 8005de2:	60da      	str	r2, [r3, #12]
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	681b      	ldr	r3, [r3, #0]
 8005de8:	4a21      	ldr	r2, [pc, #132]	@ (8005e70 <HAL_TIM_Base_Start_IT+0xbc>)
 8005dea:	4293      	cmp	r3, r2
 8005dec:	d018      	beq.n	8005e20 <HAL_TIM_Base_Start_IT+0x6c>
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	681b      	ldr	r3, [r3, #0]
 8005df2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005df6:	d013      	beq.n	8005e20 <HAL_TIM_Base_Start_IT+0x6c>
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	681b      	ldr	r3, [r3, #0]
 8005dfc:	4a1d      	ldr	r2, [pc, #116]	@ (8005e74 <HAL_TIM_Base_Start_IT+0xc0>)
 8005dfe:	4293      	cmp	r3, r2
 8005e00:	d00e      	beq.n	8005e20 <HAL_TIM_Base_Start_IT+0x6c>
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	4a1c      	ldr	r2, [pc, #112]	@ (8005e78 <HAL_TIM_Base_Start_IT+0xc4>)
 8005e08:	4293      	cmp	r3, r2
 8005e0a:	d009      	beq.n	8005e20 <HAL_TIM_Base_Start_IT+0x6c>
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	681b      	ldr	r3, [r3, #0]
 8005e10:	4a1a      	ldr	r2, [pc, #104]	@ (8005e7c <HAL_TIM_Base_Start_IT+0xc8>)
 8005e12:	4293      	cmp	r3, r2
 8005e14:	d004      	beq.n	8005e20 <HAL_TIM_Base_Start_IT+0x6c>
 8005e16:	687b      	ldr	r3, [r7, #4]
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	4a19      	ldr	r2, [pc, #100]	@ (8005e80 <HAL_TIM_Base_Start_IT+0xcc>)
 8005e1c:	4293      	cmp	r3, r2
 8005e1e:	d115      	bne.n	8005e4c <HAL_TIM_Base_Start_IT+0x98>
 8005e20:	687b      	ldr	r3, [r7, #4]
 8005e22:	681b      	ldr	r3, [r3, #0]
 8005e24:	689a      	ldr	r2, [r3, #8]
 8005e26:	4b17      	ldr	r3, [pc, #92]	@ (8005e84 <HAL_TIM_Base_Start_IT+0xd0>)
 8005e28:	4013      	ands	r3, r2
 8005e2a:	60fb      	str	r3, [r7, #12]
 8005e2c:	68fb      	ldr	r3, [r7, #12]
 8005e2e:	2b06      	cmp	r3, #6
 8005e30:	d015      	beq.n	8005e5e <HAL_TIM_Base_Start_IT+0xaa>
 8005e32:	68fb      	ldr	r3, [r7, #12]
 8005e34:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005e38:	d011      	beq.n	8005e5e <HAL_TIM_Base_Start_IT+0xaa>
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	681b      	ldr	r3, [r3, #0]
 8005e3e:	681a      	ldr	r2, [r3, #0]
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	681b      	ldr	r3, [r3, #0]
 8005e44:	f042 0201 	orr.w	r2, r2, #1
 8005e48:	601a      	str	r2, [r3, #0]
 8005e4a:	e008      	b.n	8005e5e <HAL_TIM_Base_Start_IT+0xaa>
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	681a      	ldr	r2, [r3, #0]
 8005e52:	687b      	ldr	r3, [r7, #4]
 8005e54:	681b      	ldr	r3, [r3, #0]
 8005e56:	f042 0201 	orr.w	r2, r2, #1
 8005e5a:	601a      	str	r2, [r3, #0]
 8005e5c:	e000      	b.n	8005e60 <HAL_TIM_Base_Start_IT+0xac>
 8005e5e:	bf00      	nop
 8005e60:	2300      	movs	r3, #0
 8005e62:	4618      	mov	r0, r3
 8005e64:	3714      	adds	r7, #20
 8005e66:	46bd      	mov	sp, r7
 8005e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e6c:	4770      	bx	lr
 8005e6e:	bf00      	nop
 8005e70:	40012c00 	.word	0x40012c00
 8005e74:	40000400 	.word	0x40000400
 8005e78:	40000800 	.word	0x40000800
 8005e7c:	40013400 	.word	0x40013400
 8005e80:	40014000 	.word	0x40014000
 8005e84:	00010007 	.word	0x00010007

08005e88 <HAL_TIM_PWM_Init>:
 8005e88:	b580      	push	{r7, lr}
 8005e8a:	b082      	sub	sp, #8
 8005e8c:	af00      	add	r7, sp, #0
 8005e8e:	6078      	str	r0, [r7, #4]
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	2b00      	cmp	r3, #0
 8005e94:	d101      	bne.n	8005e9a <HAL_TIM_PWM_Init+0x12>
 8005e96:	2301      	movs	r3, #1
 8005e98:	e049      	b.n	8005f2e <HAL_TIM_PWM_Init+0xa6>
 8005e9a:	687b      	ldr	r3, [r7, #4]
 8005e9c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005ea0:	b2db      	uxtb	r3, r3
 8005ea2:	2b00      	cmp	r3, #0
 8005ea4:	d106      	bne.n	8005eb4 <HAL_TIM_PWM_Init+0x2c>
 8005ea6:	687b      	ldr	r3, [r7, #4]
 8005ea8:	2200      	movs	r2, #0
 8005eaa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005eae:	6878      	ldr	r0, [r7, #4]
 8005eb0:	f000 f841 	bl	8005f36 <HAL_TIM_PWM_MspInit>
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	2202      	movs	r2, #2
 8005eb8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005ebc:	687b      	ldr	r3, [r7, #4]
 8005ebe:	681a      	ldr	r2, [r3, #0]
 8005ec0:	687b      	ldr	r3, [r7, #4]
 8005ec2:	3304      	adds	r3, #4
 8005ec4:	4619      	mov	r1, r3
 8005ec6:	4610      	mov	r0, r2
 8005ec8:	f000 fcd0 	bl	800686c <TIM_Base_SetConfig>
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	2201      	movs	r2, #1
 8005ed0:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	2201      	movs	r2, #1
 8005ed8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	2201      	movs	r2, #1
 8005ee0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	2201      	movs	r2, #1
 8005ee8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	2201      	movs	r2, #1
 8005ef0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005ef4:	687b      	ldr	r3, [r7, #4]
 8005ef6:	2201      	movs	r2, #1
 8005ef8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	2201      	movs	r2, #1
 8005f00:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005f04:	687b      	ldr	r3, [r7, #4]
 8005f06:	2201      	movs	r2, #1
 8005f08:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	2201      	movs	r2, #1
 8005f10:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005f14:	687b      	ldr	r3, [r7, #4]
 8005f16:	2201      	movs	r2, #1
 8005f18:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	2201      	movs	r2, #1
 8005f20:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	2201      	movs	r2, #1
 8005f28:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005f2c:	2300      	movs	r3, #0
 8005f2e:	4618      	mov	r0, r3
 8005f30:	3708      	adds	r7, #8
 8005f32:	46bd      	mov	sp, r7
 8005f34:	bd80      	pop	{r7, pc}

08005f36 <HAL_TIM_PWM_MspInit>:
 8005f36:	b480      	push	{r7}
 8005f38:	b083      	sub	sp, #12
 8005f3a:	af00      	add	r7, sp, #0
 8005f3c:	6078      	str	r0, [r7, #4]
 8005f3e:	bf00      	nop
 8005f40:	370c      	adds	r7, #12
 8005f42:	46bd      	mov	sp, r7
 8005f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f48:	4770      	bx	lr
	...

08005f4c <HAL_TIM_PWM_Start>:
 8005f4c:	b580      	push	{r7, lr}
 8005f4e:	b084      	sub	sp, #16
 8005f50:	af00      	add	r7, sp, #0
 8005f52:	6078      	str	r0, [r7, #4]
 8005f54:	6039      	str	r1, [r7, #0]
 8005f56:	683b      	ldr	r3, [r7, #0]
 8005f58:	2b00      	cmp	r3, #0
 8005f5a:	d109      	bne.n	8005f70 <HAL_TIM_PWM_Start+0x24>
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8005f62:	b2db      	uxtb	r3, r3
 8005f64:	2b01      	cmp	r3, #1
 8005f66:	bf14      	ite	ne
 8005f68:	2301      	movne	r3, #1
 8005f6a:	2300      	moveq	r3, #0
 8005f6c:	b2db      	uxtb	r3, r3
 8005f6e:	e03c      	b.n	8005fea <HAL_TIM_PWM_Start+0x9e>
 8005f70:	683b      	ldr	r3, [r7, #0]
 8005f72:	2b04      	cmp	r3, #4
 8005f74:	d109      	bne.n	8005f8a <HAL_TIM_PWM_Start+0x3e>
 8005f76:	687b      	ldr	r3, [r7, #4]
 8005f78:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8005f7c:	b2db      	uxtb	r3, r3
 8005f7e:	2b01      	cmp	r3, #1
 8005f80:	bf14      	ite	ne
 8005f82:	2301      	movne	r3, #1
 8005f84:	2300      	moveq	r3, #0
 8005f86:	b2db      	uxtb	r3, r3
 8005f88:	e02f      	b.n	8005fea <HAL_TIM_PWM_Start+0x9e>
 8005f8a:	683b      	ldr	r3, [r7, #0]
 8005f8c:	2b08      	cmp	r3, #8
 8005f8e:	d109      	bne.n	8005fa4 <HAL_TIM_PWM_Start+0x58>
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005f96:	b2db      	uxtb	r3, r3
 8005f98:	2b01      	cmp	r3, #1
 8005f9a:	bf14      	ite	ne
 8005f9c:	2301      	movne	r3, #1
 8005f9e:	2300      	moveq	r3, #0
 8005fa0:	b2db      	uxtb	r3, r3
 8005fa2:	e022      	b.n	8005fea <HAL_TIM_PWM_Start+0x9e>
 8005fa4:	683b      	ldr	r3, [r7, #0]
 8005fa6:	2b0c      	cmp	r3, #12
 8005fa8:	d109      	bne.n	8005fbe <HAL_TIM_PWM_Start+0x72>
 8005faa:	687b      	ldr	r3, [r7, #4]
 8005fac:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005fb0:	b2db      	uxtb	r3, r3
 8005fb2:	2b01      	cmp	r3, #1
 8005fb4:	bf14      	ite	ne
 8005fb6:	2301      	movne	r3, #1
 8005fb8:	2300      	moveq	r3, #0
 8005fba:	b2db      	uxtb	r3, r3
 8005fbc:	e015      	b.n	8005fea <HAL_TIM_PWM_Start+0x9e>
 8005fbe:	683b      	ldr	r3, [r7, #0]
 8005fc0:	2b10      	cmp	r3, #16
 8005fc2:	d109      	bne.n	8005fd8 <HAL_TIM_PWM_Start+0x8c>
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005fca:	b2db      	uxtb	r3, r3
 8005fcc:	2b01      	cmp	r3, #1
 8005fce:	bf14      	ite	ne
 8005fd0:	2301      	movne	r3, #1
 8005fd2:	2300      	moveq	r3, #0
 8005fd4:	b2db      	uxtb	r3, r3
 8005fd6:	e008      	b.n	8005fea <HAL_TIM_PWM_Start+0x9e>
 8005fd8:	687b      	ldr	r3, [r7, #4]
 8005fda:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8005fde:	b2db      	uxtb	r3, r3
 8005fe0:	2b01      	cmp	r3, #1
 8005fe2:	bf14      	ite	ne
 8005fe4:	2301      	movne	r3, #1
 8005fe6:	2300      	moveq	r3, #0
 8005fe8:	b2db      	uxtb	r3, r3
 8005fea:	2b00      	cmp	r3, #0
 8005fec:	d001      	beq.n	8005ff2 <HAL_TIM_PWM_Start+0xa6>
 8005fee:	2301      	movs	r3, #1
 8005ff0:	e097      	b.n	8006122 <HAL_TIM_PWM_Start+0x1d6>
 8005ff2:	683b      	ldr	r3, [r7, #0]
 8005ff4:	2b00      	cmp	r3, #0
 8005ff6:	d104      	bne.n	8006002 <HAL_TIM_PWM_Start+0xb6>
 8005ff8:	687b      	ldr	r3, [r7, #4]
 8005ffa:	2202      	movs	r2, #2
 8005ffc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006000:	e023      	b.n	800604a <HAL_TIM_PWM_Start+0xfe>
 8006002:	683b      	ldr	r3, [r7, #0]
 8006004:	2b04      	cmp	r3, #4
 8006006:	d104      	bne.n	8006012 <HAL_TIM_PWM_Start+0xc6>
 8006008:	687b      	ldr	r3, [r7, #4]
 800600a:	2202      	movs	r2, #2
 800600c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006010:	e01b      	b.n	800604a <HAL_TIM_PWM_Start+0xfe>
 8006012:	683b      	ldr	r3, [r7, #0]
 8006014:	2b08      	cmp	r3, #8
 8006016:	d104      	bne.n	8006022 <HAL_TIM_PWM_Start+0xd6>
 8006018:	687b      	ldr	r3, [r7, #4]
 800601a:	2202      	movs	r2, #2
 800601c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006020:	e013      	b.n	800604a <HAL_TIM_PWM_Start+0xfe>
 8006022:	683b      	ldr	r3, [r7, #0]
 8006024:	2b0c      	cmp	r3, #12
 8006026:	d104      	bne.n	8006032 <HAL_TIM_PWM_Start+0xe6>
 8006028:	687b      	ldr	r3, [r7, #4]
 800602a:	2202      	movs	r2, #2
 800602c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006030:	e00b      	b.n	800604a <HAL_TIM_PWM_Start+0xfe>
 8006032:	683b      	ldr	r3, [r7, #0]
 8006034:	2b10      	cmp	r3, #16
 8006036:	d104      	bne.n	8006042 <HAL_TIM_PWM_Start+0xf6>
 8006038:	687b      	ldr	r3, [r7, #4]
 800603a:	2202      	movs	r2, #2
 800603c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006040:	e003      	b.n	800604a <HAL_TIM_PWM_Start+0xfe>
 8006042:	687b      	ldr	r3, [r7, #4]
 8006044:	2202      	movs	r2, #2
 8006046:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800604a:	687b      	ldr	r3, [r7, #4]
 800604c:	681b      	ldr	r3, [r3, #0]
 800604e:	2201      	movs	r2, #1
 8006050:	6839      	ldr	r1, [r7, #0]
 8006052:	4618      	mov	r0, r3
 8006054:	f001 f838 	bl	80070c8 <TIM_CCxChannelCmd>
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	681b      	ldr	r3, [r3, #0]
 800605c:	4a33      	ldr	r2, [pc, #204]	@ (800612c <HAL_TIM_PWM_Start+0x1e0>)
 800605e:	4293      	cmp	r3, r2
 8006060:	d013      	beq.n	800608a <HAL_TIM_PWM_Start+0x13e>
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	681b      	ldr	r3, [r3, #0]
 8006066:	4a32      	ldr	r2, [pc, #200]	@ (8006130 <HAL_TIM_PWM_Start+0x1e4>)
 8006068:	4293      	cmp	r3, r2
 800606a:	d00e      	beq.n	800608a <HAL_TIM_PWM_Start+0x13e>
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	681b      	ldr	r3, [r3, #0]
 8006070:	4a30      	ldr	r2, [pc, #192]	@ (8006134 <HAL_TIM_PWM_Start+0x1e8>)
 8006072:	4293      	cmp	r3, r2
 8006074:	d009      	beq.n	800608a <HAL_TIM_PWM_Start+0x13e>
 8006076:	687b      	ldr	r3, [r7, #4]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	4a2f      	ldr	r2, [pc, #188]	@ (8006138 <HAL_TIM_PWM_Start+0x1ec>)
 800607c:	4293      	cmp	r3, r2
 800607e:	d004      	beq.n	800608a <HAL_TIM_PWM_Start+0x13e>
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	681b      	ldr	r3, [r3, #0]
 8006084:	4a2d      	ldr	r2, [pc, #180]	@ (800613c <HAL_TIM_PWM_Start+0x1f0>)
 8006086:	4293      	cmp	r3, r2
 8006088:	d101      	bne.n	800608e <HAL_TIM_PWM_Start+0x142>
 800608a:	2301      	movs	r3, #1
 800608c:	e000      	b.n	8006090 <HAL_TIM_PWM_Start+0x144>
 800608e:	2300      	movs	r3, #0
 8006090:	2b00      	cmp	r3, #0
 8006092:	d007      	beq.n	80060a4 <HAL_TIM_PWM_Start+0x158>
 8006094:	687b      	ldr	r3, [r7, #4]
 8006096:	681b      	ldr	r3, [r3, #0]
 8006098:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800609a:	687b      	ldr	r3, [r7, #4]
 800609c:	681b      	ldr	r3, [r3, #0]
 800609e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80060a2:	645a      	str	r2, [r3, #68]	@ 0x44
 80060a4:	687b      	ldr	r3, [r7, #4]
 80060a6:	681b      	ldr	r3, [r3, #0]
 80060a8:	4a20      	ldr	r2, [pc, #128]	@ (800612c <HAL_TIM_PWM_Start+0x1e0>)
 80060aa:	4293      	cmp	r3, r2
 80060ac:	d018      	beq.n	80060e0 <HAL_TIM_PWM_Start+0x194>
 80060ae:	687b      	ldr	r3, [r7, #4]
 80060b0:	681b      	ldr	r3, [r3, #0]
 80060b2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80060b6:	d013      	beq.n	80060e0 <HAL_TIM_PWM_Start+0x194>
 80060b8:	687b      	ldr	r3, [r7, #4]
 80060ba:	681b      	ldr	r3, [r3, #0]
 80060bc:	4a20      	ldr	r2, [pc, #128]	@ (8006140 <HAL_TIM_PWM_Start+0x1f4>)
 80060be:	4293      	cmp	r3, r2
 80060c0:	d00e      	beq.n	80060e0 <HAL_TIM_PWM_Start+0x194>
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	681b      	ldr	r3, [r3, #0]
 80060c6:	4a1f      	ldr	r2, [pc, #124]	@ (8006144 <HAL_TIM_PWM_Start+0x1f8>)
 80060c8:	4293      	cmp	r3, r2
 80060ca:	d009      	beq.n	80060e0 <HAL_TIM_PWM_Start+0x194>
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	4a17      	ldr	r2, [pc, #92]	@ (8006130 <HAL_TIM_PWM_Start+0x1e4>)
 80060d2:	4293      	cmp	r3, r2
 80060d4:	d004      	beq.n	80060e0 <HAL_TIM_PWM_Start+0x194>
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	4a16      	ldr	r2, [pc, #88]	@ (8006134 <HAL_TIM_PWM_Start+0x1e8>)
 80060dc:	4293      	cmp	r3, r2
 80060de:	d115      	bne.n	800610c <HAL_TIM_PWM_Start+0x1c0>
 80060e0:	687b      	ldr	r3, [r7, #4]
 80060e2:	681b      	ldr	r3, [r3, #0]
 80060e4:	689a      	ldr	r2, [r3, #8]
 80060e6:	4b18      	ldr	r3, [pc, #96]	@ (8006148 <HAL_TIM_PWM_Start+0x1fc>)
 80060e8:	4013      	ands	r3, r2
 80060ea:	60fb      	str	r3, [r7, #12]
 80060ec:	68fb      	ldr	r3, [r7, #12]
 80060ee:	2b06      	cmp	r3, #6
 80060f0:	d015      	beq.n	800611e <HAL_TIM_PWM_Start+0x1d2>
 80060f2:	68fb      	ldr	r3, [r7, #12]
 80060f4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80060f8:	d011      	beq.n	800611e <HAL_TIM_PWM_Start+0x1d2>
 80060fa:	687b      	ldr	r3, [r7, #4]
 80060fc:	681b      	ldr	r3, [r3, #0]
 80060fe:	681a      	ldr	r2, [r3, #0]
 8006100:	687b      	ldr	r3, [r7, #4]
 8006102:	681b      	ldr	r3, [r3, #0]
 8006104:	f042 0201 	orr.w	r2, r2, #1
 8006108:	601a      	str	r2, [r3, #0]
 800610a:	e008      	b.n	800611e <HAL_TIM_PWM_Start+0x1d2>
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	681b      	ldr	r3, [r3, #0]
 8006110:	681a      	ldr	r2, [r3, #0]
 8006112:	687b      	ldr	r3, [r7, #4]
 8006114:	681b      	ldr	r3, [r3, #0]
 8006116:	f042 0201 	orr.w	r2, r2, #1
 800611a:	601a      	str	r2, [r3, #0]
 800611c:	e000      	b.n	8006120 <HAL_TIM_PWM_Start+0x1d4>
 800611e:	bf00      	nop
 8006120:	2300      	movs	r3, #0
 8006122:	4618      	mov	r0, r3
 8006124:	3710      	adds	r7, #16
 8006126:	46bd      	mov	sp, r7
 8006128:	bd80      	pop	{r7, pc}
 800612a:	bf00      	nop
 800612c:	40012c00 	.word	0x40012c00
 8006130:	40013400 	.word	0x40013400
 8006134:	40014000 	.word	0x40014000
 8006138:	40014400 	.word	0x40014400
 800613c:	40014800 	.word	0x40014800
 8006140:	40000400 	.word	0x40000400
 8006144:	40000800 	.word	0x40000800
 8006148:	00010007 	.word	0x00010007

0800614c <HAL_TIM_IRQHandler>:
 800614c:	b580      	push	{r7, lr}
 800614e:	b084      	sub	sp, #16
 8006150:	af00      	add	r7, sp, #0
 8006152:	6078      	str	r0, [r7, #4]
 8006154:	687b      	ldr	r3, [r7, #4]
 8006156:	681b      	ldr	r3, [r3, #0]
 8006158:	68db      	ldr	r3, [r3, #12]
 800615a:	60fb      	str	r3, [r7, #12]
 800615c:	687b      	ldr	r3, [r7, #4]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	691b      	ldr	r3, [r3, #16]
 8006162:	60bb      	str	r3, [r7, #8]
 8006164:	68bb      	ldr	r3, [r7, #8]
 8006166:	f003 0302 	and.w	r3, r3, #2
 800616a:	2b00      	cmp	r3, #0
 800616c:	d020      	beq.n	80061b0 <HAL_TIM_IRQHandler+0x64>
 800616e:	68fb      	ldr	r3, [r7, #12]
 8006170:	f003 0302 	and.w	r3, r3, #2
 8006174:	2b00      	cmp	r3, #0
 8006176:	d01b      	beq.n	80061b0 <HAL_TIM_IRQHandler+0x64>
 8006178:	687b      	ldr	r3, [r7, #4]
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	f06f 0202 	mvn.w	r2, #2
 8006180:	611a      	str	r2, [r3, #16]
 8006182:	687b      	ldr	r3, [r7, #4]
 8006184:	2201      	movs	r2, #1
 8006186:	771a      	strb	r2, [r3, #28]
 8006188:	687b      	ldr	r3, [r7, #4]
 800618a:	681b      	ldr	r3, [r3, #0]
 800618c:	699b      	ldr	r3, [r3, #24]
 800618e:	f003 0303 	and.w	r3, r3, #3
 8006192:	2b00      	cmp	r3, #0
 8006194:	d003      	beq.n	800619e <HAL_TIM_IRQHandler+0x52>
 8006196:	6878      	ldr	r0, [r7, #4]
 8006198:	f000 fb4a 	bl	8006830 <HAL_TIM_IC_CaptureCallback>
 800619c:	e005      	b.n	80061aa <HAL_TIM_IRQHandler+0x5e>
 800619e:	6878      	ldr	r0, [r7, #4]
 80061a0:	f000 fb3c 	bl	800681c <HAL_TIM_OC_DelayElapsedCallback>
 80061a4:	6878      	ldr	r0, [r7, #4]
 80061a6:	f000 fb4d 	bl	8006844 <HAL_TIM_PWM_PulseFinishedCallback>
 80061aa:	687b      	ldr	r3, [r7, #4]
 80061ac:	2200      	movs	r2, #0
 80061ae:	771a      	strb	r2, [r3, #28]
 80061b0:	68bb      	ldr	r3, [r7, #8]
 80061b2:	f003 0304 	and.w	r3, r3, #4
 80061b6:	2b00      	cmp	r3, #0
 80061b8:	d020      	beq.n	80061fc <HAL_TIM_IRQHandler+0xb0>
 80061ba:	68fb      	ldr	r3, [r7, #12]
 80061bc:	f003 0304 	and.w	r3, r3, #4
 80061c0:	2b00      	cmp	r3, #0
 80061c2:	d01b      	beq.n	80061fc <HAL_TIM_IRQHandler+0xb0>
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	681b      	ldr	r3, [r3, #0]
 80061c8:	f06f 0204 	mvn.w	r2, #4
 80061cc:	611a      	str	r2, [r3, #16]
 80061ce:	687b      	ldr	r3, [r7, #4]
 80061d0:	2202      	movs	r2, #2
 80061d2:	771a      	strb	r2, [r3, #28]
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	681b      	ldr	r3, [r3, #0]
 80061d8:	699b      	ldr	r3, [r3, #24]
 80061da:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80061de:	2b00      	cmp	r3, #0
 80061e0:	d003      	beq.n	80061ea <HAL_TIM_IRQHandler+0x9e>
 80061e2:	6878      	ldr	r0, [r7, #4]
 80061e4:	f000 fb24 	bl	8006830 <HAL_TIM_IC_CaptureCallback>
 80061e8:	e005      	b.n	80061f6 <HAL_TIM_IRQHandler+0xaa>
 80061ea:	6878      	ldr	r0, [r7, #4]
 80061ec:	f000 fb16 	bl	800681c <HAL_TIM_OC_DelayElapsedCallback>
 80061f0:	6878      	ldr	r0, [r7, #4]
 80061f2:	f000 fb27 	bl	8006844 <HAL_TIM_PWM_PulseFinishedCallback>
 80061f6:	687b      	ldr	r3, [r7, #4]
 80061f8:	2200      	movs	r2, #0
 80061fa:	771a      	strb	r2, [r3, #28]
 80061fc:	68bb      	ldr	r3, [r7, #8]
 80061fe:	f003 0308 	and.w	r3, r3, #8
 8006202:	2b00      	cmp	r3, #0
 8006204:	d020      	beq.n	8006248 <HAL_TIM_IRQHandler+0xfc>
 8006206:	68fb      	ldr	r3, [r7, #12]
 8006208:	f003 0308 	and.w	r3, r3, #8
 800620c:	2b00      	cmp	r3, #0
 800620e:	d01b      	beq.n	8006248 <HAL_TIM_IRQHandler+0xfc>
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	681b      	ldr	r3, [r3, #0]
 8006214:	f06f 0208 	mvn.w	r2, #8
 8006218:	611a      	str	r2, [r3, #16]
 800621a:	687b      	ldr	r3, [r7, #4]
 800621c:	2204      	movs	r2, #4
 800621e:	771a      	strb	r2, [r3, #28]
 8006220:	687b      	ldr	r3, [r7, #4]
 8006222:	681b      	ldr	r3, [r3, #0]
 8006224:	69db      	ldr	r3, [r3, #28]
 8006226:	f003 0303 	and.w	r3, r3, #3
 800622a:	2b00      	cmp	r3, #0
 800622c:	d003      	beq.n	8006236 <HAL_TIM_IRQHandler+0xea>
 800622e:	6878      	ldr	r0, [r7, #4]
 8006230:	f000 fafe 	bl	8006830 <HAL_TIM_IC_CaptureCallback>
 8006234:	e005      	b.n	8006242 <HAL_TIM_IRQHandler+0xf6>
 8006236:	6878      	ldr	r0, [r7, #4]
 8006238:	f000 faf0 	bl	800681c <HAL_TIM_OC_DelayElapsedCallback>
 800623c:	6878      	ldr	r0, [r7, #4]
 800623e:	f000 fb01 	bl	8006844 <HAL_TIM_PWM_PulseFinishedCallback>
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	2200      	movs	r2, #0
 8006246:	771a      	strb	r2, [r3, #28]
 8006248:	68bb      	ldr	r3, [r7, #8]
 800624a:	f003 0310 	and.w	r3, r3, #16
 800624e:	2b00      	cmp	r3, #0
 8006250:	d020      	beq.n	8006294 <HAL_TIM_IRQHandler+0x148>
 8006252:	68fb      	ldr	r3, [r7, #12]
 8006254:	f003 0310 	and.w	r3, r3, #16
 8006258:	2b00      	cmp	r3, #0
 800625a:	d01b      	beq.n	8006294 <HAL_TIM_IRQHandler+0x148>
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	681b      	ldr	r3, [r3, #0]
 8006260:	f06f 0210 	mvn.w	r2, #16
 8006264:	611a      	str	r2, [r3, #16]
 8006266:	687b      	ldr	r3, [r7, #4]
 8006268:	2208      	movs	r2, #8
 800626a:	771a      	strb	r2, [r3, #28]
 800626c:	687b      	ldr	r3, [r7, #4]
 800626e:	681b      	ldr	r3, [r3, #0]
 8006270:	69db      	ldr	r3, [r3, #28]
 8006272:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006276:	2b00      	cmp	r3, #0
 8006278:	d003      	beq.n	8006282 <HAL_TIM_IRQHandler+0x136>
 800627a:	6878      	ldr	r0, [r7, #4]
 800627c:	f000 fad8 	bl	8006830 <HAL_TIM_IC_CaptureCallback>
 8006280:	e005      	b.n	800628e <HAL_TIM_IRQHandler+0x142>
 8006282:	6878      	ldr	r0, [r7, #4]
 8006284:	f000 faca 	bl	800681c <HAL_TIM_OC_DelayElapsedCallback>
 8006288:	6878      	ldr	r0, [r7, #4]
 800628a:	f000 fadb 	bl	8006844 <HAL_TIM_PWM_PulseFinishedCallback>
 800628e:	687b      	ldr	r3, [r7, #4]
 8006290:	2200      	movs	r2, #0
 8006292:	771a      	strb	r2, [r3, #28]
 8006294:	68bb      	ldr	r3, [r7, #8]
 8006296:	f003 0301 	and.w	r3, r3, #1
 800629a:	2b00      	cmp	r3, #0
 800629c:	d00c      	beq.n	80062b8 <HAL_TIM_IRQHandler+0x16c>
 800629e:	68fb      	ldr	r3, [r7, #12]
 80062a0:	f003 0301 	and.w	r3, r3, #1
 80062a4:	2b00      	cmp	r3, #0
 80062a6:	d007      	beq.n	80062b8 <HAL_TIM_IRQHandler+0x16c>
 80062a8:	687b      	ldr	r3, [r7, #4]
 80062aa:	681b      	ldr	r3, [r3, #0]
 80062ac:	f06f 0201 	mvn.w	r2, #1
 80062b0:	611a      	str	r2, [r3, #16]
 80062b2:	6878      	ldr	r0, [r7, #4]
 80062b4:	f000 faa8 	bl	8006808 <HAL_TIM_PeriodElapsedCallback>
 80062b8:	68bb      	ldr	r3, [r7, #8]
 80062ba:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80062be:	2b00      	cmp	r3, #0
 80062c0:	d104      	bne.n	80062cc <HAL_TIM_IRQHandler+0x180>
 80062c2:	68bb      	ldr	r3, [r7, #8]
 80062c4:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80062c8:	2b00      	cmp	r3, #0
 80062ca:	d00c      	beq.n	80062e6 <HAL_TIM_IRQHandler+0x19a>
 80062cc:	68fb      	ldr	r3, [r7, #12]
 80062ce:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	d007      	beq.n	80062e6 <HAL_TIM_IRQHandler+0x19a>
 80062d6:	687b      	ldr	r3, [r7, #4]
 80062d8:	681b      	ldr	r3, [r3, #0]
 80062da:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 80062de:	611a      	str	r2, [r3, #16]
 80062e0:	6878      	ldr	r0, [r7, #4]
 80062e2:	f001 f82f 	bl	8007344 <HAL_TIMEx_BreakCallback>
 80062e6:	68bb      	ldr	r3, [r7, #8]
 80062e8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80062ec:	2b00      	cmp	r3, #0
 80062ee:	d00c      	beq.n	800630a <HAL_TIM_IRQHandler+0x1be>
 80062f0:	68fb      	ldr	r3, [r7, #12]
 80062f2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80062f6:	2b00      	cmp	r3, #0
 80062f8:	d007      	beq.n	800630a <HAL_TIM_IRQHandler+0x1be>
 80062fa:	687b      	ldr	r3, [r7, #4]
 80062fc:	681b      	ldr	r3, [r3, #0]
 80062fe:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8006302:	611a      	str	r2, [r3, #16]
 8006304:	6878      	ldr	r0, [r7, #4]
 8006306:	f001 f827 	bl	8007358 <HAL_TIMEx_Break2Callback>
 800630a:	68bb      	ldr	r3, [r7, #8]
 800630c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006310:	2b00      	cmp	r3, #0
 8006312:	d00c      	beq.n	800632e <HAL_TIM_IRQHandler+0x1e2>
 8006314:	68fb      	ldr	r3, [r7, #12]
 8006316:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800631a:	2b00      	cmp	r3, #0
 800631c:	d007      	beq.n	800632e <HAL_TIM_IRQHandler+0x1e2>
 800631e:	687b      	ldr	r3, [r7, #4]
 8006320:	681b      	ldr	r3, [r3, #0]
 8006322:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006326:	611a      	str	r2, [r3, #16]
 8006328:	6878      	ldr	r0, [r7, #4]
 800632a:	f000 fa95 	bl	8006858 <HAL_TIM_TriggerCallback>
 800632e:	68bb      	ldr	r3, [r7, #8]
 8006330:	f003 0320 	and.w	r3, r3, #32
 8006334:	2b00      	cmp	r3, #0
 8006336:	d00c      	beq.n	8006352 <HAL_TIM_IRQHandler+0x206>
 8006338:	68fb      	ldr	r3, [r7, #12]
 800633a:	f003 0320 	and.w	r3, r3, #32
 800633e:	2b00      	cmp	r3, #0
 8006340:	d007      	beq.n	8006352 <HAL_TIM_IRQHandler+0x206>
 8006342:	687b      	ldr	r3, [r7, #4]
 8006344:	681b      	ldr	r3, [r3, #0]
 8006346:	f06f 0220 	mvn.w	r2, #32
 800634a:	611a      	str	r2, [r3, #16]
 800634c:	6878      	ldr	r0, [r7, #4]
 800634e:	f000 ffef 	bl	8007330 <HAL_TIMEx_CommutCallback>
 8006352:	68bb      	ldr	r3, [r7, #8]
 8006354:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006358:	2b00      	cmp	r3, #0
 800635a:	d00c      	beq.n	8006376 <HAL_TIM_IRQHandler+0x22a>
 800635c:	68fb      	ldr	r3, [r7, #12]
 800635e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006362:	2b00      	cmp	r3, #0
 8006364:	d007      	beq.n	8006376 <HAL_TIM_IRQHandler+0x22a>
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	681b      	ldr	r3, [r3, #0]
 800636a:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 800636e:	611a      	str	r2, [r3, #16]
 8006370:	6878      	ldr	r0, [r7, #4]
 8006372:	f000 fffb 	bl	800736c <HAL_TIMEx_EncoderIndexCallback>
 8006376:	68bb      	ldr	r3, [r7, #8]
 8006378:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800637c:	2b00      	cmp	r3, #0
 800637e:	d00c      	beq.n	800639a <HAL_TIM_IRQHandler+0x24e>
 8006380:	68fb      	ldr	r3, [r7, #12]
 8006382:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006386:	2b00      	cmp	r3, #0
 8006388:	d007      	beq.n	800639a <HAL_TIM_IRQHandler+0x24e>
 800638a:	687b      	ldr	r3, [r7, #4]
 800638c:	681b      	ldr	r3, [r3, #0]
 800638e:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8006392:	611a      	str	r2, [r3, #16]
 8006394:	6878      	ldr	r0, [r7, #4]
 8006396:	f000 fff3 	bl	8007380 <HAL_TIMEx_DirectionChangeCallback>
 800639a:	68bb      	ldr	r3, [r7, #8]
 800639c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	d00c      	beq.n	80063be <HAL_TIM_IRQHandler+0x272>
 80063a4:	68fb      	ldr	r3, [r7, #12]
 80063a6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80063aa:	2b00      	cmp	r3, #0
 80063ac:	d007      	beq.n	80063be <HAL_TIM_IRQHandler+0x272>
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	681b      	ldr	r3, [r3, #0]
 80063b2:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 80063b6:	611a      	str	r2, [r3, #16]
 80063b8:	6878      	ldr	r0, [r7, #4]
 80063ba:	f000 ffeb 	bl	8007394 <HAL_TIMEx_IndexErrorCallback>
 80063be:	68bb      	ldr	r3, [r7, #8]
 80063c0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80063c4:	2b00      	cmp	r3, #0
 80063c6:	d00c      	beq.n	80063e2 <HAL_TIM_IRQHandler+0x296>
 80063c8:	68fb      	ldr	r3, [r7, #12]
 80063ca:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80063ce:	2b00      	cmp	r3, #0
 80063d0:	d007      	beq.n	80063e2 <HAL_TIM_IRQHandler+0x296>
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	681b      	ldr	r3, [r3, #0]
 80063d6:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 80063da:	611a      	str	r2, [r3, #16]
 80063dc:	6878      	ldr	r0, [r7, #4]
 80063de:	f000 ffe3 	bl	80073a8 <HAL_TIMEx_TransitionErrorCallback>
 80063e2:	bf00      	nop
 80063e4:	3710      	adds	r7, #16
 80063e6:	46bd      	mov	sp, r7
 80063e8:	bd80      	pop	{r7, pc}
	...

080063ec <HAL_TIM_PWM_ConfigChannel>:
 80063ec:	b580      	push	{r7, lr}
 80063ee:	b086      	sub	sp, #24
 80063f0:	af00      	add	r7, sp, #0
 80063f2:	60f8      	str	r0, [r7, #12]
 80063f4:	60b9      	str	r1, [r7, #8]
 80063f6:	607a      	str	r2, [r7, #4]
 80063f8:	2300      	movs	r3, #0
 80063fa:	75fb      	strb	r3, [r7, #23]
 80063fc:	68fb      	ldr	r3, [r7, #12]
 80063fe:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006402:	2b01      	cmp	r3, #1
 8006404:	d101      	bne.n	800640a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006406:	2302      	movs	r3, #2
 8006408:	e0ff      	b.n	800660a <HAL_TIM_PWM_ConfigChannel+0x21e>
 800640a:	68fb      	ldr	r3, [r7, #12]
 800640c:	2201      	movs	r2, #1
 800640e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006412:	687b      	ldr	r3, [r7, #4]
 8006414:	2b14      	cmp	r3, #20
 8006416:	f200 80f0 	bhi.w	80065fa <HAL_TIM_PWM_ConfigChannel+0x20e>
 800641a:	a201      	add	r2, pc, #4	@ (adr r2, 8006420 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800641c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006420:	08006475 	.word	0x08006475
 8006424:	080065fb 	.word	0x080065fb
 8006428:	080065fb 	.word	0x080065fb
 800642c:	080065fb 	.word	0x080065fb
 8006430:	080064b5 	.word	0x080064b5
 8006434:	080065fb 	.word	0x080065fb
 8006438:	080065fb 	.word	0x080065fb
 800643c:	080065fb 	.word	0x080065fb
 8006440:	080064f7 	.word	0x080064f7
 8006444:	080065fb 	.word	0x080065fb
 8006448:	080065fb 	.word	0x080065fb
 800644c:	080065fb 	.word	0x080065fb
 8006450:	08006537 	.word	0x08006537
 8006454:	080065fb 	.word	0x080065fb
 8006458:	080065fb 	.word	0x080065fb
 800645c:	080065fb 	.word	0x080065fb
 8006460:	08006579 	.word	0x08006579
 8006464:	080065fb 	.word	0x080065fb
 8006468:	080065fb 	.word	0x080065fb
 800646c:	080065fb 	.word	0x080065fb
 8006470:	080065b9 	.word	0x080065b9
 8006474:	68fb      	ldr	r3, [r7, #12]
 8006476:	681b      	ldr	r3, [r3, #0]
 8006478:	68b9      	ldr	r1, [r7, #8]
 800647a:	4618      	mov	r0, r3
 800647c:	f000 fa92 	bl	80069a4 <TIM_OC1_SetConfig>
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	681b      	ldr	r3, [r3, #0]
 8006484:	699a      	ldr	r2, [r3, #24]
 8006486:	68fb      	ldr	r3, [r7, #12]
 8006488:	681b      	ldr	r3, [r3, #0]
 800648a:	f042 0208 	orr.w	r2, r2, #8
 800648e:	619a      	str	r2, [r3, #24]
 8006490:	68fb      	ldr	r3, [r7, #12]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	699a      	ldr	r2, [r3, #24]
 8006496:	68fb      	ldr	r3, [r7, #12]
 8006498:	681b      	ldr	r3, [r3, #0]
 800649a:	f022 0204 	bic.w	r2, r2, #4
 800649e:	619a      	str	r2, [r3, #24]
 80064a0:	68fb      	ldr	r3, [r7, #12]
 80064a2:	681b      	ldr	r3, [r3, #0]
 80064a4:	6999      	ldr	r1, [r3, #24]
 80064a6:	68bb      	ldr	r3, [r7, #8]
 80064a8:	691a      	ldr	r2, [r3, #16]
 80064aa:	68fb      	ldr	r3, [r7, #12]
 80064ac:	681b      	ldr	r3, [r3, #0]
 80064ae:	430a      	orrs	r2, r1
 80064b0:	619a      	str	r2, [r3, #24]
 80064b2:	e0a5      	b.n	8006600 <HAL_TIM_PWM_ConfigChannel+0x214>
 80064b4:	68fb      	ldr	r3, [r7, #12]
 80064b6:	681b      	ldr	r3, [r3, #0]
 80064b8:	68b9      	ldr	r1, [r7, #8]
 80064ba:	4618      	mov	r0, r3
 80064bc:	f000 fb02 	bl	8006ac4 <TIM_OC2_SetConfig>
 80064c0:	68fb      	ldr	r3, [r7, #12]
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	699a      	ldr	r2, [r3, #24]
 80064c6:	68fb      	ldr	r3, [r7, #12]
 80064c8:	681b      	ldr	r3, [r3, #0]
 80064ca:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80064ce:	619a      	str	r2, [r3, #24]
 80064d0:	68fb      	ldr	r3, [r7, #12]
 80064d2:	681b      	ldr	r3, [r3, #0]
 80064d4:	699a      	ldr	r2, [r3, #24]
 80064d6:	68fb      	ldr	r3, [r7, #12]
 80064d8:	681b      	ldr	r3, [r3, #0]
 80064da:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80064de:	619a      	str	r2, [r3, #24]
 80064e0:	68fb      	ldr	r3, [r7, #12]
 80064e2:	681b      	ldr	r3, [r3, #0]
 80064e4:	6999      	ldr	r1, [r3, #24]
 80064e6:	68bb      	ldr	r3, [r7, #8]
 80064e8:	691b      	ldr	r3, [r3, #16]
 80064ea:	021a      	lsls	r2, r3, #8
 80064ec:	68fb      	ldr	r3, [r7, #12]
 80064ee:	681b      	ldr	r3, [r3, #0]
 80064f0:	430a      	orrs	r2, r1
 80064f2:	619a      	str	r2, [r3, #24]
 80064f4:	e084      	b.n	8006600 <HAL_TIM_PWM_ConfigChannel+0x214>
 80064f6:	68fb      	ldr	r3, [r7, #12]
 80064f8:	681b      	ldr	r3, [r3, #0]
 80064fa:	68b9      	ldr	r1, [r7, #8]
 80064fc:	4618      	mov	r0, r3
 80064fe:	f000 fb6b 	bl	8006bd8 <TIM_OC3_SetConfig>
 8006502:	68fb      	ldr	r3, [r7, #12]
 8006504:	681b      	ldr	r3, [r3, #0]
 8006506:	69da      	ldr	r2, [r3, #28]
 8006508:	68fb      	ldr	r3, [r7, #12]
 800650a:	681b      	ldr	r3, [r3, #0]
 800650c:	f042 0208 	orr.w	r2, r2, #8
 8006510:	61da      	str	r2, [r3, #28]
 8006512:	68fb      	ldr	r3, [r7, #12]
 8006514:	681b      	ldr	r3, [r3, #0]
 8006516:	69da      	ldr	r2, [r3, #28]
 8006518:	68fb      	ldr	r3, [r7, #12]
 800651a:	681b      	ldr	r3, [r3, #0]
 800651c:	f022 0204 	bic.w	r2, r2, #4
 8006520:	61da      	str	r2, [r3, #28]
 8006522:	68fb      	ldr	r3, [r7, #12]
 8006524:	681b      	ldr	r3, [r3, #0]
 8006526:	69d9      	ldr	r1, [r3, #28]
 8006528:	68bb      	ldr	r3, [r7, #8]
 800652a:	691a      	ldr	r2, [r3, #16]
 800652c:	68fb      	ldr	r3, [r7, #12]
 800652e:	681b      	ldr	r3, [r3, #0]
 8006530:	430a      	orrs	r2, r1
 8006532:	61da      	str	r2, [r3, #28]
 8006534:	e064      	b.n	8006600 <HAL_TIM_PWM_ConfigChannel+0x214>
 8006536:	68fb      	ldr	r3, [r7, #12]
 8006538:	681b      	ldr	r3, [r3, #0]
 800653a:	68b9      	ldr	r1, [r7, #8]
 800653c:	4618      	mov	r0, r3
 800653e:	f000 fbd3 	bl	8006ce8 <TIM_OC4_SetConfig>
 8006542:	68fb      	ldr	r3, [r7, #12]
 8006544:	681b      	ldr	r3, [r3, #0]
 8006546:	69da      	ldr	r2, [r3, #28]
 8006548:	68fb      	ldr	r3, [r7, #12]
 800654a:	681b      	ldr	r3, [r3, #0]
 800654c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006550:	61da      	str	r2, [r3, #28]
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	681b      	ldr	r3, [r3, #0]
 8006556:	69da      	ldr	r2, [r3, #28]
 8006558:	68fb      	ldr	r3, [r7, #12]
 800655a:	681b      	ldr	r3, [r3, #0]
 800655c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8006560:	61da      	str	r2, [r3, #28]
 8006562:	68fb      	ldr	r3, [r7, #12]
 8006564:	681b      	ldr	r3, [r3, #0]
 8006566:	69d9      	ldr	r1, [r3, #28]
 8006568:	68bb      	ldr	r3, [r7, #8]
 800656a:	691b      	ldr	r3, [r3, #16]
 800656c:	021a      	lsls	r2, r3, #8
 800656e:	68fb      	ldr	r3, [r7, #12]
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	430a      	orrs	r2, r1
 8006574:	61da      	str	r2, [r3, #28]
 8006576:	e043      	b.n	8006600 <HAL_TIM_PWM_ConfigChannel+0x214>
 8006578:	68fb      	ldr	r3, [r7, #12]
 800657a:	681b      	ldr	r3, [r3, #0]
 800657c:	68b9      	ldr	r1, [r7, #8]
 800657e:	4618      	mov	r0, r3
 8006580:	f000 fc3c 	bl	8006dfc <TIM_OC5_SetConfig>
 8006584:	68fb      	ldr	r3, [r7, #12]
 8006586:	681b      	ldr	r3, [r3, #0]
 8006588:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	681b      	ldr	r3, [r3, #0]
 800658e:	f042 0208 	orr.w	r2, r2, #8
 8006592:	651a      	str	r2, [r3, #80]	@ 0x50
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	681b      	ldr	r3, [r3, #0]
 8006598:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800659a:	68fb      	ldr	r3, [r7, #12]
 800659c:	681b      	ldr	r3, [r3, #0]
 800659e:	f022 0204 	bic.w	r2, r2, #4
 80065a2:	651a      	str	r2, [r3, #80]	@ 0x50
 80065a4:	68fb      	ldr	r3, [r7, #12]
 80065a6:	681b      	ldr	r3, [r3, #0]
 80065a8:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 80065aa:	68bb      	ldr	r3, [r7, #8]
 80065ac:	691a      	ldr	r2, [r3, #16]
 80065ae:	68fb      	ldr	r3, [r7, #12]
 80065b0:	681b      	ldr	r3, [r3, #0]
 80065b2:	430a      	orrs	r2, r1
 80065b4:	651a      	str	r2, [r3, #80]	@ 0x50
 80065b6:	e023      	b.n	8006600 <HAL_TIM_PWM_ConfigChannel+0x214>
 80065b8:	68fb      	ldr	r3, [r7, #12]
 80065ba:	681b      	ldr	r3, [r3, #0]
 80065bc:	68b9      	ldr	r1, [r7, #8]
 80065be:	4618      	mov	r0, r3
 80065c0:	f000 fc80 	bl	8006ec4 <TIM_OC6_SetConfig>
 80065c4:	68fb      	ldr	r3, [r7, #12]
 80065c6:	681b      	ldr	r3, [r3, #0]
 80065c8:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 80065ca:	68fb      	ldr	r3, [r7, #12]
 80065cc:	681b      	ldr	r3, [r3, #0]
 80065ce:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80065d2:	651a      	str	r2, [r3, #80]	@ 0x50
 80065d4:	68fb      	ldr	r3, [r7, #12]
 80065d6:	681b      	ldr	r3, [r3, #0]
 80065d8:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 80065da:	68fb      	ldr	r3, [r7, #12]
 80065dc:	681b      	ldr	r3, [r3, #0]
 80065de:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80065e2:	651a      	str	r2, [r3, #80]	@ 0x50
 80065e4:	68fb      	ldr	r3, [r7, #12]
 80065e6:	681b      	ldr	r3, [r3, #0]
 80065e8:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 80065ea:	68bb      	ldr	r3, [r7, #8]
 80065ec:	691b      	ldr	r3, [r3, #16]
 80065ee:	021a      	lsls	r2, r3, #8
 80065f0:	68fb      	ldr	r3, [r7, #12]
 80065f2:	681b      	ldr	r3, [r3, #0]
 80065f4:	430a      	orrs	r2, r1
 80065f6:	651a      	str	r2, [r3, #80]	@ 0x50
 80065f8:	e002      	b.n	8006600 <HAL_TIM_PWM_ConfigChannel+0x214>
 80065fa:	2301      	movs	r3, #1
 80065fc:	75fb      	strb	r3, [r7, #23]
 80065fe:	bf00      	nop
 8006600:	68fb      	ldr	r3, [r7, #12]
 8006602:	2200      	movs	r2, #0
 8006604:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006608:	7dfb      	ldrb	r3, [r7, #23]
 800660a:	4618      	mov	r0, r3
 800660c:	3718      	adds	r7, #24
 800660e:	46bd      	mov	sp, r7
 8006610:	bd80      	pop	{r7, pc}
 8006612:	bf00      	nop

08006614 <HAL_TIM_ConfigClockSource>:
 8006614:	b580      	push	{r7, lr}
 8006616:	b084      	sub	sp, #16
 8006618:	af00      	add	r7, sp, #0
 800661a:	6078      	str	r0, [r7, #4]
 800661c:	6039      	str	r1, [r7, #0]
 800661e:	2300      	movs	r3, #0
 8006620:	73fb      	strb	r3, [r7, #15]
 8006622:	687b      	ldr	r3, [r7, #4]
 8006624:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006628:	2b01      	cmp	r3, #1
 800662a:	d101      	bne.n	8006630 <HAL_TIM_ConfigClockSource+0x1c>
 800662c:	2302      	movs	r3, #2
 800662e:	e0de      	b.n	80067ee <HAL_TIM_ConfigClockSource+0x1da>
 8006630:	687b      	ldr	r3, [r7, #4]
 8006632:	2201      	movs	r2, #1
 8006634:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	2202      	movs	r2, #2
 800663c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006640:	687b      	ldr	r3, [r7, #4]
 8006642:	681b      	ldr	r3, [r3, #0]
 8006644:	689b      	ldr	r3, [r3, #8]
 8006646:	60bb      	str	r3, [r7, #8]
 8006648:	68bb      	ldr	r3, [r7, #8]
 800664a:	f423 1344 	bic.w	r3, r3, #3211264	@ 0x310000
 800664e:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8006652:	60bb      	str	r3, [r7, #8]
 8006654:	68bb      	ldr	r3, [r7, #8]
 8006656:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800665a:	60bb      	str	r3, [r7, #8]
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	681b      	ldr	r3, [r3, #0]
 8006660:	68ba      	ldr	r2, [r7, #8]
 8006662:	609a      	str	r2, [r3, #8]
 8006664:	683b      	ldr	r3, [r7, #0]
 8006666:	681b      	ldr	r3, [r3, #0]
 8006668:	4a63      	ldr	r2, [pc, #396]	@ (80067f8 <HAL_TIM_ConfigClockSource+0x1e4>)
 800666a:	4293      	cmp	r3, r2
 800666c:	f000 80a9 	beq.w	80067c2 <HAL_TIM_ConfigClockSource+0x1ae>
 8006670:	4a61      	ldr	r2, [pc, #388]	@ (80067f8 <HAL_TIM_ConfigClockSource+0x1e4>)
 8006672:	4293      	cmp	r3, r2
 8006674:	f200 80ae 	bhi.w	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 8006678:	4a60      	ldr	r2, [pc, #384]	@ (80067fc <HAL_TIM_ConfigClockSource+0x1e8>)
 800667a:	4293      	cmp	r3, r2
 800667c:	f000 80a1 	beq.w	80067c2 <HAL_TIM_ConfigClockSource+0x1ae>
 8006680:	4a5e      	ldr	r2, [pc, #376]	@ (80067fc <HAL_TIM_ConfigClockSource+0x1e8>)
 8006682:	4293      	cmp	r3, r2
 8006684:	f200 80a6 	bhi.w	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 8006688:	4a5d      	ldr	r2, [pc, #372]	@ (8006800 <HAL_TIM_ConfigClockSource+0x1ec>)
 800668a:	4293      	cmp	r3, r2
 800668c:	f000 8099 	beq.w	80067c2 <HAL_TIM_ConfigClockSource+0x1ae>
 8006690:	4a5b      	ldr	r2, [pc, #364]	@ (8006800 <HAL_TIM_ConfigClockSource+0x1ec>)
 8006692:	4293      	cmp	r3, r2
 8006694:	f200 809e 	bhi.w	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 8006698:	4a5a      	ldr	r2, [pc, #360]	@ (8006804 <HAL_TIM_ConfigClockSource+0x1f0>)
 800669a:	4293      	cmp	r3, r2
 800669c:	f000 8091 	beq.w	80067c2 <HAL_TIM_ConfigClockSource+0x1ae>
 80066a0:	4a58      	ldr	r2, [pc, #352]	@ (8006804 <HAL_TIM_ConfigClockSource+0x1f0>)
 80066a2:	4293      	cmp	r3, r2
 80066a4:	f200 8096 	bhi.w	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 80066a8:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 80066ac:	f000 8089 	beq.w	80067c2 <HAL_TIM_ConfigClockSource+0x1ae>
 80066b0:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 80066b4:	f200 808e 	bhi.w	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 80066b8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80066bc:	d03e      	beq.n	800673c <HAL_TIM_ConfigClockSource+0x128>
 80066be:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80066c2:	f200 8087 	bhi.w	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 80066c6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80066ca:	f000 8086 	beq.w	80067da <HAL_TIM_ConfigClockSource+0x1c6>
 80066ce:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80066d2:	d87f      	bhi.n	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 80066d4:	2b70      	cmp	r3, #112	@ 0x70
 80066d6:	d01a      	beq.n	800670e <HAL_TIM_ConfigClockSource+0xfa>
 80066d8:	2b70      	cmp	r3, #112	@ 0x70
 80066da:	d87b      	bhi.n	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 80066dc:	2b60      	cmp	r3, #96	@ 0x60
 80066de:	d050      	beq.n	8006782 <HAL_TIM_ConfigClockSource+0x16e>
 80066e0:	2b60      	cmp	r3, #96	@ 0x60
 80066e2:	d877      	bhi.n	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 80066e4:	2b50      	cmp	r3, #80	@ 0x50
 80066e6:	d03c      	beq.n	8006762 <HAL_TIM_ConfigClockSource+0x14e>
 80066e8:	2b50      	cmp	r3, #80	@ 0x50
 80066ea:	d873      	bhi.n	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 80066ec:	2b40      	cmp	r3, #64	@ 0x40
 80066ee:	d058      	beq.n	80067a2 <HAL_TIM_ConfigClockSource+0x18e>
 80066f0:	2b40      	cmp	r3, #64	@ 0x40
 80066f2:	d86f      	bhi.n	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 80066f4:	2b30      	cmp	r3, #48	@ 0x30
 80066f6:	d064      	beq.n	80067c2 <HAL_TIM_ConfigClockSource+0x1ae>
 80066f8:	2b30      	cmp	r3, #48	@ 0x30
 80066fa:	d86b      	bhi.n	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 80066fc:	2b20      	cmp	r3, #32
 80066fe:	d060      	beq.n	80067c2 <HAL_TIM_ConfigClockSource+0x1ae>
 8006700:	2b20      	cmp	r3, #32
 8006702:	d867      	bhi.n	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 8006704:	2b00      	cmp	r3, #0
 8006706:	d05c      	beq.n	80067c2 <HAL_TIM_ConfigClockSource+0x1ae>
 8006708:	2b10      	cmp	r3, #16
 800670a:	d05a      	beq.n	80067c2 <HAL_TIM_ConfigClockSource+0x1ae>
 800670c:	e062      	b.n	80067d4 <HAL_TIM_ConfigClockSource+0x1c0>
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	6818      	ldr	r0, [r3, #0]
 8006712:	683b      	ldr	r3, [r7, #0]
 8006714:	6899      	ldr	r1, [r3, #8]
 8006716:	683b      	ldr	r3, [r7, #0]
 8006718:	685a      	ldr	r2, [r3, #4]
 800671a:	683b      	ldr	r3, [r7, #0]
 800671c:	68db      	ldr	r3, [r3, #12]
 800671e:	f000 fcb3 	bl	8007088 <TIM_ETR_SetConfig>
 8006722:	687b      	ldr	r3, [r7, #4]
 8006724:	681b      	ldr	r3, [r3, #0]
 8006726:	689b      	ldr	r3, [r3, #8]
 8006728:	60bb      	str	r3, [r7, #8]
 800672a:	68bb      	ldr	r3, [r7, #8]
 800672c:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8006730:	60bb      	str	r3, [r7, #8]
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	681b      	ldr	r3, [r3, #0]
 8006736:	68ba      	ldr	r2, [r7, #8]
 8006738:	609a      	str	r2, [r3, #8]
 800673a:	e04f      	b.n	80067dc <HAL_TIM_ConfigClockSource+0x1c8>
 800673c:	687b      	ldr	r3, [r7, #4]
 800673e:	6818      	ldr	r0, [r3, #0]
 8006740:	683b      	ldr	r3, [r7, #0]
 8006742:	6899      	ldr	r1, [r3, #8]
 8006744:	683b      	ldr	r3, [r7, #0]
 8006746:	685a      	ldr	r2, [r3, #4]
 8006748:	683b      	ldr	r3, [r7, #0]
 800674a:	68db      	ldr	r3, [r3, #12]
 800674c:	f000 fc9c 	bl	8007088 <TIM_ETR_SetConfig>
 8006750:	687b      	ldr	r3, [r7, #4]
 8006752:	681b      	ldr	r3, [r3, #0]
 8006754:	689a      	ldr	r2, [r3, #8]
 8006756:	687b      	ldr	r3, [r7, #4]
 8006758:	681b      	ldr	r3, [r3, #0]
 800675a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800675e:	609a      	str	r2, [r3, #8]
 8006760:	e03c      	b.n	80067dc <HAL_TIM_ConfigClockSource+0x1c8>
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	6818      	ldr	r0, [r3, #0]
 8006766:	683b      	ldr	r3, [r7, #0]
 8006768:	6859      	ldr	r1, [r3, #4]
 800676a:	683b      	ldr	r3, [r7, #0]
 800676c:	68db      	ldr	r3, [r3, #12]
 800676e:	461a      	mov	r2, r3
 8006770:	f000 fc0e 	bl	8006f90 <TIM_TI1_ConfigInputStage>
 8006774:	687b      	ldr	r3, [r7, #4]
 8006776:	681b      	ldr	r3, [r3, #0]
 8006778:	2150      	movs	r1, #80	@ 0x50
 800677a:	4618      	mov	r0, r3
 800677c:	f000 fc67 	bl	800704e <TIM_ITRx_SetConfig>
 8006780:	e02c      	b.n	80067dc <HAL_TIM_ConfigClockSource+0x1c8>
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	6818      	ldr	r0, [r3, #0]
 8006786:	683b      	ldr	r3, [r7, #0]
 8006788:	6859      	ldr	r1, [r3, #4]
 800678a:	683b      	ldr	r3, [r7, #0]
 800678c:	68db      	ldr	r3, [r3, #12]
 800678e:	461a      	mov	r2, r3
 8006790:	f000 fc2d 	bl	8006fee <TIM_TI2_ConfigInputStage>
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	681b      	ldr	r3, [r3, #0]
 8006798:	2160      	movs	r1, #96	@ 0x60
 800679a:	4618      	mov	r0, r3
 800679c:	f000 fc57 	bl	800704e <TIM_ITRx_SetConfig>
 80067a0:	e01c      	b.n	80067dc <HAL_TIM_ConfigClockSource+0x1c8>
 80067a2:	687b      	ldr	r3, [r7, #4]
 80067a4:	6818      	ldr	r0, [r3, #0]
 80067a6:	683b      	ldr	r3, [r7, #0]
 80067a8:	6859      	ldr	r1, [r3, #4]
 80067aa:	683b      	ldr	r3, [r7, #0]
 80067ac:	68db      	ldr	r3, [r3, #12]
 80067ae:	461a      	mov	r2, r3
 80067b0:	f000 fbee 	bl	8006f90 <TIM_TI1_ConfigInputStage>
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	681b      	ldr	r3, [r3, #0]
 80067b8:	2140      	movs	r1, #64	@ 0x40
 80067ba:	4618      	mov	r0, r3
 80067bc:	f000 fc47 	bl	800704e <TIM_ITRx_SetConfig>
 80067c0:	e00c      	b.n	80067dc <HAL_TIM_ConfigClockSource+0x1c8>
 80067c2:	687b      	ldr	r3, [r7, #4]
 80067c4:	681a      	ldr	r2, [r3, #0]
 80067c6:	683b      	ldr	r3, [r7, #0]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	4619      	mov	r1, r3
 80067cc:	4610      	mov	r0, r2
 80067ce:	f000 fc3e 	bl	800704e <TIM_ITRx_SetConfig>
 80067d2:	e003      	b.n	80067dc <HAL_TIM_ConfigClockSource+0x1c8>
 80067d4:	2301      	movs	r3, #1
 80067d6:	73fb      	strb	r3, [r7, #15]
 80067d8:	e000      	b.n	80067dc <HAL_TIM_ConfigClockSource+0x1c8>
 80067da:	bf00      	nop
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	2201      	movs	r2, #1
 80067e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80067e4:	687b      	ldr	r3, [r7, #4]
 80067e6:	2200      	movs	r2, #0
 80067e8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80067ec:	7bfb      	ldrb	r3, [r7, #15]
 80067ee:	4618      	mov	r0, r3
 80067f0:	3710      	adds	r7, #16
 80067f2:	46bd      	mov	sp, r7
 80067f4:	bd80      	pop	{r7, pc}
 80067f6:	bf00      	nop
 80067f8:	00100070 	.word	0x00100070
 80067fc:	00100040 	.word	0x00100040
 8006800:	00100030 	.word	0x00100030
 8006804:	00100020 	.word	0x00100020

08006808 <HAL_TIM_PeriodElapsedCallback>:
 8006808:	b480      	push	{r7}
 800680a:	b083      	sub	sp, #12
 800680c:	af00      	add	r7, sp, #0
 800680e:	6078      	str	r0, [r7, #4]
 8006810:	bf00      	nop
 8006812:	370c      	adds	r7, #12
 8006814:	46bd      	mov	sp, r7
 8006816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800681a:	4770      	bx	lr

0800681c <HAL_TIM_OC_DelayElapsedCallback>:
 800681c:	b480      	push	{r7}
 800681e:	b083      	sub	sp, #12
 8006820:	af00      	add	r7, sp, #0
 8006822:	6078      	str	r0, [r7, #4]
 8006824:	bf00      	nop
 8006826:	370c      	adds	r7, #12
 8006828:	46bd      	mov	sp, r7
 800682a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800682e:	4770      	bx	lr

08006830 <HAL_TIM_IC_CaptureCallback>:
 8006830:	b480      	push	{r7}
 8006832:	b083      	sub	sp, #12
 8006834:	af00      	add	r7, sp, #0
 8006836:	6078      	str	r0, [r7, #4]
 8006838:	bf00      	nop
 800683a:	370c      	adds	r7, #12
 800683c:	46bd      	mov	sp, r7
 800683e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006842:	4770      	bx	lr

08006844 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006844:	b480      	push	{r7}
 8006846:	b083      	sub	sp, #12
 8006848:	af00      	add	r7, sp, #0
 800684a:	6078      	str	r0, [r7, #4]
 800684c:	bf00      	nop
 800684e:	370c      	adds	r7, #12
 8006850:	46bd      	mov	sp, r7
 8006852:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006856:	4770      	bx	lr

08006858 <HAL_TIM_TriggerCallback>:
 8006858:	b480      	push	{r7}
 800685a:	b083      	sub	sp, #12
 800685c:	af00      	add	r7, sp, #0
 800685e:	6078      	str	r0, [r7, #4]
 8006860:	bf00      	nop
 8006862:	370c      	adds	r7, #12
 8006864:	46bd      	mov	sp, r7
 8006866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800686a:	4770      	bx	lr

0800686c <TIM_Base_SetConfig>:
 800686c:	b480      	push	{r7}
 800686e:	b085      	sub	sp, #20
 8006870:	af00      	add	r7, sp, #0
 8006872:	6078      	str	r0, [r7, #4]
 8006874:	6039      	str	r1, [r7, #0]
 8006876:	687b      	ldr	r3, [r7, #4]
 8006878:	681b      	ldr	r3, [r3, #0]
 800687a:	60fb      	str	r3, [r7, #12]
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	4a42      	ldr	r2, [pc, #264]	@ (8006988 <TIM_Base_SetConfig+0x11c>)
 8006880:	4293      	cmp	r3, r2
 8006882:	d00f      	beq.n	80068a4 <TIM_Base_SetConfig+0x38>
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800688a:	d00b      	beq.n	80068a4 <TIM_Base_SetConfig+0x38>
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	4a3f      	ldr	r2, [pc, #252]	@ (800698c <TIM_Base_SetConfig+0x120>)
 8006890:	4293      	cmp	r3, r2
 8006892:	d007      	beq.n	80068a4 <TIM_Base_SetConfig+0x38>
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	4a3e      	ldr	r2, [pc, #248]	@ (8006990 <TIM_Base_SetConfig+0x124>)
 8006898:	4293      	cmp	r3, r2
 800689a:	d003      	beq.n	80068a4 <TIM_Base_SetConfig+0x38>
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	4a3d      	ldr	r2, [pc, #244]	@ (8006994 <TIM_Base_SetConfig+0x128>)
 80068a0:	4293      	cmp	r3, r2
 80068a2:	d108      	bne.n	80068b6 <TIM_Base_SetConfig+0x4a>
 80068a4:	68fb      	ldr	r3, [r7, #12]
 80068a6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80068aa:	60fb      	str	r3, [r7, #12]
 80068ac:	683b      	ldr	r3, [r7, #0]
 80068ae:	685b      	ldr	r3, [r3, #4]
 80068b0:	68fa      	ldr	r2, [r7, #12]
 80068b2:	4313      	orrs	r3, r2
 80068b4:	60fb      	str	r3, [r7, #12]
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	4a33      	ldr	r2, [pc, #204]	@ (8006988 <TIM_Base_SetConfig+0x11c>)
 80068ba:	4293      	cmp	r3, r2
 80068bc:	d01b      	beq.n	80068f6 <TIM_Base_SetConfig+0x8a>
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80068c4:	d017      	beq.n	80068f6 <TIM_Base_SetConfig+0x8a>
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	4a30      	ldr	r2, [pc, #192]	@ (800698c <TIM_Base_SetConfig+0x120>)
 80068ca:	4293      	cmp	r3, r2
 80068cc:	d013      	beq.n	80068f6 <TIM_Base_SetConfig+0x8a>
 80068ce:	687b      	ldr	r3, [r7, #4]
 80068d0:	4a2f      	ldr	r2, [pc, #188]	@ (8006990 <TIM_Base_SetConfig+0x124>)
 80068d2:	4293      	cmp	r3, r2
 80068d4:	d00f      	beq.n	80068f6 <TIM_Base_SetConfig+0x8a>
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	4a2e      	ldr	r2, [pc, #184]	@ (8006994 <TIM_Base_SetConfig+0x128>)
 80068da:	4293      	cmp	r3, r2
 80068dc:	d00b      	beq.n	80068f6 <TIM_Base_SetConfig+0x8a>
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	4a2d      	ldr	r2, [pc, #180]	@ (8006998 <TIM_Base_SetConfig+0x12c>)
 80068e2:	4293      	cmp	r3, r2
 80068e4:	d007      	beq.n	80068f6 <TIM_Base_SetConfig+0x8a>
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	4a2c      	ldr	r2, [pc, #176]	@ (800699c <TIM_Base_SetConfig+0x130>)
 80068ea:	4293      	cmp	r3, r2
 80068ec:	d003      	beq.n	80068f6 <TIM_Base_SetConfig+0x8a>
 80068ee:	687b      	ldr	r3, [r7, #4]
 80068f0:	4a2b      	ldr	r2, [pc, #172]	@ (80069a0 <TIM_Base_SetConfig+0x134>)
 80068f2:	4293      	cmp	r3, r2
 80068f4:	d108      	bne.n	8006908 <TIM_Base_SetConfig+0x9c>
 80068f6:	68fb      	ldr	r3, [r7, #12]
 80068f8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80068fc:	60fb      	str	r3, [r7, #12]
 80068fe:	683b      	ldr	r3, [r7, #0]
 8006900:	68db      	ldr	r3, [r3, #12]
 8006902:	68fa      	ldr	r2, [r7, #12]
 8006904:	4313      	orrs	r3, r2
 8006906:	60fb      	str	r3, [r7, #12]
 8006908:	68fb      	ldr	r3, [r7, #12]
 800690a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800690e:	683b      	ldr	r3, [r7, #0]
 8006910:	695b      	ldr	r3, [r3, #20]
 8006912:	4313      	orrs	r3, r2
 8006914:	60fb      	str	r3, [r7, #12]
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	68fa      	ldr	r2, [r7, #12]
 800691a:	601a      	str	r2, [r3, #0]
 800691c:	683b      	ldr	r3, [r7, #0]
 800691e:	689a      	ldr	r2, [r3, #8]
 8006920:	687b      	ldr	r3, [r7, #4]
 8006922:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006924:	683b      	ldr	r3, [r7, #0]
 8006926:	681a      	ldr	r2, [r3, #0]
 8006928:	687b      	ldr	r3, [r7, #4]
 800692a:	629a      	str	r2, [r3, #40]	@ 0x28
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	4a16      	ldr	r2, [pc, #88]	@ (8006988 <TIM_Base_SetConfig+0x11c>)
 8006930:	4293      	cmp	r3, r2
 8006932:	d00f      	beq.n	8006954 <TIM_Base_SetConfig+0xe8>
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	4a17      	ldr	r2, [pc, #92]	@ (8006994 <TIM_Base_SetConfig+0x128>)
 8006938:	4293      	cmp	r3, r2
 800693a:	d00b      	beq.n	8006954 <TIM_Base_SetConfig+0xe8>
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	4a16      	ldr	r2, [pc, #88]	@ (8006998 <TIM_Base_SetConfig+0x12c>)
 8006940:	4293      	cmp	r3, r2
 8006942:	d007      	beq.n	8006954 <TIM_Base_SetConfig+0xe8>
 8006944:	687b      	ldr	r3, [r7, #4]
 8006946:	4a15      	ldr	r2, [pc, #84]	@ (800699c <TIM_Base_SetConfig+0x130>)
 8006948:	4293      	cmp	r3, r2
 800694a:	d003      	beq.n	8006954 <TIM_Base_SetConfig+0xe8>
 800694c:	687b      	ldr	r3, [r7, #4]
 800694e:	4a14      	ldr	r2, [pc, #80]	@ (80069a0 <TIM_Base_SetConfig+0x134>)
 8006950:	4293      	cmp	r3, r2
 8006952:	d103      	bne.n	800695c <TIM_Base_SetConfig+0xf0>
 8006954:	683b      	ldr	r3, [r7, #0]
 8006956:	691a      	ldr	r2, [r3, #16]
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	631a      	str	r2, [r3, #48]	@ 0x30
 800695c:	687b      	ldr	r3, [r7, #4]
 800695e:	2201      	movs	r2, #1
 8006960:	615a      	str	r2, [r3, #20]
 8006962:	687b      	ldr	r3, [r7, #4]
 8006964:	691b      	ldr	r3, [r3, #16]
 8006966:	f003 0301 	and.w	r3, r3, #1
 800696a:	2b01      	cmp	r3, #1
 800696c:	d105      	bne.n	800697a <TIM_Base_SetConfig+0x10e>
 800696e:	687b      	ldr	r3, [r7, #4]
 8006970:	691b      	ldr	r3, [r3, #16]
 8006972:	f023 0201 	bic.w	r2, r3, #1
 8006976:	687b      	ldr	r3, [r7, #4]
 8006978:	611a      	str	r2, [r3, #16]
 800697a:	bf00      	nop
 800697c:	3714      	adds	r7, #20
 800697e:	46bd      	mov	sp, r7
 8006980:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006984:	4770      	bx	lr
 8006986:	bf00      	nop
 8006988:	40012c00 	.word	0x40012c00
 800698c:	40000400 	.word	0x40000400
 8006990:	40000800 	.word	0x40000800
 8006994:	40013400 	.word	0x40013400
 8006998:	40014000 	.word	0x40014000
 800699c:	40014400 	.word	0x40014400
 80069a0:	40014800 	.word	0x40014800

080069a4 <TIM_OC1_SetConfig>:
 80069a4:	b480      	push	{r7}
 80069a6:	b087      	sub	sp, #28
 80069a8:	af00      	add	r7, sp, #0
 80069aa:	6078      	str	r0, [r7, #4]
 80069ac:	6039      	str	r1, [r7, #0]
 80069ae:	687b      	ldr	r3, [r7, #4]
 80069b0:	6a1b      	ldr	r3, [r3, #32]
 80069b2:	617b      	str	r3, [r7, #20]
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	6a1b      	ldr	r3, [r3, #32]
 80069b8:	f023 0201 	bic.w	r2, r3, #1
 80069bc:	687b      	ldr	r3, [r7, #4]
 80069be:	621a      	str	r2, [r3, #32]
 80069c0:	687b      	ldr	r3, [r7, #4]
 80069c2:	685b      	ldr	r3, [r3, #4]
 80069c4:	613b      	str	r3, [r7, #16]
 80069c6:	687b      	ldr	r3, [r7, #4]
 80069c8:	699b      	ldr	r3, [r3, #24]
 80069ca:	60fb      	str	r3, [r7, #12]
 80069cc:	68fb      	ldr	r3, [r7, #12]
 80069ce:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80069d2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80069d6:	60fb      	str	r3, [r7, #12]
 80069d8:	68fb      	ldr	r3, [r7, #12]
 80069da:	f023 0303 	bic.w	r3, r3, #3
 80069de:	60fb      	str	r3, [r7, #12]
 80069e0:	683b      	ldr	r3, [r7, #0]
 80069e2:	681b      	ldr	r3, [r3, #0]
 80069e4:	68fa      	ldr	r2, [r7, #12]
 80069e6:	4313      	orrs	r3, r2
 80069e8:	60fb      	str	r3, [r7, #12]
 80069ea:	697b      	ldr	r3, [r7, #20]
 80069ec:	f023 0302 	bic.w	r3, r3, #2
 80069f0:	617b      	str	r3, [r7, #20]
 80069f2:	683b      	ldr	r3, [r7, #0]
 80069f4:	689b      	ldr	r3, [r3, #8]
 80069f6:	697a      	ldr	r2, [r7, #20]
 80069f8:	4313      	orrs	r3, r2
 80069fa:	617b      	str	r3, [r7, #20]
 80069fc:	687b      	ldr	r3, [r7, #4]
 80069fe:	4a2c      	ldr	r2, [pc, #176]	@ (8006ab0 <TIM_OC1_SetConfig+0x10c>)
 8006a00:	4293      	cmp	r3, r2
 8006a02:	d00f      	beq.n	8006a24 <TIM_OC1_SetConfig+0x80>
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	4a2b      	ldr	r2, [pc, #172]	@ (8006ab4 <TIM_OC1_SetConfig+0x110>)
 8006a08:	4293      	cmp	r3, r2
 8006a0a:	d00b      	beq.n	8006a24 <TIM_OC1_SetConfig+0x80>
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	4a2a      	ldr	r2, [pc, #168]	@ (8006ab8 <TIM_OC1_SetConfig+0x114>)
 8006a10:	4293      	cmp	r3, r2
 8006a12:	d007      	beq.n	8006a24 <TIM_OC1_SetConfig+0x80>
 8006a14:	687b      	ldr	r3, [r7, #4]
 8006a16:	4a29      	ldr	r2, [pc, #164]	@ (8006abc <TIM_OC1_SetConfig+0x118>)
 8006a18:	4293      	cmp	r3, r2
 8006a1a:	d003      	beq.n	8006a24 <TIM_OC1_SetConfig+0x80>
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	4a28      	ldr	r2, [pc, #160]	@ (8006ac0 <TIM_OC1_SetConfig+0x11c>)
 8006a20:	4293      	cmp	r3, r2
 8006a22:	d10c      	bne.n	8006a3e <TIM_OC1_SetConfig+0x9a>
 8006a24:	697b      	ldr	r3, [r7, #20]
 8006a26:	f023 0308 	bic.w	r3, r3, #8
 8006a2a:	617b      	str	r3, [r7, #20]
 8006a2c:	683b      	ldr	r3, [r7, #0]
 8006a2e:	68db      	ldr	r3, [r3, #12]
 8006a30:	697a      	ldr	r2, [r7, #20]
 8006a32:	4313      	orrs	r3, r2
 8006a34:	617b      	str	r3, [r7, #20]
 8006a36:	697b      	ldr	r3, [r7, #20]
 8006a38:	f023 0304 	bic.w	r3, r3, #4
 8006a3c:	617b      	str	r3, [r7, #20]
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	4a1b      	ldr	r2, [pc, #108]	@ (8006ab0 <TIM_OC1_SetConfig+0x10c>)
 8006a42:	4293      	cmp	r3, r2
 8006a44:	d00f      	beq.n	8006a66 <TIM_OC1_SetConfig+0xc2>
 8006a46:	687b      	ldr	r3, [r7, #4]
 8006a48:	4a1a      	ldr	r2, [pc, #104]	@ (8006ab4 <TIM_OC1_SetConfig+0x110>)
 8006a4a:	4293      	cmp	r3, r2
 8006a4c:	d00b      	beq.n	8006a66 <TIM_OC1_SetConfig+0xc2>
 8006a4e:	687b      	ldr	r3, [r7, #4]
 8006a50:	4a19      	ldr	r2, [pc, #100]	@ (8006ab8 <TIM_OC1_SetConfig+0x114>)
 8006a52:	4293      	cmp	r3, r2
 8006a54:	d007      	beq.n	8006a66 <TIM_OC1_SetConfig+0xc2>
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	4a18      	ldr	r2, [pc, #96]	@ (8006abc <TIM_OC1_SetConfig+0x118>)
 8006a5a:	4293      	cmp	r3, r2
 8006a5c:	d003      	beq.n	8006a66 <TIM_OC1_SetConfig+0xc2>
 8006a5e:	687b      	ldr	r3, [r7, #4]
 8006a60:	4a17      	ldr	r2, [pc, #92]	@ (8006ac0 <TIM_OC1_SetConfig+0x11c>)
 8006a62:	4293      	cmp	r3, r2
 8006a64:	d111      	bne.n	8006a8a <TIM_OC1_SetConfig+0xe6>
 8006a66:	693b      	ldr	r3, [r7, #16]
 8006a68:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006a6c:	613b      	str	r3, [r7, #16]
 8006a6e:	693b      	ldr	r3, [r7, #16]
 8006a70:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006a74:	613b      	str	r3, [r7, #16]
 8006a76:	683b      	ldr	r3, [r7, #0]
 8006a78:	695b      	ldr	r3, [r3, #20]
 8006a7a:	693a      	ldr	r2, [r7, #16]
 8006a7c:	4313      	orrs	r3, r2
 8006a7e:	613b      	str	r3, [r7, #16]
 8006a80:	683b      	ldr	r3, [r7, #0]
 8006a82:	699b      	ldr	r3, [r3, #24]
 8006a84:	693a      	ldr	r2, [r7, #16]
 8006a86:	4313      	orrs	r3, r2
 8006a88:	613b      	str	r3, [r7, #16]
 8006a8a:	687b      	ldr	r3, [r7, #4]
 8006a8c:	693a      	ldr	r2, [r7, #16]
 8006a8e:	605a      	str	r2, [r3, #4]
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	68fa      	ldr	r2, [r7, #12]
 8006a94:	619a      	str	r2, [r3, #24]
 8006a96:	683b      	ldr	r3, [r7, #0]
 8006a98:	685a      	ldr	r2, [r3, #4]
 8006a9a:	687b      	ldr	r3, [r7, #4]
 8006a9c:	635a      	str	r2, [r3, #52]	@ 0x34
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	697a      	ldr	r2, [r7, #20]
 8006aa2:	621a      	str	r2, [r3, #32]
 8006aa4:	bf00      	nop
 8006aa6:	371c      	adds	r7, #28
 8006aa8:	46bd      	mov	sp, r7
 8006aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006aae:	4770      	bx	lr
 8006ab0:	40012c00 	.word	0x40012c00
 8006ab4:	40013400 	.word	0x40013400
 8006ab8:	40014000 	.word	0x40014000
 8006abc:	40014400 	.word	0x40014400
 8006ac0:	40014800 	.word	0x40014800

08006ac4 <TIM_OC2_SetConfig>:
 8006ac4:	b480      	push	{r7}
 8006ac6:	b087      	sub	sp, #28
 8006ac8:	af00      	add	r7, sp, #0
 8006aca:	6078      	str	r0, [r7, #4]
 8006acc:	6039      	str	r1, [r7, #0]
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	6a1b      	ldr	r3, [r3, #32]
 8006ad2:	617b      	str	r3, [r7, #20]
 8006ad4:	687b      	ldr	r3, [r7, #4]
 8006ad6:	6a1b      	ldr	r3, [r3, #32]
 8006ad8:	f023 0210 	bic.w	r2, r3, #16
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	621a      	str	r2, [r3, #32]
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	685b      	ldr	r3, [r3, #4]
 8006ae4:	613b      	str	r3, [r7, #16]
 8006ae6:	687b      	ldr	r3, [r7, #4]
 8006ae8:	699b      	ldr	r3, [r3, #24]
 8006aea:	60fb      	str	r3, [r7, #12]
 8006aec:	68fb      	ldr	r3, [r7, #12]
 8006aee:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006af2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006af6:	60fb      	str	r3, [r7, #12]
 8006af8:	68fb      	ldr	r3, [r7, #12]
 8006afa:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006afe:	60fb      	str	r3, [r7, #12]
 8006b00:	683b      	ldr	r3, [r7, #0]
 8006b02:	681b      	ldr	r3, [r3, #0]
 8006b04:	021b      	lsls	r3, r3, #8
 8006b06:	68fa      	ldr	r2, [r7, #12]
 8006b08:	4313      	orrs	r3, r2
 8006b0a:	60fb      	str	r3, [r7, #12]
 8006b0c:	697b      	ldr	r3, [r7, #20]
 8006b0e:	f023 0320 	bic.w	r3, r3, #32
 8006b12:	617b      	str	r3, [r7, #20]
 8006b14:	683b      	ldr	r3, [r7, #0]
 8006b16:	689b      	ldr	r3, [r3, #8]
 8006b18:	011b      	lsls	r3, r3, #4
 8006b1a:	697a      	ldr	r2, [r7, #20]
 8006b1c:	4313      	orrs	r3, r2
 8006b1e:	617b      	str	r3, [r7, #20]
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	4a28      	ldr	r2, [pc, #160]	@ (8006bc4 <TIM_OC2_SetConfig+0x100>)
 8006b24:	4293      	cmp	r3, r2
 8006b26:	d003      	beq.n	8006b30 <TIM_OC2_SetConfig+0x6c>
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	4a27      	ldr	r2, [pc, #156]	@ (8006bc8 <TIM_OC2_SetConfig+0x104>)
 8006b2c:	4293      	cmp	r3, r2
 8006b2e:	d10d      	bne.n	8006b4c <TIM_OC2_SetConfig+0x88>
 8006b30:	697b      	ldr	r3, [r7, #20]
 8006b32:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006b36:	617b      	str	r3, [r7, #20]
 8006b38:	683b      	ldr	r3, [r7, #0]
 8006b3a:	68db      	ldr	r3, [r3, #12]
 8006b3c:	011b      	lsls	r3, r3, #4
 8006b3e:	697a      	ldr	r2, [r7, #20]
 8006b40:	4313      	orrs	r3, r2
 8006b42:	617b      	str	r3, [r7, #20]
 8006b44:	697b      	ldr	r3, [r7, #20]
 8006b46:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006b4a:	617b      	str	r3, [r7, #20]
 8006b4c:	687b      	ldr	r3, [r7, #4]
 8006b4e:	4a1d      	ldr	r2, [pc, #116]	@ (8006bc4 <TIM_OC2_SetConfig+0x100>)
 8006b50:	4293      	cmp	r3, r2
 8006b52:	d00f      	beq.n	8006b74 <TIM_OC2_SetConfig+0xb0>
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	4a1c      	ldr	r2, [pc, #112]	@ (8006bc8 <TIM_OC2_SetConfig+0x104>)
 8006b58:	4293      	cmp	r3, r2
 8006b5a:	d00b      	beq.n	8006b74 <TIM_OC2_SetConfig+0xb0>
 8006b5c:	687b      	ldr	r3, [r7, #4]
 8006b5e:	4a1b      	ldr	r2, [pc, #108]	@ (8006bcc <TIM_OC2_SetConfig+0x108>)
 8006b60:	4293      	cmp	r3, r2
 8006b62:	d007      	beq.n	8006b74 <TIM_OC2_SetConfig+0xb0>
 8006b64:	687b      	ldr	r3, [r7, #4]
 8006b66:	4a1a      	ldr	r2, [pc, #104]	@ (8006bd0 <TIM_OC2_SetConfig+0x10c>)
 8006b68:	4293      	cmp	r3, r2
 8006b6a:	d003      	beq.n	8006b74 <TIM_OC2_SetConfig+0xb0>
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	4a19      	ldr	r2, [pc, #100]	@ (8006bd4 <TIM_OC2_SetConfig+0x110>)
 8006b70:	4293      	cmp	r3, r2
 8006b72:	d113      	bne.n	8006b9c <TIM_OC2_SetConfig+0xd8>
 8006b74:	693b      	ldr	r3, [r7, #16]
 8006b76:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006b7a:	613b      	str	r3, [r7, #16]
 8006b7c:	693b      	ldr	r3, [r7, #16]
 8006b7e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006b82:	613b      	str	r3, [r7, #16]
 8006b84:	683b      	ldr	r3, [r7, #0]
 8006b86:	695b      	ldr	r3, [r3, #20]
 8006b88:	009b      	lsls	r3, r3, #2
 8006b8a:	693a      	ldr	r2, [r7, #16]
 8006b8c:	4313      	orrs	r3, r2
 8006b8e:	613b      	str	r3, [r7, #16]
 8006b90:	683b      	ldr	r3, [r7, #0]
 8006b92:	699b      	ldr	r3, [r3, #24]
 8006b94:	009b      	lsls	r3, r3, #2
 8006b96:	693a      	ldr	r2, [r7, #16]
 8006b98:	4313      	orrs	r3, r2
 8006b9a:	613b      	str	r3, [r7, #16]
 8006b9c:	687b      	ldr	r3, [r7, #4]
 8006b9e:	693a      	ldr	r2, [r7, #16]
 8006ba0:	605a      	str	r2, [r3, #4]
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	68fa      	ldr	r2, [r7, #12]
 8006ba6:	619a      	str	r2, [r3, #24]
 8006ba8:	683b      	ldr	r3, [r7, #0]
 8006baa:	685a      	ldr	r2, [r3, #4]
 8006bac:	687b      	ldr	r3, [r7, #4]
 8006bae:	639a      	str	r2, [r3, #56]	@ 0x38
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	697a      	ldr	r2, [r7, #20]
 8006bb4:	621a      	str	r2, [r3, #32]
 8006bb6:	bf00      	nop
 8006bb8:	371c      	adds	r7, #28
 8006bba:	46bd      	mov	sp, r7
 8006bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bc0:	4770      	bx	lr
 8006bc2:	bf00      	nop
 8006bc4:	40012c00 	.word	0x40012c00
 8006bc8:	40013400 	.word	0x40013400
 8006bcc:	40014000 	.word	0x40014000
 8006bd0:	40014400 	.word	0x40014400
 8006bd4:	40014800 	.word	0x40014800

08006bd8 <TIM_OC3_SetConfig>:
 8006bd8:	b480      	push	{r7}
 8006bda:	b087      	sub	sp, #28
 8006bdc:	af00      	add	r7, sp, #0
 8006bde:	6078      	str	r0, [r7, #4]
 8006be0:	6039      	str	r1, [r7, #0]
 8006be2:	687b      	ldr	r3, [r7, #4]
 8006be4:	6a1b      	ldr	r3, [r3, #32]
 8006be6:	617b      	str	r3, [r7, #20]
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	6a1b      	ldr	r3, [r3, #32]
 8006bec:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8006bf0:	687b      	ldr	r3, [r7, #4]
 8006bf2:	621a      	str	r2, [r3, #32]
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	685b      	ldr	r3, [r3, #4]
 8006bf8:	613b      	str	r3, [r7, #16]
 8006bfa:	687b      	ldr	r3, [r7, #4]
 8006bfc:	69db      	ldr	r3, [r3, #28]
 8006bfe:	60fb      	str	r3, [r7, #12]
 8006c00:	68fb      	ldr	r3, [r7, #12]
 8006c02:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006c06:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006c0a:	60fb      	str	r3, [r7, #12]
 8006c0c:	68fb      	ldr	r3, [r7, #12]
 8006c0e:	f023 0303 	bic.w	r3, r3, #3
 8006c12:	60fb      	str	r3, [r7, #12]
 8006c14:	683b      	ldr	r3, [r7, #0]
 8006c16:	681b      	ldr	r3, [r3, #0]
 8006c18:	68fa      	ldr	r2, [r7, #12]
 8006c1a:	4313      	orrs	r3, r2
 8006c1c:	60fb      	str	r3, [r7, #12]
 8006c1e:	697b      	ldr	r3, [r7, #20]
 8006c20:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006c24:	617b      	str	r3, [r7, #20]
 8006c26:	683b      	ldr	r3, [r7, #0]
 8006c28:	689b      	ldr	r3, [r3, #8]
 8006c2a:	021b      	lsls	r3, r3, #8
 8006c2c:	697a      	ldr	r2, [r7, #20]
 8006c2e:	4313      	orrs	r3, r2
 8006c30:	617b      	str	r3, [r7, #20]
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	4a27      	ldr	r2, [pc, #156]	@ (8006cd4 <TIM_OC3_SetConfig+0xfc>)
 8006c36:	4293      	cmp	r3, r2
 8006c38:	d003      	beq.n	8006c42 <TIM_OC3_SetConfig+0x6a>
 8006c3a:	687b      	ldr	r3, [r7, #4]
 8006c3c:	4a26      	ldr	r2, [pc, #152]	@ (8006cd8 <TIM_OC3_SetConfig+0x100>)
 8006c3e:	4293      	cmp	r3, r2
 8006c40:	d10d      	bne.n	8006c5e <TIM_OC3_SetConfig+0x86>
 8006c42:	697b      	ldr	r3, [r7, #20]
 8006c44:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006c48:	617b      	str	r3, [r7, #20]
 8006c4a:	683b      	ldr	r3, [r7, #0]
 8006c4c:	68db      	ldr	r3, [r3, #12]
 8006c4e:	021b      	lsls	r3, r3, #8
 8006c50:	697a      	ldr	r2, [r7, #20]
 8006c52:	4313      	orrs	r3, r2
 8006c54:	617b      	str	r3, [r7, #20]
 8006c56:	697b      	ldr	r3, [r7, #20]
 8006c58:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006c5c:	617b      	str	r3, [r7, #20]
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	4a1c      	ldr	r2, [pc, #112]	@ (8006cd4 <TIM_OC3_SetConfig+0xfc>)
 8006c62:	4293      	cmp	r3, r2
 8006c64:	d00f      	beq.n	8006c86 <TIM_OC3_SetConfig+0xae>
 8006c66:	687b      	ldr	r3, [r7, #4]
 8006c68:	4a1b      	ldr	r2, [pc, #108]	@ (8006cd8 <TIM_OC3_SetConfig+0x100>)
 8006c6a:	4293      	cmp	r3, r2
 8006c6c:	d00b      	beq.n	8006c86 <TIM_OC3_SetConfig+0xae>
 8006c6e:	687b      	ldr	r3, [r7, #4]
 8006c70:	4a1a      	ldr	r2, [pc, #104]	@ (8006cdc <TIM_OC3_SetConfig+0x104>)
 8006c72:	4293      	cmp	r3, r2
 8006c74:	d007      	beq.n	8006c86 <TIM_OC3_SetConfig+0xae>
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	4a19      	ldr	r2, [pc, #100]	@ (8006ce0 <TIM_OC3_SetConfig+0x108>)
 8006c7a:	4293      	cmp	r3, r2
 8006c7c:	d003      	beq.n	8006c86 <TIM_OC3_SetConfig+0xae>
 8006c7e:	687b      	ldr	r3, [r7, #4]
 8006c80:	4a18      	ldr	r2, [pc, #96]	@ (8006ce4 <TIM_OC3_SetConfig+0x10c>)
 8006c82:	4293      	cmp	r3, r2
 8006c84:	d113      	bne.n	8006cae <TIM_OC3_SetConfig+0xd6>
 8006c86:	693b      	ldr	r3, [r7, #16]
 8006c88:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006c8c:	613b      	str	r3, [r7, #16]
 8006c8e:	693b      	ldr	r3, [r7, #16]
 8006c90:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006c94:	613b      	str	r3, [r7, #16]
 8006c96:	683b      	ldr	r3, [r7, #0]
 8006c98:	695b      	ldr	r3, [r3, #20]
 8006c9a:	011b      	lsls	r3, r3, #4
 8006c9c:	693a      	ldr	r2, [r7, #16]
 8006c9e:	4313      	orrs	r3, r2
 8006ca0:	613b      	str	r3, [r7, #16]
 8006ca2:	683b      	ldr	r3, [r7, #0]
 8006ca4:	699b      	ldr	r3, [r3, #24]
 8006ca6:	011b      	lsls	r3, r3, #4
 8006ca8:	693a      	ldr	r2, [r7, #16]
 8006caa:	4313      	orrs	r3, r2
 8006cac:	613b      	str	r3, [r7, #16]
 8006cae:	687b      	ldr	r3, [r7, #4]
 8006cb0:	693a      	ldr	r2, [r7, #16]
 8006cb2:	605a      	str	r2, [r3, #4]
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	68fa      	ldr	r2, [r7, #12]
 8006cb8:	61da      	str	r2, [r3, #28]
 8006cba:	683b      	ldr	r3, [r7, #0]
 8006cbc:	685a      	ldr	r2, [r3, #4]
 8006cbe:	687b      	ldr	r3, [r7, #4]
 8006cc0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006cc2:	687b      	ldr	r3, [r7, #4]
 8006cc4:	697a      	ldr	r2, [r7, #20]
 8006cc6:	621a      	str	r2, [r3, #32]
 8006cc8:	bf00      	nop
 8006cca:	371c      	adds	r7, #28
 8006ccc:	46bd      	mov	sp, r7
 8006cce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cd2:	4770      	bx	lr
 8006cd4:	40012c00 	.word	0x40012c00
 8006cd8:	40013400 	.word	0x40013400
 8006cdc:	40014000 	.word	0x40014000
 8006ce0:	40014400 	.word	0x40014400
 8006ce4:	40014800 	.word	0x40014800

08006ce8 <TIM_OC4_SetConfig>:
 8006ce8:	b480      	push	{r7}
 8006cea:	b087      	sub	sp, #28
 8006cec:	af00      	add	r7, sp, #0
 8006cee:	6078      	str	r0, [r7, #4]
 8006cf0:	6039      	str	r1, [r7, #0]
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	6a1b      	ldr	r3, [r3, #32]
 8006cf6:	617b      	str	r3, [r7, #20]
 8006cf8:	687b      	ldr	r3, [r7, #4]
 8006cfa:	6a1b      	ldr	r3, [r3, #32]
 8006cfc:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	621a      	str	r2, [r3, #32]
 8006d04:	687b      	ldr	r3, [r7, #4]
 8006d06:	685b      	ldr	r3, [r3, #4]
 8006d08:	613b      	str	r3, [r7, #16]
 8006d0a:	687b      	ldr	r3, [r7, #4]
 8006d0c:	69db      	ldr	r3, [r3, #28]
 8006d0e:	60fb      	str	r3, [r7, #12]
 8006d10:	68fb      	ldr	r3, [r7, #12]
 8006d12:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006d16:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006d1a:	60fb      	str	r3, [r7, #12]
 8006d1c:	68fb      	ldr	r3, [r7, #12]
 8006d1e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006d22:	60fb      	str	r3, [r7, #12]
 8006d24:	683b      	ldr	r3, [r7, #0]
 8006d26:	681b      	ldr	r3, [r3, #0]
 8006d28:	021b      	lsls	r3, r3, #8
 8006d2a:	68fa      	ldr	r2, [r7, #12]
 8006d2c:	4313      	orrs	r3, r2
 8006d2e:	60fb      	str	r3, [r7, #12]
 8006d30:	697b      	ldr	r3, [r7, #20]
 8006d32:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006d36:	617b      	str	r3, [r7, #20]
 8006d38:	683b      	ldr	r3, [r7, #0]
 8006d3a:	689b      	ldr	r3, [r3, #8]
 8006d3c:	031b      	lsls	r3, r3, #12
 8006d3e:	697a      	ldr	r2, [r7, #20]
 8006d40:	4313      	orrs	r3, r2
 8006d42:	617b      	str	r3, [r7, #20]
 8006d44:	687b      	ldr	r3, [r7, #4]
 8006d46:	4a28      	ldr	r2, [pc, #160]	@ (8006de8 <TIM_OC4_SetConfig+0x100>)
 8006d48:	4293      	cmp	r3, r2
 8006d4a:	d003      	beq.n	8006d54 <TIM_OC4_SetConfig+0x6c>
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	4a27      	ldr	r2, [pc, #156]	@ (8006dec <TIM_OC4_SetConfig+0x104>)
 8006d50:	4293      	cmp	r3, r2
 8006d52:	d10d      	bne.n	8006d70 <TIM_OC4_SetConfig+0x88>
 8006d54:	697b      	ldr	r3, [r7, #20]
 8006d56:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8006d5a:	617b      	str	r3, [r7, #20]
 8006d5c:	683b      	ldr	r3, [r7, #0]
 8006d5e:	68db      	ldr	r3, [r3, #12]
 8006d60:	031b      	lsls	r3, r3, #12
 8006d62:	697a      	ldr	r2, [r7, #20]
 8006d64:	4313      	orrs	r3, r2
 8006d66:	617b      	str	r3, [r7, #20]
 8006d68:	697b      	ldr	r3, [r7, #20]
 8006d6a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006d6e:	617b      	str	r3, [r7, #20]
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	4a1d      	ldr	r2, [pc, #116]	@ (8006de8 <TIM_OC4_SetConfig+0x100>)
 8006d74:	4293      	cmp	r3, r2
 8006d76:	d00f      	beq.n	8006d98 <TIM_OC4_SetConfig+0xb0>
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	4a1c      	ldr	r2, [pc, #112]	@ (8006dec <TIM_OC4_SetConfig+0x104>)
 8006d7c:	4293      	cmp	r3, r2
 8006d7e:	d00b      	beq.n	8006d98 <TIM_OC4_SetConfig+0xb0>
 8006d80:	687b      	ldr	r3, [r7, #4]
 8006d82:	4a1b      	ldr	r2, [pc, #108]	@ (8006df0 <TIM_OC4_SetConfig+0x108>)
 8006d84:	4293      	cmp	r3, r2
 8006d86:	d007      	beq.n	8006d98 <TIM_OC4_SetConfig+0xb0>
 8006d88:	687b      	ldr	r3, [r7, #4]
 8006d8a:	4a1a      	ldr	r2, [pc, #104]	@ (8006df4 <TIM_OC4_SetConfig+0x10c>)
 8006d8c:	4293      	cmp	r3, r2
 8006d8e:	d003      	beq.n	8006d98 <TIM_OC4_SetConfig+0xb0>
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	4a19      	ldr	r2, [pc, #100]	@ (8006df8 <TIM_OC4_SetConfig+0x110>)
 8006d94:	4293      	cmp	r3, r2
 8006d96:	d113      	bne.n	8006dc0 <TIM_OC4_SetConfig+0xd8>
 8006d98:	693b      	ldr	r3, [r7, #16]
 8006d9a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006d9e:	613b      	str	r3, [r7, #16]
 8006da0:	693b      	ldr	r3, [r7, #16]
 8006da2:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8006da6:	613b      	str	r3, [r7, #16]
 8006da8:	683b      	ldr	r3, [r7, #0]
 8006daa:	695b      	ldr	r3, [r3, #20]
 8006dac:	019b      	lsls	r3, r3, #6
 8006dae:	693a      	ldr	r2, [r7, #16]
 8006db0:	4313      	orrs	r3, r2
 8006db2:	613b      	str	r3, [r7, #16]
 8006db4:	683b      	ldr	r3, [r7, #0]
 8006db6:	699b      	ldr	r3, [r3, #24]
 8006db8:	019b      	lsls	r3, r3, #6
 8006dba:	693a      	ldr	r2, [r7, #16]
 8006dbc:	4313      	orrs	r3, r2
 8006dbe:	613b      	str	r3, [r7, #16]
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	693a      	ldr	r2, [r7, #16]
 8006dc4:	605a      	str	r2, [r3, #4]
 8006dc6:	687b      	ldr	r3, [r7, #4]
 8006dc8:	68fa      	ldr	r2, [r7, #12]
 8006dca:	61da      	str	r2, [r3, #28]
 8006dcc:	683b      	ldr	r3, [r7, #0]
 8006dce:	685a      	ldr	r2, [r3, #4]
 8006dd0:	687b      	ldr	r3, [r7, #4]
 8006dd2:	641a      	str	r2, [r3, #64]	@ 0x40
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	697a      	ldr	r2, [r7, #20]
 8006dd8:	621a      	str	r2, [r3, #32]
 8006dda:	bf00      	nop
 8006ddc:	371c      	adds	r7, #28
 8006dde:	46bd      	mov	sp, r7
 8006de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006de4:	4770      	bx	lr
 8006de6:	bf00      	nop
 8006de8:	40012c00 	.word	0x40012c00
 8006dec:	40013400 	.word	0x40013400
 8006df0:	40014000 	.word	0x40014000
 8006df4:	40014400 	.word	0x40014400
 8006df8:	40014800 	.word	0x40014800

08006dfc <TIM_OC5_SetConfig>:
 8006dfc:	b480      	push	{r7}
 8006dfe:	b087      	sub	sp, #28
 8006e00:	af00      	add	r7, sp, #0
 8006e02:	6078      	str	r0, [r7, #4]
 8006e04:	6039      	str	r1, [r7, #0]
 8006e06:	687b      	ldr	r3, [r7, #4]
 8006e08:	6a1b      	ldr	r3, [r3, #32]
 8006e0a:	613b      	str	r3, [r7, #16]
 8006e0c:	687b      	ldr	r3, [r7, #4]
 8006e0e:	6a1b      	ldr	r3, [r3, #32]
 8006e10:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	621a      	str	r2, [r3, #32]
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	685b      	ldr	r3, [r3, #4]
 8006e1c:	617b      	str	r3, [r7, #20]
 8006e1e:	687b      	ldr	r3, [r7, #4]
 8006e20:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006e22:	60fb      	str	r3, [r7, #12]
 8006e24:	68fb      	ldr	r3, [r7, #12]
 8006e26:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006e2a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006e2e:	60fb      	str	r3, [r7, #12]
 8006e30:	683b      	ldr	r3, [r7, #0]
 8006e32:	681b      	ldr	r3, [r3, #0]
 8006e34:	68fa      	ldr	r2, [r7, #12]
 8006e36:	4313      	orrs	r3, r2
 8006e38:	60fb      	str	r3, [r7, #12]
 8006e3a:	693b      	ldr	r3, [r7, #16]
 8006e3c:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8006e40:	613b      	str	r3, [r7, #16]
 8006e42:	683b      	ldr	r3, [r7, #0]
 8006e44:	689b      	ldr	r3, [r3, #8]
 8006e46:	041b      	lsls	r3, r3, #16
 8006e48:	693a      	ldr	r2, [r7, #16]
 8006e4a:	4313      	orrs	r3, r2
 8006e4c:	613b      	str	r3, [r7, #16]
 8006e4e:	687b      	ldr	r3, [r7, #4]
 8006e50:	4a17      	ldr	r2, [pc, #92]	@ (8006eb0 <TIM_OC5_SetConfig+0xb4>)
 8006e52:	4293      	cmp	r3, r2
 8006e54:	d00f      	beq.n	8006e76 <TIM_OC5_SetConfig+0x7a>
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	4a16      	ldr	r2, [pc, #88]	@ (8006eb4 <TIM_OC5_SetConfig+0xb8>)
 8006e5a:	4293      	cmp	r3, r2
 8006e5c:	d00b      	beq.n	8006e76 <TIM_OC5_SetConfig+0x7a>
 8006e5e:	687b      	ldr	r3, [r7, #4]
 8006e60:	4a15      	ldr	r2, [pc, #84]	@ (8006eb8 <TIM_OC5_SetConfig+0xbc>)
 8006e62:	4293      	cmp	r3, r2
 8006e64:	d007      	beq.n	8006e76 <TIM_OC5_SetConfig+0x7a>
 8006e66:	687b      	ldr	r3, [r7, #4]
 8006e68:	4a14      	ldr	r2, [pc, #80]	@ (8006ebc <TIM_OC5_SetConfig+0xc0>)
 8006e6a:	4293      	cmp	r3, r2
 8006e6c:	d003      	beq.n	8006e76 <TIM_OC5_SetConfig+0x7a>
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	4a13      	ldr	r2, [pc, #76]	@ (8006ec0 <TIM_OC5_SetConfig+0xc4>)
 8006e72:	4293      	cmp	r3, r2
 8006e74:	d109      	bne.n	8006e8a <TIM_OC5_SetConfig+0x8e>
 8006e76:	697b      	ldr	r3, [r7, #20]
 8006e78:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006e7c:	617b      	str	r3, [r7, #20]
 8006e7e:	683b      	ldr	r3, [r7, #0]
 8006e80:	695b      	ldr	r3, [r3, #20]
 8006e82:	021b      	lsls	r3, r3, #8
 8006e84:	697a      	ldr	r2, [r7, #20]
 8006e86:	4313      	orrs	r3, r2
 8006e88:	617b      	str	r3, [r7, #20]
 8006e8a:	687b      	ldr	r3, [r7, #4]
 8006e8c:	697a      	ldr	r2, [r7, #20]
 8006e8e:	605a      	str	r2, [r3, #4]
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	68fa      	ldr	r2, [r7, #12]
 8006e94:	651a      	str	r2, [r3, #80]	@ 0x50
 8006e96:	683b      	ldr	r3, [r7, #0]
 8006e98:	685a      	ldr	r2, [r3, #4]
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	649a      	str	r2, [r3, #72]	@ 0x48
 8006e9e:	687b      	ldr	r3, [r7, #4]
 8006ea0:	693a      	ldr	r2, [r7, #16]
 8006ea2:	621a      	str	r2, [r3, #32]
 8006ea4:	bf00      	nop
 8006ea6:	371c      	adds	r7, #28
 8006ea8:	46bd      	mov	sp, r7
 8006eaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006eae:	4770      	bx	lr
 8006eb0:	40012c00 	.word	0x40012c00
 8006eb4:	40013400 	.word	0x40013400
 8006eb8:	40014000 	.word	0x40014000
 8006ebc:	40014400 	.word	0x40014400
 8006ec0:	40014800 	.word	0x40014800

08006ec4 <TIM_OC6_SetConfig>:
 8006ec4:	b480      	push	{r7}
 8006ec6:	b087      	sub	sp, #28
 8006ec8:	af00      	add	r7, sp, #0
 8006eca:	6078      	str	r0, [r7, #4]
 8006ecc:	6039      	str	r1, [r7, #0]
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	6a1b      	ldr	r3, [r3, #32]
 8006ed2:	613b      	str	r3, [r7, #16]
 8006ed4:	687b      	ldr	r3, [r7, #4]
 8006ed6:	6a1b      	ldr	r3, [r3, #32]
 8006ed8:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	621a      	str	r2, [r3, #32]
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	685b      	ldr	r3, [r3, #4]
 8006ee4:	617b      	str	r3, [r7, #20]
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006eea:	60fb      	str	r3, [r7, #12]
 8006eec:	68fb      	ldr	r3, [r7, #12]
 8006eee:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006ef2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006ef6:	60fb      	str	r3, [r7, #12]
 8006ef8:	683b      	ldr	r3, [r7, #0]
 8006efa:	681b      	ldr	r3, [r3, #0]
 8006efc:	021b      	lsls	r3, r3, #8
 8006efe:	68fa      	ldr	r2, [r7, #12]
 8006f00:	4313      	orrs	r3, r2
 8006f02:	60fb      	str	r3, [r7, #12]
 8006f04:	693b      	ldr	r3, [r7, #16]
 8006f06:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8006f0a:	613b      	str	r3, [r7, #16]
 8006f0c:	683b      	ldr	r3, [r7, #0]
 8006f0e:	689b      	ldr	r3, [r3, #8]
 8006f10:	051b      	lsls	r3, r3, #20
 8006f12:	693a      	ldr	r2, [r7, #16]
 8006f14:	4313      	orrs	r3, r2
 8006f16:	613b      	str	r3, [r7, #16]
 8006f18:	687b      	ldr	r3, [r7, #4]
 8006f1a:	4a18      	ldr	r2, [pc, #96]	@ (8006f7c <TIM_OC6_SetConfig+0xb8>)
 8006f1c:	4293      	cmp	r3, r2
 8006f1e:	d00f      	beq.n	8006f40 <TIM_OC6_SetConfig+0x7c>
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	4a17      	ldr	r2, [pc, #92]	@ (8006f80 <TIM_OC6_SetConfig+0xbc>)
 8006f24:	4293      	cmp	r3, r2
 8006f26:	d00b      	beq.n	8006f40 <TIM_OC6_SetConfig+0x7c>
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	4a16      	ldr	r2, [pc, #88]	@ (8006f84 <TIM_OC6_SetConfig+0xc0>)
 8006f2c:	4293      	cmp	r3, r2
 8006f2e:	d007      	beq.n	8006f40 <TIM_OC6_SetConfig+0x7c>
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	4a15      	ldr	r2, [pc, #84]	@ (8006f88 <TIM_OC6_SetConfig+0xc4>)
 8006f34:	4293      	cmp	r3, r2
 8006f36:	d003      	beq.n	8006f40 <TIM_OC6_SetConfig+0x7c>
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	4a14      	ldr	r2, [pc, #80]	@ (8006f8c <TIM_OC6_SetConfig+0xc8>)
 8006f3c:	4293      	cmp	r3, r2
 8006f3e:	d109      	bne.n	8006f54 <TIM_OC6_SetConfig+0x90>
 8006f40:	697b      	ldr	r3, [r7, #20]
 8006f42:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006f46:	617b      	str	r3, [r7, #20]
 8006f48:	683b      	ldr	r3, [r7, #0]
 8006f4a:	695b      	ldr	r3, [r3, #20]
 8006f4c:	029b      	lsls	r3, r3, #10
 8006f4e:	697a      	ldr	r2, [r7, #20]
 8006f50:	4313      	orrs	r3, r2
 8006f52:	617b      	str	r3, [r7, #20]
 8006f54:	687b      	ldr	r3, [r7, #4]
 8006f56:	697a      	ldr	r2, [r7, #20]
 8006f58:	605a      	str	r2, [r3, #4]
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	68fa      	ldr	r2, [r7, #12]
 8006f5e:	651a      	str	r2, [r3, #80]	@ 0x50
 8006f60:	683b      	ldr	r3, [r7, #0]
 8006f62:	685a      	ldr	r2, [r3, #4]
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006f68:	687b      	ldr	r3, [r7, #4]
 8006f6a:	693a      	ldr	r2, [r7, #16]
 8006f6c:	621a      	str	r2, [r3, #32]
 8006f6e:	bf00      	nop
 8006f70:	371c      	adds	r7, #28
 8006f72:	46bd      	mov	sp, r7
 8006f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f78:	4770      	bx	lr
 8006f7a:	bf00      	nop
 8006f7c:	40012c00 	.word	0x40012c00
 8006f80:	40013400 	.word	0x40013400
 8006f84:	40014000 	.word	0x40014000
 8006f88:	40014400 	.word	0x40014400
 8006f8c:	40014800 	.word	0x40014800

08006f90 <TIM_TI1_ConfigInputStage>:
 8006f90:	b480      	push	{r7}
 8006f92:	b087      	sub	sp, #28
 8006f94:	af00      	add	r7, sp, #0
 8006f96:	60f8      	str	r0, [r7, #12]
 8006f98:	60b9      	str	r1, [r7, #8]
 8006f9a:	607a      	str	r2, [r7, #4]
 8006f9c:	68fb      	ldr	r3, [r7, #12]
 8006f9e:	6a1b      	ldr	r3, [r3, #32]
 8006fa0:	617b      	str	r3, [r7, #20]
 8006fa2:	68fb      	ldr	r3, [r7, #12]
 8006fa4:	6a1b      	ldr	r3, [r3, #32]
 8006fa6:	f023 0201 	bic.w	r2, r3, #1
 8006faa:	68fb      	ldr	r3, [r7, #12]
 8006fac:	621a      	str	r2, [r3, #32]
 8006fae:	68fb      	ldr	r3, [r7, #12]
 8006fb0:	699b      	ldr	r3, [r3, #24]
 8006fb2:	613b      	str	r3, [r7, #16]
 8006fb4:	693b      	ldr	r3, [r7, #16]
 8006fb6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006fba:	613b      	str	r3, [r7, #16]
 8006fbc:	687b      	ldr	r3, [r7, #4]
 8006fbe:	011b      	lsls	r3, r3, #4
 8006fc0:	693a      	ldr	r2, [r7, #16]
 8006fc2:	4313      	orrs	r3, r2
 8006fc4:	613b      	str	r3, [r7, #16]
 8006fc6:	697b      	ldr	r3, [r7, #20]
 8006fc8:	f023 030a 	bic.w	r3, r3, #10
 8006fcc:	617b      	str	r3, [r7, #20]
 8006fce:	697a      	ldr	r2, [r7, #20]
 8006fd0:	68bb      	ldr	r3, [r7, #8]
 8006fd2:	4313      	orrs	r3, r2
 8006fd4:	617b      	str	r3, [r7, #20]
 8006fd6:	68fb      	ldr	r3, [r7, #12]
 8006fd8:	693a      	ldr	r2, [r7, #16]
 8006fda:	619a      	str	r2, [r3, #24]
 8006fdc:	68fb      	ldr	r3, [r7, #12]
 8006fde:	697a      	ldr	r2, [r7, #20]
 8006fe0:	621a      	str	r2, [r3, #32]
 8006fe2:	bf00      	nop
 8006fe4:	371c      	adds	r7, #28
 8006fe6:	46bd      	mov	sp, r7
 8006fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fec:	4770      	bx	lr

08006fee <TIM_TI2_ConfigInputStage>:
 8006fee:	b480      	push	{r7}
 8006ff0:	b087      	sub	sp, #28
 8006ff2:	af00      	add	r7, sp, #0
 8006ff4:	60f8      	str	r0, [r7, #12]
 8006ff6:	60b9      	str	r1, [r7, #8]
 8006ff8:	607a      	str	r2, [r7, #4]
 8006ffa:	68fb      	ldr	r3, [r7, #12]
 8006ffc:	6a1b      	ldr	r3, [r3, #32]
 8006ffe:	617b      	str	r3, [r7, #20]
 8007000:	68fb      	ldr	r3, [r7, #12]
 8007002:	6a1b      	ldr	r3, [r3, #32]
 8007004:	f023 0210 	bic.w	r2, r3, #16
 8007008:	68fb      	ldr	r3, [r7, #12]
 800700a:	621a      	str	r2, [r3, #32]
 800700c:	68fb      	ldr	r3, [r7, #12]
 800700e:	699b      	ldr	r3, [r3, #24]
 8007010:	613b      	str	r3, [r7, #16]
 8007012:	693b      	ldr	r3, [r7, #16]
 8007014:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8007018:	613b      	str	r3, [r7, #16]
 800701a:	687b      	ldr	r3, [r7, #4]
 800701c:	031b      	lsls	r3, r3, #12
 800701e:	693a      	ldr	r2, [r7, #16]
 8007020:	4313      	orrs	r3, r2
 8007022:	613b      	str	r3, [r7, #16]
 8007024:	697b      	ldr	r3, [r7, #20]
 8007026:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 800702a:	617b      	str	r3, [r7, #20]
 800702c:	68bb      	ldr	r3, [r7, #8]
 800702e:	011b      	lsls	r3, r3, #4
 8007030:	697a      	ldr	r2, [r7, #20]
 8007032:	4313      	orrs	r3, r2
 8007034:	617b      	str	r3, [r7, #20]
 8007036:	68fb      	ldr	r3, [r7, #12]
 8007038:	693a      	ldr	r2, [r7, #16]
 800703a:	619a      	str	r2, [r3, #24]
 800703c:	68fb      	ldr	r3, [r7, #12]
 800703e:	697a      	ldr	r2, [r7, #20]
 8007040:	621a      	str	r2, [r3, #32]
 8007042:	bf00      	nop
 8007044:	371c      	adds	r7, #28
 8007046:	46bd      	mov	sp, r7
 8007048:	f85d 7b04 	ldr.w	r7, [sp], #4
 800704c:	4770      	bx	lr

0800704e <TIM_ITRx_SetConfig>:
 800704e:	b480      	push	{r7}
 8007050:	b085      	sub	sp, #20
 8007052:	af00      	add	r7, sp, #0
 8007054:	6078      	str	r0, [r7, #4]
 8007056:	6039      	str	r1, [r7, #0]
 8007058:	687b      	ldr	r3, [r7, #4]
 800705a:	689b      	ldr	r3, [r3, #8]
 800705c:	60fb      	str	r3, [r7, #12]
 800705e:	68fb      	ldr	r3, [r7, #12]
 8007060:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007064:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007068:	60fb      	str	r3, [r7, #12]
 800706a:	683a      	ldr	r2, [r7, #0]
 800706c:	68fb      	ldr	r3, [r7, #12]
 800706e:	4313      	orrs	r3, r2
 8007070:	f043 0307 	orr.w	r3, r3, #7
 8007074:	60fb      	str	r3, [r7, #12]
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	68fa      	ldr	r2, [r7, #12]
 800707a:	609a      	str	r2, [r3, #8]
 800707c:	bf00      	nop
 800707e:	3714      	adds	r7, #20
 8007080:	46bd      	mov	sp, r7
 8007082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007086:	4770      	bx	lr

08007088 <TIM_ETR_SetConfig>:
 8007088:	b480      	push	{r7}
 800708a:	b087      	sub	sp, #28
 800708c:	af00      	add	r7, sp, #0
 800708e:	60f8      	str	r0, [r7, #12]
 8007090:	60b9      	str	r1, [r7, #8]
 8007092:	607a      	str	r2, [r7, #4]
 8007094:	603b      	str	r3, [r7, #0]
 8007096:	68fb      	ldr	r3, [r7, #12]
 8007098:	689b      	ldr	r3, [r3, #8]
 800709a:	617b      	str	r3, [r7, #20]
 800709c:	697b      	ldr	r3, [r7, #20]
 800709e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80070a2:	617b      	str	r3, [r7, #20]
 80070a4:	683b      	ldr	r3, [r7, #0]
 80070a6:	021a      	lsls	r2, r3, #8
 80070a8:	687b      	ldr	r3, [r7, #4]
 80070aa:	431a      	orrs	r2, r3
 80070ac:	68bb      	ldr	r3, [r7, #8]
 80070ae:	4313      	orrs	r3, r2
 80070b0:	697a      	ldr	r2, [r7, #20]
 80070b2:	4313      	orrs	r3, r2
 80070b4:	617b      	str	r3, [r7, #20]
 80070b6:	68fb      	ldr	r3, [r7, #12]
 80070b8:	697a      	ldr	r2, [r7, #20]
 80070ba:	609a      	str	r2, [r3, #8]
 80070bc:	bf00      	nop
 80070be:	371c      	adds	r7, #28
 80070c0:	46bd      	mov	sp, r7
 80070c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070c6:	4770      	bx	lr

080070c8 <TIM_CCxChannelCmd>:
 80070c8:	b480      	push	{r7}
 80070ca:	b087      	sub	sp, #28
 80070cc:	af00      	add	r7, sp, #0
 80070ce:	60f8      	str	r0, [r7, #12]
 80070d0:	60b9      	str	r1, [r7, #8]
 80070d2:	607a      	str	r2, [r7, #4]
 80070d4:	68bb      	ldr	r3, [r7, #8]
 80070d6:	f003 031f 	and.w	r3, r3, #31
 80070da:	2201      	movs	r2, #1
 80070dc:	fa02 f303 	lsl.w	r3, r2, r3
 80070e0:	617b      	str	r3, [r7, #20]
 80070e2:	68fb      	ldr	r3, [r7, #12]
 80070e4:	6a1a      	ldr	r2, [r3, #32]
 80070e6:	697b      	ldr	r3, [r7, #20]
 80070e8:	43db      	mvns	r3, r3
 80070ea:	401a      	ands	r2, r3
 80070ec:	68fb      	ldr	r3, [r7, #12]
 80070ee:	621a      	str	r2, [r3, #32]
 80070f0:	68fb      	ldr	r3, [r7, #12]
 80070f2:	6a1a      	ldr	r2, [r3, #32]
 80070f4:	68bb      	ldr	r3, [r7, #8]
 80070f6:	f003 031f 	and.w	r3, r3, #31
 80070fa:	6879      	ldr	r1, [r7, #4]
 80070fc:	fa01 f303 	lsl.w	r3, r1, r3
 8007100:	431a      	orrs	r2, r3
 8007102:	68fb      	ldr	r3, [r7, #12]
 8007104:	621a      	str	r2, [r3, #32]
 8007106:	bf00      	nop
 8007108:	371c      	adds	r7, #28
 800710a:	46bd      	mov	sp, r7
 800710c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007110:	4770      	bx	lr
	...

08007114 <HAL_TIMEx_MasterConfigSynchronization>:
 8007114:	b480      	push	{r7}
 8007116:	b085      	sub	sp, #20
 8007118:	af00      	add	r7, sp, #0
 800711a:	6078      	str	r0, [r7, #4]
 800711c:	6039      	str	r1, [r7, #0]
 800711e:	687b      	ldr	r3, [r7, #4]
 8007120:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007124:	2b01      	cmp	r3, #1
 8007126:	d101      	bne.n	800712c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007128:	2302      	movs	r3, #2
 800712a:	e065      	b.n	80071f8 <HAL_TIMEx_MasterConfigSynchronization+0xe4>
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	2201      	movs	r2, #1
 8007130:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007134:	687b      	ldr	r3, [r7, #4]
 8007136:	2202      	movs	r2, #2
 8007138:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800713c:	687b      	ldr	r3, [r7, #4]
 800713e:	681b      	ldr	r3, [r3, #0]
 8007140:	685b      	ldr	r3, [r3, #4]
 8007142:	60fb      	str	r3, [r7, #12]
 8007144:	687b      	ldr	r3, [r7, #4]
 8007146:	681b      	ldr	r3, [r3, #0]
 8007148:	689b      	ldr	r3, [r3, #8]
 800714a:	60bb      	str	r3, [r7, #8]
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	4a2c      	ldr	r2, [pc, #176]	@ (8007204 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007152:	4293      	cmp	r3, r2
 8007154:	d004      	beq.n	8007160 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	4a2b      	ldr	r2, [pc, #172]	@ (8007208 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800715c:	4293      	cmp	r3, r2
 800715e:	d108      	bne.n	8007172 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007160:	68fb      	ldr	r3, [r7, #12]
 8007162:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8007166:	60fb      	str	r3, [r7, #12]
 8007168:	683b      	ldr	r3, [r7, #0]
 800716a:	685b      	ldr	r3, [r3, #4]
 800716c:	68fa      	ldr	r2, [r7, #12]
 800716e:	4313      	orrs	r3, r2
 8007170:	60fb      	str	r3, [r7, #12]
 8007172:	68fb      	ldr	r3, [r7, #12]
 8007174:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8007178:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800717c:	60fb      	str	r3, [r7, #12]
 800717e:	683b      	ldr	r3, [r7, #0]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	68fa      	ldr	r2, [r7, #12]
 8007184:	4313      	orrs	r3, r2
 8007186:	60fb      	str	r3, [r7, #12]
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	681b      	ldr	r3, [r3, #0]
 800718c:	68fa      	ldr	r2, [r7, #12]
 800718e:	605a      	str	r2, [r3, #4]
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	681b      	ldr	r3, [r3, #0]
 8007194:	4a1b      	ldr	r2, [pc, #108]	@ (8007204 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007196:	4293      	cmp	r3, r2
 8007198:	d018      	beq.n	80071cc <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	681b      	ldr	r3, [r3, #0]
 800719e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80071a2:	d013      	beq.n	80071cc <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 80071a4:	687b      	ldr	r3, [r7, #4]
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	4a18      	ldr	r2, [pc, #96]	@ (800720c <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 80071aa:	4293      	cmp	r3, r2
 80071ac:	d00e      	beq.n	80071cc <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 80071ae:	687b      	ldr	r3, [r7, #4]
 80071b0:	681b      	ldr	r3, [r3, #0]
 80071b2:	4a17      	ldr	r2, [pc, #92]	@ (8007210 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 80071b4:	4293      	cmp	r3, r2
 80071b6:	d009      	beq.n	80071cc <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	681b      	ldr	r3, [r3, #0]
 80071bc:	4a12      	ldr	r2, [pc, #72]	@ (8007208 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80071be:	4293      	cmp	r3, r2
 80071c0:	d004      	beq.n	80071cc <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	681b      	ldr	r3, [r3, #0]
 80071c6:	4a13      	ldr	r2, [pc, #76]	@ (8007214 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 80071c8:	4293      	cmp	r3, r2
 80071ca:	d10c      	bne.n	80071e6 <HAL_TIMEx_MasterConfigSynchronization+0xd2>
 80071cc:	68bb      	ldr	r3, [r7, #8]
 80071ce:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80071d2:	60bb      	str	r3, [r7, #8]
 80071d4:	683b      	ldr	r3, [r7, #0]
 80071d6:	689b      	ldr	r3, [r3, #8]
 80071d8:	68ba      	ldr	r2, [r7, #8]
 80071da:	4313      	orrs	r3, r2
 80071dc:	60bb      	str	r3, [r7, #8]
 80071de:	687b      	ldr	r3, [r7, #4]
 80071e0:	681b      	ldr	r3, [r3, #0]
 80071e2:	68ba      	ldr	r2, [r7, #8]
 80071e4:	609a      	str	r2, [r3, #8]
 80071e6:	687b      	ldr	r3, [r7, #4]
 80071e8:	2201      	movs	r2, #1
 80071ea:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	2200      	movs	r2, #0
 80071f2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80071f6:	2300      	movs	r3, #0
 80071f8:	4618      	mov	r0, r3
 80071fa:	3714      	adds	r7, #20
 80071fc:	46bd      	mov	sp, r7
 80071fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007202:	4770      	bx	lr
 8007204:	40012c00 	.word	0x40012c00
 8007208:	40013400 	.word	0x40013400
 800720c:	40000400 	.word	0x40000400
 8007210:	40000800 	.word	0x40000800
 8007214:	40014000 	.word	0x40014000

08007218 <HAL_TIMEx_ConfigBreakDeadTime>:
 8007218:	b480      	push	{r7}
 800721a:	b085      	sub	sp, #20
 800721c:	af00      	add	r7, sp, #0
 800721e:	6078      	str	r0, [r7, #4]
 8007220:	6039      	str	r1, [r7, #0]
 8007222:	2300      	movs	r3, #0
 8007224:	60fb      	str	r3, [r7, #12]
 8007226:	687b      	ldr	r3, [r7, #4]
 8007228:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800722c:	2b01      	cmp	r3, #1
 800722e:	d101      	bne.n	8007234 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8007230:	2302      	movs	r3, #2
 8007232:	e073      	b.n	800731c <HAL_TIMEx_ConfigBreakDeadTime+0x104>
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	2201      	movs	r2, #1
 8007238:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800723c:	68fb      	ldr	r3, [r7, #12]
 800723e:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8007242:	683b      	ldr	r3, [r7, #0]
 8007244:	68db      	ldr	r3, [r3, #12]
 8007246:	4313      	orrs	r3, r2
 8007248:	60fb      	str	r3, [r7, #12]
 800724a:	68fb      	ldr	r3, [r7, #12]
 800724c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8007250:	683b      	ldr	r3, [r7, #0]
 8007252:	689b      	ldr	r3, [r3, #8]
 8007254:	4313      	orrs	r3, r2
 8007256:	60fb      	str	r3, [r7, #12]
 8007258:	68fb      	ldr	r3, [r7, #12]
 800725a:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 800725e:	683b      	ldr	r3, [r7, #0]
 8007260:	685b      	ldr	r3, [r3, #4]
 8007262:	4313      	orrs	r3, r2
 8007264:	60fb      	str	r3, [r7, #12]
 8007266:	68fb      	ldr	r3, [r7, #12]
 8007268:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 800726c:	683b      	ldr	r3, [r7, #0]
 800726e:	681b      	ldr	r3, [r3, #0]
 8007270:	4313      	orrs	r3, r2
 8007272:	60fb      	str	r3, [r7, #12]
 8007274:	68fb      	ldr	r3, [r7, #12]
 8007276:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 800727a:	683b      	ldr	r3, [r7, #0]
 800727c:	691b      	ldr	r3, [r3, #16]
 800727e:	4313      	orrs	r3, r2
 8007280:	60fb      	str	r3, [r7, #12]
 8007282:	68fb      	ldr	r3, [r7, #12]
 8007284:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8007288:	683b      	ldr	r3, [r7, #0]
 800728a:	695b      	ldr	r3, [r3, #20]
 800728c:	4313      	orrs	r3, r2
 800728e:	60fb      	str	r3, [r7, #12]
 8007290:	68fb      	ldr	r3, [r7, #12]
 8007292:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8007296:	683b      	ldr	r3, [r7, #0]
 8007298:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800729a:	4313      	orrs	r3, r2
 800729c:	60fb      	str	r3, [r7, #12]
 800729e:	68fb      	ldr	r3, [r7, #12]
 80072a0:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 80072a4:	683b      	ldr	r3, [r7, #0]
 80072a6:	699b      	ldr	r3, [r3, #24]
 80072a8:	041b      	lsls	r3, r3, #16
 80072aa:	4313      	orrs	r3, r2
 80072ac:	60fb      	str	r3, [r7, #12]
 80072ae:	68fb      	ldr	r3, [r7, #12]
 80072b0:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 80072b4:	683b      	ldr	r3, [r7, #0]
 80072b6:	69db      	ldr	r3, [r3, #28]
 80072b8:	4313      	orrs	r3, r2
 80072ba:	60fb      	str	r3, [r7, #12]
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	681b      	ldr	r3, [r3, #0]
 80072c0:	4a19      	ldr	r2, [pc, #100]	@ (8007328 <HAL_TIMEx_ConfigBreakDeadTime+0x110>)
 80072c2:	4293      	cmp	r3, r2
 80072c4:	d004      	beq.n	80072d0 <HAL_TIMEx_ConfigBreakDeadTime+0xb8>
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	681b      	ldr	r3, [r3, #0]
 80072ca:	4a18      	ldr	r2, [pc, #96]	@ (800732c <HAL_TIMEx_ConfigBreakDeadTime+0x114>)
 80072cc:	4293      	cmp	r3, r2
 80072ce:	d11c      	bne.n	800730a <HAL_TIMEx_ConfigBreakDeadTime+0xf2>
 80072d0:	68fb      	ldr	r3, [r7, #12]
 80072d2:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 80072d6:	683b      	ldr	r3, [r7, #0]
 80072d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80072da:	051b      	lsls	r3, r3, #20
 80072dc:	4313      	orrs	r3, r2
 80072de:	60fb      	str	r3, [r7, #12]
 80072e0:	68fb      	ldr	r3, [r7, #12]
 80072e2:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 80072e6:	683b      	ldr	r3, [r7, #0]
 80072e8:	6a1b      	ldr	r3, [r3, #32]
 80072ea:	4313      	orrs	r3, r2
 80072ec:	60fb      	str	r3, [r7, #12]
 80072ee:	68fb      	ldr	r3, [r7, #12]
 80072f0:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 80072f4:	683b      	ldr	r3, [r7, #0]
 80072f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80072f8:	4313      	orrs	r3, r2
 80072fa:	60fb      	str	r3, [r7, #12]
 80072fc:	68fb      	ldr	r3, [r7, #12]
 80072fe:	f023 5200 	bic.w	r2, r3, #536870912	@ 0x20000000
 8007302:	683b      	ldr	r3, [r7, #0]
 8007304:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007306:	4313      	orrs	r3, r2
 8007308:	60fb      	str	r3, [r7, #12]
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	681b      	ldr	r3, [r3, #0]
 800730e:	68fa      	ldr	r2, [r7, #12]
 8007310:	645a      	str	r2, [r3, #68]	@ 0x44
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	2200      	movs	r2, #0
 8007316:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800731a:	2300      	movs	r3, #0
 800731c:	4618      	mov	r0, r3
 800731e:	3714      	adds	r7, #20
 8007320:	46bd      	mov	sp, r7
 8007322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007326:	4770      	bx	lr
 8007328:	40012c00 	.word	0x40012c00
 800732c:	40013400 	.word	0x40013400

08007330 <HAL_TIMEx_CommutCallback>:
 8007330:	b480      	push	{r7}
 8007332:	b083      	sub	sp, #12
 8007334:	af00      	add	r7, sp, #0
 8007336:	6078      	str	r0, [r7, #4]
 8007338:	bf00      	nop
 800733a:	370c      	adds	r7, #12
 800733c:	46bd      	mov	sp, r7
 800733e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007342:	4770      	bx	lr

08007344 <HAL_TIMEx_BreakCallback>:
 8007344:	b480      	push	{r7}
 8007346:	b083      	sub	sp, #12
 8007348:	af00      	add	r7, sp, #0
 800734a:	6078      	str	r0, [r7, #4]
 800734c:	bf00      	nop
 800734e:	370c      	adds	r7, #12
 8007350:	46bd      	mov	sp, r7
 8007352:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007356:	4770      	bx	lr

08007358 <HAL_TIMEx_Break2Callback>:
 8007358:	b480      	push	{r7}
 800735a:	b083      	sub	sp, #12
 800735c:	af00      	add	r7, sp, #0
 800735e:	6078      	str	r0, [r7, #4]
 8007360:	bf00      	nop
 8007362:	370c      	adds	r7, #12
 8007364:	46bd      	mov	sp, r7
 8007366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800736a:	4770      	bx	lr

0800736c <HAL_TIMEx_EncoderIndexCallback>:
 800736c:	b480      	push	{r7}
 800736e:	b083      	sub	sp, #12
 8007370:	af00      	add	r7, sp, #0
 8007372:	6078      	str	r0, [r7, #4]
 8007374:	bf00      	nop
 8007376:	370c      	adds	r7, #12
 8007378:	46bd      	mov	sp, r7
 800737a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800737e:	4770      	bx	lr

08007380 <HAL_TIMEx_DirectionChangeCallback>:
 8007380:	b480      	push	{r7}
 8007382:	b083      	sub	sp, #12
 8007384:	af00      	add	r7, sp, #0
 8007386:	6078      	str	r0, [r7, #4]
 8007388:	bf00      	nop
 800738a:	370c      	adds	r7, #12
 800738c:	46bd      	mov	sp, r7
 800738e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007392:	4770      	bx	lr

08007394 <HAL_TIMEx_IndexErrorCallback>:
 8007394:	b480      	push	{r7}
 8007396:	b083      	sub	sp, #12
 8007398:	af00      	add	r7, sp, #0
 800739a:	6078      	str	r0, [r7, #4]
 800739c:	bf00      	nop
 800739e:	370c      	adds	r7, #12
 80073a0:	46bd      	mov	sp, r7
 80073a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073a6:	4770      	bx	lr

080073a8 <HAL_TIMEx_TransitionErrorCallback>:
 80073a8:	b480      	push	{r7}
 80073aa:	b083      	sub	sp, #12
 80073ac:	af00      	add	r7, sp, #0
 80073ae:	6078      	str	r0, [r7, #4]
 80073b0:	bf00      	nop
 80073b2:	370c      	adds	r7, #12
 80073b4:	46bd      	mov	sp, r7
 80073b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073ba:	4770      	bx	lr

080073bc <memset>:
 80073bc:	4402      	add	r2, r0
 80073be:	4603      	mov	r3, r0
 80073c0:	4293      	cmp	r3, r2
 80073c2:	d100      	bne.n	80073c6 <memset+0xa>
 80073c4:	4770      	bx	lr
 80073c6:	f803 1b01 	strb.w	r1, [r3], #1
 80073ca:	e7f9      	b.n	80073c0 <memset+0x4>

080073cc <__libc_init_array>:
 80073cc:	b570      	push	{r4, r5, r6, lr}
 80073ce:	4d0d      	ldr	r5, [pc, #52]	@ (8007404 <__libc_init_array+0x38>)
 80073d0:	4c0d      	ldr	r4, [pc, #52]	@ (8007408 <__libc_init_array+0x3c>)
 80073d2:	1b64      	subs	r4, r4, r5
 80073d4:	10a4      	asrs	r4, r4, #2
 80073d6:	2600      	movs	r6, #0
 80073d8:	42a6      	cmp	r6, r4
 80073da:	d109      	bne.n	80073f0 <__libc_init_array+0x24>
 80073dc:	4d0b      	ldr	r5, [pc, #44]	@ (800740c <__libc_init_array+0x40>)
 80073de:	4c0c      	ldr	r4, [pc, #48]	@ (8007410 <__libc_init_array+0x44>)
 80073e0:	f000 f818 	bl	8007414 <_init>
 80073e4:	1b64      	subs	r4, r4, r5
 80073e6:	10a4      	asrs	r4, r4, #2
 80073e8:	2600      	movs	r6, #0
 80073ea:	42a6      	cmp	r6, r4
 80073ec:	d105      	bne.n	80073fa <__libc_init_array+0x2e>
 80073ee:	bd70      	pop	{r4, r5, r6, pc}
 80073f0:	f855 3b04 	ldr.w	r3, [r5], #4
 80073f4:	4798      	blx	r3
 80073f6:	3601      	adds	r6, #1
 80073f8:	e7ee      	b.n	80073d8 <__libc_init_array+0xc>
 80073fa:	f855 3b04 	ldr.w	r3, [r5], #4
 80073fe:	4798      	blx	r3
 8007400:	3601      	adds	r6, #1
 8007402:	e7f2      	b.n	80073ea <__libc_init_array+0x1e>
 8007404:	0800744c 	.word	0x0800744c
 8007408:	0800744c 	.word	0x0800744c
 800740c:	0800744c 	.word	0x0800744c
 8007410:	08007450 	.word	0x08007450

08007414 <_init>:
 8007414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007416:	bf00      	nop
 8007418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800741a:	bc08      	pop	{r3}
 800741c:	469e      	mov	lr, r3
 800741e:	4770      	bx	lr

08007420 <_fini>:
 8007420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007422:	bf00      	nop
 8007424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007426:	bc08      	pop	{r3}
 8007428:	469e      	mov	lr, r3
 800742a:	4770      	bx	lr
