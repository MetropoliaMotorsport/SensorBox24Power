
SensorBox24Power.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006d18  080001d8  080001d8  000011d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  08006ef0  08006ef0  00007ef0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006f10  08006f10  0000800c  2**0
                  CONTENTS
  4 .ARM          00000000  08006f10  08006f10  0000800c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006f10  08006f10  0000800c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006f10  08006f10  00007f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006f14  08006f14  00007f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  08006f18  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000006a4  2000000c  08006f24  0000800c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200006b0  08006f24  000086b0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000800c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000158e0  00000000  00000000  0000803c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002a5b  00000000  00000000  0001d91c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001420  00000000  00000000  00020378  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000f7c  00000000  00000000  00021798  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000207c0  00000000  00000000  00022714  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00014ee0  00000000  00000000  00042ed4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000da728  00000000  00000000  00057db4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  001324dc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000056a8  00000000  00000000  00132520  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  00137bc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c05      	ldr	r4, [pc, #20]	@ (80001f0 <__do_global_dtors_aux+0x18>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b933      	cbnz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e0:	4b04      	ldr	r3, [pc, #16]	@ (80001f4 <__do_global_dtors_aux+0x1c>)
 80001e2:	b113      	cbz	r3, 80001ea <__do_global_dtors_aux+0x12>
 80001e4:	4804      	ldr	r0, [pc, #16]	@ (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	f3af 8000 	nop.w
 80001ea:	2301      	movs	r3, #1
 80001ec:	7023      	strb	r3, [r4, #0]
 80001ee:	bd10      	pop	{r4, pc}
 80001f0:	2000000c 	.word	0x2000000c
 80001f4:	00000000 	.word	0x00000000
 80001f8:	08006ed8 	.word	0x08006ed8

080001fc <frame_dummy>:
 80001fc:	b508      	push	{r3, lr}
 80001fe:	4b03      	ldr	r3, [pc, #12]	@ (800020c <frame_dummy+0x10>)
 8000200:	b11b      	cbz	r3, 800020a <frame_dummy+0xe>
 8000202:	4903      	ldr	r1, [pc, #12]	@ (8000210 <frame_dummy+0x14>)
 8000204:	4803      	ldr	r0, [pc, #12]	@ (8000214 <frame_dummy+0x18>)
 8000206:	f3af 8000 	nop.w
 800020a:	bd08      	pop	{r3, pc}
 800020c:	00000000 	.word	0x00000000
 8000210:	20000010 	.word	0x20000010
 8000214:	08006ed8 	.word	0x08006ed8

08000218 <set_pwm_duty_cycle>:
#include "main.h"
#include "functions.h"
#include "string.h"


void set_pwm_duty_cycle(TIM_HandleTypeDef *htim){
 8000218:	b580      	push	{r7, lr}
 800021a:	b082      	sub	sp, #8
 800021c:	af00      	add	r7, sp, #0
 800021e:	6078      	str	r0, [r7, #4]
	if(check_bit(PWM_out_enable,1) != 0){
 8000220:	4b1e      	ldr	r3, [pc, #120]	@ (800029c <set_pwm_duty_cycle+0x84>)
 8000222:	781b      	ldrb	r3, [r3, #0]
 8000224:	2101      	movs	r1, #1
 8000226:	4618      	mov	r0, r3
 8000228:	f000 fd36 	bl	8000c98 <check_bit>
 800022c:	4603      	mov	r3, r0
 800022e:	2b00      	cmp	r3, #0
 8000230:	d010      	beq.n	8000254 <set_pwm_duty_cycle+0x3c>
		PWM_speed[0] = (PWM_width[0] * 40)/100;
 8000232:	4b1b      	ldr	r3, [pc, #108]	@ (80002a0 <set_pwm_duty_cycle+0x88>)
 8000234:	881b      	ldrh	r3, [r3, #0]
 8000236:	461a      	mov	r2, r3
 8000238:	4613      	mov	r3, r2
 800023a:	009b      	lsls	r3, r3, #2
 800023c:	4413      	add	r3, r2
 800023e:	00db      	lsls	r3, r3, #3
 8000240:	4a18      	ldr	r2, [pc, #96]	@ (80002a4 <set_pwm_duty_cycle+0x8c>)
 8000242:	fb82 1203 	smull	r1, r2, r2, r3
 8000246:	1152      	asrs	r2, r2, #5
 8000248:	17db      	asrs	r3, r3, #31
 800024a:	1ad3      	subs	r3, r2, r3
 800024c:	b29a      	uxth	r2, r3
 800024e:	4b16      	ldr	r3, [pc, #88]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000250:	801a      	strh	r2, [r3, #0]
 8000252:	e002      	b.n	800025a <set_pwm_duty_cycle+0x42>
	}else{
		PWM_speed[0] = 0;
 8000254:	4b14      	ldr	r3, [pc, #80]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000256:	2200      	movs	r2, #0
 8000258:	801a      	strh	r2, [r3, #0]
	}
	if(check_bit(PWM_out_enable,0) != 0){
 800025a:	4b10      	ldr	r3, [pc, #64]	@ (800029c <set_pwm_duty_cycle+0x84>)
 800025c:	781b      	ldrb	r3, [r3, #0]
 800025e:	2100      	movs	r1, #0
 8000260:	4618      	mov	r0, r3
 8000262:	f000 fd19 	bl	8000c98 <check_bit>
 8000266:	4603      	mov	r3, r0
 8000268:	2b00      	cmp	r3, #0
 800026a:	d010      	beq.n	800028e <set_pwm_duty_cycle+0x76>
		PWM_speed[1] = (PWM_width[1] * 40)/100;
 800026c:	4b0c      	ldr	r3, [pc, #48]	@ (80002a0 <set_pwm_duty_cycle+0x88>)
 800026e:	885b      	ldrh	r3, [r3, #2]
 8000270:	461a      	mov	r2, r3
 8000272:	4613      	mov	r3, r2
 8000274:	009b      	lsls	r3, r3, #2
 8000276:	4413      	add	r3, r2
 8000278:	00db      	lsls	r3, r3, #3
 800027a:	4a0a      	ldr	r2, [pc, #40]	@ (80002a4 <set_pwm_duty_cycle+0x8c>)
 800027c:	fb82 1203 	smull	r1, r2, r2, r3
 8000280:	1152      	asrs	r2, r2, #5
 8000282:	17db      	asrs	r3, r3, #31
 8000284:	1ad3      	subs	r3, r2, r3
 8000286:	b29a      	uxth	r2, r3
 8000288:	4b07      	ldr	r3, [pc, #28]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 800028a:	805a      	strh	r2, [r3, #2]
	}else{
		PWM_speed[1] = 0;
	}
}
 800028c:	e002      	b.n	8000294 <set_pwm_duty_cycle+0x7c>
		PWM_speed[1] = 0;
 800028e:	4b06      	ldr	r3, [pc, #24]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000290:	2200      	movs	r2, #0
 8000292:	805a      	strh	r2, [r3, #2]
}
 8000294:	bf00      	nop
 8000296:	3708      	adds	r7, #8
 8000298:	46bd      	mov	sp, r7
 800029a:	bd80      	pop	{r7, pc}
 800029c:	20000643 	.word	0x20000643
 80002a0:	20000644 	.word	0x20000644
 80002a4:	51eb851f 	.word	0x51eb851f
 80002a8:	20000648 	.word	0x20000648

080002ac <Config_Setup>:
#include "functions.h"
#include "commands.h"
#include "config.h"

void Config_Setup(void)
{
 80002ac:	b580      	push	{r7, lr}
 80002ae:	af00      	add	r7, sp, #0

		Config_1();

#elif ID == 2

		Config_2();
 80002b0:	f000 f802 	bl	80002b8 <Config_2>
#else //catch everything that is not a proper ID, give it settings that the debug board would get

		Config_3();

#endif
}
 80002b4:	bf00      	nop
 80002b6:	bd80      	pop	{r7, pc}

080002b8 <Config_2>:

	switch_output();

}

void Config_2(void){
 80002b8:	b580      	push	{r7, lr}
 80002ba:	f5ad 7d30 	sub.w	sp, sp, #704	@ 0x2c0
 80002be:	af00      	add	r7, sp, #0

	CAN_ID = 22;
 80002c0:	4be7      	ldr	r3, [pc, #924]	@ (8000660 <Config_2+0x3a8>)
 80002c2:	2216      	movs	r2, #22
 80002c4:	701a      	strb	r2, [r3, #0]
	CAN_interval = 1000; //in ms
 80002c6:	4be7      	ldr	r3, [pc, #924]	@ (8000664 <Config_2+0x3ac>)
 80002c8:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80002cc:	801a      	strh	r2, [r3, #0]

	//definition of Outputs
	Outputs OUT0_1 = {TSAL, 2050, 1900, 0, GPIOB, IN0_Pin, OUT0_1_pin};
 80002ce:	f507 731a 	add.w	r3, r7, #616	@ 0x268
 80002d2:	2258      	movs	r2, #88	@ 0x58
 80002d4:	2100      	movs	r1, #0
 80002d6:	4618      	mov	r0, r3
 80002d8:	f006 fdc4 	bl	8006e64 <memset>
 80002dc:	2306      	movs	r3, #6
 80002de:	f8a7 3268 	strh.w	r3, [r7, #616]	@ 0x268
 80002e2:	f640 0302 	movw	r3, #2050	@ 0x802
 80002e6:	f8a7 326a 	strh.w	r3, [r7, #618]	@ 0x26a
 80002ea:	f240 736c 	movw	r3, #1900	@ 0x76c
 80002ee:	f8a7 326c 	strh.w	r3, [r7, #620]	@ 0x26c
 80002f2:	4bdd      	ldr	r3, [pc, #884]	@ (8000668 <Config_2+0x3b0>)
 80002f4:	f8c7 3270 	str.w	r3, [r7, #624]	@ 0x270
 80002f8:	2308      	movs	r3, #8
 80002fa:	f8a7 3274 	strh.w	r3, [r7, #628]	@ 0x274
	Outputs OUT1_1 = {TSAL_RED, 2050, 1900, 0, GPIOA, IN1_Pin, OUT1_1_pin};
 80002fe:	f507 7304 	add.w	r3, r7, #528	@ 0x210
 8000302:	2258      	movs	r2, #88	@ 0x58
 8000304:	2100      	movs	r1, #0
 8000306:	4618      	mov	r0, r3
 8000308:	f006 fdac 	bl	8006e64 <memset>
 800030c:	2307      	movs	r3, #7
 800030e:	f8a7 3210 	strh.w	r3, [r7, #528]	@ 0x210
 8000312:	f640 0302 	movw	r3, #2050	@ 0x802
 8000316:	f8a7 3212 	strh.w	r3, [r7, #530]	@ 0x212
 800031a:	f240 736c 	movw	r3, #1900	@ 0x76c
 800031e:	f8a7 3214 	strh.w	r3, [r7, #532]	@ 0x214
 8000322:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000326:	f8c7 3218 	str.w	r3, [r7, #536]	@ 0x218
 800032a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800032e:	f8a7 321c 	strh.w	r3, [r7, #540]	@ 0x21c
 8000332:	2301      	movs	r3, #1
 8000334:	f887 321e 	strb.w	r3, [r7, #542]	@ 0x21e
	Outputs OUT2_1 = {INVERTERS, 2050, 1900, 0, GPIOA, IN2_Pin, OUT2_1_pin};
 8000338:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800033c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000340:	4618      	mov	r0, r3
 8000342:	2358      	movs	r3, #88	@ 0x58
 8000344:	461a      	mov	r2, r3
 8000346:	2100      	movs	r1, #0
 8000348:	f006 fd8c 	bl	8006e64 <memset>
 800034c:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000350:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000354:	2208      	movs	r2, #8
 8000356:	801a      	strh	r2, [r3, #0]
 8000358:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800035c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000360:	f640 0202 	movw	r2, #2050	@ 0x802
 8000364:	805a      	strh	r2, [r3, #2]
 8000366:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800036a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800036e:	f240 726c 	movw	r2, #1900	@ 0x76c
 8000372:	809a      	strh	r2, [r3, #4]
 8000374:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000378:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800037c:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 8000380:	609a      	str	r2, [r3, #8]
 8000382:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000386:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800038a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800038e:	819a      	strh	r2, [r3, #12]
 8000390:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000394:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000398:	2202      	movs	r2, #2
 800039a:	739a      	strb	r2, [r3, #14]
	Outputs OUT3_1 = {BRAKE_LIGHT, 2050, 1900, 0, GPIOA, IN3_Pin, OUT3_1_pin};
 800039c:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003a0:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003a4:	4618      	mov	r0, r3
 80003a6:	2358      	movs	r3, #88	@ 0x58
 80003a8:	461a      	mov	r2, r3
 80003aa:	2100      	movs	r1, #0
 80003ac:	f006 fd5a 	bl	8006e64 <memset>
 80003b0:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003b4:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003b8:	2201      	movs	r2, #1
 80003ba:	801a      	strh	r2, [r3, #0]
 80003bc:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003c0:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003c4:	f640 0202 	movw	r2, #2050	@ 0x802
 80003c8:	805a      	strh	r2, [r3, #2]
 80003ca:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003ce:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003d2:	f240 726c 	movw	r2, #1900	@ 0x76c
 80003d6:	809a      	strh	r2, [r3, #4]
 80003d8:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003dc:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003e0:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80003e4:	609a      	str	r2, [r3, #8]
 80003e6:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003ea:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003ee:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80003f2:	819a      	strh	r2, [r3, #12]
 80003f4:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003f8:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003fc:	2203      	movs	r2, #3
 80003fe:	739a      	strb	r2, [r3, #14]
	Outputs OUT0_2 = {BUZZER, 2050, 1900, 0, GPIOA, IN0_2_Pin, OUT0_2_pin};
 8000400:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000404:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000408:	4618      	mov	r0, r3
 800040a:	2358      	movs	r3, #88	@ 0x58
 800040c:	461a      	mov	r2, r3
 800040e:	2100      	movs	r1, #0
 8000410:	f006 fd28 	bl	8006e64 <memset>
 8000414:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000418:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 800041c:	2205      	movs	r2, #5
 800041e:	801a      	strh	r2, [r3, #0]
 8000420:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000424:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000428:	f640 0202 	movw	r2, #2050	@ 0x802
 800042c:	805a      	strh	r2, [r3, #2]
 800042e:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000432:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000436:	f240 726c 	movw	r2, #1900	@ 0x76c
 800043a:	809a      	strh	r2, [r3, #4]
 800043c:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000440:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000444:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 8000448:	609a      	str	r2, [r3, #8]
 800044a:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800044e:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000452:	2210      	movs	r2, #16
 8000454:	819a      	strh	r2, [r3, #12]
 8000456:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800045a:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 800045e:	2204      	movs	r2, #4
 8000460:	739a      	strb	r2, [r3, #14]
	Outputs OUT1_2 = {IMU, 2050, 1900, 0, GPIOA, IN1_2_Pin, OUT1_2_pin};
 8000462:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000466:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 800046a:	4618      	mov	r0, r3
 800046c:	2358      	movs	r3, #88	@ 0x58
 800046e:	461a      	mov	r2, r3
 8000470:	2100      	movs	r1, #0
 8000472:	f006 fcf7 	bl	8006e64 <memset>
 8000476:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800047a:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 800047e:	2209      	movs	r2, #9
 8000480:	801a      	strh	r2, [r3, #0]
 8000482:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000486:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 800048a:	f640 0202 	movw	r2, #2050	@ 0x802
 800048e:	805a      	strh	r2, [r3, #2]
 8000490:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000494:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 8000498:	f240 726c 	movw	r2, #1900	@ 0x76c
 800049c:	809a      	strh	r2, [r3, #4]
 800049e:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004a2:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 80004a6:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80004aa:	609a      	str	r2, [r3, #8]
 80004ac:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004b0:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 80004b4:	2202      	movs	r2, #2
 80004b6:	819a      	strh	r2, [r3, #12]
 80004b8:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004bc:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 80004c0:	2205      	movs	r2, #5
 80004c2:	739a      	strb	r2, [r3, #14]
	Outputs OUT2_2 = {PUMP, 2050, 1900, 0, GPIOB, IN2_2_Pin, OUT2_2_pin};
 80004c4:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004c8:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 80004cc:	4618      	mov	r0, r3
 80004ce:	2358      	movs	r3, #88	@ 0x58
 80004d0:	461a      	mov	r2, r3
 80004d2:	2100      	movs	r1, #0
 80004d4:	f006 fcc6 	bl	8006e64 <memset>
 80004d8:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004dc:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 80004e0:	2204      	movs	r2, #4
 80004e2:	801a      	strh	r2, [r3, #0]
 80004e4:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004e8:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 80004ec:	f640 0202 	movw	r2, #2050	@ 0x802
 80004f0:	805a      	strh	r2, [r3, #2]
 80004f2:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004f6:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 80004fa:	f240 726c 	movw	r2, #1900	@ 0x76c
 80004fe:	809a      	strh	r2, [r3, #4]
 8000500:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000504:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 8000508:	4a57      	ldr	r2, [pc, #348]	@ (8000668 <Config_2+0x3b0>)
 800050a:	609a      	str	r2, [r3, #8]
 800050c:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000510:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 8000514:	2280      	movs	r2, #128	@ 0x80
 8000516:	819a      	strh	r2, [r3, #12]
 8000518:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800051c:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 8000520:	2206      	movs	r2, #6
 8000522:	739a      	strb	r2, [r3, #14]
	Outputs OUT3_2 = {NC, 2050, 1900, 0, GPIOB, IN3_2_Pin, OUT3_2_pin};
 8000524:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000528:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 800052c:	4618      	mov	r0, r3
 800052e:	2358      	movs	r3, #88	@ 0x58
 8000530:	461a      	mov	r2, r3
 8000532:	2100      	movs	r1, #0
 8000534:	f006 fc96 	bl	8006e64 <memset>
 8000538:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800053c:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 8000540:	f640 0202 	movw	r2, #2050	@ 0x802
 8000544:	805a      	strh	r2, [r3, #2]
 8000546:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800054a:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 800054e:	f240 726c 	movw	r2, #1900	@ 0x76c
 8000552:	809a      	strh	r2, [r3, #4]
 8000554:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000558:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 800055c:	4a42      	ldr	r2, [pc, #264]	@ (8000668 <Config_2+0x3b0>)
 800055e:	609a      	str	r2, [r3, #8]
 8000560:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000564:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 8000568:	2210      	movs	r2, #16
 800056a:	819a      	strh	r2, [r3, #12]
 800056c:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000570:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 8000574:	2207      	movs	r2, #7
 8000576:	739a      	strb	r2, [r3, #14]

	outputs[OUT0_1.pin] = OUT0_1;
 8000578:	f897 3276 	ldrb.w	r3, [r7, #630]	@ 0x276
 800057c:	4619      	mov	r1, r3
 800057e:	4a3b      	ldr	r2, [pc, #236]	@ (800066c <Config_2+0x3b4>)
 8000580:	2358      	movs	r3, #88	@ 0x58
 8000582:	fb01 f303 	mul.w	r3, r1, r3
 8000586:	4413      	add	r3, r2
 8000588:	4618      	mov	r0, r3
 800058a:	f507 731a 	add.w	r3, r7, #616	@ 0x268
 800058e:	2258      	movs	r2, #88	@ 0x58
 8000590:	4619      	mov	r1, r3
 8000592:	f006 fc93 	bl	8006ebc <memcpy>
	outputs[OUT1_1.pin] = OUT1_1;
 8000596:	f897 321e 	ldrb.w	r3, [r7, #542]	@ 0x21e
 800059a:	4619      	mov	r1, r3
 800059c:	4a33      	ldr	r2, [pc, #204]	@ (800066c <Config_2+0x3b4>)
 800059e:	2358      	movs	r3, #88	@ 0x58
 80005a0:	fb01 f303 	mul.w	r3, r1, r3
 80005a4:	4413      	add	r3, r2
 80005a6:	4618      	mov	r0, r3
 80005a8:	f507 7304 	add.w	r3, r7, #528	@ 0x210
 80005ac:	2258      	movs	r2, #88	@ 0x58
 80005ae:	4619      	mov	r1, r3
 80005b0:	f006 fc84 	bl	8006ebc <memcpy>
	outputs[OUT2_1.pin] = OUT2_1;
 80005b4:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80005b8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80005bc:	7b9b      	ldrb	r3, [r3, #14]
 80005be:	4619      	mov	r1, r3
 80005c0:	4a2a      	ldr	r2, [pc, #168]	@ (800066c <Config_2+0x3b4>)
 80005c2:	2358      	movs	r3, #88	@ 0x58
 80005c4:	fb01 f303 	mul.w	r3, r1, r3
 80005c8:	441a      	add	r2, r3
 80005ca:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80005ce:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80005d2:	4610      	mov	r0, r2
 80005d4:	4619      	mov	r1, r3
 80005d6:	2358      	movs	r3, #88	@ 0x58
 80005d8:	461a      	mov	r2, r3
 80005da:	f006 fc6f 	bl	8006ebc <memcpy>
	outputs[OUT3_1.pin] = OUT3_1;
 80005de:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80005e2:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80005e6:	7b9b      	ldrb	r3, [r3, #14]
 80005e8:	4619      	mov	r1, r3
 80005ea:	4a20      	ldr	r2, [pc, #128]	@ (800066c <Config_2+0x3b4>)
 80005ec:	2358      	movs	r3, #88	@ 0x58
 80005ee:	fb01 f303 	mul.w	r3, r1, r3
 80005f2:	441a      	add	r2, r3
 80005f4:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80005f8:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80005fc:	4610      	mov	r0, r2
 80005fe:	4619      	mov	r1, r3
 8000600:	2358      	movs	r3, #88	@ 0x58
 8000602:	461a      	mov	r2, r3
 8000604:	f006 fc5a 	bl	8006ebc <memcpy>
	outputs[OUT0_2.pin] = OUT0_2;
 8000608:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800060c:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000610:	7b9b      	ldrb	r3, [r3, #14]
 8000612:	4619      	mov	r1, r3
 8000614:	4a15      	ldr	r2, [pc, #84]	@ (800066c <Config_2+0x3b4>)
 8000616:	2358      	movs	r3, #88	@ 0x58
 8000618:	fb01 f303 	mul.w	r3, r1, r3
 800061c:	441a      	add	r2, r3
 800061e:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000622:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000626:	4610      	mov	r0, r2
 8000628:	4619      	mov	r1, r3
 800062a:	2358      	movs	r3, #88	@ 0x58
 800062c:	461a      	mov	r2, r3
 800062e:	f006 fc45 	bl	8006ebc <memcpy>
	outputs[OUT1_2.pin] = OUT1_2;
 8000632:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000636:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 800063a:	7b9b      	ldrb	r3, [r3, #14]
 800063c:	4619      	mov	r1, r3
 800063e:	4a0b      	ldr	r2, [pc, #44]	@ (800066c <Config_2+0x3b4>)
 8000640:	2358      	movs	r3, #88	@ 0x58
 8000642:	fb01 f303 	mul.w	r3, r1, r3
 8000646:	441a      	add	r2, r3
 8000648:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800064c:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 8000650:	4610      	mov	r0, r2
 8000652:	4619      	mov	r1, r3
 8000654:	2358      	movs	r3, #88	@ 0x58
 8000656:	461a      	mov	r2, r3
 8000658:	f006 fc30 	bl	8006ebc <memcpy>
 800065c:	e008      	b.n	8000670 <Config_2+0x3b8>
 800065e:	bf00      	nop
 8000660:	2000064c 	.word	0x2000064c
 8000664:	2000064e 	.word	0x2000064e
 8000668:	48000400 	.word	0x48000400
 800066c:	20000380 	.word	0x20000380
	outputs[OUT2_2.pin] = OUT2_2;
 8000670:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000674:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 8000678:	7b9b      	ldrb	r3, [r3, #14]
 800067a:	4619      	mov	r1, r3
 800067c:	4a1b      	ldr	r2, [pc, #108]	@ (80006ec <Config_2+0x434>)
 800067e:	2358      	movs	r3, #88	@ 0x58
 8000680:	fb01 f303 	mul.w	r3, r1, r3
 8000684:	441a      	add	r2, r3
 8000686:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800068a:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 800068e:	4610      	mov	r0, r2
 8000690:	4619      	mov	r1, r3
 8000692:	2358      	movs	r3, #88	@ 0x58
 8000694:	461a      	mov	r2, r3
 8000696:	f006 fc11 	bl	8006ebc <memcpy>
	outputs[OUT3_2.pin] = OUT3_2;
 800069a:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800069e:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 80006a2:	7b9b      	ldrb	r3, [r3, #14]
 80006a4:	4619      	mov	r1, r3
 80006a6:	4a11      	ldr	r2, [pc, #68]	@ (80006ec <Config_2+0x434>)
 80006a8:	2358      	movs	r3, #88	@ 0x58
 80006aa:	fb01 f303 	mul.w	r3, r1, r3
 80006ae:	441a      	add	r2, r3
 80006b0:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80006b4:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 80006b8:	4610      	mov	r0, r2
 80006ba:	4619      	mov	r1, r3
 80006bc:	2358      	movs	r3, #88	@ 0x58
 80006be:	461a      	mov	r2, r3
 80006c0:	f006 fbfc 	bl	8006ebc <memcpy>

	Default_Switch_State = 0b01100011; //each bit represent one output [8,7,6,5,4,3,2,1]
 80006c4:	4b0a      	ldr	r3, [pc, #40]	@ (80006f0 <Config_2+0x438>)
 80006c6:	2263      	movs	r2, #99	@ 0x63
 80006c8:	701a      	strb	r2, [r3, #0]

	PWM_out_enable = 0b11;
 80006ca:	4b0a      	ldr	r3, [pc, #40]	@ (80006f4 <Config_2+0x43c>)
 80006cc:	2203      	movs	r2, #3
 80006ce:	701a      	strb	r2, [r3, #0]

	//Duty cycle 0-100%
	PWM_width[0] = 10;
 80006d0:	4b09      	ldr	r3, [pc, #36]	@ (80006f8 <Config_2+0x440>)
 80006d2:	220a      	movs	r2, #10
 80006d4:	801a      	strh	r2, [r3, #0]
	PWM_width[1] = 10;
 80006d6:	4b08      	ldr	r3, [pc, #32]	@ (80006f8 <Config_2+0x440>)
 80006d8:	220a      	movs	r2, #10
 80006da:	805a      	strh	r2, [r3, #2]

	switch_output();
 80006dc:	f000 f87e 	bl	80007dc <switch_output>

}
 80006e0:	bf00      	nop
 80006e2:	f507 7730 	add.w	r7, r7, #704	@ 0x2c0
 80006e6:	46bd      	mov	sp, r7
 80006e8:	bd80      	pop	{r7, pc}
 80006ea:	bf00      	nop
 80006ec:	20000380 	.word	0x20000380
 80006f0:	20000642 	.word	0x20000642
 80006f4:	20000643 	.word	0x20000643
 80006f8:	20000644 	.word	0x20000644

080006fc <HAL_FDCAN_RxFifo0Callback>:
uint8_t TxData[8];
uint8_t toggle = 0;


void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo0ITs)
{
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b082      	sub	sp, #8
 8000700:	af00      	add	r7, sp, #0
 8000702:	6078      	str	r0, [r7, #4]
 8000704:	6039      	str	r1, [r7, #0]
	if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 8000706:	683b      	ldr	r3, [r7, #0]
 8000708:	f003 0301 	and.w	r3, r3, #1
 800070c:	2b00      	cmp	r3, #0
 800070e:	d022      	beq.n	8000756 <HAL_FDCAN_RxFifo0Callback+0x5a>
	{
		/* Retreive Rx messages from RX FIFO0 */
		if (HAL_FDCAN_GetRxMessage(hfdcan, FDCAN_RX_FIFO0, &RxHeader, RxMessage.Bytes) != HAL_OK)
 8000710:	4b13      	ldr	r3, [pc, #76]	@ (8000760 <HAL_FDCAN_RxFifo0Callback+0x64>)
 8000712:	4a14      	ldr	r2, [pc, #80]	@ (8000764 <HAL_FDCAN_RxFifo0Callback+0x68>)
 8000714:	2140      	movs	r1, #64	@ 0x40
 8000716:	6878      	ldr	r0, [r7, #4]
 8000718:	f003 fab4 	bl	8003c84 <HAL_FDCAN_GetRxMessage>
 800071c:	4603      	mov	r3, r0
 800071e:	2b00      	cmp	r3, #0
 8000720:	d002      	beq.n	8000728 <HAL_FDCAN_RxFifo0Callback+0x2c>
		{
			/* Reception Error */
			Error_Handler();
 8000722:	f001 f833 	bl	800178c <Error_Handler>
 8000726:	e00c      	b.n	8000742 <HAL_FDCAN_RxFifo0Callback+0x46>
		}else{
			if(RxHeader.Identifier == CAN_ID){
 8000728:	4b0e      	ldr	r3, [pc, #56]	@ (8000764 <HAL_FDCAN_RxFifo0Callback+0x68>)
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	4a0e      	ldr	r2, [pc, #56]	@ (8000768 <HAL_FDCAN_RxFifo0Callback+0x6c>)
 800072e:	7812      	ldrb	r2, [r2, #0]
 8000730:	4293      	cmp	r3, r2
 8000732:	d106      	bne.n	8000742 <HAL_FDCAN_RxFifo0Callback+0x46>
				RxMessage.DLC = RxHeader.DataLength;
 8000734:	4b0b      	ldr	r3, [pc, #44]	@ (8000764 <HAL_FDCAN_RxFifo0Callback+0x68>)
 8000736:	68db      	ldr	r3, [r3, #12]
 8000738:	b2da      	uxtb	r2, r3
 800073a:	4b0c      	ldr	r3, [pc, #48]	@ (800076c <HAL_FDCAN_RxFifo0Callback+0x70>)
 800073c:	701a      	strb	r2, [r3, #0]
				decode();
 800073e:	f000 f8cd 	bl	80008dc <decode>
			}
		}

		if (HAL_FDCAN_ActivateNotification(hfdcan, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK)
 8000742:	2200      	movs	r2, #0
 8000744:	2101      	movs	r1, #1
 8000746:	6878      	ldr	r0, [r7, #4]
 8000748:	f003 fbb6 	bl	8003eb8 <HAL_FDCAN_ActivateNotification>
 800074c:	4603      	mov	r3, r0
 800074e:	2b00      	cmp	r3, #0
 8000750:	d001      	beq.n	8000756 <HAL_FDCAN_RxFifo0Callback+0x5a>
		{
			/* Notification Error */
			Error_Handler();
 8000752:	f001 f81b 	bl	800178c <Error_Handler>
		}
	}
}
 8000756:	bf00      	nop
 8000758:	3708      	adds	r7, #8
 800075a:	46bd      	mov	sp, r7
 800075c:	bd80      	pop	{r7, pc}
 800075e:	bf00      	nop
 8000760:	2000069d 	.word	0x2000069d
 8000764:	20000674 	.word	0x20000674
 8000768:	2000064c 	.word	0x2000064c
 800076c:	2000069c 	.word	0x2000069c

08000770 <CanSend>:

void CanSend(uint8_t *TxData){
 8000770:	b580      	push	{r7, lr}
 8000772:	b082      	sub	sp, #8
 8000774:	af00      	add	r7, sp, #0
 8000776:	6078      	str	r0, [r7, #4]
	while(HAL_FDCAN_GetTxFifoFreeLevel(&hfdcan1) != 0 && HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK){
 8000778:	e006      	b.n	8000788 <CanSend+0x18>
		Error_Handler();
 800077a:	f001 f807 	bl	800178c <Error_Handler>
		HAL_GPIO_WritePin(GPIOB,LED1_Pin,0);
 800077e:	2200      	movs	r2, #0
 8000780:	2101      	movs	r1, #1
 8000782:	480a      	ldr	r0, [pc, #40]	@ (80007ac <CanSend+0x3c>)
 8000784:	f004 f860 	bl	8004848 <HAL_GPIO_WritePin>
	while(HAL_FDCAN_GetTxFifoFreeLevel(&hfdcan1) != 0 && HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK){
 8000788:	4809      	ldr	r0, [pc, #36]	@ (80007b0 <CanSend+0x40>)
 800078a:	f003 fb83 	bl	8003e94 <HAL_FDCAN_GetTxFifoFreeLevel>
 800078e:	4603      	mov	r3, r0
 8000790:	2b00      	cmp	r3, #0
 8000792:	d007      	beq.n	80007a4 <CanSend+0x34>
 8000794:	687a      	ldr	r2, [r7, #4]
 8000796:	4907      	ldr	r1, [pc, #28]	@ (80007b4 <CanSend+0x44>)
 8000798:	4805      	ldr	r0, [pc, #20]	@ (80007b0 <CanSend+0x40>)
 800079a:	f003 fa2f 	bl	8003bfc <HAL_FDCAN_AddMessageToTxFifoQ>
 800079e:	4603      	mov	r3, r0
 80007a0:	2b00      	cmp	r3, #0
 80007a2:	d1ea      	bne.n	800077a <CanSend+0xa>
	}
}
 80007a4:	bf00      	nop
 80007a6:	3708      	adds	r7, #8
 80007a8:	46bd      	mov	sp, r7
 80007aa:	bd80      	pop	{r7, pc}
 80007ac:	48000400 	.word	0x48000400
 80007b0:	20000108 	.word	0x20000108
 80007b4:	20000650 	.word	0x20000650

080007b8 <switch_on_off>:
		}
		CanSend(TxData2);
	}
}

void switch_on_off(GPIO_TypeDef *port, uint16_t pin, uint8_t state){
 80007b8:	b580      	push	{r7, lr}
 80007ba:	b082      	sub	sp, #8
 80007bc:	af00      	add	r7, sp, #0
 80007be:	6078      	str	r0, [r7, #4]
 80007c0:	460b      	mov	r3, r1
 80007c2:	807b      	strh	r3, [r7, #2]
 80007c4:	4613      	mov	r3, r2
 80007c6:	707b      	strb	r3, [r7, #1]
	HAL_GPIO_WritePin(port, pin, state);
 80007c8:	787a      	ldrb	r2, [r7, #1]
 80007ca:	887b      	ldrh	r3, [r7, #2]
 80007cc:	4619      	mov	r1, r3
 80007ce:	6878      	ldr	r0, [r7, #4]
 80007d0:	f004 f83a 	bl	8004848 <HAL_GPIO_WritePin>
}
 80007d4:	bf00      	nop
 80007d6:	3708      	adds	r7, #8
 80007d8:	46bd      	mov	sp, r7
 80007da:	bd80      	pop	{r7, pc}

080007dc <switch_output>:

void switch_output(){
 80007dc:	b590      	push	{r4, r7, lr}
 80007de:	b083      	sub	sp, #12
 80007e0:	af00      	add	r7, sp, #0
	uint8_t i = 0;
 80007e2:	2300      	movs	r3, #0
 80007e4:	71fb      	strb	r3, [r7, #7]
	for(i = 0; i < 8;i++){
 80007e6:	2300      	movs	r3, #0
 80007e8:	71fb      	strb	r3, [r7, #7]
 80007ea:	e02f      	b.n	800084c <switch_output+0x70>
		outputs[i].state = check_bit(Default_Switch_State, i);
 80007ec:	4b1b      	ldr	r3, [pc, #108]	@ (800085c <switch_output+0x80>)
 80007ee:	781b      	ldrb	r3, [r3, #0]
 80007f0:	79fc      	ldrb	r4, [r7, #7]
 80007f2:	79fa      	ldrb	r2, [r7, #7]
 80007f4:	4611      	mov	r1, r2
 80007f6:	4618      	mov	r0, r3
 80007f8:	f000 fa4e 	bl	8000c98 <check_bit>
 80007fc:	4603      	mov	r3, r0
 80007fe:	4619      	mov	r1, r3
 8000800:	4a17      	ldr	r2, [pc, #92]	@ (8000860 <switch_output+0x84>)
 8000802:	2358      	movs	r3, #88	@ 0x58
 8000804:	fb04 f303 	mul.w	r3, r4, r3
 8000808:	4413      	add	r3, r2
 800080a:	3354      	adds	r3, #84	@ 0x54
 800080c:	460a      	mov	r2, r1
 800080e:	701a      	strb	r2, [r3, #0]
		switch_on_off(outputs[i].port, outputs[i].physical_pin, outputs[i].state);
 8000810:	79fb      	ldrb	r3, [r7, #7]
 8000812:	4a13      	ldr	r2, [pc, #76]	@ (8000860 <switch_output+0x84>)
 8000814:	2158      	movs	r1, #88	@ 0x58
 8000816:	fb01 f303 	mul.w	r3, r1, r3
 800081a:	4413      	add	r3, r2
 800081c:	3308      	adds	r3, #8
 800081e:	6818      	ldr	r0, [r3, #0]
 8000820:	79fb      	ldrb	r3, [r7, #7]
 8000822:	4a0f      	ldr	r2, [pc, #60]	@ (8000860 <switch_output+0x84>)
 8000824:	2158      	movs	r1, #88	@ 0x58
 8000826:	fb01 f303 	mul.w	r3, r1, r3
 800082a:	4413      	add	r3, r2
 800082c:	330c      	adds	r3, #12
 800082e:	8819      	ldrh	r1, [r3, #0]
 8000830:	79fb      	ldrb	r3, [r7, #7]
 8000832:	4a0b      	ldr	r2, [pc, #44]	@ (8000860 <switch_output+0x84>)
 8000834:	2458      	movs	r4, #88	@ 0x58
 8000836:	fb04 f303 	mul.w	r3, r4, r3
 800083a:	4413      	add	r3, r2
 800083c:	3354      	adds	r3, #84	@ 0x54
 800083e:	781b      	ldrb	r3, [r3, #0]
 8000840:	461a      	mov	r2, r3
 8000842:	f7ff ffb9 	bl	80007b8 <switch_on_off>
	for(i = 0; i < 8;i++){
 8000846:	79fb      	ldrb	r3, [r7, #7]
 8000848:	3301      	adds	r3, #1
 800084a:	71fb      	strb	r3, [r7, #7]
 800084c:	79fb      	ldrb	r3, [r7, #7]
 800084e:	2b07      	cmp	r3, #7
 8000850:	d9cc      	bls.n	80007ec <switch_output+0x10>
	}
}
 8000852:	bf00      	nop
 8000854:	bf00      	nop
 8000856:	370c      	adds	r7, #12
 8000858:	46bd      	mov	sp, r7
 800085a:	bd90      	pop	{r4, r7, pc}
 800085c:	20000642 	.word	0x20000642
 8000860:	20000380 	.word	0x20000380

08000864 <Over_current>:

void Over_current(uint8_t output_pin){
 8000864:	b580      	push	{r7, lr}
 8000866:	b082      	sub	sp, #8
 8000868:	af00      	add	r7, sp, #0
 800086a:	4603      	mov	r3, r0
 800086c:	71fb      	strb	r3, [r7, #7]
	TxData[0] = 15;
 800086e:	4b06      	ldr	r3, [pc, #24]	@ (8000888 <Over_current+0x24>)
 8000870:	220f      	movs	r2, #15
 8000872:	701a      	strb	r2, [r3, #0]
	TxData[1] = output_pin;
 8000874:	4a04      	ldr	r2, [pc, #16]	@ (8000888 <Over_current+0x24>)
 8000876:	79fb      	ldrb	r3, [r7, #7]
 8000878:	7053      	strb	r3, [r2, #1]
	CanSend(TxData);
 800087a:	4803      	ldr	r0, [pc, #12]	@ (8000888 <Over_current+0x24>)
 800087c:	f7ff ff78 	bl	8000770 <CanSend>
}
 8000880:	bf00      	nop
 8000882:	3708      	adds	r7, #8
 8000884:	46bd      	mov	sp, r7
 8000886:	bd80      	pop	{r7, pc}
 8000888:	20000028 	.word	0x20000028

0800088c <Warning_current>:

void Warning_current(uint8_t output_pin){
 800088c:	b580      	push	{r7, lr}
 800088e:	b082      	sub	sp, #8
 8000890:	af00      	add	r7, sp, #0
 8000892:	4603      	mov	r3, r0
 8000894:	71fb      	strb	r3, [r7, #7]
	TxData[0] = 14;
 8000896:	4b06      	ldr	r3, [pc, #24]	@ (80008b0 <Warning_current+0x24>)
 8000898:	220e      	movs	r2, #14
 800089a:	701a      	strb	r2, [r3, #0]
	TxData[1] = output_pin;
 800089c:	4a04      	ldr	r2, [pc, #16]	@ (80008b0 <Warning_current+0x24>)
 800089e:	79fb      	ldrb	r3, [r7, #7]
 80008a0:	7053      	strb	r3, [r2, #1]
	CanSend(TxData);
 80008a2:	4803      	ldr	r0, [pc, #12]	@ (80008b0 <Warning_current+0x24>)
 80008a4:	f7ff ff64 	bl	8000770 <CanSend>
}
 80008a8:	bf00      	nop
 80008aa:	3708      	adds	r7, #8
 80008ac:	46bd      	mov	sp, r7
 80008ae:	bd80      	pop	{r7, pc}
 80008b0:	20000028 	.word	0x20000028

080008b4 <Under_current>:

void Under_current(uint8_t output_pin){
 80008b4:	b580      	push	{r7, lr}
 80008b6:	b082      	sub	sp, #8
 80008b8:	af00      	add	r7, sp, #0
 80008ba:	4603      	mov	r3, r0
 80008bc:	71fb      	strb	r3, [r7, #7]
	TxData[0] = 13;
 80008be:	4b06      	ldr	r3, [pc, #24]	@ (80008d8 <Under_current+0x24>)
 80008c0:	220d      	movs	r2, #13
 80008c2:	701a      	strb	r2, [r3, #0]
	TxData[1] = output_pin;
 80008c4:	4a04      	ldr	r2, [pc, #16]	@ (80008d8 <Under_current+0x24>)
 80008c6:	79fb      	ldrb	r3, [r7, #7]
 80008c8:	7053      	strb	r3, [r2, #1]
	CanSend(TxData);
 80008ca:	4803      	ldr	r0, [pc, #12]	@ (80008d8 <Under_current+0x24>)
 80008cc:	f7ff ff50 	bl	8000770 <CanSend>
}
 80008d0:	bf00      	nop
 80008d2:	3708      	adds	r7, #8
 80008d4:	46bd      	mov	sp, r7
 80008d6:	bd80      	pop	{r7, pc}
 80008d8:	20000028 	.word	0x20000028

080008dc <decode>:

void decode(){
 80008dc:	b580      	push	{r7, lr}
 80008de:	af00      	add	r7, sp, #0
	
	switch (RxMessage.Bytes[0]) //PWM or switch output
 80008e0:	4b16      	ldr	r3, [pc, #88]	@ (800093c <decode+0x60>)
 80008e2:	785b      	ldrb	r3, [r3, #1]
 80008e4:	2b01      	cmp	r3, #1
 80008e6:	d002      	beq.n	80008ee <decode+0x12>
 80008e8:	2b02      	cmp	r3, #2
 80008ea:	d014      	beq.n	8000916 <decode+0x3a>
			break;
		case 2:
				Default_Switch_State = set_bit(Default_Switch_State,RxMessage.Bytes[1],RxMessage.Bytes[2]);
				switch_output();
		default:
			break;
 80008ec:	e022      	b.n	8000934 <decode+0x58>
			PWM_width[RxMessage.Bytes[1]] = RxMessage.Bytes[2]; // 0 - htim1 1 - htim2
 80008ee:	4b13      	ldr	r3, [pc, #76]	@ (800093c <decode+0x60>)
 80008f0:	78d9      	ldrb	r1, [r3, #3]
 80008f2:	4b12      	ldr	r3, [pc, #72]	@ (800093c <decode+0x60>)
 80008f4:	789b      	ldrb	r3, [r3, #2]
 80008f6:	461a      	mov	r2, r3
 80008f8:	4b11      	ldr	r3, [pc, #68]	@ (8000940 <decode+0x64>)
 80008fa:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
			(RxMessage.Bytes[1]) ? set_pwm_duty_cycle(&htim2) : set_pwm_duty_cycle(&htim1);
 80008fe:	4b0f      	ldr	r3, [pc, #60]	@ (800093c <decode+0x60>)
 8000900:	789b      	ldrb	r3, [r3, #2]
 8000902:	2b00      	cmp	r3, #0
 8000904:	d003      	beq.n	800090e <decode+0x32>
 8000906:	480f      	ldr	r0, [pc, #60]	@ (8000944 <decode+0x68>)
 8000908:	f7ff fc86 	bl	8000218 <set_pwm_duty_cycle>
			break;
 800090c:	e013      	b.n	8000936 <decode+0x5a>
			(RxMessage.Bytes[1]) ? set_pwm_duty_cycle(&htim2) : set_pwm_duty_cycle(&htim1);
 800090e:	480e      	ldr	r0, [pc, #56]	@ (8000948 <decode+0x6c>)
 8000910:	f7ff fc82 	bl	8000218 <set_pwm_duty_cycle>
			break;
 8000914:	e00f      	b.n	8000936 <decode+0x5a>
				Default_Switch_State = set_bit(Default_Switch_State,RxMessage.Bytes[1],RxMessage.Bytes[2]);
 8000916:	4b0d      	ldr	r3, [pc, #52]	@ (800094c <decode+0x70>)
 8000918:	781b      	ldrb	r3, [r3, #0]
 800091a:	4a08      	ldr	r2, [pc, #32]	@ (800093c <decode+0x60>)
 800091c:	7891      	ldrb	r1, [r2, #2]
 800091e:	4a07      	ldr	r2, [pc, #28]	@ (800093c <decode+0x60>)
 8000920:	78d2      	ldrb	r2, [r2, #3]
 8000922:	4618      	mov	r0, r3
 8000924:	f000 f9d4 	bl	8000cd0 <set_bit>
 8000928:	4603      	mov	r3, r0
 800092a:	461a      	mov	r2, r3
 800092c:	4b07      	ldr	r3, [pc, #28]	@ (800094c <decode+0x70>)
 800092e:	701a      	strb	r2, [r3, #0]
				switch_output();
 8000930:	f7ff ff54 	bl	80007dc <switch_output>
			break;
 8000934:	bf00      	nop

	}
}
 8000936:	bf00      	nop
 8000938:	bd80      	pop	{r7, pc}
 800093a:	bf00      	nop
 800093c:	2000069c 	.word	0x2000069c
 8000940:	20000644 	.word	0x20000644
 8000944:	200001b8 	.word	0x200001b8
 8000948:	2000016c 	.word	0x2000016c
 800094c:	20000642 	.word	0x20000642

08000950 <Current_Sense_process>:



void Current_Sense_process(){
 8000950:	b580      	push	{r7, lr}
 8000952:	b082      	sub	sp, #8
 8000954:	af00      	add	r7, sp, #0
	//4031 == 3.3V since 12bit, have to pick shunt resistor according to this
	for(int i = 0; i < 8; i++){
 8000956:	2300      	movs	r3, #0
 8000958:	607b      	str	r3, [r7, #4]
 800095a:	e051      	b.n	8000a00 <Current_Sense_process+0xb0>
		outputs[i].raw_current = outputs[i].Current_Sense[0];
 800095c:	4a2d      	ldr	r2, [pc, #180]	@ (8000a14 <Current_Sense_process+0xc4>)
 800095e:	687b      	ldr	r3, [r7, #4]
 8000960:	2158      	movs	r1, #88	@ 0x58
 8000962:	fb01 f303 	mul.w	r3, r1, r3
 8000966:	4413      	add	r3, r2
 8000968:	3314      	adds	r3, #20
 800096a:	8818      	ldrh	r0, [r3, #0]
 800096c:	4a29      	ldr	r2, [pc, #164]	@ (8000a14 <Current_Sense_process+0xc4>)
 800096e:	687b      	ldr	r3, [r7, #4]
 8000970:	2158      	movs	r1, #88	@ 0x58
 8000972:	fb01 f303 	mul.w	r3, r1, r3
 8000976:	4413      	add	r3, r2
 8000978:	3312      	adds	r3, #18
 800097a:	4602      	mov	r2, r0
 800097c:	801a      	strh	r2, [r3, #0]
		for(int z = 1; z < I_AVERAGE; z++){
 800097e:	2301      	movs	r3, #1
 8000980:	603b      	str	r3, [r7, #0]
 8000982:	e021      	b.n	80009c8 <Current_Sense_process+0x78>
			outputs[i].raw_current = (outputs[i].raw_current + outputs[i].Current_Sense[0])/2;
 8000984:	4a23      	ldr	r2, [pc, #140]	@ (8000a14 <Current_Sense_process+0xc4>)
 8000986:	687b      	ldr	r3, [r7, #4]
 8000988:	2158      	movs	r1, #88	@ 0x58
 800098a:	fb01 f303 	mul.w	r3, r1, r3
 800098e:	4413      	add	r3, r2
 8000990:	3312      	adds	r3, #18
 8000992:	881b      	ldrh	r3, [r3, #0]
 8000994:	4618      	mov	r0, r3
 8000996:	4a1f      	ldr	r2, [pc, #124]	@ (8000a14 <Current_Sense_process+0xc4>)
 8000998:	687b      	ldr	r3, [r7, #4]
 800099a:	2158      	movs	r1, #88	@ 0x58
 800099c:	fb01 f303 	mul.w	r3, r1, r3
 80009a0:	4413      	add	r3, r2
 80009a2:	3314      	adds	r3, #20
 80009a4:	881b      	ldrh	r3, [r3, #0]
 80009a6:	4403      	add	r3, r0
 80009a8:	0fda      	lsrs	r2, r3, #31
 80009aa:	4413      	add	r3, r2
 80009ac:	105b      	asrs	r3, r3, #1
 80009ae:	b298      	uxth	r0, r3
 80009b0:	4a18      	ldr	r2, [pc, #96]	@ (8000a14 <Current_Sense_process+0xc4>)
 80009b2:	687b      	ldr	r3, [r7, #4]
 80009b4:	2158      	movs	r1, #88	@ 0x58
 80009b6:	fb01 f303 	mul.w	r3, r1, r3
 80009ba:	4413      	add	r3, r2
 80009bc:	3312      	adds	r3, #18
 80009be:	4602      	mov	r2, r0
 80009c0:	801a      	strh	r2, [r3, #0]
		for(int z = 1; z < I_AVERAGE; z++){
 80009c2:	683b      	ldr	r3, [r7, #0]
 80009c4:	3301      	adds	r3, #1
 80009c6:	603b      	str	r3, [r7, #0]
 80009c8:	683b      	ldr	r3, [r7, #0]
 80009ca:	2b1f      	cmp	r3, #31
 80009cc:	ddda      	ble.n	8000984 <Current_Sense_process+0x34>

		}
		outputs[i].actual_current = Current_Sense_Raw_to_mA(outputs[i].raw_current);
 80009ce:	4a11      	ldr	r2, [pc, #68]	@ (8000a14 <Current_Sense_process+0xc4>)
 80009d0:	687b      	ldr	r3, [r7, #4]
 80009d2:	2158      	movs	r1, #88	@ 0x58
 80009d4:	fb01 f303 	mul.w	r3, r1, r3
 80009d8:	4413      	add	r3, r2
 80009da:	3312      	adds	r3, #18
 80009dc:	881b      	ldrh	r3, [r3, #0]
 80009de:	4618      	mov	r0, r3
 80009e0:	f000 f99c 	bl	8000d1c <Current_Sense_Raw_to_mA>
 80009e4:	4603      	mov	r3, r0
 80009e6:	4618      	mov	r0, r3
 80009e8:	4a0a      	ldr	r2, [pc, #40]	@ (8000a14 <Current_Sense_process+0xc4>)
 80009ea:	687b      	ldr	r3, [r7, #4]
 80009ec:	2158      	movs	r1, #88	@ 0x58
 80009ee:	fb01 f303 	mul.w	r3, r1, r3
 80009f2:	4413      	add	r3, r2
 80009f4:	3310      	adds	r3, #16
 80009f6:	4602      	mov	r2, r0
 80009f8:	801a      	strh	r2, [r3, #0]
	for(int i = 0; i < 8; i++){
 80009fa:	687b      	ldr	r3, [r7, #4]
 80009fc:	3301      	adds	r3, #1
 80009fe:	607b      	str	r3, [r7, #4]
 8000a00:	687b      	ldr	r3, [r7, #4]
 8000a02:	2b07      	cmp	r3, #7
 8000a04:	ddaa      	ble.n	800095c <Current_Sense_process+0xc>
	}
	check_warnings();
 8000a06:	f000 f807 	bl	8000a18 <check_warnings>
}
 8000a0a:	bf00      	nop
 8000a0c:	3708      	adds	r7, #8
 8000a0e:	46bd      	mov	sp, r7
 8000a10:	bd80      	pop	{r7, pc}
 8000a12:	bf00      	nop
 8000a14:	20000380 	.word	0x20000380

08000a18 <check_warnings>:

void check_warnings(){
 8000a18:	b580      	push	{r7, lr}
 8000a1a:	b082      	sub	sp, #8
 8000a1c:	af00      	add	r7, sp, #0
	for(uint8_t x = 0; x < 7; x++){
 8000a1e:	2300      	movs	r3, #0
 8000a20:	71fb      	strb	r3, [r7, #7]
 8000a22:	e060      	b.n	8000ae6 <check_warnings+0xce>
		if(outputs[x].device != NC){
 8000a24:	79fb      	ldrb	r3, [r7, #7]
 8000a26:	4a34      	ldr	r2, [pc, #208]	@ (8000af8 <check_warnings+0xe0>)
 8000a28:	2158      	movs	r1, #88	@ 0x58
 8000a2a:	fb01 f303 	mul.w	r3, r1, r3
 8000a2e:	4413      	add	r3, r2
 8000a30:	881b      	ldrh	r3, [r3, #0]
 8000a32:	2b00      	cmp	r3, #0
 8000a34:	d03e      	beq.n	8000ab4 <check_warnings+0x9c>
			if(outputs[x].actual_current >= outputs[x].Warning_Current){
 8000a36:	79fb      	ldrb	r3, [r7, #7]
 8000a38:	4a2f      	ldr	r2, [pc, #188]	@ (8000af8 <check_warnings+0xe0>)
 8000a3a:	2158      	movs	r1, #88	@ 0x58
 8000a3c:	fb01 f303 	mul.w	r3, r1, r3
 8000a40:	4413      	add	r3, r2
 8000a42:	3310      	adds	r3, #16
 8000a44:	881a      	ldrh	r2, [r3, #0]
 8000a46:	79fb      	ldrb	r3, [r7, #7]
 8000a48:	492b      	ldr	r1, [pc, #172]	@ (8000af8 <check_warnings+0xe0>)
 8000a4a:	2058      	movs	r0, #88	@ 0x58
 8000a4c:	fb00 f303 	mul.w	r3, r0, r3
 8000a50:	440b      	add	r3, r1
 8000a52:	3304      	adds	r3, #4
 8000a54:	881b      	ldrh	r3, [r3, #0]
 8000a56:	429a      	cmp	r2, r3
 8000a58:	d32c      	bcc.n	8000ab4 <check_warnings+0x9c>
				if(outputs[x].actual_current >= outputs[x].Over_Current){
 8000a5a:	79fb      	ldrb	r3, [r7, #7]
 8000a5c:	4a26      	ldr	r2, [pc, #152]	@ (8000af8 <check_warnings+0xe0>)
 8000a5e:	2158      	movs	r1, #88	@ 0x58
 8000a60:	fb01 f303 	mul.w	r3, r1, r3
 8000a64:	4413      	add	r3, r2
 8000a66:	3310      	adds	r3, #16
 8000a68:	881a      	ldrh	r2, [r3, #0]
 8000a6a:	79fb      	ldrb	r3, [r7, #7]
 8000a6c:	4922      	ldr	r1, [pc, #136]	@ (8000af8 <check_warnings+0xe0>)
 8000a6e:	2058      	movs	r0, #88	@ 0x58
 8000a70:	fb00 f303 	mul.w	r3, r0, r3
 8000a74:	440b      	add	r3, r1
 8000a76:	3302      	adds	r3, #2
 8000a78:	881b      	ldrh	r3, [r3, #0]
 8000a7a:	429a      	cmp	r2, r3
 8000a7c:	d316      	bcc.n	8000aac <check_warnings+0x94>
					Default_Switch_State = set_bit(Default_Switch_State, outputs[x].pin, 0);
 8000a7e:	4b1f      	ldr	r3, [pc, #124]	@ (8000afc <check_warnings+0xe4>)
 8000a80:	7818      	ldrb	r0, [r3, #0]
 8000a82:	79fb      	ldrb	r3, [r7, #7]
 8000a84:	4a1c      	ldr	r2, [pc, #112]	@ (8000af8 <check_warnings+0xe0>)
 8000a86:	2158      	movs	r1, #88	@ 0x58
 8000a88:	fb01 f303 	mul.w	r3, r1, r3
 8000a8c:	4413      	add	r3, r2
 8000a8e:	330e      	adds	r3, #14
 8000a90:	781b      	ldrb	r3, [r3, #0]
 8000a92:	2200      	movs	r2, #0
 8000a94:	4619      	mov	r1, r3
 8000a96:	f000 f91b 	bl	8000cd0 <set_bit>
 8000a9a:	4603      	mov	r3, r0
 8000a9c:	461a      	mov	r2, r3
 8000a9e:	4b17      	ldr	r3, [pc, #92]	@ (8000afc <check_warnings+0xe4>)
 8000aa0:	701a      	strb	r2, [r3, #0]
					Over_current(x);
 8000aa2:	79fb      	ldrb	r3, [r7, #7]
 8000aa4:	4618      	mov	r0, r3
 8000aa6:	f7ff fedd 	bl	8000864 <Over_current>
 8000aaa:	e003      	b.n	8000ab4 <check_warnings+0x9c>
				}else{
					Warning_current(x);
 8000aac:	79fb      	ldrb	r3, [r7, #7]
 8000aae:	4618      	mov	r0, r3
 8000ab0:	f7ff feec 	bl	800088c <Warning_current>
				}
			}
		}
		if(outputs[x].actual_current < outputs[x].Under_Current){
 8000ab4:	79fb      	ldrb	r3, [r7, #7]
 8000ab6:	4a10      	ldr	r2, [pc, #64]	@ (8000af8 <check_warnings+0xe0>)
 8000ab8:	2158      	movs	r1, #88	@ 0x58
 8000aba:	fb01 f303 	mul.w	r3, r1, r3
 8000abe:	4413      	add	r3, r2
 8000ac0:	3310      	adds	r3, #16
 8000ac2:	881a      	ldrh	r2, [r3, #0]
 8000ac4:	79fb      	ldrb	r3, [r7, #7]
 8000ac6:	490c      	ldr	r1, [pc, #48]	@ (8000af8 <check_warnings+0xe0>)
 8000ac8:	2058      	movs	r0, #88	@ 0x58
 8000aca:	fb00 f303 	mul.w	r3, r0, r3
 8000ace:	440b      	add	r3, r1
 8000ad0:	3306      	adds	r3, #6
 8000ad2:	881b      	ldrh	r3, [r3, #0]
 8000ad4:	429a      	cmp	r2, r3
 8000ad6:	d203      	bcs.n	8000ae0 <check_warnings+0xc8>
			Under_current(x);
 8000ad8:	79fb      	ldrb	r3, [r7, #7]
 8000ada:	4618      	mov	r0, r3
 8000adc:	f7ff feea 	bl	80008b4 <Under_current>
	for(uint8_t x = 0; x < 7; x++){
 8000ae0:	79fb      	ldrb	r3, [r7, #7]
 8000ae2:	3301      	adds	r3, #1
 8000ae4:	71fb      	strb	r3, [r7, #7]
 8000ae6:	79fb      	ldrb	r3, [r7, #7]
 8000ae8:	2b06      	cmp	r3, #6
 8000aea:	d99b      	bls.n	8000a24 <check_warnings+0xc>
		}
	}
	switch_output();
 8000aec:	f7ff fe76 	bl	80007dc <switch_output>
}
 8000af0:	bf00      	nop
 8000af2:	3708      	adds	r7, #8
 8000af4:	46bd      	mov	sp, r7
 8000af6:	bd80      	pop	{r7, pc}
 8000af8:	20000380 	.word	0x20000380
 8000afc:	20000642 	.word	0x20000642

08000b00 <ConfigureCurrentSense>:


void ConfigureCurrentSense(uint8_t SEL0, uint8_t SEL1){
 8000b00:	b580      	push	{r7, lr}
 8000b02:	b082      	sub	sp, #8
 8000b04:	af00      	add	r7, sp, #0
 8000b06:	4603      	mov	r3, r0
 8000b08:	460a      	mov	r2, r1
 8000b0a:	71fb      	strb	r3, [r7, #7]
 8000b0c:	4613      	mov	r3, r2
 8000b0e:	71bb      	strb	r3, [r7, #6]
	HAL_GPIO_WritePin(GPIOB,SEL0_Pin,SEL0);
 8000b10:	79fb      	ldrb	r3, [r7, #7]
 8000b12:	461a      	mov	r2, r3
 8000b14:	2140      	movs	r1, #64	@ 0x40
 8000b16:	4806      	ldr	r0, [pc, #24]	@ (8000b30 <ConfigureCurrentSense+0x30>)
 8000b18:	f003 fe96 	bl	8004848 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB,SEL1_Pin,SEL1);
 8000b1c:	79bb      	ldrb	r3, [r7, #6]
 8000b1e:	461a      	mov	r2, r3
 8000b20:	2120      	movs	r1, #32
 8000b22:	4803      	ldr	r0, [pc, #12]	@ (8000b30 <ConfigureCurrentSense+0x30>)
 8000b24:	f003 fe90 	bl	8004848 <HAL_GPIO_WritePin>
}
 8000b28:	bf00      	nop
 8000b2a:	3708      	adds	r7, #8
 8000b2c:	46bd      	mov	sp, r7
 8000b2e:	bd80      	pop	{r7, pc}
 8000b30:	48000400 	.word	0x48000400

08000b34 <ReadADCValues>:

void ReadADCValues(uint16_t *adc1_values, uint16_t *adc2_values){
 8000b34:	b580      	push	{r7, lr}
 8000b36:	b084      	sub	sp, #16
 8000b38:	af00      	add	r7, sp, #0
 8000b3a:	6078      	str	r0, [r7, #4]
 8000b3c:	6039      	str	r1, [r7, #0]
	for(int i = 0; i < I_AVERAGE; i++){
 8000b3e:	2300      	movs	r3, #0
 8000b40:	60fb      	str	r3, [r7, #12]
 8000b42:	e048      	b.n	8000bd6 <ReadADCValues+0xa2>
		if(HAL_ADC_Start(&hadc1)!=HAL_OK){Error_Handler();}
 8000b44:	4828      	ldr	r0, [pc, #160]	@ (8000be8 <ReadADCValues+0xb4>)
 8000b46:	f001 fd95 	bl	8002674 <HAL_ADC_Start>
 8000b4a:	4603      	mov	r3, r0
 8000b4c:	2b00      	cmp	r3, #0
 8000b4e:	d001      	beq.n	8000b54 <ReadADCValues+0x20>
 8000b50:	f000 fe1c 	bl	800178c <Error_Handler>
		if(HAL_ADC_Start(&hadc2)!=HAL_OK){Error_Handler();}
 8000b54:	4825      	ldr	r0, [pc, #148]	@ (8000bec <ReadADCValues+0xb8>)
 8000b56:	f001 fd8d 	bl	8002674 <HAL_ADC_Start>
 8000b5a:	4603      	mov	r3, r0
 8000b5c:	2b00      	cmp	r3, #0
 8000b5e:	d001      	beq.n	8000b64 <ReadADCValues+0x30>
 8000b60:	f000 fe14 	bl	800178c <Error_Handler>
		if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();}
 8000b64:	2164      	movs	r1, #100	@ 0x64
 8000b66:	4820      	ldr	r0, [pc, #128]	@ (8000be8 <ReadADCValues+0xb4>)
 8000b68:	f001 fe74 	bl	8002854 <HAL_ADC_PollForConversion>
 8000b6c:	4603      	mov	r3, r0
 8000b6e:	2b00      	cmp	r3, #0
 8000b70:	d001      	beq.n	8000b76 <ReadADCValues+0x42>
 8000b72:	f000 fe0b 	bl	800178c <Error_Handler>
		if(HAL_ADC_PollForConversion(&hadc2,100)!=HAL_OK){Error_Handler();}
 8000b76:	2164      	movs	r1, #100	@ 0x64
 8000b78:	481c      	ldr	r0, [pc, #112]	@ (8000bec <ReadADCValues+0xb8>)
 8000b7a:	f001 fe6b 	bl	8002854 <HAL_ADC_PollForConversion>
 8000b7e:	4603      	mov	r3, r0
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d001      	beq.n	8000b88 <ReadADCValues+0x54>
 8000b84:	f000 fe02 	bl	800178c <Error_Handler>
        adc1_values[i] = (uint16_t)HAL_ADC_GetValue(&hadc1);
 8000b88:	4817      	ldr	r0, [pc, #92]	@ (8000be8 <ReadADCValues+0xb4>)
 8000b8a:	f001 ff3b 	bl	8002a04 <HAL_ADC_GetValue>
 8000b8e:	4601      	mov	r1, r0
 8000b90:	68fb      	ldr	r3, [r7, #12]
 8000b92:	005b      	lsls	r3, r3, #1
 8000b94:	687a      	ldr	r2, [r7, #4]
 8000b96:	4413      	add	r3, r2
 8000b98:	b28a      	uxth	r2, r1
 8000b9a:	801a      	strh	r2, [r3, #0]
        adc2_values[i] = (uint16_t)HAL_ADC_GetValue(&hadc2);
 8000b9c:	4813      	ldr	r0, [pc, #76]	@ (8000bec <ReadADCValues+0xb8>)
 8000b9e:	f001 ff31 	bl	8002a04 <HAL_ADC_GetValue>
 8000ba2:	4601      	mov	r1, r0
 8000ba4:	68fb      	ldr	r3, [r7, #12]
 8000ba6:	005b      	lsls	r3, r3, #1
 8000ba8:	683a      	ldr	r2, [r7, #0]
 8000baa:	4413      	add	r3, r2
 8000bac:	b28a      	uxth	r2, r1
 8000bae:	801a      	strh	r2, [r3, #0]
		if(HAL_ADC_Stop(&hadc1)!=HAL_OK){Error_Handler();}
 8000bb0:	480d      	ldr	r0, [pc, #52]	@ (8000be8 <ReadADCValues+0xb4>)
 8000bb2:	f001 fe1b 	bl	80027ec <HAL_ADC_Stop>
 8000bb6:	4603      	mov	r3, r0
 8000bb8:	2b00      	cmp	r3, #0
 8000bba:	d001      	beq.n	8000bc0 <ReadADCValues+0x8c>
 8000bbc:	f000 fde6 	bl	800178c <Error_Handler>
		if(HAL_ADC_Stop(&hadc2)!=HAL_OK){Error_Handler();}
 8000bc0:	480a      	ldr	r0, [pc, #40]	@ (8000bec <ReadADCValues+0xb8>)
 8000bc2:	f001 fe13 	bl	80027ec <HAL_ADC_Stop>
 8000bc6:	4603      	mov	r3, r0
 8000bc8:	2b00      	cmp	r3, #0
 8000bca:	d001      	beq.n	8000bd0 <ReadADCValues+0x9c>
 8000bcc:	f000 fdde 	bl	800178c <Error_Handler>
	for(int i = 0; i < I_AVERAGE; i++){
 8000bd0:	68fb      	ldr	r3, [r7, #12]
 8000bd2:	3301      	adds	r3, #1
 8000bd4:	60fb      	str	r3, [r7, #12]
 8000bd6:	68fb      	ldr	r3, [r7, #12]
 8000bd8:	2b1f      	cmp	r3, #31
 8000bda:	ddb3      	ble.n	8000b44 <ReadADCValues+0x10>
	}
}
 8000bdc:	bf00      	nop
 8000bde:	bf00      	nop
 8000be0:	3710      	adds	r7, #16
 8000be2:	46bd      	mov	sp, r7
 8000be4:	bd80      	pop	{r7, pc}
 8000be6:	bf00      	nop
 8000be8:	20000030 	.word	0x20000030
 8000bec:	2000009c 	.word	0x2000009c

08000bf0 <Current_Sense_read>:

void Current_Sense_read(){
 8000bf0:	b580      	push	{r7, lr}
 8000bf2:	b082      	sub	sp, #8
 8000bf4:	af00      	add	r7, sp, #0
	for(int x = 0;x < 5; x++){
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	607b      	str	r3, [r7, #4]
 8000bfa:	e034      	b.n	8000c66 <Current_Sense_read+0x76>
		switch(x){
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	2b03      	cmp	r3, #3
 8000c00:	d82e      	bhi.n	8000c60 <Current_Sense_read+0x70>
 8000c02:	a201      	add	r2, pc, #4	@ (adr r2, 8000c08 <Current_Sense_read+0x18>)
 8000c04:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c08:	08000c19 	.word	0x08000c19
 8000c0c:	08000c2b 	.word	0x08000c2b
 8000c10:	08000c3d 	.word	0x08000c3d
 8000c14:	08000c4f 	.word	0x08000c4f
		case 0:
			ConfigureCurrentSense(0, 0);
 8000c18:	2100      	movs	r1, #0
 8000c1a:	2000      	movs	r0, #0
 8000c1c:	f7ff ff70 	bl	8000b00 <ConfigureCurrentSense>
			ReadADCValues(outputs[0].Current_Sense, outputs[4].Current_Sense);
 8000c20:	4915      	ldr	r1, [pc, #84]	@ (8000c78 <Current_Sense_read+0x88>)
 8000c22:	4816      	ldr	r0, [pc, #88]	@ (8000c7c <Current_Sense_read+0x8c>)
 8000c24:	f7ff ff86 	bl	8000b34 <ReadADCValues>
			break;
 8000c28:	e01a      	b.n	8000c60 <Current_Sense_read+0x70>
		case 1:
			ConfigureCurrentSense(0, 1);
 8000c2a:	2101      	movs	r1, #1
 8000c2c:	2000      	movs	r0, #0
 8000c2e:	f7ff ff67 	bl	8000b00 <ConfigureCurrentSense>
			ReadADCValues(outputs[1].Current_Sense, outputs[5].Current_Sense);
 8000c32:	4913      	ldr	r1, [pc, #76]	@ (8000c80 <Current_Sense_read+0x90>)
 8000c34:	4813      	ldr	r0, [pc, #76]	@ (8000c84 <Current_Sense_read+0x94>)
 8000c36:	f7ff ff7d 	bl	8000b34 <ReadADCValues>
			break;
 8000c3a:	e011      	b.n	8000c60 <Current_Sense_read+0x70>
		case 2:
			ConfigureCurrentSense(1, 0);
 8000c3c:	2100      	movs	r1, #0
 8000c3e:	2001      	movs	r0, #1
 8000c40:	f7ff ff5e 	bl	8000b00 <ConfigureCurrentSense>
			ReadADCValues(outputs[2].Current_Sense, outputs[6].Current_Sense);
 8000c44:	4910      	ldr	r1, [pc, #64]	@ (8000c88 <Current_Sense_read+0x98>)
 8000c46:	4811      	ldr	r0, [pc, #68]	@ (8000c8c <Current_Sense_read+0x9c>)
 8000c48:	f7ff ff74 	bl	8000b34 <ReadADCValues>
			break;
 8000c4c:	e008      	b.n	8000c60 <Current_Sense_read+0x70>
		case 3:
			ConfigureCurrentSense(1, 1);
 8000c4e:	2101      	movs	r1, #1
 8000c50:	2001      	movs	r0, #1
 8000c52:	f7ff ff55 	bl	8000b00 <ConfigureCurrentSense>
			ReadADCValues(outputs[3].Current_Sense, outputs[7].Current_Sense);
 8000c56:	490e      	ldr	r1, [pc, #56]	@ (8000c90 <Current_Sense_read+0xa0>)
 8000c58:	480e      	ldr	r0, [pc, #56]	@ (8000c94 <Current_Sense_read+0xa4>)
 8000c5a:	f7ff ff6b 	bl	8000b34 <ReadADCValues>
			break;
 8000c5e:	bf00      	nop
	for(int x = 0;x < 5; x++){
 8000c60:	687b      	ldr	r3, [r7, #4]
 8000c62:	3301      	adds	r3, #1
 8000c64:	607b      	str	r3, [r7, #4]
 8000c66:	687b      	ldr	r3, [r7, #4]
 8000c68:	2b04      	cmp	r3, #4
 8000c6a:	ddc7      	ble.n	8000bfc <Current_Sense_read+0xc>
		}
	}
	Current_Sense_process();
 8000c6c:	f7ff fe70 	bl	8000950 <Current_Sense_process>
}
 8000c70:	bf00      	nop
 8000c72:	3708      	adds	r7, #8
 8000c74:	46bd      	mov	sp, r7
 8000c76:	bd80      	pop	{r7, pc}
 8000c78:	200004f4 	.word	0x200004f4
 8000c7c:	20000394 	.word	0x20000394
 8000c80:	2000054c 	.word	0x2000054c
 8000c84:	200003ec 	.word	0x200003ec
 8000c88:	200005a4 	.word	0x200005a4
 8000c8c:	20000444 	.word	0x20000444
 8000c90:	200005fc 	.word	0x200005fc
 8000c94:	2000049c 	.word	0x2000049c

08000c98 <check_bit>:

uint8_t check_bit(uint8_t byte, uint8_t bitn){
 8000c98:	b480      	push	{r7}
 8000c9a:	b085      	sub	sp, #20
 8000c9c:	af00      	add	r7, sp, #0
 8000c9e:	4603      	mov	r3, r0
 8000ca0:	460a      	mov	r2, r1
 8000ca2:	71fb      	strb	r3, [r7, #7]
 8000ca4:	4613      	mov	r3, r2
 8000ca6:	71bb      	strb	r3, [r7, #6]
	uint8_t buffer = 1<<bitn;
 8000ca8:	79bb      	ldrb	r3, [r7, #6]
 8000caa:	2201      	movs	r2, #1
 8000cac:	fa02 f303 	lsl.w	r3, r2, r3
 8000cb0:	73fb      	strb	r3, [r7, #15]
	if (byte & buffer){
 8000cb2:	79fa      	ldrb	r2, [r7, #7]
 8000cb4:	7bfb      	ldrb	r3, [r7, #15]
 8000cb6:	4013      	ands	r3, r2
 8000cb8:	b2db      	uxtb	r3, r3
 8000cba:	2b00      	cmp	r3, #0
 8000cbc:	d001      	beq.n	8000cc2 <check_bit+0x2a>
		return 1;
 8000cbe:	2301      	movs	r3, #1
 8000cc0:	e000      	b.n	8000cc4 <check_bit+0x2c>
	}else{
		return 0;
 8000cc2:	2300      	movs	r3, #0
	}
}
 8000cc4:	4618      	mov	r0, r3
 8000cc6:	3714      	adds	r7, #20
 8000cc8:	46bd      	mov	sp, r7
 8000cca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cce:	4770      	bx	lr

08000cd0 <set_bit>:

uint8_t set_bit(uint8_t byte, uint8_t pos, uint8_t new_bit){
 8000cd0:	b480      	push	{r7}
 8000cd2:	b085      	sub	sp, #20
 8000cd4:	af00      	add	r7, sp, #0
 8000cd6:	4603      	mov	r3, r0
 8000cd8:	71fb      	strb	r3, [r7, #7]
 8000cda:	460b      	mov	r3, r1
 8000cdc:	71bb      	strb	r3, [r7, #6]
 8000cde:	4613      	mov	r3, r2
 8000ce0:	717b      	strb	r3, [r7, #5]
	uint8_t mask = 1 << pos;
 8000ce2:	79bb      	ldrb	r3, [r7, #6]
 8000ce4:	2201      	movs	r2, #1
 8000ce6:	fa02 f303 	lsl.w	r3, r2, r3
 8000cea:	73fb      	strb	r3, [r7, #15]
	if(new_bit == 1){
 8000cec:	797b      	ldrb	r3, [r7, #5]
 8000cee:	2b01      	cmp	r3, #1
 8000cf0:	d104      	bne.n	8000cfc <set_bit+0x2c>
		byte |= mask;
 8000cf2:	79fa      	ldrb	r2, [r7, #7]
 8000cf4:	7bfb      	ldrb	r3, [r7, #15]
 8000cf6:	4313      	orrs	r3, r2
 8000cf8:	71fb      	strb	r3, [r7, #7]
 8000cfa:	e008      	b.n	8000d0e <set_bit+0x3e>
	}else{
		byte &= ~mask;
 8000cfc:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000d00:	43db      	mvns	r3, r3
 8000d02:	b25a      	sxtb	r2, r3
 8000d04:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d08:	4013      	ands	r3, r2
 8000d0a:	b25b      	sxtb	r3, r3
 8000d0c:	71fb      	strb	r3, [r7, #7]
	}
	return byte;
 8000d0e:	79fb      	ldrb	r3, [r7, #7]
}
 8000d10:	4618      	mov	r0, r3
 8000d12:	3714      	adds	r7, #20
 8000d14:	46bd      	mov	sp, r7
 8000d16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d1a:	4770      	bx	lr

08000d1c <Current_Sense_Raw_to_mA>:

uint16_t Current_Sense_Raw_to_mA(uint16_t raw){
 8000d1c:	b480      	push	{r7}
 8000d1e:	b085      	sub	sp, #20
 8000d20:	af00      	add	r7, sp, #0
 8000d22:	4603      	mov	r3, r0
 8000d24:	80fb      	strh	r3, [r7, #6]
	//4095 is the max, depending on resistors we will find the current values		3.3 V == 4,95 A
	uint32_t max_mA = 4950;
 8000d26:	f241 3356 	movw	r3, #4950	@ 0x1356
 8000d2a:	60fb      	str	r3, [r7, #12]
	uint16_t current = 0;
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	817b      	strh	r3, [r7, #10]

	current = raw*max_mA / 4095;
 8000d30:	88fb      	ldrh	r3, [r7, #6]
 8000d32:	68fa      	ldr	r2, [r7, #12]
 8000d34:	fb03 f202 	mul.w	r2, r3, r2
 8000d38:	4b07      	ldr	r3, [pc, #28]	@ (8000d58 <Current_Sense_Raw_to_mA+0x3c>)
 8000d3a:	fba3 1302 	umull	r1, r3, r3, r2
 8000d3e:	1ad2      	subs	r2, r2, r3
 8000d40:	0852      	lsrs	r2, r2, #1
 8000d42:	4413      	add	r3, r2
 8000d44:	0adb      	lsrs	r3, r3, #11
 8000d46:	817b      	strh	r3, [r7, #10]
	//current = raw*3300 / 4095;

	return current;
 8000d48:	897b      	ldrh	r3, [r7, #10]
}
 8000d4a:	4618      	mov	r0, r3
 8000d4c:	3714      	adds	r7, #20
 8000d4e:	46bd      	mov	sp, r7
 8000d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d54:	4770      	bx	lr
 8000d56:	bf00      	nop
 8000d58:	00100101 	.word	0x00100101

08000d5c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000d5c:	b580      	push	{r7, lr}
 8000d5e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000d60:	f000 fff7 	bl	8001d52 <HAL_Init>

  /* USER CODE BEGIN Init */
  Config_Setup();
 8000d64:	f7ff faa2 	bl	80002ac <Config_Setup>
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000d68:	f000 f880 	bl	8000e6c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000d6c:	f000 fcac 	bl	80016c8 <MX_GPIO_Init>
  MX_ADC1_Init();
 8000d70:	f000 f8c6 	bl	8000f00 <MX_ADC1_Init>
  MX_FDCAN1_Init();
 8000d74:	f000 f9c6 	bl	8001104 <MX_FDCAN1_Init>
  MX_TIM1_Init();
 8000d78:	f000 fa2c 	bl	80011d4 <MX_TIM1_Init>
  MX_TIM2_Init();
 8000d7c:	f000 fada 	bl	8001334 <MX_TIM2_Init>
  MX_TIM3_Init();
 8000d80:	f000 fb4e 	bl	8001420 <MX_TIM3_Init>
  MX_TIM4_Init();
 8000d84:	f000 fb9a 	bl	80014bc <MX_TIM4_Init>
  MX_TIM6_Init();
 8000d88:	f000 fc0c 	bl	80015a4 <MX_TIM6_Init>
  MX_TIM7_Init();
 8000d8c:	f000 fc40 	bl	8001610 <MX_TIM7_Init>
  MX_TIM16_Init();
 8000d90:	f000 fc74 	bl	800167c <MX_TIM16_Init>
  MX_ADC2_Init();
 8000d94:	f000 f950 	bl	8001038 <MX_ADC2_Init>
  /* USER CODE BEGIN 2 */
  HAL_GPIO_WritePin(GPIOA,LED2_Pin,0);
 8000d98:	2200      	movs	r2, #0
 8000d9a:	2180      	movs	r1, #128	@ 0x80
 8000d9c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000da0:	f003 fd52 	bl	8004848 <HAL_GPIO_WritePin>

  HAL_TIM_PWM_Init(&htim1);
 8000da4:	4829      	ldr	r0, [pc, #164]	@ (8000e4c <main+0xf0>)
 8000da6:	f004 fdc3 	bl	8005930 <HAL_TIM_PWM_Init>
  HAL_TIM_PWM_Init(&htim2);
 8000daa:	4829      	ldr	r0, [pc, #164]	@ (8000e50 <main+0xf4>)
 8000dac:	f004 fdc0 	bl	8005930 <HAL_TIM_PWM_Init>
  HAL_TIM_Base_Start_IT(&htim3);
 8000db0:	4828      	ldr	r0, [pc, #160]	@ (8000e54 <main+0xf8>)
 8000db2:	f004 fd53 	bl	800585c <HAL_TIM_Base_Start_IT>

  HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 8000db6:	2100      	movs	r1, #0
 8000db8:	4824      	ldr	r0, [pc, #144]	@ (8000e4c <main+0xf0>)
 8000dba:	f004 fe1b 	bl	80059f4 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 8000dbe:	2100      	movs	r1, #0
 8000dc0:	4823      	ldr	r0, [pc, #140]	@ (8000e50 <main+0xf4>)
 8000dc2:	f004 fe17 	bl	80059f4 <HAL_TIM_PWM_Start>

  set_pwm_duty_cycle(&htim1);
 8000dc6:	4821      	ldr	r0, [pc, #132]	@ (8000e4c <main+0xf0>)
 8000dc8:	f7ff fa26 	bl	8000218 <set_pwm_duty_cycle>
  set_pwm_duty_cycle(&htim2);
 8000dcc:	4820      	ldr	r0, [pc, #128]	@ (8000e50 <main+0xf4>)
 8000dce:	f7ff fa23 	bl	8000218 <set_pwm_duty_cycle>

  if(HAL_FDCAN_Start(&hfdcan1)!= HAL_OK){ Error_Handler(); }else{HAL_GPIO_WritePin(GPIOB,LED1_Pin,1); }
 8000dd2:	4821      	ldr	r0, [pc, #132]	@ (8000e58 <main+0xfc>)
 8000dd4:	f002 feea 	bl	8003bac <HAL_FDCAN_Start>
 8000dd8:	4603      	mov	r3, r0
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	d002      	beq.n	8000de4 <main+0x88>
 8000dde:	f000 fcd5 	bl	800178c <Error_Handler>
 8000de2:	e004      	b.n	8000dee <main+0x92>
 8000de4:	2201      	movs	r2, #1
 8000de6:	2101      	movs	r1, #1
 8000de8:	481c      	ldr	r0, [pc, #112]	@ (8000e5c <main+0x100>)
 8000dea:	f003 fd2d 	bl	8004848 <HAL_GPIO_WritePin>
  if(HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE,0) != HAL_OK) { Error_Handler(); }
 8000dee:	2200      	movs	r2, #0
 8000df0:	2101      	movs	r1, #1
 8000df2:	4819      	ldr	r0, [pc, #100]	@ (8000e58 <main+0xfc>)
 8000df4:	f003 f860 	bl	8003eb8 <HAL_FDCAN_ActivateNotification>
 8000df8:	4603      	mov	r3, r0
 8000dfa:	2b00      	cmp	r3, #0
 8000dfc:	d001      	beq.n	8000e02 <main+0xa6>
 8000dfe:	f000 fcc5 	bl	800178c <Error_Handler>

  HAL_Delay(2000);
 8000e02:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8000e06:	f001 f815 	bl	8001e34 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOA,LED2_Pin,1);
 8000e0a:	2201      	movs	r2, #1
 8000e0c:	2180      	movs	r1, #128	@ 0x80
 8000e0e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000e12:	f003 fd19 	bl	8004848 <HAL_GPIO_WritePin>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
		 __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1,PWM_speed[0]);
 8000e16:	4b12      	ldr	r3, [pc, #72]	@ (8000e60 <main+0x104>)
 8000e18:	881a      	ldrh	r2, [r3, #0]
 8000e1a:	4b0c      	ldr	r3, [pc, #48]	@ (8000e4c <main+0xf0>)
 8000e1c:	681b      	ldr	r3, [r3, #0]
 8000e1e:	635a      	str	r2, [r3, #52]	@ 0x34

		 __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1,PWM_speed[1]);
 8000e20:	4b0f      	ldr	r3, [pc, #60]	@ (8000e60 <main+0x104>)
 8000e22:	885a      	ldrh	r2, [r3, #2]
 8000e24:	4b0a      	ldr	r3, [pc, #40]	@ (8000e50 <main+0xf4>)
 8000e26:	681b      	ldr	r3, [r3, #0]
 8000e28:	635a      	str	r2, [r3, #52]	@ 0x34
	  if(millis % 10 == 0){
 8000e2a:	4b0e      	ldr	r3, [pc, #56]	@ (8000e64 <main+0x108>)
 8000e2c:	881a      	ldrh	r2, [r3, #0]
 8000e2e:	4b0e      	ldr	r3, [pc, #56]	@ (8000e68 <main+0x10c>)
 8000e30:	fba3 1302 	umull	r1, r3, r3, r2
 8000e34:	08d9      	lsrs	r1, r3, #3
 8000e36:	460b      	mov	r3, r1
 8000e38:	009b      	lsls	r3, r3, #2
 8000e3a:	440b      	add	r3, r1
 8000e3c:	005b      	lsls	r3, r3, #1
 8000e3e:	1ad3      	subs	r3, r2, r3
 8000e40:	b29b      	uxth	r3, r3
 8000e42:	2b00      	cmp	r3, #0
 8000e44:	d1e7      	bne.n	8000e16 <main+0xba>

		  Current_Sense_read();
 8000e46:	f7ff fed3 	bl	8000bf0 <Current_Sense_read>
		 __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1,PWM_speed[0]);
 8000e4a:	e7e4      	b.n	8000e16 <main+0xba>
 8000e4c:	2000016c 	.word	0x2000016c
 8000e50:	200001b8 	.word	0x200001b8
 8000e54:	20000204 	.word	0x20000204
 8000e58:	20000108 	.word	0x20000108
 8000e5c:	48000400 	.word	0x48000400
 8000e60:	20000648 	.word	0x20000648
 8000e64:	20000640 	.word	0x20000640
 8000e68:	cccccccd 	.word	0xcccccccd

08000e6c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000e6c:	b580      	push	{r7, lr}
 8000e6e:	b094      	sub	sp, #80	@ 0x50
 8000e70:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000e72:	f107 0318 	add.w	r3, r7, #24
 8000e76:	2238      	movs	r2, #56	@ 0x38
 8000e78:	2100      	movs	r1, #0
 8000e7a:	4618      	mov	r0, r3
 8000e7c:	f005 fff2 	bl	8006e64 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000e80:	1d3b      	adds	r3, r7, #4
 8000e82:	2200      	movs	r2, #0
 8000e84:	601a      	str	r2, [r3, #0]
 8000e86:	605a      	str	r2, [r3, #4]
 8000e88:	609a      	str	r2, [r3, #8]
 8000e8a:	60da      	str	r2, [r3, #12]
 8000e8c:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000e8e:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8000e92:	f003 fcf1 	bl	8004878 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000e96:	2301      	movs	r3, #1
 8000e98:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000e9a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000e9e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000ea0:	2302      	movs	r3, #2
 8000ea2:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000ea4:	2303      	movs	r3, #3
 8000ea6:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 8000ea8:	2301      	movs	r3, #1
 8000eaa:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 12;
 8000eac:	230c      	movs	r3, #12
 8000eae:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000eb0:	2302      	movs	r3, #2
 8000eb2:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV6;
 8000eb4:	2306      	movs	r3, #6
 8000eb6:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8000eb8:	2302      	movs	r3, #2
 8000eba:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ebc:	f107 0318 	add.w	r3, r7, #24
 8000ec0:	4618      	mov	r0, r3
 8000ec2:	f003 fd8d 	bl	80049e0 <HAL_RCC_OscConfig>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d001      	beq.n	8000ed0 <SystemClock_Config+0x64>
  {
    Error_Handler();
 8000ecc:	f000 fc5e 	bl	800178c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000ed0:	230f      	movs	r3, #15
 8000ed2:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000ed4:	2303      	movs	r3, #3
 8000ed6:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000ed8:	2300      	movs	r3, #0
 8000eda:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000edc:	2300      	movs	r3, #0
 8000ede:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8000ee4:	1d3b      	adds	r3, r7, #4
 8000ee6:	2101      	movs	r1, #1
 8000ee8:	4618      	mov	r0, r3
 8000eea:	f004 f88b 	bl	8005004 <HAL_RCC_ClockConfig>
 8000eee:	4603      	mov	r3, r0
 8000ef0:	2b00      	cmp	r3, #0
 8000ef2:	d001      	beq.n	8000ef8 <SystemClock_Config+0x8c>
  {
    Error_Handler();
 8000ef4:	f000 fc4a 	bl	800178c <Error_Handler>
  }
}
 8000ef8:	bf00      	nop
 8000efa:	3750      	adds	r7, #80	@ 0x50
 8000efc:	46bd      	mov	sp, r7
 8000efe:	bd80      	pop	{r7, pc}

08000f00 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000f00:	b580      	push	{r7, lr}
 8000f02:	b08c      	sub	sp, #48	@ 0x30
 8000f04:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 8000f06:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000f0a:	2200      	movs	r2, #0
 8000f0c:	601a      	str	r2, [r3, #0]
 8000f0e:	605a      	str	r2, [r3, #4]
 8000f10:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 8000f12:	1d3b      	adds	r3, r7, #4
 8000f14:	2220      	movs	r2, #32
 8000f16:	2100      	movs	r1, #0
 8000f18:	4618      	mov	r0, r3
 8000f1a:	f005 ffa3 	bl	8006e64 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8000f1e:	4b42      	ldr	r3, [pc, #264]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f20:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 8000f24:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8000f26:	4b40      	ldr	r3, [pc, #256]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f28:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8000f2c:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000f2e:	4b3e      	ldr	r3, [pc, #248]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f30:	2200      	movs	r2, #0
 8000f32:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000f34:	4b3c      	ldr	r3, [pc, #240]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f36:	2200      	movs	r2, #0
 8000f38:	60da      	str	r2, [r3, #12]
  hadc1.Init.GainCompensation = 0;
 8000f3a:	4b3b      	ldr	r3, [pc, #236]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f3c:	2200      	movs	r2, #0
 8000f3e:	611a      	str	r2, [r3, #16]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8000f40:	4b39      	ldr	r3, [pc, #228]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f42:	2201      	movs	r2, #1
 8000f44:	615a      	str	r2, [r3, #20]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000f46:	4b38      	ldr	r3, [pc, #224]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f48:	2204      	movs	r2, #4
 8000f4a:	619a      	str	r2, [r3, #24]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000f4c:	4b36      	ldr	r3, [pc, #216]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f4e:	2200      	movs	r2, #0
 8000f50:	771a      	strb	r2, [r3, #28]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000f52:	4b35      	ldr	r3, [pc, #212]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f54:	2200      	movs	r2, #0
 8000f56:	775a      	strb	r2, [r3, #29]
  hadc1.Init.NbrOfConversion = 3;
 8000f58:	4b33      	ldr	r3, [pc, #204]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f5a:	2203      	movs	r2, #3
 8000f5c:	621a      	str	r2, [r3, #32]
  hadc1.Init.DiscontinuousConvMode = ENABLE;
 8000f5e:	4b32      	ldr	r3, [pc, #200]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f60:	2201      	movs	r2, #1
 8000f62:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc1.Init.NbrOfDiscConversion = 1;
 8000f66:	4b30      	ldr	r3, [pc, #192]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f68:	2201      	movs	r2, #1
 8000f6a:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000f6c:	4b2e      	ldr	r3, [pc, #184]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f6e:	2200      	movs	r2, #0
 8000f70:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000f72:	4b2d      	ldr	r3, [pc, #180]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f74:	2200      	movs	r2, #0
 8000f76:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000f78:	4b2b      	ldr	r3, [pc, #172]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f7a:	2200      	movs	r2, #0
 8000f7c:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000f80:	4b29      	ldr	r3, [pc, #164]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f82:	2200      	movs	r2, #0
 8000f84:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc1.Init.OversamplingMode = DISABLE;
 8000f86:	4b28      	ldr	r3, [pc, #160]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f88:	2200      	movs	r2, #0
 8000f8a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000f8e:	4826      	ldr	r0, [pc, #152]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000f90:	f001 f9ec 	bl	800236c <HAL_ADC_Init>
 8000f94:	4603      	mov	r3, r0
 8000f96:	2b00      	cmp	r3, #0
 8000f98:	d001      	beq.n	8000f9e <MX_ADC1_Init+0x9e>
  {
    Error_Handler();
 8000f9a:	f000 fbf7 	bl	800178c <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8000fa2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000fa6:	4619      	mov	r1, r3
 8000fa8:	481f      	ldr	r0, [pc, #124]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000faa:	f002 faf1 	bl	8003590 <HAL_ADCEx_MultiModeConfigChannel>
 8000fae:	4603      	mov	r3, r0
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d001      	beq.n	8000fb8 <MX_ADC1_Init+0xb8>
  {
    Error_Handler();
 8000fb4:	f000 fbea 	bl	800178c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 8000fb8:	4b1c      	ldr	r3, [pc, #112]	@ (800102c <MX_ADC1_Init+0x12c>)
 8000fba:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000fbc:	2306      	movs	r3, #6
 8000fbe:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 8000fc0:	2302      	movs	r3, #2
 8000fc2:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000fc4:	237f      	movs	r3, #127	@ 0x7f
 8000fc6:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000fc8:	2304      	movs	r3, #4
 8000fca:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 8000fcc:	2300      	movs	r3, #0
 8000fce:	61bb      	str	r3, [r7, #24]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000fd0:	1d3b      	adds	r3, r7, #4
 8000fd2:	4619      	mov	r1, r3
 8000fd4:	4814      	ldr	r0, [pc, #80]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000fd6:	f001 fd23 	bl	8002a20 <HAL_ADC_ConfigChannel>
 8000fda:	4603      	mov	r3, r0
 8000fdc:	2b00      	cmp	r3, #0
 8000fde:	d001      	beq.n	8000fe4 <MX_ADC1_Init+0xe4>
  {
    Error_Handler();
 8000fe0:	f000 fbd4 	bl	800178c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8000fe4:	4b12      	ldr	r3, [pc, #72]	@ (8001030 <MX_ADC1_Init+0x130>)
 8000fe6:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 8000fe8:	230c      	movs	r3, #12
 8000fea:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000fec:	1d3b      	adds	r3, r7, #4
 8000fee:	4619      	mov	r1, r3
 8000ff0:	480d      	ldr	r0, [pc, #52]	@ (8001028 <MX_ADC1_Init+0x128>)
 8000ff2:	f001 fd15 	bl	8002a20 <HAL_ADC_ConfigChannel>
 8000ff6:	4603      	mov	r3, r0
 8000ff8:	2b00      	cmp	r3, #0
 8000ffa:	d001      	beq.n	8001000 <MX_ADC1_Init+0x100>
  {
    Error_Handler();
 8000ffc:	f000 fbc6 	bl	800178c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_4;
 8001000:	4b0c      	ldr	r3, [pc, #48]	@ (8001034 <MX_ADC1_Init+0x134>)
 8001002:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 8001004:	2312      	movs	r3, #18
 8001006:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 8001008:	2300      	movs	r3, #0
 800100a:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800100c:	1d3b      	adds	r3, r7, #4
 800100e:	4619      	mov	r1, r3
 8001010:	4805      	ldr	r0, [pc, #20]	@ (8001028 <MX_ADC1_Init+0x128>)
 8001012:	f001 fd05 	bl	8002a20 <HAL_ADC_ConfigChannel>
 8001016:	4603      	mov	r3, r0
 8001018:	2b00      	cmp	r3, #0
 800101a:	d001      	beq.n	8001020 <MX_ADC1_Init+0x120>
  {
    Error_Handler();
 800101c:	f000 fbb6 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */
  //if (HAL_ADCEx_Calibration_Start(&hadc1, ADC_DIFFERENTIAL_ENDED)!= HAL_OK){ Error_Handler(); }
  /* USER CODE END ADC1_Init 2 */

}
 8001020:	bf00      	nop
 8001022:	3730      	adds	r7, #48	@ 0x30
 8001024:	46bd      	mov	sp, r7
 8001026:	bd80      	pop	{r7, pc}
 8001028:	20000030 	.word	0x20000030
 800102c:	04300002 	.word	0x04300002
 8001030:	0c900008 	.word	0x0c900008
 8001034:	10c00010 	.word	0x10c00010

08001038 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8001038:	b580      	push	{r7, lr}
 800103a:	b088      	sub	sp, #32
 800103c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800103e:	463b      	mov	r3, r7
 8001040:	2220      	movs	r2, #32
 8001042:	2100      	movs	r1, #0
 8001044:	4618      	mov	r0, r3
 8001046:	f005 ff0d 	bl	8006e64 <memset>

  /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 800104a:	4b2b      	ldr	r3, [pc, #172]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 800104c:	4a2b      	ldr	r2, [pc, #172]	@ (80010fc <MX_ADC2_Init+0xc4>)
 800104e:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001050:	4b29      	ldr	r3, [pc, #164]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 8001052:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001056:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8001058:	4b27      	ldr	r3, [pc, #156]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 800105a:	2200      	movs	r2, #0
 800105c:	609a      	str	r2, [r3, #8]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800105e:	4b26      	ldr	r3, [pc, #152]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 8001060:	2200      	movs	r2, #0
 8001062:	60da      	str	r2, [r3, #12]
  hadc2.Init.GainCompensation = 0;
 8001064:	4b24      	ldr	r3, [pc, #144]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 8001066:	2200      	movs	r2, #0
 8001068:	611a      	str	r2, [r3, #16]
  hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 800106a:	4b23      	ldr	r3, [pc, #140]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 800106c:	2200      	movs	r2, #0
 800106e:	615a      	str	r2, [r3, #20]
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001070:	4b21      	ldr	r3, [pc, #132]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 8001072:	2204      	movs	r2, #4
 8001074:	619a      	str	r2, [r3, #24]
  hadc2.Init.LowPowerAutoWait = DISABLE;
 8001076:	4b20      	ldr	r3, [pc, #128]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 8001078:	2200      	movs	r2, #0
 800107a:	771a      	strb	r2, [r3, #28]
  hadc2.Init.ContinuousConvMode = DISABLE;
 800107c:	4b1e      	ldr	r3, [pc, #120]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 800107e:	2200      	movs	r2, #0
 8001080:	775a      	strb	r2, [r3, #29]
  hadc2.Init.NbrOfConversion = 1;
 8001082:	4b1d      	ldr	r3, [pc, #116]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 8001084:	2201      	movs	r2, #1
 8001086:	621a      	str	r2, [r3, #32]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8001088:	4b1b      	ldr	r3, [pc, #108]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 800108a:	2200      	movs	r2, #0
 800108c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001090:	4b19      	ldr	r3, [pc, #100]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 8001092:	2200      	movs	r2, #0
 8001094:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001096:	4b18      	ldr	r3, [pc, #96]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 8001098:	2200      	movs	r2, #0
 800109a:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc2.Init.DMAContinuousRequests = DISABLE;
 800109c:	4b16      	ldr	r3, [pc, #88]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 800109e:	2200      	movs	r2, #0
 80010a0:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80010a4:	4b14      	ldr	r3, [pc, #80]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 80010a6:	2200      	movs	r2, #0
 80010a8:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc2.Init.OversamplingMode = DISABLE;
 80010aa:	4b13      	ldr	r3, [pc, #76]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 80010ac:	2200      	movs	r2, #0
 80010ae:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80010b2:	4811      	ldr	r0, [pc, #68]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 80010b4:	f001 f95a 	bl	800236c <HAL_ADC_Init>
 80010b8:	4603      	mov	r3, r0
 80010ba:	2b00      	cmp	r3, #0
 80010bc:	d001      	beq.n	80010c2 <MX_ADC2_Init+0x8a>
  {
    Error_Handler();
 80010be:	f000 fb65 	bl	800178c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 80010c2:	4b0f      	ldr	r3, [pc, #60]	@ (8001100 <MX_ADC2_Init+0xc8>)
 80010c4:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80010c6:	2306      	movs	r3, #6
 80010c8:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 80010ca:	2302      	movs	r3, #2
 80010cc:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80010ce:	237f      	movs	r3, #127	@ 0x7f
 80010d0:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80010d2:	2304      	movs	r3, #4
 80010d4:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 80010d6:	2300      	movs	r3, #0
 80010d8:	617b      	str	r3, [r7, #20]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80010da:	463b      	mov	r3, r7
 80010dc:	4619      	mov	r1, r3
 80010de:	4806      	ldr	r0, [pc, #24]	@ (80010f8 <MX_ADC2_Init+0xc0>)
 80010e0:	f001 fc9e 	bl	8002a20 <HAL_ADC_ConfigChannel>
 80010e4:	4603      	mov	r3, r0
 80010e6:	2b00      	cmp	r3, #0
 80010e8:	d001      	beq.n	80010ee <MX_ADC2_Init+0xb6>
  {
    Error_Handler();
 80010ea:	f000 fb4f 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */
  //if (HAL_ADCEx_Calibration_Start(&hadc2, ADC_DIFFERENTIAL_ENDED)!= HAL_OK){ Error_Handler(); }
  /* USER CODE END ADC2_Init 2 */

}
 80010ee:	bf00      	nop
 80010f0:	3720      	adds	r7, #32
 80010f2:	46bd      	mov	sp, r7
 80010f4:	bd80      	pop	{r7, pc}
 80010f6:	bf00      	nop
 80010f8:	2000009c 	.word	0x2000009c
 80010fc:	50000100 	.word	0x50000100
 8001100:	0c900008 	.word	0x0c900008

08001104 <MX_FDCAN1_Init>:
  * @brief FDCAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_FDCAN1_Init(void)
{
 8001104:	b580      	push	{r7, lr}
 8001106:	af00      	add	r7, sp, #0
  /* USER CODE END FDCAN1_Init 0 */

  /* USER CODE BEGIN FDCAN1_Init 1 */

  /* USER CODE END FDCAN1_Init 1 */
  hfdcan1.Instance = FDCAN1;
 8001108:	4b2e      	ldr	r3, [pc, #184]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 800110a:	4a2f      	ldr	r2, [pc, #188]	@ (80011c8 <MX_FDCAN1_Init+0xc4>)
 800110c:	601a      	str	r2, [r3, #0]
  hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 800110e:	4b2d      	ldr	r3, [pc, #180]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001110:	2200      	movs	r2, #0
 8001112:	605a      	str	r2, [r3, #4]
  hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 8001114:	4b2b      	ldr	r3, [pc, #172]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001116:	2200      	movs	r2, #0
 8001118:	609a      	str	r2, [r3, #8]
  hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 800111a:	4b2a      	ldr	r3, [pc, #168]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 800111c:	2200      	movs	r2, #0
 800111e:	60da      	str	r2, [r3, #12]
  hfdcan1.Init.AutoRetransmission = DISABLE;
 8001120:	4b28      	ldr	r3, [pc, #160]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001122:	2200      	movs	r2, #0
 8001124:	741a      	strb	r2, [r3, #16]
  hfdcan1.Init.TransmitPause = DISABLE;
 8001126:	4b27      	ldr	r3, [pc, #156]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001128:	2200      	movs	r2, #0
 800112a:	745a      	strb	r2, [r3, #17]
  hfdcan1.Init.ProtocolException = DISABLE;
 800112c:	4b25      	ldr	r3, [pc, #148]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 800112e:	2200      	movs	r2, #0
 8001130:	749a      	strb	r2, [r3, #18]
  hfdcan1.Init.NominalPrescaler = 1;
 8001132:	4b24      	ldr	r3, [pc, #144]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001134:	2201      	movs	r2, #1
 8001136:	615a      	str	r2, [r3, #20]
  hfdcan1.Init.NominalSyncJumpWidth = 1;
 8001138:	4b22      	ldr	r3, [pc, #136]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 800113a:	2201      	movs	r2, #1
 800113c:	619a      	str	r2, [r3, #24]
  hfdcan1.Init.NominalTimeSeg1 = 13;
 800113e:	4b21      	ldr	r3, [pc, #132]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001140:	220d      	movs	r2, #13
 8001142:	61da      	str	r2, [r3, #28]
  hfdcan1.Init.NominalTimeSeg2 = 2;
 8001144:	4b1f      	ldr	r3, [pc, #124]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001146:	2202      	movs	r2, #2
 8001148:	621a      	str	r2, [r3, #32]
  hfdcan1.Init.DataPrescaler = 1;
 800114a:	4b1e      	ldr	r3, [pc, #120]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 800114c:	2201      	movs	r2, #1
 800114e:	625a      	str	r2, [r3, #36]	@ 0x24
  hfdcan1.Init.DataSyncJumpWidth = 1;
 8001150:	4b1c      	ldr	r3, [pc, #112]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001152:	2201      	movs	r2, #1
 8001154:	629a      	str	r2, [r3, #40]	@ 0x28
  hfdcan1.Init.DataTimeSeg1 = 1;
 8001156:	4b1b      	ldr	r3, [pc, #108]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001158:	2201      	movs	r2, #1
 800115a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hfdcan1.Init.DataTimeSeg2 = 1;
 800115c:	4b19      	ldr	r3, [pc, #100]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 800115e:	2201      	movs	r2, #1
 8001160:	631a      	str	r2, [r3, #48]	@ 0x30
  hfdcan1.Init.StdFiltersNbr = 28;
 8001162:	4b18      	ldr	r3, [pc, #96]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001164:	221c      	movs	r2, #28
 8001166:	635a      	str	r2, [r3, #52]	@ 0x34
  hfdcan1.Init.ExtFiltersNbr = 0;
 8001168:	4b16      	ldr	r3, [pc, #88]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 800116a:	2200      	movs	r2, #0
 800116c:	639a      	str	r2, [r3, #56]	@ 0x38
  hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 800116e:	4b15      	ldr	r3, [pc, #84]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001170:	2200      	movs	r2, #0
 8001172:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 8001174:	4813      	ldr	r0, [pc, #76]	@ (80011c4 <MX_FDCAN1_Init+0xc0>)
 8001176:	f002 fbbf 	bl	80038f8 <HAL_FDCAN_Init>
 800117a:	4603      	mov	r3, r0
 800117c:	2b00      	cmp	r3, #0
 800117e:	d001      	beq.n	8001184 <MX_FDCAN1_Init+0x80>
  {
    Error_Handler();
 8001180:	f000 fb04 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN FDCAN1_Init 2 */
  TxHeader.Identifier = CAN_ID; // Modify this with your identifier
 8001184:	4b11      	ldr	r3, [pc, #68]	@ (80011cc <MX_FDCAN1_Init+0xc8>)
 8001186:	781b      	ldrb	r3, [r3, #0]
 8001188:	461a      	mov	r2, r3
 800118a:	4b11      	ldr	r3, [pc, #68]	@ (80011d0 <MX_FDCAN1_Init+0xcc>)
 800118c:	601a      	str	r2, [r3, #0]
  TxHeader.IdType = FDCAN_STANDARD_ID;
 800118e:	4b10      	ldr	r3, [pc, #64]	@ (80011d0 <MX_FDCAN1_Init+0xcc>)
 8001190:	2200      	movs	r2, #0
 8001192:	605a      	str	r2, [r3, #4]
  TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 8001194:	4b0e      	ldr	r3, [pc, #56]	@ (80011d0 <MX_FDCAN1_Init+0xcc>)
 8001196:	2200      	movs	r2, #0
 8001198:	609a      	str	r2, [r3, #8]
  TxHeader.DataLength = 5;
 800119a:	4b0d      	ldr	r3, [pc, #52]	@ (80011d0 <MX_FDCAN1_Init+0xcc>)
 800119c:	2205      	movs	r2, #5
 800119e:	60da      	str	r2, [r3, #12]
  TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 80011a0:	4b0b      	ldr	r3, [pc, #44]	@ (80011d0 <MX_FDCAN1_Init+0xcc>)
 80011a2:	2200      	movs	r2, #0
 80011a4:	611a      	str	r2, [r3, #16]
  TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 80011a6:	4b0a      	ldr	r3, [pc, #40]	@ (80011d0 <MX_FDCAN1_Init+0xcc>)
 80011a8:	2200      	movs	r2, #0
 80011aa:	615a      	str	r2, [r3, #20]
  TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
 80011ac:	4b08      	ldr	r3, [pc, #32]	@ (80011d0 <MX_FDCAN1_Init+0xcc>)
 80011ae:	2200      	movs	r2, #0
 80011b0:	619a      	str	r2, [r3, #24]
  TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 80011b2:	4b07      	ldr	r3, [pc, #28]	@ (80011d0 <MX_FDCAN1_Init+0xcc>)
 80011b4:	2200      	movs	r2, #0
 80011b6:	61da      	str	r2, [r3, #28]
  TxHeader.MessageMarker = 0;
 80011b8:	4b05      	ldr	r3, [pc, #20]	@ (80011d0 <MX_FDCAN1_Init+0xcc>)
 80011ba:	2200      	movs	r2, #0
 80011bc:	621a      	str	r2, [r3, #32]
  /* USER CODE END FDCAN1_Init 2 */

}
 80011be:	bf00      	nop
 80011c0:	bd80      	pop	{r7, pc}
 80011c2:	bf00      	nop
 80011c4:	20000108 	.word	0x20000108
 80011c8:	40006400 	.word	0x40006400
 80011cc:	2000064c 	.word	0x2000064c
 80011d0:	20000650 	.word	0x20000650

080011d4 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80011d4:	b580      	push	{r7, lr}
 80011d6:	b09c      	sub	sp, #112	@ 0x70
 80011d8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80011da:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 80011de:	2200      	movs	r2, #0
 80011e0:	601a      	str	r2, [r3, #0]
 80011e2:	605a      	str	r2, [r3, #4]
 80011e4:	609a      	str	r2, [r3, #8]
 80011e6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011e8:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80011ec:	2200      	movs	r2, #0
 80011ee:	601a      	str	r2, [r3, #0]
 80011f0:	605a      	str	r2, [r3, #4]
 80011f2:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80011f4:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80011f8:	2200      	movs	r2, #0
 80011fa:	601a      	str	r2, [r3, #0]
 80011fc:	605a      	str	r2, [r3, #4]
 80011fe:	609a      	str	r2, [r3, #8]
 8001200:	60da      	str	r2, [r3, #12]
 8001202:	611a      	str	r2, [r3, #16]
 8001204:	615a      	str	r2, [r3, #20]
 8001206:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001208:	1d3b      	adds	r3, r7, #4
 800120a:	2234      	movs	r2, #52	@ 0x34
 800120c:	2100      	movs	r1, #0
 800120e:	4618      	mov	r0, r3
 8001210:	f005 fe28 	bl	8006e64 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001214:	4b45      	ldr	r3, [pc, #276]	@ (800132c <MX_TIM1_Init+0x158>)
 8001216:	4a46      	ldr	r2, [pc, #280]	@ (8001330 <MX_TIM1_Init+0x15c>)
 8001218:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 15;
 800121a:	4b44      	ldr	r3, [pc, #272]	@ (800132c <MX_TIM1_Init+0x158>)
 800121c:	220f      	movs	r2, #15
 800121e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001220:	4b42      	ldr	r3, [pc, #264]	@ (800132c <MX_TIM1_Init+0x158>)
 8001222:	2200      	movs	r2, #0
 8001224:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 39;
 8001226:	4b41      	ldr	r3, [pc, #260]	@ (800132c <MX_TIM1_Init+0x158>)
 8001228:	2227      	movs	r2, #39	@ 0x27
 800122a:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800122c:	4b3f      	ldr	r3, [pc, #252]	@ (800132c <MX_TIM1_Init+0x158>)
 800122e:	2200      	movs	r2, #0
 8001230:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001232:	4b3e      	ldr	r3, [pc, #248]	@ (800132c <MX_TIM1_Init+0x158>)
 8001234:	2200      	movs	r2, #0
 8001236:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001238:	4b3c      	ldr	r3, [pc, #240]	@ (800132c <MX_TIM1_Init+0x158>)
 800123a:	2200      	movs	r2, #0
 800123c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800123e:	483b      	ldr	r0, [pc, #236]	@ (800132c <MX_TIM1_Init+0x158>)
 8001240:	f004 fab4 	bl	80057ac <HAL_TIM_Base_Init>
 8001244:	4603      	mov	r3, r0
 8001246:	2b00      	cmp	r3, #0
 8001248:	d001      	beq.n	800124e <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 800124a:	f000 fa9f 	bl	800178c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800124e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001252:	663b      	str	r3, [r7, #96]	@ 0x60
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001254:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8001258:	4619      	mov	r1, r3
 800125a:	4834      	ldr	r0, [pc, #208]	@ (800132c <MX_TIM1_Init+0x158>)
 800125c:	f004 ff2e 	bl	80060bc <HAL_TIM_ConfigClockSource>
 8001260:	4603      	mov	r3, r0
 8001262:	2b00      	cmp	r3, #0
 8001264:	d001      	beq.n	800126a <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 8001266:	f000 fa91 	bl	800178c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 800126a:	4830      	ldr	r0, [pc, #192]	@ (800132c <MX_TIM1_Init+0x158>)
 800126c:	f004 fb60 	bl	8005930 <HAL_TIM_PWM_Init>
 8001270:	4603      	mov	r3, r0
 8001272:	2b00      	cmp	r3, #0
 8001274:	d001      	beq.n	800127a <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 8001276:	f000 fa89 	bl	800178c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800127a:	2300      	movs	r3, #0
 800127c:	657b      	str	r3, [r7, #84]	@ 0x54
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 800127e:	2300      	movs	r3, #0
 8001280:	65bb      	str	r3, [r7, #88]	@ 0x58
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001282:	2300      	movs	r3, #0
 8001284:	65fb      	str	r3, [r7, #92]	@ 0x5c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001286:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800128a:	4619      	mov	r1, r3
 800128c:	4827      	ldr	r0, [pc, #156]	@ (800132c <MX_TIM1_Init+0x158>)
 800128e:	f005 fc95 	bl	8006bbc <HAL_TIMEx_MasterConfigSynchronization>
 8001292:	4603      	mov	r3, r0
 8001294:	2b00      	cmp	r3, #0
 8001296:	d001      	beq.n	800129c <MX_TIM1_Init+0xc8>
  {
    Error_Handler();
 8001298:	f000 fa78 	bl	800178c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800129c:	2360      	movs	r3, #96	@ 0x60
 800129e:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.Pulse = 0;
 80012a0:	2300      	movs	r3, #0
 80012a2:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80012a4:	2300      	movs	r3, #0
 80012a6:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80012a8:	2300      	movs	r3, #0
 80012aa:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80012ac:	2300      	movs	r3, #0
 80012ae:	64bb      	str	r3, [r7, #72]	@ 0x48
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80012b0:	2300      	movs	r3, #0
 80012b2:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80012b4:	2300      	movs	r3, #0
 80012b6:	653b      	str	r3, [r7, #80]	@ 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80012b8:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80012bc:	2200      	movs	r2, #0
 80012be:	4619      	mov	r1, r3
 80012c0:	481a      	ldr	r0, [pc, #104]	@ (800132c <MX_TIM1_Init+0x158>)
 80012c2:	f004 fde7 	bl	8005e94 <HAL_TIM_PWM_ConfigChannel>
 80012c6:	4603      	mov	r3, r0
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	d001      	beq.n	80012d0 <MX_TIM1_Init+0xfc>
  {
    Error_Handler();
 80012cc:	f000 fa5e 	bl	800178c <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80012d0:	2300      	movs	r3, #0
 80012d2:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80012d4:	2300      	movs	r3, #0
 80012d6:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80012d8:	2300      	movs	r3, #0
 80012da:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80012dc:	2300      	movs	r3, #0
 80012de:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80012e0:	2300      	movs	r3, #0
 80012e2:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80012e4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80012e8:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 80012ea:	2300      	movs	r3, #0
 80012ec:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 80012ee:	2300      	movs	r3, #0
 80012f0:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 80012f2:	2300      	movs	r3, #0
 80012f4:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 80012f6:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80012fa:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.Break2Filter = 0;
 80012fc:	2300      	movs	r3, #0
 80012fe:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 8001300:	2300      	movs	r3, #0
 8001302:	633b      	str	r3, [r7, #48]	@ 0x30
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001304:	2300      	movs	r3, #0
 8001306:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8001308:	1d3b      	adds	r3, r7, #4
 800130a:	4619      	mov	r1, r3
 800130c:	4807      	ldr	r0, [pc, #28]	@ (800132c <MX_TIM1_Init+0x158>)
 800130e:	f005 fcd7 	bl	8006cc0 <HAL_TIMEx_ConfigBreakDeadTime>
 8001312:	4603      	mov	r3, r0
 8001314:	2b00      	cmp	r3, #0
 8001316:	d001      	beq.n	800131c <MX_TIM1_Init+0x148>
  {
    Error_Handler();
 8001318:	f000 fa38 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 800131c:	4803      	ldr	r0, [pc, #12]	@ (800132c <MX_TIM1_Init+0x158>)
 800131e:	f000 fc19 	bl	8001b54 <HAL_TIM_MspPostInit>

}
 8001322:	bf00      	nop
 8001324:	3770      	adds	r7, #112	@ 0x70
 8001326:	46bd      	mov	sp, r7
 8001328:	bd80      	pop	{r7, pc}
 800132a:	bf00      	nop
 800132c:	2000016c 	.word	0x2000016c
 8001330:	40012c00 	.word	0x40012c00

08001334 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001334:	b580      	push	{r7, lr}
 8001336:	b08e      	sub	sp, #56	@ 0x38
 8001338:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800133a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800133e:	2200      	movs	r2, #0
 8001340:	601a      	str	r2, [r3, #0]
 8001342:	605a      	str	r2, [r3, #4]
 8001344:	609a      	str	r2, [r3, #8]
 8001346:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001348:	f107 031c 	add.w	r3, r7, #28
 800134c:	2200      	movs	r2, #0
 800134e:	601a      	str	r2, [r3, #0]
 8001350:	605a      	str	r2, [r3, #4]
 8001352:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001354:	463b      	mov	r3, r7
 8001356:	2200      	movs	r2, #0
 8001358:	601a      	str	r2, [r3, #0]
 800135a:	605a      	str	r2, [r3, #4]
 800135c:	609a      	str	r2, [r3, #8]
 800135e:	60da      	str	r2, [r3, #12]
 8001360:	611a      	str	r2, [r3, #16]
 8001362:	615a      	str	r2, [r3, #20]
 8001364:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001366:	4b2d      	ldr	r3, [pc, #180]	@ (800141c <MX_TIM2_Init+0xe8>)
 8001368:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800136c:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 15;
 800136e:	4b2b      	ldr	r3, [pc, #172]	@ (800141c <MX_TIM2_Init+0xe8>)
 8001370:	220f      	movs	r2, #15
 8001372:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001374:	4b29      	ldr	r3, [pc, #164]	@ (800141c <MX_TIM2_Init+0xe8>)
 8001376:	2200      	movs	r2, #0
 8001378:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 39;
 800137a:	4b28      	ldr	r3, [pc, #160]	@ (800141c <MX_TIM2_Init+0xe8>)
 800137c:	2227      	movs	r2, #39	@ 0x27
 800137e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001380:	4b26      	ldr	r3, [pc, #152]	@ (800141c <MX_TIM2_Init+0xe8>)
 8001382:	2200      	movs	r2, #0
 8001384:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001386:	4b25      	ldr	r3, [pc, #148]	@ (800141c <MX_TIM2_Init+0xe8>)
 8001388:	2200      	movs	r2, #0
 800138a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800138c:	4823      	ldr	r0, [pc, #140]	@ (800141c <MX_TIM2_Init+0xe8>)
 800138e:	f004 fa0d 	bl	80057ac <HAL_TIM_Base_Init>
 8001392:	4603      	mov	r3, r0
 8001394:	2b00      	cmp	r3, #0
 8001396:	d001      	beq.n	800139c <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8001398:	f000 f9f8 	bl	800178c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800139c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80013a0:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80013a2:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80013a6:	4619      	mov	r1, r3
 80013a8:	481c      	ldr	r0, [pc, #112]	@ (800141c <MX_TIM2_Init+0xe8>)
 80013aa:	f004 fe87 	bl	80060bc <HAL_TIM_ConfigClockSource>
 80013ae:	4603      	mov	r3, r0
 80013b0:	2b00      	cmp	r3, #0
 80013b2:	d001      	beq.n	80013b8 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 80013b4:	f000 f9ea 	bl	800178c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80013b8:	4818      	ldr	r0, [pc, #96]	@ (800141c <MX_TIM2_Init+0xe8>)
 80013ba:	f004 fab9 	bl	8005930 <HAL_TIM_PWM_Init>
 80013be:	4603      	mov	r3, r0
 80013c0:	2b00      	cmp	r3, #0
 80013c2:	d001      	beq.n	80013c8 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 80013c4:	f000 f9e2 	bl	800178c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80013c8:	2300      	movs	r3, #0
 80013ca:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80013cc:	2300      	movs	r3, #0
 80013ce:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80013d0:	f107 031c 	add.w	r3, r7, #28
 80013d4:	4619      	mov	r1, r3
 80013d6:	4811      	ldr	r0, [pc, #68]	@ (800141c <MX_TIM2_Init+0xe8>)
 80013d8:	f005 fbf0 	bl	8006bbc <HAL_TIMEx_MasterConfigSynchronization>
 80013dc:	4603      	mov	r3, r0
 80013de:	2b00      	cmp	r3, #0
 80013e0:	d001      	beq.n	80013e6 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80013e2:	f000 f9d3 	bl	800178c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80013e6:	2360      	movs	r3, #96	@ 0x60
 80013e8:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80013ea:	2300      	movs	r3, #0
 80013ec:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80013ee:	2300      	movs	r3, #0
 80013f0:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80013f2:	2300      	movs	r3, #0
 80013f4:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80013f6:	463b      	mov	r3, r7
 80013f8:	2200      	movs	r2, #0
 80013fa:	4619      	mov	r1, r3
 80013fc:	4807      	ldr	r0, [pc, #28]	@ (800141c <MX_TIM2_Init+0xe8>)
 80013fe:	f004 fd49 	bl	8005e94 <HAL_TIM_PWM_ConfigChannel>
 8001402:	4603      	mov	r3, r0
 8001404:	2b00      	cmp	r3, #0
 8001406:	d001      	beq.n	800140c <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 8001408:	f000 f9c0 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800140c:	4803      	ldr	r0, [pc, #12]	@ (800141c <MX_TIM2_Init+0xe8>)
 800140e:	f000 fba1 	bl	8001b54 <HAL_TIM_MspPostInit>

}
 8001412:	bf00      	nop
 8001414:	3738      	adds	r7, #56	@ 0x38
 8001416:	46bd      	mov	sp, r7
 8001418:	bd80      	pop	{r7, pc}
 800141a:	bf00      	nop
 800141c:	200001b8 	.word	0x200001b8

08001420 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001420:	b580      	push	{r7, lr}
 8001422:	b088      	sub	sp, #32
 8001424:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001426:	f107 0310 	add.w	r3, r7, #16
 800142a:	2200      	movs	r2, #0
 800142c:	601a      	str	r2, [r3, #0]
 800142e:	605a      	str	r2, [r3, #4]
 8001430:	609a      	str	r2, [r3, #8]
 8001432:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001434:	1d3b      	adds	r3, r7, #4
 8001436:	2200      	movs	r2, #0
 8001438:	601a      	str	r2, [r3, #0]
 800143a:	605a      	str	r2, [r3, #4]
 800143c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800143e:	4b1d      	ldr	r3, [pc, #116]	@ (80014b4 <MX_TIM3_Init+0x94>)
 8001440:	4a1d      	ldr	r2, [pc, #116]	@ (80014b8 <MX_TIM3_Init+0x98>)
 8001442:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 8001444:	4b1b      	ldr	r3, [pc, #108]	@ (80014b4 <MX_TIM3_Init+0x94>)
 8001446:	223f      	movs	r2, #63	@ 0x3f
 8001448:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800144a:	4b1a      	ldr	r3, [pc, #104]	@ (80014b4 <MX_TIM3_Init+0x94>)
 800144c:	2200      	movs	r2, #0
 800144e:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 8001450:	4b18      	ldr	r3, [pc, #96]	@ (80014b4 <MX_TIM3_Init+0x94>)
 8001452:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8001456:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001458:	4b16      	ldr	r3, [pc, #88]	@ (80014b4 <MX_TIM3_Init+0x94>)
 800145a:	2200      	movs	r2, #0
 800145c:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800145e:	4b15      	ldr	r3, [pc, #84]	@ (80014b4 <MX_TIM3_Init+0x94>)
 8001460:	2200      	movs	r2, #0
 8001462:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001464:	4813      	ldr	r0, [pc, #76]	@ (80014b4 <MX_TIM3_Init+0x94>)
 8001466:	f004 f9a1 	bl	80057ac <HAL_TIM_Base_Init>
 800146a:	4603      	mov	r3, r0
 800146c:	2b00      	cmp	r3, #0
 800146e:	d001      	beq.n	8001474 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 8001470:	f000 f98c 	bl	800178c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001474:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001478:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800147a:	f107 0310 	add.w	r3, r7, #16
 800147e:	4619      	mov	r1, r3
 8001480:	480c      	ldr	r0, [pc, #48]	@ (80014b4 <MX_TIM3_Init+0x94>)
 8001482:	f004 fe1b 	bl	80060bc <HAL_TIM_ConfigClockSource>
 8001486:	4603      	mov	r3, r0
 8001488:	2b00      	cmp	r3, #0
 800148a:	d001      	beq.n	8001490 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 800148c:	f000 f97e 	bl	800178c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001490:	2300      	movs	r3, #0
 8001492:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001494:	2300      	movs	r3, #0
 8001496:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001498:	1d3b      	adds	r3, r7, #4
 800149a:	4619      	mov	r1, r3
 800149c:	4805      	ldr	r0, [pc, #20]	@ (80014b4 <MX_TIM3_Init+0x94>)
 800149e:	f005 fb8d 	bl	8006bbc <HAL_TIMEx_MasterConfigSynchronization>
 80014a2:	4603      	mov	r3, r0
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	d001      	beq.n	80014ac <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80014a8:	f000 f970 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80014ac:	bf00      	nop
 80014ae:	3720      	adds	r7, #32
 80014b0:	46bd      	mov	sp, r7
 80014b2:	bd80      	pop	{r7, pc}
 80014b4:	20000204 	.word	0x20000204
 80014b8:	40000400 	.word	0x40000400

080014bc <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80014bc:	b580      	push	{r7, lr}
 80014be:	b08e      	sub	sp, #56	@ 0x38
 80014c0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80014c2:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80014c6:	2200      	movs	r2, #0
 80014c8:	601a      	str	r2, [r3, #0]
 80014ca:	605a      	str	r2, [r3, #4]
 80014cc:	609a      	str	r2, [r3, #8]
 80014ce:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80014d0:	f107 031c 	add.w	r3, r7, #28
 80014d4:	2200      	movs	r2, #0
 80014d6:	601a      	str	r2, [r3, #0]
 80014d8:	605a      	str	r2, [r3, #4]
 80014da:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80014dc:	463b      	mov	r3, r7
 80014de:	2200      	movs	r2, #0
 80014e0:	601a      	str	r2, [r3, #0]
 80014e2:	605a      	str	r2, [r3, #4]
 80014e4:	609a      	str	r2, [r3, #8]
 80014e6:	60da      	str	r2, [r3, #12]
 80014e8:	611a      	str	r2, [r3, #16]
 80014ea:	615a      	str	r2, [r3, #20]
 80014ec:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80014ee:	4b2b      	ldr	r3, [pc, #172]	@ (800159c <MX_TIM4_Init+0xe0>)
 80014f0:	4a2b      	ldr	r2, [pc, #172]	@ (80015a0 <MX_TIM4_Init+0xe4>)
 80014f2:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 80014f4:	4b29      	ldr	r3, [pc, #164]	@ (800159c <MX_TIM4_Init+0xe0>)
 80014f6:	2200      	movs	r2, #0
 80014f8:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80014fa:	4b28      	ldr	r3, [pc, #160]	@ (800159c <MX_TIM4_Init+0xe0>)
 80014fc:	2200      	movs	r2, #0
 80014fe:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8001500:	4b26      	ldr	r3, [pc, #152]	@ (800159c <MX_TIM4_Init+0xe0>)
 8001502:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001506:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001508:	4b24      	ldr	r3, [pc, #144]	@ (800159c <MX_TIM4_Init+0xe0>)
 800150a:	2200      	movs	r2, #0
 800150c:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800150e:	4b23      	ldr	r3, [pc, #140]	@ (800159c <MX_TIM4_Init+0xe0>)
 8001510:	2200      	movs	r2, #0
 8001512:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001514:	4821      	ldr	r0, [pc, #132]	@ (800159c <MX_TIM4_Init+0xe0>)
 8001516:	f004 f949 	bl	80057ac <HAL_TIM_Base_Init>
 800151a:	4603      	mov	r3, r0
 800151c:	2b00      	cmp	r3, #0
 800151e:	d001      	beq.n	8001524 <MX_TIM4_Init+0x68>
  {
    Error_Handler();
 8001520:	f000 f934 	bl	800178c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001524:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001528:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800152a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800152e:	4619      	mov	r1, r3
 8001530:	481a      	ldr	r0, [pc, #104]	@ (800159c <MX_TIM4_Init+0xe0>)
 8001532:	f004 fdc3 	bl	80060bc <HAL_TIM_ConfigClockSource>
 8001536:	4603      	mov	r3, r0
 8001538:	2b00      	cmp	r3, #0
 800153a:	d001      	beq.n	8001540 <MX_TIM4_Init+0x84>
  {
    Error_Handler();
 800153c:	f000 f926 	bl	800178c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001540:	4816      	ldr	r0, [pc, #88]	@ (800159c <MX_TIM4_Init+0xe0>)
 8001542:	f004 f9f5 	bl	8005930 <HAL_TIM_PWM_Init>
 8001546:	4603      	mov	r3, r0
 8001548:	2b00      	cmp	r3, #0
 800154a:	d001      	beq.n	8001550 <MX_TIM4_Init+0x94>
  {
    Error_Handler();
 800154c:	f000 f91e 	bl	800178c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001550:	2300      	movs	r3, #0
 8001552:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001554:	2300      	movs	r3, #0
 8001556:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001558:	f107 031c 	add.w	r3, r7, #28
 800155c:	4619      	mov	r1, r3
 800155e:	480f      	ldr	r0, [pc, #60]	@ (800159c <MX_TIM4_Init+0xe0>)
 8001560:	f005 fb2c 	bl	8006bbc <HAL_TIMEx_MasterConfigSynchronization>
 8001564:	4603      	mov	r3, r0
 8001566:	2b00      	cmp	r3, #0
 8001568:	d001      	beq.n	800156e <MX_TIM4_Init+0xb2>
  {
    Error_Handler();
 800156a:	f000 f90f 	bl	800178c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800156e:	2360      	movs	r3, #96	@ 0x60
 8001570:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 8001572:	2300      	movs	r3, #0
 8001574:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001576:	2300      	movs	r3, #0
 8001578:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800157a:	2300      	movs	r3, #0
 800157c:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800157e:	463b      	mov	r3, r7
 8001580:	2200      	movs	r2, #0
 8001582:	4619      	mov	r1, r3
 8001584:	4805      	ldr	r0, [pc, #20]	@ (800159c <MX_TIM4_Init+0xe0>)
 8001586:	f004 fc85 	bl	8005e94 <HAL_TIM_PWM_ConfigChannel>
 800158a:	4603      	mov	r3, r0
 800158c:	2b00      	cmp	r3, #0
 800158e:	d001      	beq.n	8001594 <MX_TIM4_Init+0xd8>
  {
    Error_Handler();
 8001590:	f000 f8fc 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8001594:	bf00      	nop
 8001596:	3738      	adds	r7, #56	@ 0x38
 8001598:	46bd      	mov	sp, r7
 800159a:	bd80      	pop	{r7, pc}
 800159c:	20000250 	.word	0x20000250
 80015a0:	40000800 	.word	0x40000800

080015a4 <MX_TIM6_Init>:
  * @brief TIM6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM6_Init(void)
{
 80015a4:	b580      	push	{r7, lr}
 80015a6:	b084      	sub	sp, #16
 80015a8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80015aa:	1d3b      	adds	r3, r7, #4
 80015ac:	2200      	movs	r2, #0
 80015ae:	601a      	str	r2, [r3, #0]
 80015b0:	605a      	str	r2, [r3, #4]
 80015b2:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 80015b4:	4b14      	ldr	r3, [pc, #80]	@ (8001608 <MX_TIM6_Init+0x64>)
 80015b6:	4a15      	ldr	r2, [pc, #84]	@ (800160c <MX_TIM6_Init+0x68>)
 80015b8:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 0;
 80015ba:	4b13      	ldr	r3, [pc, #76]	@ (8001608 <MX_TIM6_Init+0x64>)
 80015bc:	2200      	movs	r2, #0
 80015be:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80015c0:	4b11      	ldr	r3, [pc, #68]	@ (8001608 <MX_TIM6_Init+0x64>)
 80015c2:	2200      	movs	r2, #0
 80015c4:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65535;
 80015c6:	4b10      	ldr	r3, [pc, #64]	@ (8001608 <MX_TIM6_Init+0x64>)
 80015c8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80015cc:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80015ce:	4b0e      	ldr	r3, [pc, #56]	@ (8001608 <MX_TIM6_Init+0x64>)
 80015d0:	2200      	movs	r2, #0
 80015d2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 80015d4:	480c      	ldr	r0, [pc, #48]	@ (8001608 <MX_TIM6_Init+0x64>)
 80015d6:	f004 f8e9 	bl	80057ac <HAL_TIM_Base_Init>
 80015da:	4603      	mov	r3, r0
 80015dc:	2b00      	cmp	r3, #0
 80015de:	d001      	beq.n	80015e4 <MX_TIM6_Init+0x40>
  {
    Error_Handler();
 80015e0:	f000 f8d4 	bl	800178c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015e4:	2300      	movs	r3, #0
 80015e6:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80015e8:	2300      	movs	r3, #0
 80015ea:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 80015ec:	1d3b      	adds	r3, r7, #4
 80015ee:	4619      	mov	r1, r3
 80015f0:	4805      	ldr	r0, [pc, #20]	@ (8001608 <MX_TIM6_Init+0x64>)
 80015f2:	f005 fae3 	bl	8006bbc <HAL_TIMEx_MasterConfigSynchronization>
 80015f6:	4603      	mov	r3, r0
 80015f8:	2b00      	cmp	r3, #0
 80015fa:	d001      	beq.n	8001600 <MX_TIM6_Init+0x5c>
  {
    Error_Handler();
 80015fc:	f000 f8c6 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 8001600:	bf00      	nop
 8001602:	3710      	adds	r7, #16
 8001604:	46bd      	mov	sp, r7
 8001606:	bd80      	pop	{r7, pc}
 8001608:	2000029c 	.word	0x2000029c
 800160c:	40001000 	.word	0x40001000

08001610 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 8001610:	b580      	push	{r7, lr}
 8001612:	b084      	sub	sp, #16
 8001614:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001616:	1d3b      	adds	r3, r7, #4
 8001618:	2200      	movs	r2, #0
 800161a:	601a      	str	r2, [r3, #0]
 800161c:	605a      	str	r2, [r3, #4]
 800161e:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 8001620:	4b14      	ldr	r3, [pc, #80]	@ (8001674 <MX_TIM7_Init+0x64>)
 8001622:	4a15      	ldr	r2, [pc, #84]	@ (8001678 <MX_TIM7_Init+0x68>)
 8001624:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 0;
 8001626:	4b13      	ldr	r3, [pc, #76]	@ (8001674 <MX_TIM7_Init+0x64>)
 8001628:	2200      	movs	r2, #0
 800162a:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800162c:	4b11      	ldr	r3, [pc, #68]	@ (8001674 <MX_TIM7_Init+0x64>)
 800162e:	2200      	movs	r2, #0
 8001630:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 65535;
 8001632:	4b10      	ldr	r3, [pc, #64]	@ (8001674 <MX_TIM7_Init+0x64>)
 8001634:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001638:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800163a:	4b0e      	ldr	r3, [pc, #56]	@ (8001674 <MX_TIM7_Init+0x64>)
 800163c:	2200      	movs	r2, #0
 800163e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001640:	480c      	ldr	r0, [pc, #48]	@ (8001674 <MX_TIM7_Init+0x64>)
 8001642:	f004 f8b3 	bl	80057ac <HAL_TIM_Base_Init>
 8001646:	4603      	mov	r3, r0
 8001648:	2b00      	cmp	r3, #0
 800164a:	d001      	beq.n	8001650 <MX_TIM7_Init+0x40>
  {
    Error_Handler();
 800164c:	f000 f89e 	bl	800178c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001650:	2300      	movs	r3, #0
 8001652:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001654:	2300      	movs	r3, #0
 8001656:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001658:	1d3b      	adds	r3, r7, #4
 800165a:	4619      	mov	r1, r3
 800165c:	4805      	ldr	r0, [pc, #20]	@ (8001674 <MX_TIM7_Init+0x64>)
 800165e:	f005 faad 	bl	8006bbc <HAL_TIMEx_MasterConfigSynchronization>
 8001662:	4603      	mov	r3, r0
 8001664:	2b00      	cmp	r3, #0
 8001666:	d001      	beq.n	800166c <MX_TIM7_Init+0x5c>
  {
    Error_Handler();
 8001668:	f000 f890 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 800166c:	bf00      	nop
 800166e:	3710      	adds	r7, #16
 8001670:	46bd      	mov	sp, r7
 8001672:	bd80      	pop	{r7, pc}
 8001674:	200002e8 	.word	0x200002e8
 8001678:	40001400 	.word	0x40001400

0800167c <MX_TIM16_Init>:
  * @brief TIM16 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM16_Init(void)
{
 800167c:	b580      	push	{r7, lr}
 800167e:	af00      	add	r7, sp, #0
  /* USER CODE END TIM16_Init 0 */

  /* USER CODE BEGIN TIM16_Init 1 */

  /* USER CODE END TIM16_Init 1 */
  htim16.Instance = TIM16;
 8001680:	4b0f      	ldr	r3, [pc, #60]	@ (80016c0 <MX_TIM16_Init+0x44>)
 8001682:	4a10      	ldr	r2, [pc, #64]	@ (80016c4 <MX_TIM16_Init+0x48>)
 8001684:	601a      	str	r2, [r3, #0]
  htim16.Init.Prescaler = 0;
 8001686:	4b0e      	ldr	r3, [pc, #56]	@ (80016c0 <MX_TIM16_Init+0x44>)
 8001688:	2200      	movs	r2, #0
 800168a:	605a      	str	r2, [r3, #4]
  htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 800168c:	4b0c      	ldr	r3, [pc, #48]	@ (80016c0 <MX_TIM16_Init+0x44>)
 800168e:	2200      	movs	r2, #0
 8001690:	609a      	str	r2, [r3, #8]
  htim16.Init.Period = 65535;
 8001692:	4b0b      	ldr	r3, [pc, #44]	@ (80016c0 <MX_TIM16_Init+0x44>)
 8001694:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001698:	60da      	str	r2, [r3, #12]
  htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800169a:	4b09      	ldr	r3, [pc, #36]	@ (80016c0 <MX_TIM16_Init+0x44>)
 800169c:	2200      	movs	r2, #0
 800169e:	611a      	str	r2, [r3, #16]
  htim16.Init.RepetitionCounter = 0;
 80016a0:	4b07      	ldr	r3, [pc, #28]	@ (80016c0 <MX_TIM16_Init+0x44>)
 80016a2:	2200      	movs	r2, #0
 80016a4:	615a      	str	r2, [r3, #20]
  htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016a6:	4b06      	ldr	r3, [pc, #24]	@ (80016c0 <MX_TIM16_Init+0x44>)
 80016a8:	2200      	movs	r2, #0
 80016aa:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 80016ac:	4804      	ldr	r0, [pc, #16]	@ (80016c0 <MX_TIM16_Init+0x44>)
 80016ae:	f004 f87d 	bl	80057ac <HAL_TIM_Base_Init>
 80016b2:	4603      	mov	r3, r0
 80016b4:	2b00      	cmp	r3, #0
 80016b6:	d001      	beq.n	80016bc <MX_TIM16_Init+0x40>
  {
    Error_Handler();
 80016b8:	f000 f868 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN TIM16_Init 2 */

  /* USER CODE END TIM16_Init 2 */

}
 80016bc:	bf00      	nop
 80016be:	bd80      	pop	{r7, pc}
 80016c0:	20000334 	.word	0x20000334
 80016c4:	40014400 	.word	0x40014400

080016c8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80016c8:	b580      	push	{r7, lr}
 80016ca:	b088      	sub	sp, #32
 80016cc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016ce:	f107 030c 	add.w	r3, r7, #12
 80016d2:	2200      	movs	r2, #0
 80016d4:	601a      	str	r2, [r3, #0]
 80016d6:	605a      	str	r2, [r3, #4]
 80016d8:	609a      	str	r2, [r3, #8]
 80016da:	60da      	str	r2, [r3, #12]
 80016dc:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80016de:	4b29      	ldr	r3, [pc, #164]	@ (8001784 <MX_GPIO_Init+0xbc>)
 80016e0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80016e2:	4a28      	ldr	r2, [pc, #160]	@ (8001784 <MX_GPIO_Init+0xbc>)
 80016e4:	f043 0320 	orr.w	r3, r3, #32
 80016e8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80016ea:	4b26      	ldr	r3, [pc, #152]	@ (8001784 <MX_GPIO_Init+0xbc>)
 80016ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80016ee:	f003 0320 	and.w	r3, r3, #32
 80016f2:	60bb      	str	r3, [r7, #8]
 80016f4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80016f6:	4b23      	ldr	r3, [pc, #140]	@ (8001784 <MX_GPIO_Init+0xbc>)
 80016f8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80016fa:	4a22      	ldr	r2, [pc, #136]	@ (8001784 <MX_GPIO_Init+0xbc>)
 80016fc:	f043 0301 	orr.w	r3, r3, #1
 8001700:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001702:	4b20      	ldr	r3, [pc, #128]	@ (8001784 <MX_GPIO_Init+0xbc>)
 8001704:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001706:	f003 0301 	and.w	r3, r3, #1
 800170a:	607b      	str	r3, [r7, #4]
 800170c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800170e:	4b1d      	ldr	r3, [pc, #116]	@ (8001784 <MX_GPIO_Init+0xbc>)
 8001710:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001712:	4a1c      	ldr	r2, [pc, #112]	@ (8001784 <MX_GPIO_Init+0xbc>)
 8001714:	f043 0302 	orr.w	r3, r3, #2
 8001718:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800171a:	4b1a      	ldr	r3, [pc, #104]	@ (8001784 <MX_GPIO_Init+0xbc>)
 800171c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800171e:	f003 0302 	and.w	r3, r3, #2
 8001722:	603b      	str	r3, [r7, #0]
 8001724:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, IN1_2_Pin|IN0_2_Pin|LED2_Pin|IN3_Pin
 8001726:	2200      	movs	r2, #0
 8001728:	f248 6192 	movw	r1, #34450	@ 0x8692
 800172c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001730:	f003 f88a 	bl	8004848 <HAL_GPIO_WritePin>
                          |IN2_Pin|IN1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED1_Pin|IN0_Pin|IN3_2_Pin|SEL1_Pin
 8001734:	2200      	movs	r2, #0
 8001736:	21f9      	movs	r1, #249	@ 0xf9
 8001738:	4813      	ldr	r0, [pc, #76]	@ (8001788 <MX_GPIO_Init+0xc0>)
 800173a:	f003 f885 	bl	8004848 <HAL_GPIO_WritePin>
                          |SEL0_Pin|IN2_2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : IN1_2_Pin IN0_2_Pin LED2_Pin IN3_Pin
                           IN2_Pin IN1_Pin */
  GPIO_InitStruct.Pin = IN1_2_Pin|IN0_2_Pin|LED2_Pin|IN3_Pin
 800173e:	f248 6392 	movw	r3, #34450	@ 0x8692
 8001742:	60fb      	str	r3, [r7, #12]
                          |IN2_Pin|IN1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001744:	2301      	movs	r3, #1
 8001746:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001748:	2300      	movs	r3, #0
 800174a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800174c:	2300      	movs	r3, #0
 800174e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001750:	f107 030c 	add.w	r3, r7, #12
 8001754:	4619      	mov	r1, r3
 8001756:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800175a:	f002 fef3 	bl	8004544 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED1_Pin IN0_Pin IN3_2_Pin SEL1_Pin
                           SEL0_Pin IN2_2_Pin */
  GPIO_InitStruct.Pin = LED1_Pin|IN0_Pin|IN3_2_Pin|SEL1_Pin
 800175e:	23f9      	movs	r3, #249	@ 0xf9
 8001760:	60fb      	str	r3, [r7, #12]
                          |SEL0_Pin|IN2_2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001762:	2301      	movs	r3, #1
 8001764:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001766:	2300      	movs	r3, #0
 8001768:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800176a:	2300      	movs	r3, #0
 800176c:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800176e:	f107 030c 	add.w	r3, r7, #12
 8001772:	4619      	mov	r1, r3
 8001774:	4804      	ldr	r0, [pc, #16]	@ (8001788 <MX_GPIO_Init+0xc0>)
 8001776:	f002 fee5 	bl	8004544 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800177a:	bf00      	nop
 800177c:	3720      	adds	r7, #32
 800177e:	46bd      	mov	sp, r7
 8001780:	bd80      	pop	{r7, pc}
 8001782:	bf00      	nop
 8001784:	40021000 	.word	0x40021000
 8001788:	48000400 	.word	0x48000400

0800178c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800178c:	b480      	push	{r7}
 800178e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001790:	b672      	cpsid	i
}
 8001792:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001794:	bf00      	nop
 8001796:	e7fd      	b.n	8001794 <Error_Handler+0x8>

08001798 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001798:	b580      	push	{r7, lr}
 800179a:	b082      	sub	sp, #8
 800179c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800179e:	4b0f      	ldr	r3, [pc, #60]	@ (80017dc <HAL_MspInit+0x44>)
 80017a0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80017a2:	4a0e      	ldr	r2, [pc, #56]	@ (80017dc <HAL_MspInit+0x44>)
 80017a4:	f043 0301 	orr.w	r3, r3, #1
 80017a8:	6613      	str	r3, [r2, #96]	@ 0x60
 80017aa:	4b0c      	ldr	r3, [pc, #48]	@ (80017dc <HAL_MspInit+0x44>)
 80017ac:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80017ae:	f003 0301 	and.w	r3, r3, #1
 80017b2:	607b      	str	r3, [r7, #4]
 80017b4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80017b6:	4b09      	ldr	r3, [pc, #36]	@ (80017dc <HAL_MspInit+0x44>)
 80017b8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80017ba:	4a08      	ldr	r2, [pc, #32]	@ (80017dc <HAL_MspInit+0x44>)
 80017bc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80017c0:	6593      	str	r3, [r2, #88]	@ 0x58
 80017c2:	4b06      	ldr	r3, [pc, #24]	@ (80017dc <HAL_MspInit+0x44>)
 80017c4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80017c6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80017ca:	603b      	str	r3, [r7, #0]
 80017cc:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_PWREx_DisableUCPDDeadBattery();
 80017ce:	f003 f8f7 	bl	80049c0 <HAL_PWREx_DisableUCPDDeadBattery>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80017d2:	bf00      	nop
 80017d4:	3708      	adds	r7, #8
 80017d6:	46bd      	mov	sp, r7
 80017d8:	bd80      	pop	{r7, pc}
 80017da:	bf00      	nop
 80017dc:	40021000 	.word	0x40021000

080017e0 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80017e0:	b580      	push	{r7, lr}
 80017e2:	b09c      	sub	sp, #112	@ 0x70
 80017e4:	af00      	add	r7, sp, #0
 80017e6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017e8:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 80017ec:	2200      	movs	r2, #0
 80017ee:	601a      	str	r2, [r3, #0]
 80017f0:	605a      	str	r2, [r3, #4]
 80017f2:	609a      	str	r2, [r3, #8]
 80017f4:	60da      	str	r2, [r3, #12]
 80017f6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80017f8:	f107 0318 	add.w	r3, r7, #24
 80017fc:	2244      	movs	r2, #68	@ 0x44
 80017fe:	2100      	movs	r1, #0
 8001800:	4618      	mov	r0, r3
 8001802:	f005 fb2f 	bl	8006e64 <memset>
  if(hadc->Instance==ADC1)
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800180e:	d13e      	bne.n	800188e <HAL_ADC_MspInit+0xae>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 8001810:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8001814:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 8001816:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 800181a:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800181c:	f107 0318 	add.w	r3, r7, #24
 8001820:	4618      	mov	r0, r3
 8001822:	f003 fdd3 	bl	80053cc <HAL_RCCEx_PeriphCLKConfig>
 8001826:	4603      	mov	r3, r0
 8001828:	2b00      	cmp	r3, #0
 800182a:	d001      	beq.n	8001830 <HAL_ADC_MspInit+0x50>
    {
      Error_Handler();
 800182c:	f7ff ffae 	bl	800178c <Error_Handler>
    }

    /* Peripheral clock enable */
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001830:	4b3a      	ldr	r3, [pc, #232]	@ (800191c <HAL_ADC_MspInit+0x13c>)
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	3301      	adds	r3, #1
 8001836:	4a39      	ldr	r2, [pc, #228]	@ (800191c <HAL_ADC_MspInit+0x13c>)
 8001838:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 800183a:	4b38      	ldr	r3, [pc, #224]	@ (800191c <HAL_ADC_MspInit+0x13c>)
 800183c:	681b      	ldr	r3, [r3, #0]
 800183e:	2b01      	cmp	r3, #1
 8001840:	d10b      	bne.n	800185a <HAL_ADC_MspInit+0x7a>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001842:	4b37      	ldr	r3, [pc, #220]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 8001844:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001846:	4a36      	ldr	r2, [pc, #216]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 8001848:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800184c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800184e:	4b34      	ldr	r3, [pc, #208]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 8001850:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001852:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001856:	617b      	str	r3, [r7, #20]
 8001858:	697b      	ldr	r3, [r7, #20]
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800185a:	4b31      	ldr	r3, [pc, #196]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 800185c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800185e:	4a30      	ldr	r2, [pc, #192]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 8001860:	f043 0301 	orr.w	r3, r3, #1
 8001864:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001866:	4b2e      	ldr	r3, [pc, #184]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 8001868:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800186a:	f003 0301 	and.w	r3, r3, #1
 800186e:	613b      	str	r3, [r7, #16]
 8001870:	693b      	ldr	r3, [r7, #16]
    /**ADC1 GPIO Configuration
    PA0     ------> ADC1_IN1
    PA2     ------> ADC1_IN3
    PA3     ------> ADC1_IN4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;
 8001872:	230d      	movs	r3, #13
 8001874:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001876:	2303      	movs	r3, #3
 8001878:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800187a:	2300      	movs	r3, #0
 800187c:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800187e:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001882:	4619      	mov	r1, r3
 8001884:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001888:	f002 fe5c 	bl	8004544 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 800188c:	e042      	b.n	8001914 <HAL_ADC_MspInit+0x134>
  else if(hadc->Instance==ADC2)
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	681b      	ldr	r3, [r3, #0]
 8001892:	4a24      	ldr	r2, [pc, #144]	@ (8001924 <HAL_ADC_MspInit+0x144>)
 8001894:	4293      	cmp	r3, r2
 8001896:	d13d      	bne.n	8001914 <HAL_ADC_MspInit+0x134>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 8001898:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800189c:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 800189e:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 80018a2:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80018a4:	f107 0318 	add.w	r3, r7, #24
 80018a8:	4618      	mov	r0, r3
 80018aa:	f003 fd8f 	bl	80053cc <HAL_RCCEx_PeriphCLKConfig>
 80018ae:	4603      	mov	r3, r0
 80018b0:	2b00      	cmp	r3, #0
 80018b2:	d001      	beq.n	80018b8 <HAL_ADC_MspInit+0xd8>
      Error_Handler();
 80018b4:	f7ff ff6a 	bl	800178c <Error_Handler>
    HAL_RCC_ADC12_CLK_ENABLED++;
 80018b8:	4b18      	ldr	r3, [pc, #96]	@ (800191c <HAL_ADC_MspInit+0x13c>)
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	3301      	adds	r3, #1
 80018be:	4a17      	ldr	r2, [pc, #92]	@ (800191c <HAL_ADC_MspInit+0x13c>)
 80018c0:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 80018c2:	4b16      	ldr	r3, [pc, #88]	@ (800191c <HAL_ADC_MspInit+0x13c>)
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	2b01      	cmp	r3, #1
 80018c8:	d10b      	bne.n	80018e2 <HAL_ADC_MspInit+0x102>
      __HAL_RCC_ADC12_CLK_ENABLE();
 80018ca:	4b15      	ldr	r3, [pc, #84]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 80018cc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018ce:	4a14      	ldr	r2, [pc, #80]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 80018d0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80018d4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80018d6:	4b12      	ldr	r3, [pc, #72]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 80018d8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018da:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80018de:	60fb      	str	r3, [r7, #12]
 80018e0:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80018e2:	4b0f      	ldr	r3, [pc, #60]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 80018e4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018e6:	4a0e      	ldr	r2, [pc, #56]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 80018e8:	f043 0301 	orr.w	r3, r3, #1
 80018ec:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80018ee:	4b0c      	ldr	r3, [pc, #48]	@ (8001920 <HAL_ADC_MspInit+0x140>)
 80018f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018f2:	f003 0301 	and.w	r3, r3, #1
 80018f6:	60bb      	str	r3, [r7, #8]
 80018f8:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 80018fa:	2340      	movs	r3, #64	@ 0x40
 80018fc:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80018fe:	2303      	movs	r3, #3
 8001900:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001902:	2300      	movs	r3, #0
 8001904:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001906:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800190a:	4619      	mov	r1, r3
 800190c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001910:	f002 fe18 	bl	8004544 <HAL_GPIO_Init>
}
 8001914:	bf00      	nop
 8001916:	3770      	adds	r7, #112	@ 0x70
 8001918:	46bd      	mov	sp, r7
 800191a:	bd80      	pop	{r7, pc}
 800191c:	200006a8 	.word	0x200006a8
 8001920:	40021000 	.word	0x40021000
 8001924:	50000100 	.word	0x50000100

08001928 <HAL_FDCAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hfdcan: FDCAN handle pointer
* @retval None
*/
void HAL_FDCAN_MspInit(FDCAN_HandleTypeDef* hfdcan)
{
 8001928:	b580      	push	{r7, lr}
 800192a:	b09a      	sub	sp, #104	@ 0x68
 800192c:	af00      	add	r7, sp, #0
 800192e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001930:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001934:	2200      	movs	r2, #0
 8001936:	601a      	str	r2, [r3, #0]
 8001938:	605a      	str	r2, [r3, #4]
 800193a:	609a      	str	r2, [r3, #8]
 800193c:	60da      	str	r2, [r3, #12]
 800193e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001940:	f107 0310 	add.w	r3, r7, #16
 8001944:	2244      	movs	r2, #68	@ 0x44
 8001946:	2100      	movs	r1, #0
 8001948:	4618      	mov	r0, r3
 800194a:	f005 fa8b 	bl	8006e64 <memset>
  if(hfdcan->Instance==FDCAN1)
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	4a24      	ldr	r2, [pc, #144]	@ (80019e4 <HAL_FDCAN_MspInit+0xbc>)
 8001954:	4293      	cmp	r3, r2
 8001956:	d141      	bne.n	80019dc <HAL_FDCAN_MspInit+0xb4>

  /* USER CODE END FDCAN1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_FDCAN;
 8001958:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800195c:	613b      	str	r3, [r7, #16]
    PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PLL;
 800195e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8001962:	643b      	str	r3, [r7, #64]	@ 0x40
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001964:	f107 0310 	add.w	r3, r7, #16
 8001968:	4618      	mov	r0, r3
 800196a:	f003 fd2f 	bl	80053cc <HAL_RCCEx_PeriphCLKConfig>
 800196e:	4603      	mov	r3, r0
 8001970:	2b00      	cmp	r3, #0
 8001972:	d001      	beq.n	8001978 <HAL_FDCAN_MspInit+0x50>
    {
      Error_Handler();
 8001974:	f7ff ff0a 	bl	800178c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_FDCAN_CLK_ENABLE();
 8001978:	4b1b      	ldr	r3, [pc, #108]	@ (80019e8 <HAL_FDCAN_MspInit+0xc0>)
 800197a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800197c:	4a1a      	ldr	r2, [pc, #104]	@ (80019e8 <HAL_FDCAN_MspInit+0xc0>)
 800197e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001982:	6593      	str	r3, [r2, #88]	@ 0x58
 8001984:	4b18      	ldr	r3, [pc, #96]	@ (80019e8 <HAL_FDCAN_MspInit+0xc0>)
 8001986:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001988:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800198c:	60fb      	str	r3, [r7, #12]
 800198e:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001990:	4b15      	ldr	r3, [pc, #84]	@ (80019e8 <HAL_FDCAN_MspInit+0xc0>)
 8001992:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001994:	4a14      	ldr	r2, [pc, #80]	@ (80019e8 <HAL_FDCAN_MspInit+0xc0>)
 8001996:	f043 0301 	orr.w	r3, r3, #1
 800199a:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800199c:	4b12      	ldr	r3, [pc, #72]	@ (80019e8 <HAL_FDCAN_MspInit+0xc0>)
 800199e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80019a0:	f003 0301 	and.w	r3, r3, #1
 80019a4:	60bb      	str	r3, [r7, #8]
 80019a6:	68bb      	ldr	r3, [r7, #8]
    /**FDCAN1 GPIO Configuration
    PA11     ------> FDCAN1_RX
    PA12     ------> FDCAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 80019a8:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 80019ac:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019ae:	2302      	movs	r3, #2
 80019b0:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019b2:	2300      	movs	r3, #0
 80019b4:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019b6:	2300      	movs	r3, #0
 80019b8:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF9_FDCAN1;
 80019ba:	2309      	movs	r3, #9
 80019bc:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019be:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80019c2:	4619      	mov	r1, r3
 80019c4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80019c8:	f002 fdbc 	bl	8004544 <HAL_GPIO_Init>

    /* FDCAN1 interrupt Init */
    HAL_NVIC_SetPriority(FDCAN1_IT0_IRQn, 0, 0);
 80019cc:	2200      	movs	r2, #0
 80019ce:	2100      	movs	r1, #0
 80019d0:	2015      	movs	r0, #21
 80019d2:	f001 ff5c 	bl	800388e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(FDCAN1_IT0_IRQn);
 80019d6:	2015      	movs	r0, #21
 80019d8:	f001 ff73 	bl	80038c2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN FDCAN1_MspInit 1 */

  /* USER CODE END FDCAN1_MspInit 1 */
  }

}
 80019dc:	bf00      	nop
 80019de:	3768      	adds	r7, #104	@ 0x68
 80019e0:	46bd      	mov	sp, r7
 80019e2:	bd80      	pop	{r7, pc}
 80019e4:	40006400 	.word	0x40006400
 80019e8:	40021000 	.word	0x40021000

080019ec <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80019ec:	b580      	push	{r7, lr}
 80019ee:	b08a      	sub	sp, #40	@ 0x28
 80019f0:	af00      	add	r7, sp, #0
 80019f2:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	681b      	ldr	r3, [r3, #0]
 80019f8:	4a4f      	ldr	r2, [pc, #316]	@ (8001b38 <HAL_TIM_Base_MspInit+0x14c>)
 80019fa:	4293      	cmp	r3, r2
 80019fc:	d10c      	bne.n	8001a18 <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80019fe:	4b4f      	ldr	r3, [pc, #316]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a00:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001a02:	4a4e      	ldr	r2, [pc, #312]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a04:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001a08:	6613      	str	r3, [r2, #96]	@ 0x60
 8001a0a:	4b4c      	ldr	r3, [pc, #304]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a0c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001a0e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001a12:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
  /* USER CODE BEGIN TIM16_MspInit 1 */

  /* USER CODE END TIM16_MspInit 1 */
  }

}
 8001a16:	e08a      	b.n	8001b2e <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM2)
 8001a18:	687b      	ldr	r3, [r7, #4]
 8001a1a:	681b      	ldr	r3, [r3, #0]
 8001a1c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001a20:	d114      	bne.n	8001a4c <HAL_TIM_Base_MspInit+0x60>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001a22:	4b46      	ldr	r3, [pc, #280]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a24:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001a26:	4a45      	ldr	r2, [pc, #276]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a28:	f043 0301 	orr.w	r3, r3, #1
 8001a2c:	6593      	str	r3, [r2, #88]	@ 0x58
 8001a2e:	4b43      	ldr	r3, [pc, #268]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a30:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001a32:	f003 0301 	and.w	r3, r3, #1
 8001a36:	623b      	str	r3, [r7, #32]
 8001a38:	6a3b      	ldr	r3, [r7, #32]
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001a3a:	2200      	movs	r2, #0
 8001a3c:	2100      	movs	r1, #0
 8001a3e:	201c      	movs	r0, #28
 8001a40:	f001 ff25 	bl	800388e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001a44:	201c      	movs	r0, #28
 8001a46:	f001 ff3c 	bl	80038c2 <HAL_NVIC_EnableIRQ>
}
 8001a4a:	e070      	b.n	8001b2e <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM3)
 8001a4c:	687b      	ldr	r3, [r7, #4]
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	4a3b      	ldr	r2, [pc, #236]	@ (8001b40 <HAL_TIM_Base_MspInit+0x154>)
 8001a52:	4293      	cmp	r3, r2
 8001a54:	d114      	bne.n	8001a80 <HAL_TIM_Base_MspInit+0x94>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001a56:	4b39      	ldr	r3, [pc, #228]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a58:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001a5a:	4a38      	ldr	r2, [pc, #224]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a5c:	f043 0302 	orr.w	r3, r3, #2
 8001a60:	6593      	str	r3, [r2, #88]	@ 0x58
 8001a62:	4b36      	ldr	r3, [pc, #216]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a64:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001a66:	f003 0302 	and.w	r3, r3, #2
 8001a6a:	61fb      	str	r3, [r7, #28]
 8001a6c:	69fb      	ldr	r3, [r7, #28]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001a6e:	2200      	movs	r2, #0
 8001a70:	2100      	movs	r1, #0
 8001a72:	201d      	movs	r0, #29
 8001a74:	f001 ff0b 	bl	800388e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001a78:	201d      	movs	r0, #29
 8001a7a:	f001 ff22 	bl	80038c2 <HAL_NVIC_EnableIRQ>
}
 8001a7e:	e056      	b.n	8001b2e <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM4)
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	4a2f      	ldr	r2, [pc, #188]	@ (8001b44 <HAL_TIM_Base_MspInit+0x158>)
 8001a86:	4293      	cmp	r3, r2
 8001a88:	d114      	bne.n	8001ab4 <HAL_TIM_Base_MspInit+0xc8>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001a8a:	4b2c      	ldr	r3, [pc, #176]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a8c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001a8e:	4a2b      	ldr	r2, [pc, #172]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a90:	f043 0304 	orr.w	r3, r3, #4
 8001a94:	6593      	str	r3, [r2, #88]	@ 0x58
 8001a96:	4b29      	ldr	r3, [pc, #164]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001a98:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001a9a:	f003 0304 	and.w	r3, r3, #4
 8001a9e:	61bb      	str	r3, [r7, #24]
 8001aa0:	69bb      	ldr	r3, [r7, #24]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001aa2:	2200      	movs	r2, #0
 8001aa4:	2100      	movs	r1, #0
 8001aa6:	201e      	movs	r0, #30
 8001aa8:	f001 fef1 	bl	800388e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001aac:	201e      	movs	r0, #30
 8001aae:	f001 ff08 	bl	80038c2 <HAL_NVIC_EnableIRQ>
}
 8001ab2:	e03c      	b.n	8001b2e <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM6)
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	4a23      	ldr	r2, [pc, #140]	@ (8001b48 <HAL_TIM_Base_MspInit+0x15c>)
 8001aba:	4293      	cmp	r3, r2
 8001abc:	d10c      	bne.n	8001ad8 <HAL_TIM_Base_MspInit+0xec>
    __HAL_RCC_TIM6_CLK_ENABLE();
 8001abe:	4b1f      	ldr	r3, [pc, #124]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001ac0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001ac2:	4a1e      	ldr	r2, [pc, #120]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001ac4:	f043 0310 	orr.w	r3, r3, #16
 8001ac8:	6593      	str	r3, [r2, #88]	@ 0x58
 8001aca:	4b1c      	ldr	r3, [pc, #112]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001acc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001ace:	f003 0310 	and.w	r3, r3, #16
 8001ad2:	617b      	str	r3, [r7, #20]
 8001ad4:	697b      	ldr	r3, [r7, #20]
}
 8001ad6:	e02a      	b.n	8001b2e <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM7)
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	681b      	ldr	r3, [r3, #0]
 8001adc:	4a1b      	ldr	r2, [pc, #108]	@ (8001b4c <HAL_TIM_Base_MspInit+0x160>)
 8001ade:	4293      	cmp	r3, r2
 8001ae0:	d114      	bne.n	8001b0c <HAL_TIM_Base_MspInit+0x120>
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001ae2:	4b16      	ldr	r3, [pc, #88]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001ae4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001ae6:	4a15      	ldr	r2, [pc, #84]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001ae8:	f043 0320 	orr.w	r3, r3, #32
 8001aec:	6593      	str	r3, [r2, #88]	@ 0x58
 8001aee:	4b13      	ldr	r3, [pc, #76]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001af0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001af2:	f003 0320 	and.w	r3, r3, #32
 8001af6:	613b      	str	r3, [r7, #16]
 8001af8:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
 8001afa:	2200      	movs	r2, #0
 8001afc:	2100      	movs	r1, #0
 8001afe:	2037      	movs	r0, #55	@ 0x37
 8001b00:	f001 fec5 	bl	800388e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001b04:	2037      	movs	r0, #55	@ 0x37
 8001b06:	f001 fedc 	bl	80038c2 <HAL_NVIC_EnableIRQ>
}
 8001b0a:	e010      	b.n	8001b2e <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM16)
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	681b      	ldr	r3, [r3, #0]
 8001b10:	4a0f      	ldr	r2, [pc, #60]	@ (8001b50 <HAL_TIM_Base_MspInit+0x164>)
 8001b12:	4293      	cmp	r3, r2
 8001b14:	d10b      	bne.n	8001b2e <HAL_TIM_Base_MspInit+0x142>
    __HAL_RCC_TIM16_CLK_ENABLE();
 8001b16:	4b09      	ldr	r3, [pc, #36]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001b18:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001b1a:	4a08      	ldr	r2, [pc, #32]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001b1c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001b20:	6613      	str	r3, [r2, #96]	@ 0x60
 8001b22:	4b06      	ldr	r3, [pc, #24]	@ (8001b3c <HAL_TIM_Base_MspInit+0x150>)
 8001b24:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001b26:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001b2a:	60fb      	str	r3, [r7, #12]
 8001b2c:	68fb      	ldr	r3, [r7, #12]
}
 8001b2e:	bf00      	nop
 8001b30:	3728      	adds	r7, #40	@ 0x28
 8001b32:	46bd      	mov	sp, r7
 8001b34:	bd80      	pop	{r7, pc}
 8001b36:	bf00      	nop
 8001b38:	40012c00 	.word	0x40012c00
 8001b3c:	40021000 	.word	0x40021000
 8001b40:	40000400 	.word	0x40000400
 8001b44:	40000800 	.word	0x40000800
 8001b48:	40001000 	.word	0x40001000
 8001b4c:	40001400 	.word	0x40001400
 8001b50:	40014400 	.word	0x40014400

08001b54 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001b54:	b580      	push	{r7, lr}
 8001b56:	b08a      	sub	sp, #40	@ 0x28
 8001b58:	af00      	add	r7, sp, #0
 8001b5a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b5c:	f107 0314 	add.w	r3, r7, #20
 8001b60:	2200      	movs	r2, #0
 8001b62:	601a      	str	r2, [r3, #0]
 8001b64:	605a      	str	r2, [r3, #4]
 8001b66:	609a      	str	r2, [r3, #8]
 8001b68:	60da      	str	r2, [r3, #12]
 8001b6a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	681b      	ldr	r3, [r3, #0]
 8001b70:	4a23      	ldr	r2, [pc, #140]	@ (8001c00 <HAL_TIM_MspPostInit+0xac>)
 8001b72:	4293      	cmp	r3, r2
 8001b74:	d11e      	bne.n	8001bb4 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b76:	4b23      	ldr	r3, [pc, #140]	@ (8001c04 <HAL_TIM_MspPostInit+0xb0>)
 8001b78:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b7a:	4a22      	ldr	r2, [pc, #136]	@ (8001c04 <HAL_TIM_MspPostInit+0xb0>)
 8001b7c:	f043 0301 	orr.w	r3, r3, #1
 8001b80:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001b82:	4b20      	ldr	r3, [pc, #128]	@ (8001c04 <HAL_TIM_MspPostInit+0xb0>)
 8001b84:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b86:	f003 0301 	and.w	r3, r3, #1
 8001b8a:	613b      	str	r3, [r7, #16]
 8001b8c:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001b8e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001b92:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b94:	2302      	movs	r3, #2
 8001b96:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b98:	2300      	movs	r3, #0
 8001b9a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b9c:	2300      	movs	r3, #0
 8001b9e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 8001ba0:	2306      	movs	r3, #6
 8001ba2:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ba4:	f107 0314 	add.w	r3, r7, #20
 8001ba8:	4619      	mov	r1, r3
 8001baa:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001bae:	f002 fcc9 	bl	8004544 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8001bb2:	e021      	b.n	8001bf8 <HAL_TIM_MspPostInit+0xa4>
  else if(htim->Instance==TIM2)
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001bbc:	d11c      	bne.n	8001bf8 <HAL_TIM_MspPostInit+0xa4>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bbe:	4b11      	ldr	r3, [pc, #68]	@ (8001c04 <HAL_TIM_MspPostInit+0xb0>)
 8001bc0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bc2:	4a10      	ldr	r2, [pc, #64]	@ (8001c04 <HAL_TIM_MspPostInit+0xb0>)
 8001bc4:	f043 0301 	orr.w	r3, r3, #1
 8001bc8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001bca:	4b0e      	ldr	r3, [pc, #56]	@ (8001c04 <HAL_TIM_MspPostInit+0xb0>)
 8001bcc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bce:	f003 0301 	and.w	r3, r3, #1
 8001bd2:	60fb      	str	r3, [r7, #12]
 8001bd4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8001bd6:	2320      	movs	r3, #32
 8001bd8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bda:	2302      	movs	r3, #2
 8001bdc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bde:	2300      	movs	r3, #0
 8001be0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001be2:	2300      	movs	r3, #0
 8001be4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001be6:	2301      	movs	r3, #1
 8001be8:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bea:	f107 0314 	add.w	r3, r7, #20
 8001bee:	4619      	mov	r1, r3
 8001bf0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001bf4:	f002 fca6 	bl	8004544 <HAL_GPIO_Init>
}
 8001bf8:	bf00      	nop
 8001bfa:	3728      	adds	r7, #40	@ 0x28
 8001bfc:	46bd      	mov	sp, r7
 8001bfe:	bd80      	pop	{r7, pc}
 8001c00:	40012c00 	.word	0x40012c00
 8001c04:	40021000 	.word	0x40021000

08001c08 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001c08:	b480      	push	{r7}
 8001c0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001c0c:	bf00      	nop
 8001c0e:	e7fd      	b.n	8001c0c <NMI_Handler+0x4>

08001c10 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001c10:	b480      	push	{r7}
 8001c12:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001c14:	bf00      	nop
 8001c16:	e7fd      	b.n	8001c14 <HardFault_Handler+0x4>

08001c18 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001c18:	b480      	push	{r7}
 8001c1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001c1c:	bf00      	nop
 8001c1e:	e7fd      	b.n	8001c1c <MemManage_Handler+0x4>

08001c20 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001c20:	b480      	push	{r7}
 8001c22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001c24:	bf00      	nop
 8001c26:	e7fd      	b.n	8001c24 <BusFault_Handler+0x4>

08001c28 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001c28:	b480      	push	{r7}
 8001c2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001c2c:	bf00      	nop
 8001c2e:	e7fd      	b.n	8001c2c <UsageFault_Handler+0x4>

08001c30 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001c30:	b480      	push	{r7}
 8001c32:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001c34:	bf00      	nop
 8001c36:	46bd      	mov	sp, r7
 8001c38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c3c:	4770      	bx	lr

08001c3e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001c3e:	b480      	push	{r7}
 8001c40:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001c42:	bf00      	nop
 8001c44:	46bd      	mov	sp, r7
 8001c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c4a:	4770      	bx	lr

08001c4c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001c4c:	b480      	push	{r7}
 8001c4e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001c50:	bf00      	nop
 8001c52:	46bd      	mov	sp, r7
 8001c54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c58:	4770      	bx	lr

08001c5a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001c5a:	b580      	push	{r7, lr}
 8001c5c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001c5e:	f000 f8cb 	bl	8001df8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001c62:	bf00      	nop
 8001c64:	bd80      	pop	{r7, pc}
	...

08001c68 <FDCAN1_IT0_IRQHandler>:

/**
  * @brief This function handles FDCAN1 interrupt 0.
  */
void FDCAN1_IT0_IRQHandler(void)
{
 8001c68:	b580      	push	{r7, lr}
 8001c6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FDCAN1_IT0_IRQn 0 */

  /* USER CODE END FDCAN1_IT0_IRQn 0 */
  HAL_FDCAN_IRQHandler(&hfdcan1);
 8001c6c:	4802      	ldr	r0, [pc, #8]	@ (8001c78 <FDCAN1_IT0_IRQHandler+0x10>)
 8001c6e:	f002 fa09 	bl	8004084 <HAL_FDCAN_IRQHandler>
  /* USER CODE BEGIN FDCAN1_IT0_IRQn 1 */

  /* USER CODE END FDCAN1_IT0_IRQn 1 */
}
 8001c72:	bf00      	nop
 8001c74:	bd80      	pop	{r7, pc}
 8001c76:	bf00      	nop
 8001c78:	20000108 	.word	0x20000108

08001c7c <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001c7c:	b580      	push	{r7, lr}
 8001c7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001c80:	4802      	ldr	r0, [pc, #8]	@ (8001c8c <TIM2_IRQHandler+0x10>)
 8001c82:	f003 ffb7 	bl	8005bf4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001c86:	bf00      	nop
 8001c88:	bd80      	pop	{r7, pc}
 8001c8a:	bf00      	nop
 8001c8c:	200001b8 	.word	0x200001b8

08001c90 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001c90:	b580      	push	{r7, lr}
 8001c92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */
	millis++;
 8001c94:	4b05      	ldr	r3, [pc, #20]	@ (8001cac <TIM3_IRQHandler+0x1c>)
 8001c96:	881b      	ldrh	r3, [r3, #0]
 8001c98:	3301      	adds	r3, #1
 8001c9a:	b29a      	uxth	r2, r3
 8001c9c:	4b03      	ldr	r3, [pc, #12]	@ (8001cac <TIM3_IRQHandler+0x1c>)
 8001c9e:	801a      	strh	r2, [r3, #0]
		  }else{
			  can_select = 0;
		  }
	}*/
  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001ca0:	4803      	ldr	r0, [pc, #12]	@ (8001cb0 <TIM3_IRQHandler+0x20>)
 8001ca2:	f003 ffa7 	bl	8005bf4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001ca6:	bf00      	nop
 8001ca8:	bd80      	pop	{r7, pc}
 8001caa:	bf00      	nop
 8001cac:	20000640 	.word	0x20000640
 8001cb0:	20000204 	.word	0x20000204

08001cb4 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001cb4:	b580      	push	{r7, lr}
 8001cb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001cb8:	4802      	ldr	r0, [pc, #8]	@ (8001cc4 <TIM4_IRQHandler+0x10>)
 8001cba:	f003 ff9b 	bl	8005bf4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001cbe:	bf00      	nop
 8001cc0:	bd80      	pop	{r7, pc}
 8001cc2:	bf00      	nop
 8001cc4:	20000250 	.word	0x20000250

08001cc8 <TIM7_IRQHandler>:

/**
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
 8001cc8:	b580      	push	{r7, lr}
 8001cca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001ccc:	4802      	ldr	r0, [pc, #8]	@ (8001cd8 <TIM7_IRQHandler+0x10>)
 8001cce:	f003 ff91 	bl	8005bf4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_IRQn 1 */

  /* USER CODE END TIM7_IRQn 1 */
}
 8001cd2:	bf00      	nop
 8001cd4:	bd80      	pop	{r7, pc}
 8001cd6:	bf00      	nop
 8001cd8:	200002e8 	.word	0x200002e8

08001cdc <SystemInit>:
 8001cdc:	b480      	push	{r7}
 8001cde:	af00      	add	r7, sp, #0
 8001ce0:	4b06      	ldr	r3, [pc, #24]	@ (8001cfc <SystemInit+0x20>)
 8001ce2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001ce6:	4a05      	ldr	r2, [pc, #20]	@ (8001cfc <SystemInit+0x20>)
 8001ce8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001cec:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001cf0:	bf00      	nop
 8001cf2:	46bd      	mov	sp, r7
 8001cf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cf8:	4770      	bx	lr
 8001cfa:	bf00      	nop
 8001cfc:	e000ed00 	.word	0xe000ed00

08001d00 <Reset_Handler>:
 8001d00:	480d      	ldr	r0, [pc, #52]	@ (8001d38 <LoopForever+0x2>)
 8001d02:	4685      	mov	sp, r0
 8001d04:	480d      	ldr	r0, [pc, #52]	@ (8001d3c <LoopForever+0x6>)
 8001d06:	490e      	ldr	r1, [pc, #56]	@ (8001d40 <LoopForever+0xa>)
 8001d08:	4a0e      	ldr	r2, [pc, #56]	@ (8001d44 <LoopForever+0xe>)
 8001d0a:	2300      	movs	r3, #0
 8001d0c:	e002      	b.n	8001d14 <LoopCopyDataInit>

08001d0e <CopyDataInit>:
 8001d0e:	58d4      	ldr	r4, [r2, r3]
 8001d10:	50c4      	str	r4, [r0, r3]
 8001d12:	3304      	adds	r3, #4

08001d14 <LoopCopyDataInit>:
 8001d14:	18c4      	adds	r4, r0, r3
 8001d16:	428c      	cmp	r4, r1
 8001d18:	d3f9      	bcc.n	8001d0e <CopyDataInit>
 8001d1a:	4a0b      	ldr	r2, [pc, #44]	@ (8001d48 <LoopForever+0x12>)
 8001d1c:	4c0b      	ldr	r4, [pc, #44]	@ (8001d4c <LoopForever+0x16>)
 8001d1e:	2300      	movs	r3, #0
 8001d20:	e001      	b.n	8001d26 <LoopFillZerobss>

08001d22 <FillZerobss>:
 8001d22:	6013      	str	r3, [r2, #0]
 8001d24:	3204      	adds	r2, #4

08001d26 <LoopFillZerobss>:
 8001d26:	42a2      	cmp	r2, r4
 8001d28:	d3fb      	bcc.n	8001d22 <FillZerobss>
 8001d2a:	f7ff ffd7 	bl	8001cdc <SystemInit>
 8001d2e:	f005 f8a1 	bl	8006e74 <__libc_init_array>
 8001d32:	f7ff f813 	bl	8000d5c <main>

08001d36 <LoopForever>:
 8001d36:	e7fe      	b.n	8001d36 <LoopForever>
 8001d38:	20008000 	.word	0x20008000
 8001d3c:	20000000 	.word	0x20000000
 8001d40:	2000000c 	.word	0x2000000c
 8001d44:	08006f18 	.word	0x08006f18
 8001d48:	2000000c 	.word	0x2000000c
 8001d4c:	200006b0 	.word	0x200006b0

08001d50 <ADC1_2_IRQHandler>:
 8001d50:	e7fe      	b.n	8001d50 <ADC1_2_IRQHandler>

08001d52 <HAL_Init>:
 8001d52:	b580      	push	{r7, lr}
 8001d54:	b082      	sub	sp, #8
 8001d56:	af00      	add	r7, sp, #0
 8001d58:	2300      	movs	r3, #0
 8001d5a:	71fb      	strb	r3, [r7, #7]
 8001d5c:	2003      	movs	r0, #3
 8001d5e:	f001 fd8b 	bl	8003878 <HAL_NVIC_SetPriorityGrouping>
 8001d62:	200f      	movs	r0, #15
 8001d64:	f000 f80e 	bl	8001d84 <HAL_InitTick>
 8001d68:	4603      	mov	r3, r0
 8001d6a:	2b00      	cmp	r3, #0
 8001d6c:	d002      	beq.n	8001d74 <HAL_Init+0x22>
 8001d6e:	2301      	movs	r3, #1
 8001d70:	71fb      	strb	r3, [r7, #7]
 8001d72:	e001      	b.n	8001d78 <HAL_Init+0x26>
 8001d74:	f7ff fd10 	bl	8001798 <HAL_MspInit>
 8001d78:	79fb      	ldrb	r3, [r7, #7]
 8001d7a:	4618      	mov	r0, r3
 8001d7c:	3708      	adds	r7, #8
 8001d7e:	46bd      	mov	sp, r7
 8001d80:	bd80      	pop	{r7, pc}
	...

08001d84 <HAL_InitTick>:
 8001d84:	b580      	push	{r7, lr}
 8001d86:	b084      	sub	sp, #16
 8001d88:	af00      	add	r7, sp, #0
 8001d8a:	6078      	str	r0, [r7, #4]
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	73fb      	strb	r3, [r7, #15]
 8001d90:	4b16      	ldr	r3, [pc, #88]	@ (8001dec <HAL_InitTick+0x68>)
 8001d92:	681b      	ldr	r3, [r3, #0]
 8001d94:	2b00      	cmp	r3, #0
 8001d96:	d022      	beq.n	8001dde <HAL_InitTick+0x5a>
 8001d98:	4b15      	ldr	r3, [pc, #84]	@ (8001df0 <HAL_InitTick+0x6c>)
 8001d9a:	681a      	ldr	r2, [r3, #0]
 8001d9c:	4b13      	ldr	r3, [pc, #76]	@ (8001dec <HAL_InitTick+0x68>)
 8001d9e:	681b      	ldr	r3, [r3, #0]
 8001da0:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001da4:	fbb1 f3f3 	udiv	r3, r1, r3
 8001da8:	fbb2 f3f3 	udiv	r3, r2, r3
 8001dac:	4618      	mov	r0, r3
 8001dae:	f001 fd96 	bl	80038de <HAL_SYSTICK_Config>
 8001db2:	4603      	mov	r3, r0
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d10f      	bne.n	8001dd8 <HAL_InitTick+0x54>
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	2b0f      	cmp	r3, #15
 8001dbc:	d809      	bhi.n	8001dd2 <HAL_InitTick+0x4e>
 8001dbe:	2200      	movs	r2, #0
 8001dc0:	6879      	ldr	r1, [r7, #4]
 8001dc2:	f04f 30ff 	mov.w	r0, #4294967295
 8001dc6:	f001 fd62 	bl	800388e <HAL_NVIC_SetPriority>
 8001dca:	4a0a      	ldr	r2, [pc, #40]	@ (8001df4 <HAL_InitTick+0x70>)
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	6013      	str	r3, [r2, #0]
 8001dd0:	e007      	b.n	8001de2 <HAL_InitTick+0x5e>
 8001dd2:	2301      	movs	r3, #1
 8001dd4:	73fb      	strb	r3, [r7, #15]
 8001dd6:	e004      	b.n	8001de2 <HAL_InitTick+0x5e>
 8001dd8:	2301      	movs	r3, #1
 8001dda:	73fb      	strb	r3, [r7, #15]
 8001ddc:	e001      	b.n	8001de2 <HAL_InitTick+0x5e>
 8001dde:	2301      	movs	r3, #1
 8001de0:	73fb      	strb	r3, [r7, #15]
 8001de2:	7bfb      	ldrb	r3, [r7, #15]
 8001de4:	4618      	mov	r0, r3
 8001de6:	3710      	adds	r7, #16
 8001de8:	46bd      	mov	sp, r7
 8001dea:	bd80      	pop	{r7, pc}
 8001dec:	20000008 	.word	0x20000008
 8001df0:	20000000 	.word	0x20000000
 8001df4:	20000004 	.word	0x20000004

08001df8 <HAL_IncTick>:
 8001df8:	b480      	push	{r7}
 8001dfa:	af00      	add	r7, sp, #0
 8001dfc:	4b05      	ldr	r3, [pc, #20]	@ (8001e14 <HAL_IncTick+0x1c>)
 8001dfe:	681a      	ldr	r2, [r3, #0]
 8001e00:	4b05      	ldr	r3, [pc, #20]	@ (8001e18 <HAL_IncTick+0x20>)
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	4413      	add	r3, r2
 8001e06:	4a03      	ldr	r2, [pc, #12]	@ (8001e14 <HAL_IncTick+0x1c>)
 8001e08:	6013      	str	r3, [r2, #0]
 8001e0a:	bf00      	nop
 8001e0c:	46bd      	mov	sp, r7
 8001e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e12:	4770      	bx	lr
 8001e14:	200006ac 	.word	0x200006ac
 8001e18:	20000008 	.word	0x20000008

08001e1c <HAL_GetTick>:
 8001e1c:	b480      	push	{r7}
 8001e1e:	af00      	add	r7, sp, #0
 8001e20:	4b03      	ldr	r3, [pc, #12]	@ (8001e30 <HAL_GetTick+0x14>)
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	4618      	mov	r0, r3
 8001e26:	46bd      	mov	sp, r7
 8001e28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e2c:	4770      	bx	lr
 8001e2e:	bf00      	nop
 8001e30:	200006ac 	.word	0x200006ac

08001e34 <HAL_Delay>:
 8001e34:	b580      	push	{r7, lr}
 8001e36:	b084      	sub	sp, #16
 8001e38:	af00      	add	r7, sp, #0
 8001e3a:	6078      	str	r0, [r7, #4]
 8001e3c:	f7ff ffee 	bl	8001e1c <HAL_GetTick>
 8001e40:	60b8      	str	r0, [r7, #8]
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	60fb      	str	r3, [r7, #12]
 8001e46:	68fb      	ldr	r3, [r7, #12]
 8001e48:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001e4c:	d004      	beq.n	8001e58 <HAL_Delay+0x24>
 8001e4e:	4b09      	ldr	r3, [pc, #36]	@ (8001e74 <HAL_Delay+0x40>)
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	68fa      	ldr	r2, [r7, #12]
 8001e54:	4413      	add	r3, r2
 8001e56:	60fb      	str	r3, [r7, #12]
 8001e58:	bf00      	nop
 8001e5a:	f7ff ffdf 	bl	8001e1c <HAL_GetTick>
 8001e5e:	4602      	mov	r2, r0
 8001e60:	68bb      	ldr	r3, [r7, #8]
 8001e62:	1ad3      	subs	r3, r2, r3
 8001e64:	68fa      	ldr	r2, [r7, #12]
 8001e66:	429a      	cmp	r2, r3
 8001e68:	d8f7      	bhi.n	8001e5a <HAL_Delay+0x26>
 8001e6a:	bf00      	nop
 8001e6c:	bf00      	nop
 8001e6e:	3710      	adds	r7, #16
 8001e70:	46bd      	mov	sp, r7
 8001e72:	bd80      	pop	{r7, pc}
 8001e74:	20000008 	.word	0x20000008

08001e78 <LL_ADC_SetCommonClock>:
 8001e78:	b480      	push	{r7}
 8001e7a:	b083      	sub	sp, #12
 8001e7c:	af00      	add	r7, sp, #0
 8001e7e:	6078      	str	r0, [r7, #4]
 8001e80:	6039      	str	r1, [r7, #0]
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	689b      	ldr	r3, [r3, #8]
 8001e86:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 8001e8a:	683b      	ldr	r3, [r7, #0]
 8001e8c:	431a      	orrs	r2, r3
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	609a      	str	r2, [r3, #8]
 8001e92:	bf00      	nop
 8001e94:	370c      	adds	r7, #12
 8001e96:	46bd      	mov	sp, r7
 8001e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e9c:	4770      	bx	lr

08001e9e <LL_ADC_SetCommonPathInternalCh>:
 8001e9e:	b480      	push	{r7}
 8001ea0:	b083      	sub	sp, #12
 8001ea2:	af00      	add	r7, sp, #0
 8001ea4:	6078      	str	r0, [r7, #4]
 8001ea6:	6039      	str	r1, [r7, #0]
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	689b      	ldr	r3, [r3, #8]
 8001eac:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8001eb0:	683b      	ldr	r3, [r7, #0]
 8001eb2:	431a      	orrs	r2, r3
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	609a      	str	r2, [r3, #8]
 8001eb8:	bf00      	nop
 8001eba:	370c      	adds	r7, #12
 8001ebc:	46bd      	mov	sp, r7
 8001ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec2:	4770      	bx	lr

08001ec4 <LL_ADC_GetCommonPathInternalCh>:
 8001ec4:	b480      	push	{r7}
 8001ec6:	b083      	sub	sp, #12
 8001ec8:	af00      	add	r7, sp, #0
 8001eca:	6078      	str	r0, [r7, #4]
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	689b      	ldr	r3, [r3, #8]
 8001ed0:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 8001ed4:	4618      	mov	r0, r3
 8001ed6:	370c      	adds	r7, #12
 8001ed8:	46bd      	mov	sp, r7
 8001eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ede:	4770      	bx	lr

08001ee0 <LL_ADC_SetOffset>:
 8001ee0:	b480      	push	{r7}
 8001ee2:	b087      	sub	sp, #28
 8001ee4:	af00      	add	r7, sp, #0
 8001ee6:	60f8      	str	r0, [r7, #12]
 8001ee8:	60b9      	str	r1, [r7, #8]
 8001eea:	607a      	str	r2, [r7, #4]
 8001eec:	603b      	str	r3, [r7, #0]
 8001eee:	68fb      	ldr	r3, [r7, #12]
 8001ef0:	3360      	adds	r3, #96	@ 0x60
 8001ef2:	461a      	mov	r2, r3
 8001ef4:	68bb      	ldr	r3, [r7, #8]
 8001ef6:	009b      	lsls	r3, r3, #2
 8001ef8:	4413      	add	r3, r2
 8001efa:	617b      	str	r3, [r7, #20]
 8001efc:	697b      	ldr	r3, [r7, #20]
 8001efe:	681a      	ldr	r2, [r3, #0]
 8001f00:	4b08      	ldr	r3, [pc, #32]	@ (8001f24 <LL_ADC_SetOffset+0x44>)
 8001f02:	4013      	ands	r3, r2
 8001f04:	687a      	ldr	r2, [r7, #4]
 8001f06:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 8001f0a:	683a      	ldr	r2, [r7, #0]
 8001f0c:	430a      	orrs	r2, r1
 8001f0e:	4313      	orrs	r3, r2
 8001f10:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8001f14:	697b      	ldr	r3, [r7, #20]
 8001f16:	601a      	str	r2, [r3, #0]
 8001f18:	bf00      	nop
 8001f1a:	371c      	adds	r7, #28
 8001f1c:	46bd      	mov	sp, r7
 8001f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f22:	4770      	bx	lr
 8001f24:	03fff000 	.word	0x03fff000

08001f28 <LL_ADC_GetOffsetChannel>:
 8001f28:	b480      	push	{r7}
 8001f2a:	b085      	sub	sp, #20
 8001f2c:	af00      	add	r7, sp, #0
 8001f2e:	6078      	str	r0, [r7, #4]
 8001f30:	6039      	str	r1, [r7, #0]
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	3360      	adds	r3, #96	@ 0x60
 8001f36:	461a      	mov	r2, r3
 8001f38:	683b      	ldr	r3, [r7, #0]
 8001f3a:	009b      	lsls	r3, r3, #2
 8001f3c:	4413      	add	r3, r2
 8001f3e:	60fb      	str	r3, [r7, #12]
 8001f40:	68fb      	ldr	r3, [r7, #12]
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 8001f48:	4618      	mov	r0, r3
 8001f4a:	3714      	adds	r7, #20
 8001f4c:	46bd      	mov	sp, r7
 8001f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f52:	4770      	bx	lr

08001f54 <LL_ADC_SetOffsetState>:
 8001f54:	b480      	push	{r7}
 8001f56:	b087      	sub	sp, #28
 8001f58:	af00      	add	r7, sp, #0
 8001f5a:	60f8      	str	r0, [r7, #12]
 8001f5c:	60b9      	str	r1, [r7, #8]
 8001f5e:	607a      	str	r2, [r7, #4]
 8001f60:	68fb      	ldr	r3, [r7, #12]
 8001f62:	3360      	adds	r3, #96	@ 0x60
 8001f64:	461a      	mov	r2, r3
 8001f66:	68bb      	ldr	r3, [r7, #8]
 8001f68:	009b      	lsls	r3, r3, #2
 8001f6a:	4413      	add	r3, r2
 8001f6c:	617b      	str	r3, [r7, #20]
 8001f6e:	697b      	ldr	r3, [r7, #20]
 8001f70:	681b      	ldr	r3, [r3, #0]
 8001f72:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	431a      	orrs	r2, r3
 8001f7a:	697b      	ldr	r3, [r7, #20]
 8001f7c:	601a      	str	r2, [r3, #0]
 8001f7e:	bf00      	nop
 8001f80:	371c      	adds	r7, #28
 8001f82:	46bd      	mov	sp, r7
 8001f84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f88:	4770      	bx	lr

08001f8a <LL_ADC_SetOffsetSign>:
 8001f8a:	b480      	push	{r7}
 8001f8c:	b087      	sub	sp, #28
 8001f8e:	af00      	add	r7, sp, #0
 8001f90:	60f8      	str	r0, [r7, #12]
 8001f92:	60b9      	str	r1, [r7, #8]
 8001f94:	607a      	str	r2, [r7, #4]
 8001f96:	68fb      	ldr	r3, [r7, #12]
 8001f98:	3360      	adds	r3, #96	@ 0x60
 8001f9a:	461a      	mov	r2, r3
 8001f9c:	68bb      	ldr	r3, [r7, #8]
 8001f9e:	009b      	lsls	r3, r3, #2
 8001fa0:	4413      	add	r3, r2
 8001fa2:	617b      	str	r3, [r7, #20]
 8001fa4:	697b      	ldr	r3, [r7, #20]
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	431a      	orrs	r2, r3
 8001fb0:	697b      	ldr	r3, [r7, #20]
 8001fb2:	601a      	str	r2, [r3, #0]
 8001fb4:	bf00      	nop
 8001fb6:	371c      	adds	r7, #28
 8001fb8:	46bd      	mov	sp, r7
 8001fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fbe:	4770      	bx	lr

08001fc0 <LL_ADC_SetOffsetSaturation>:
 8001fc0:	b480      	push	{r7}
 8001fc2:	b087      	sub	sp, #28
 8001fc4:	af00      	add	r7, sp, #0
 8001fc6:	60f8      	str	r0, [r7, #12]
 8001fc8:	60b9      	str	r1, [r7, #8]
 8001fca:	607a      	str	r2, [r7, #4]
 8001fcc:	68fb      	ldr	r3, [r7, #12]
 8001fce:	3360      	adds	r3, #96	@ 0x60
 8001fd0:	461a      	mov	r2, r3
 8001fd2:	68bb      	ldr	r3, [r7, #8]
 8001fd4:	009b      	lsls	r3, r3, #2
 8001fd6:	4413      	add	r3, r2
 8001fd8:	617b      	str	r3, [r7, #20]
 8001fda:	697b      	ldr	r3, [r7, #20]
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	431a      	orrs	r2, r3
 8001fe6:	697b      	ldr	r3, [r7, #20]
 8001fe8:	601a      	str	r2, [r3, #0]
 8001fea:	bf00      	nop
 8001fec:	371c      	adds	r7, #28
 8001fee:	46bd      	mov	sp, r7
 8001ff0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ff4:	4770      	bx	lr

08001ff6 <LL_ADC_SetSamplingTimeCommonConfig>:
 8001ff6:	b480      	push	{r7}
 8001ff8:	b083      	sub	sp, #12
 8001ffa:	af00      	add	r7, sp, #0
 8001ffc:	6078      	str	r0, [r7, #4]
 8001ffe:	6039      	str	r1, [r7, #0]
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	695b      	ldr	r3, [r3, #20]
 8002004:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8002008:	683b      	ldr	r3, [r7, #0]
 800200a:	431a      	orrs	r2, r3
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	615a      	str	r2, [r3, #20]
 8002010:	bf00      	nop
 8002012:	370c      	adds	r7, #12
 8002014:	46bd      	mov	sp, r7
 8002016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800201a:	4770      	bx	lr

0800201c <LL_ADC_REG_IsTriggerSourceSWStart>:
 800201c:	b480      	push	{r7}
 800201e:	b083      	sub	sp, #12
 8002020:	af00      	add	r7, sp, #0
 8002022:	6078      	str	r0, [r7, #4]
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	68db      	ldr	r3, [r3, #12]
 8002028:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800202c:	2b00      	cmp	r3, #0
 800202e:	d101      	bne.n	8002034 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8002030:	2301      	movs	r3, #1
 8002032:	e000      	b.n	8002036 <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8002034:	2300      	movs	r3, #0
 8002036:	4618      	mov	r0, r3
 8002038:	370c      	adds	r7, #12
 800203a:	46bd      	mov	sp, r7
 800203c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002040:	4770      	bx	lr

08002042 <LL_ADC_REG_SetSequencerRanks>:
 8002042:	b480      	push	{r7}
 8002044:	b087      	sub	sp, #28
 8002046:	af00      	add	r7, sp, #0
 8002048:	60f8      	str	r0, [r7, #12]
 800204a:	60b9      	str	r1, [r7, #8]
 800204c:	607a      	str	r2, [r7, #4]
 800204e:	68fb      	ldr	r3, [r7, #12]
 8002050:	3330      	adds	r3, #48	@ 0x30
 8002052:	461a      	mov	r2, r3
 8002054:	68bb      	ldr	r3, [r7, #8]
 8002056:	0a1b      	lsrs	r3, r3, #8
 8002058:	009b      	lsls	r3, r3, #2
 800205a:	f003 030c 	and.w	r3, r3, #12
 800205e:	4413      	add	r3, r2
 8002060:	617b      	str	r3, [r7, #20]
 8002062:	697b      	ldr	r3, [r7, #20]
 8002064:	681a      	ldr	r2, [r3, #0]
 8002066:	68bb      	ldr	r3, [r7, #8]
 8002068:	f003 031f 	and.w	r3, r3, #31
 800206c:	211f      	movs	r1, #31
 800206e:	fa01 f303 	lsl.w	r3, r1, r3
 8002072:	43db      	mvns	r3, r3
 8002074:	401a      	ands	r2, r3
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	0e9b      	lsrs	r3, r3, #26
 800207a:	f003 011f 	and.w	r1, r3, #31
 800207e:	68bb      	ldr	r3, [r7, #8]
 8002080:	f003 031f 	and.w	r3, r3, #31
 8002084:	fa01 f303 	lsl.w	r3, r1, r3
 8002088:	431a      	orrs	r2, r3
 800208a:	697b      	ldr	r3, [r7, #20]
 800208c:	601a      	str	r2, [r3, #0]
 800208e:	bf00      	nop
 8002090:	371c      	adds	r7, #28
 8002092:	46bd      	mov	sp, r7
 8002094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002098:	4770      	bx	lr

0800209a <LL_ADC_SetChannelSamplingTime>:
 800209a:	b480      	push	{r7}
 800209c:	b087      	sub	sp, #28
 800209e:	af00      	add	r7, sp, #0
 80020a0:	60f8      	str	r0, [r7, #12]
 80020a2:	60b9      	str	r1, [r7, #8]
 80020a4:	607a      	str	r2, [r7, #4]
 80020a6:	68fb      	ldr	r3, [r7, #12]
 80020a8:	3314      	adds	r3, #20
 80020aa:	461a      	mov	r2, r3
 80020ac:	68bb      	ldr	r3, [r7, #8]
 80020ae:	0e5b      	lsrs	r3, r3, #25
 80020b0:	009b      	lsls	r3, r3, #2
 80020b2:	f003 0304 	and.w	r3, r3, #4
 80020b6:	4413      	add	r3, r2
 80020b8:	617b      	str	r3, [r7, #20]
 80020ba:	697b      	ldr	r3, [r7, #20]
 80020bc:	681a      	ldr	r2, [r3, #0]
 80020be:	68bb      	ldr	r3, [r7, #8]
 80020c0:	0d1b      	lsrs	r3, r3, #20
 80020c2:	f003 031f 	and.w	r3, r3, #31
 80020c6:	2107      	movs	r1, #7
 80020c8:	fa01 f303 	lsl.w	r3, r1, r3
 80020cc:	43db      	mvns	r3, r3
 80020ce:	401a      	ands	r2, r3
 80020d0:	68bb      	ldr	r3, [r7, #8]
 80020d2:	0d1b      	lsrs	r3, r3, #20
 80020d4:	f003 031f 	and.w	r3, r3, #31
 80020d8:	6879      	ldr	r1, [r7, #4]
 80020da:	fa01 f303 	lsl.w	r3, r1, r3
 80020de:	431a      	orrs	r2, r3
 80020e0:	697b      	ldr	r3, [r7, #20]
 80020e2:	601a      	str	r2, [r3, #0]
 80020e4:	bf00      	nop
 80020e6:	371c      	adds	r7, #28
 80020e8:	46bd      	mov	sp, r7
 80020ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020ee:	4770      	bx	lr

080020f0 <LL_ADC_SetChannelSingleDiff>:
 80020f0:	b480      	push	{r7}
 80020f2:	b085      	sub	sp, #20
 80020f4:	af00      	add	r7, sp, #0
 80020f6:	60f8      	str	r0, [r7, #12]
 80020f8:	60b9      	str	r1, [r7, #8]
 80020fa:	607a      	str	r2, [r7, #4]
 80020fc:	68fb      	ldr	r3, [r7, #12]
 80020fe:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8002102:	68bb      	ldr	r3, [r7, #8]
 8002104:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002108:	43db      	mvns	r3, r3
 800210a:	401a      	ands	r2, r3
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	f003 0318 	and.w	r3, r3, #24
 8002112:	4908      	ldr	r1, [pc, #32]	@ (8002134 <LL_ADC_SetChannelSingleDiff+0x44>)
 8002114:	40d9      	lsrs	r1, r3
 8002116:	68bb      	ldr	r3, [r7, #8]
 8002118:	400b      	ands	r3, r1
 800211a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800211e:	431a      	orrs	r2, r3
 8002120:	68fb      	ldr	r3, [r7, #12]
 8002122:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 8002126:	bf00      	nop
 8002128:	3714      	adds	r7, #20
 800212a:	46bd      	mov	sp, r7
 800212c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002130:	4770      	bx	lr
 8002132:	bf00      	nop
 8002134:	0007ffff 	.word	0x0007ffff

08002138 <LL_ADC_GetMultimode>:
 8002138:	b480      	push	{r7}
 800213a:	b083      	sub	sp, #12
 800213c:	af00      	add	r7, sp, #0
 800213e:	6078      	str	r0, [r7, #4]
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	689b      	ldr	r3, [r3, #8]
 8002144:	f003 031f 	and.w	r3, r3, #31
 8002148:	4618      	mov	r0, r3
 800214a:	370c      	adds	r7, #12
 800214c:	46bd      	mov	sp, r7
 800214e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002152:	4770      	bx	lr

08002154 <LL_ADC_GetMultiDMATransfer>:
 8002154:	b480      	push	{r7}
 8002156:	b083      	sub	sp, #12
 8002158:	af00      	add	r7, sp, #0
 800215a:	6078      	str	r0, [r7, #4]
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	689b      	ldr	r3, [r3, #8]
 8002160:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8002164:	4618      	mov	r0, r3
 8002166:	370c      	adds	r7, #12
 8002168:	46bd      	mov	sp, r7
 800216a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800216e:	4770      	bx	lr

08002170 <LL_ADC_DisableDeepPowerDown>:
 8002170:	b480      	push	{r7}
 8002172:	b083      	sub	sp, #12
 8002174:	af00      	add	r7, sp, #0
 8002176:	6078      	str	r0, [r7, #4]
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	689b      	ldr	r3, [r3, #8]
 800217c:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 8002180:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002184:	687a      	ldr	r2, [r7, #4]
 8002186:	6093      	str	r3, [r2, #8]
 8002188:	bf00      	nop
 800218a:	370c      	adds	r7, #12
 800218c:	46bd      	mov	sp, r7
 800218e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002192:	4770      	bx	lr

08002194 <LL_ADC_IsDeepPowerDownEnabled>:
 8002194:	b480      	push	{r7}
 8002196:	b083      	sub	sp, #12
 8002198:	af00      	add	r7, sp, #0
 800219a:	6078      	str	r0, [r7, #4]
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	689b      	ldr	r3, [r3, #8]
 80021a0:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80021a4:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80021a8:	d101      	bne.n	80021ae <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 80021aa:	2301      	movs	r3, #1
 80021ac:	e000      	b.n	80021b0 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 80021ae:	2300      	movs	r3, #0
 80021b0:	4618      	mov	r0, r3
 80021b2:	370c      	adds	r7, #12
 80021b4:	46bd      	mov	sp, r7
 80021b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ba:	4770      	bx	lr

080021bc <LL_ADC_EnableInternalRegulator>:
 80021bc:	b480      	push	{r7}
 80021be:	b083      	sub	sp, #12
 80021c0:	af00      	add	r7, sp, #0
 80021c2:	6078      	str	r0, [r7, #4]
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	689b      	ldr	r3, [r3, #8]
 80021c8:	f023 4310 	bic.w	r3, r3, #2415919104	@ 0x90000000
 80021cc:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80021d0:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	609a      	str	r2, [r3, #8]
 80021d8:	bf00      	nop
 80021da:	370c      	adds	r7, #12
 80021dc:	46bd      	mov	sp, r7
 80021de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021e2:	4770      	bx	lr

080021e4 <LL_ADC_IsInternalRegulatorEnabled>:
 80021e4:	b480      	push	{r7}
 80021e6:	b083      	sub	sp, #12
 80021e8:	af00      	add	r7, sp, #0
 80021ea:	6078      	str	r0, [r7, #4]
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	689b      	ldr	r3, [r3, #8]
 80021f0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80021f4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80021f8:	d101      	bne.n	80021fe <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 80021fa:	2301      	movs	r3, #1
 80021fc:	e000      	b.n	8002200 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 80021fe:	2300      	movs	r3, #0
 8002200:	4618      	mov	r0, r3
 8002202:	370c      	adds	r7, #12
 8002204:	46bd      	mov	sp, r7
 8002206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800220a:	4770      	bx	lr

0800220c <LL_ADC_Enable>:
 800220c:	b480      	push	{r7}
 800220e:	b083      	sub	sp, #12
 8002210:	af00      	add	r7, sp, #0
 8002212:	6078      	str	r0, [r7, #4]
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	689b      	ldr	r3, [r3, #8]
 8002218:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800221c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002220:	f043 0201 	orr.w	r2, r3, #1
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	609a      	str	r2, [r3, #8]
 8002228:	bf00      	nop
 800222a:	370c      	adds	r7, #12
 800222c:	46bd      	mov	sp, r7
 800222e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002232:	4770      	bx	lr

08002234 <LL_ADC_Disable>:
 8002234:	b480      	push	{r7}
 8002236:	b083      	sub	sp, #12
 8002238:	af00      	add	r7, sp, #0
 800223a:	6078      	str	r0, [r7, #4]
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	689b      	ldr	r3, [r3, #8]
 8002240:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002244:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002248:	f043 0202 	orr.w	r2, r3, #2
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	609a      	str	r2, [r3, #8]
 8002250:	bf00      	nop
 8002252:	370c      	adds	r7, #12
 8002254:	46bd      	mov	sp, r7
 8002256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800225a:	4770      	bx	lr

0800225c <LL_ADC_IsEnabled>:
 800225c:	b480      	push	{r7}
 800225e:	b083      	sub	sp, #12
 8002260:	af00      	add	r7, sp, #0
 8002262:	6078      	str	r0, [r7, #4]
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	689b      	ldr	r3, [r3, #8]
 8002268:	f003 0301 	and.w	r3, r3, #1
 800226c:	2b01      	cmp	r3, #1
 800226e:	d101      	bne.n	8002274 <LL_ADC_IsEnabled+0x18>
 8002270:	2301      	movs	r3, #1
 8002272:	e000      	b.n	8002276 <LL_ADC_IsEnabled+0x1a>
 8002274:	2300      	movs	r3, #0
 8002276:	4618      	mov	r0, r3
 8002278:	370c      	adds	r7, #12
 800227a:	46bd      	mov	sp, r7
 800227c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002280:	4770      	bx	lr

08002282 <LL_ADC_IsDisableOngoing>:
 8002282:	b480      	push	{r7}
 8002284:	b083      	sub	sp, #12
 8002286:	af00      	add	r7, sp, #0
 8002288:	6078      	str	r0, [r7, #4]
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	689b      	ldr	r3, [r3, #8]
 800228e:	f003 0302 	and.w	r3, r3, #2
 8002292:	2b02      	cmp	r3, #2
 8002294:	d101      	bne.n	800229a <LL_ADC_IsDisableOngoing+0x18>
 8002296:	2301      	movs	r3, #1
 8002298:	e000      	b.n	800229c <LL_ADC_IsDisableOngoing+0x1a>
 800229a:	2300      	movs	r3, #0
 800229c:	4618      	mov	r0, r3
 800229e:	370c      	adds	r7, #12
 80022a0:	46bd      	mov	sp, r7
 80022a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022a6:	4770      	bx	lr

080022a8 <LL_ADC_REG_StartConversion>:
 80022a8:	b480      	push	{r7}
 80022aa:	b083      	sub	sp, #12
 80022ac:	af00      	add	r7, sp, #0
 80022ae:	6078      	str	r0, [r7, #4]
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	689b      	ldr	r3, [r3, #8]
 80022b4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80022b8:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80022bc:	f043 0204 	orr.w	r2, r3, #4
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	609a      	str	r2, [r3, #8]
 80022c4:	bf00      	nop
 80022c6:	370c      	adds	r7, #12
 80022c8:	46bd      	mov	sp, r7
 80022ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ce:	4770      	bx	lr

080022d0 <LL_ADC_REG_StopConversion>:
 80022d0:	b480      	push	{r7}
 80022d2:	b083      	sub	sp, #12
 80022d4:	af00      	add	r7, sp, #0
 80022d6:	6078      	str	r0, [r7, #4]
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	689b      	ldr	r3, [r3, #8]
 80022dc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80022e0:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80022e4:	f043 0210 	orr.w	r2, r3, #16
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	609a      	str	r2, [r3, #8]
 80022ec:	bf00      	nop
 80022ee:	370c      	adds	r7, #12
 80022f0:	46bd      	mov	sp, r7
 80022f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022f6:	4770      	bx	lr

080022f8 <LL_ADC_REG_IsConversionOngoing>:
 80022f8:	b480      	push	{r7}
 80022fa:	b083      	sub	sp, #12
 80022fc:	af00      	add	r7, sp, #0
 80022fe:	6078      	str	r0, [r7, #4]
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	689b      	ldr	r3, [r3, #8]
 8002304:	f003 0304 	and.w	r3, r3, #4
 8002308:	2b04      	cmp	r3, #4
 800230a:	d101      	bne.n	8002310 <LL_ADC_REG_IsConversionOngoing+0x18>
 800230c:	2301      	movs	r3, #1
 800230e:	e000      	b.n	8002312 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8002310:	2300      	movs	r3, #0
 8002312:	4618      	mov	r0, r3
 8002314:	370c      	adds	r7, #12
 8002316:	46bd      	mov	sp, r7
 8002318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800231c:	4770      	bx	lr

0800231e <LL_ADC_INJ_StopConversion>:
 800231e:	b480      	push	{r7}
 8002320:	b083      	sub	sp, #12
 8002322:	af00      	add	r7, sp, #0
 8002324:	6078      	str	r0, [r7, #4]
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	689b      	ldr	r3, [r3, #8]
 800232a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800232e:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002332:	f043 0220 	orr.w	r2, r3, #32
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	609a      	str	r2, [r3, #8]
 800233a:	bf00      	nop
 800233c:	370c      	adds	r7, #12
 800233e:	46bd      	mov	sp, r7
 8002340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002344:	4770      	bx	lr

08002346 <LL_ADC_INJ_IsConversionOngoing>:
 8002346:	b480      	push	{r7}
 8002348:	b083      	sub	sp, #12
 800234a:	af00      	add	r7, sp, #0
 800234c:	6078      	str	r0, [r7, #4]
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	689b      	ldr	r3, [r3, #8]
 8002352:	f003 0308 	and.w	r3, r3, #8
 8002356:	2b08      	cmp	r3, #8
 8002358:	d101      	bne.n	800235e <LL_ADC_INJ_IsConversionOngoing+0x18>
 800235a:	2301      	movs	r3, #1
 800235c:	e000      	b.n	8002360 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 800235e:	2300      	movs	r3, #0
 8002360:	4618      	mov	r0, r3
 8002362:	370c      	adds	r7, #12
 8002364:	46bd      	mov	sp, r7
 8002366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800236a:	4770      	bx	lr

0800236c <HAL_ADC_Init>:
 800236c:	b590      	push	{r4, r7, lr}
 800236e:	b089      	sub	sp, #36	@ 0x24
 8002370:	af00      	add	r7, sp, #0
 8002372:	6078      	str	r0, [r7, #4]
 8002374:	2300      	movs	r3, #0
 8002376:	77fb      	strb	r3, [r7, #31]
 8002378:	2300      	movs	r3, #0
 800237a:	60fb      	str	r3, [r7, #12]
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	2b00      	cmp	r3, #0
 8002380:	d101      	bne.n	8002386 <HAL_ADC_Init+0x1a>
 8002382:	2301      	movs	r3, #1
 8002384:	e167      	b.n	8002656 <HAL_ADC_Init+0x2ea>
 8002386:	687b      	ldr	r3, [r7, #4]
 8002388:	695b      	ldr	r3, [r3, #20]
 800238a:	2b00      	cmp	r3, #0
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002390:	2b00      	cmp	r3, #0
 8002392:	d109      	bne.n	80023a8 <HAL_ADC_Init+0x3c>
 8002394:	6878      	ldr	r0, [r7, #4]
 8002396:	f7ff fa23 	bl	80017e0 <HAL_ADC_MspInit>
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	2200      	movs	r2, #0
 800239e:	661a      	str	r2, [r3, #96]	@ 0x60
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	2200      	movs	r2, #0
 80023a4:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	681b      	ldr	r3, [r3, #0]
 80023ac:	4618      	mov	r0, r3
 80023ae:	f7ff fef1 	bl	8002194 <LL_ADC_IsDeepPowerDownEnabled>
 80023b2:	4603      	mov	r3, r0
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	d004      	beq.n	80023c2 <HAL_ADC_Init+0x56>
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	4618      	mov	r0, r3
 80023be:	f7ff fed7 	bl	8002170 <LL_ADC_DisableDeepPowerDown>
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	4618      	mov	r0, r3
 80023c8:	f7ff ff0c 	bl	80021e4 <LL_ADC_IsInternalRegulatorEnabled>
 80023cc:	4603      	mov	r3, r0
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	d115      	bne.n	80023fe <HAL_ADC_Init+0x92>
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	4618      	mov	r0, r3
 80023d8:	f7ff fef0 	bl	80021bc <LL_ADC_EnableInternalRegulator>
 80023dc:	4ba0      	ldr	r3, [pc, #640]	@ (8002660 <HAL_ADC_Init+0x2f4>)
 80023de:	681b      	ldr	r3, [r3, #0]
 80023e0:	099b      	lsrs	r3, r3, #6
 80023e2:	4aa0      	ldr	r2, [pc, #640]	@ (8002664 <HAL_ADC_Init+0x2f8>)
 80023e4:	fba2 2303 	umull	r2, r3, r2, r3
 80023e8:	099b      	lsrs	r3, r3, #6
 80023ea:	3301      	adds	r3, #1
 80023ec:	005b      	lsls	r3, r3, #1
 80023ee:	60fb      	str	r3, [r7, #12]
 80023f0:	e002      	b.n	80023f8 <HAL_ADC_Init+0x8c>
 80023f2:	68fb      	ldr	r3, [r7, #12]
 80023f4:	3b01      	subs	r3, #1
 80023f6:	60fb      	str	r3, [r7, #12]
 80023f8:	68fb      	ldr	r3, [r7, #12]
 80023fa:	2b00      	cmp	r3, #0
 80023fc:	d1f9      	bne.n	80023f2 <HAL_ADC_Init+0x86>
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	4618      	mov	r0, r3
 8002404:	f7ff feee 	bl	80021e4 <LL_ADC_IsInternalRegulatorEnabled>
 8002408:	4603      	mov	r3, r0
 800240a:	2b00      	cmp	r3, #0
 800240c:	d10d      	bne.n	800242a <HAL_ADC_Init+0xbe>
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002412:	f043 0210 	orr.w	r2, r3, #16
 8002416:	687b      	ldr	r3, [r7, #4]
 8002418:	65da      	str	r2, [r3, #92]	@ 0x5c
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800241e:	f043 0201 	orr.w	r2, r3, #1
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	661a      	str	r2, [r3, #96]	@ 0x60
 8002426:	2301      	movs	r3, #1
 8002428:	77fb      	strb	r3, [r7, #31]
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	4618      	mov	r0, r3
 8002430:	f7ff ff62 	bl	80022f8 <LL_ADC_REG_IsConversionOngoing>
 8002434:	6178      	str	r0, [r7, #20]
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800243a:	f003 0310 	and.w	r3, r3, #16
 800243e:	2b00      	cmp	r3, #0
 8002440:	f040 8100 	bne.w	8002644 <HAL_ADC_Init+0x2d8>
 8002444:	697b      	ldr	r3, [r7, #20]
 8002446:	2b00      	cmp	r3, #0
 8002448:	f040 80fc 	bne.w	8002644 <HAL_ADC_Init+0x2d8>
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002450:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 8002454:	f043 0202 	orr.w	r2, r3, #2
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	4618      	mov	r0, r3
 8002462:	f7ff fefb 	bl	800225c <LL_ADC_IsEnabled>
 8002466:	4603      	mov	r3, r0
 8002468:	2b00      	cmp	r3, #0
 800246a:	d111      	bne.n	8002490 <HAL_ADC_Init+0x124>
 800246c:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8002470:	f7ff fef4 	bl	800225c <LL_ADC_IsEnabled>
 8002474:	4604      	mov	r4, r0
 8002476:	487c      	ldr	r0, [pc, #496]	@ (8002668 <HAL_ADC_Init+0x2fc>)
 8002478:	f7ff fef0 	bl	800225c <LL_ADC_IsEnabled>
 800247c:	4603      	mov	r3, r0
 800247e:	4323      	orrs	r3, r4
 8002480:	2b00      	cmp	r3, #0
 8002482:	d105      	bne.n	8002490 <HAL_ADC_Init+0x124>
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	685b      	ldr	r3, [r3, #4]
 8002488:	4619      	mov	r1, r3
 800248a:	4878      	ldr	r0, [pc, #480]	@ (800266c <HAL_ADC_Init+0x300>)
 800248c:	f7ff fcf4 	bl	8001e78 <LL_ADC_SetCommonClock>
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	7f5b      	ldrb	r3, [r3, #29]
 8002494:	035a      	lsls	r2, r3, #13
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800249a:	431a      	orrs	r2, r3
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	68db      	ldr	r3, [r3, #12]
 80024a0:	431a      	orrs	r2, r3
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	689b      	ldr	r3, [r3, #8]
 80024a6:	431a      	orrs	r2, r3
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80024ae:	041b      	lsls	r3, r3, #16
 80024b0:	4313      	orrs	r3, r2
 80024b2:	61bb      	str	r3, [r7, #24]
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80024ba:	2b01      	cmp	r3, #1
 80024bc:	d106      	bne.n	80024cc <HAL_ADC_Init+0x160>
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80024c2:	3b01      	subs	r3, #1
 80024c4:	045b      	lsls	r3, r3, #17
 80024c6:	69ba      	ldr	r2, [r7, #24]
 80024c8:	4313      	orrs	r3, r2
 80024ca:	61bb      	str	r3, [r7, #24]
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	d009      	beq.n	80024e8 <HAL_ADC_Init+0x17c>
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80024d8:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024e0:	4313      	orrs	r3, r2
 80024e2:	69ba      	ldr	r2, [r7, #24]
 80024e4:	4313      	orrs	r3, r2
 80024e6:	61bb      	str	r3, [r7, #24]
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	68da      	ldr	r2, [r3, #12]
 80024ee:	4b60      	ldr	r3, [pc, #384]	@ (8002670 <HAL_ADC_Init+0x304>)
 80024f0:	4013      	ands	r3, r2
 80024f2:	687a      	ldr	r2, [r7, #4]
 80024f4:	6812      	ldr	r2, [r2, #0]
 80024f6:	69b9      	ldr	r1, [r7, #24]
 80024f8:	430b      	orrs	r3, r1
 80024fa:	60d3      	str	r3, [r2, #12]
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	681b      	ldr	r3, [r3, #0]
 8002500:	691b      	ldr	r3, [r3, #16]
 8002502:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	430a      	orrs	r2, r1
 8002510:	611a      	str	r2, [r3, #16]
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	4618      	mov	r0, r3
 8002518:	f7ff ff15 	bl	8002346 <LL_ADC_INJ_IsConversionOngoing>
 800251c:	6138      	str	r0, [r7, #16]
 800251e:	697b      	ldr	r3, [r7, #20]
 8002520:	2b00      	cmp	r3, #0
 8002522:	d16d      	bne.n	8002600 <HAL_ADC_Init+0x294>
 8002524:	693b      	ldr	r3, [r7, #16]
 8002526:	2b00      	cmp	r3, #0
 8002528:	d16a      	bne.n	8002600 <HAL_ADC_Init+0x294>
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	7f1b      	ldrb	r3, [r3, #28]
 800252e:	039a      	lsls	r2, r3, #14
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8002536:	005b      	lsls	r3, r3, #1
 8002538:	4313      	orrs	r3, r2
 800253a:	61bb      	str	r3, [r7, #24]
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	681b      	ldr	r3, [r3, #0]
 8002540:	68db      	ldr	r3, [r3, #12]
 8002542:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8002546:	f023 0302 	bic.w	r3, r3, #2
 800254a:	687a      	ldr	r2, [r7, #4]
 800254c:	6812      	ldr	r2, [r2, #0]
 800254e:	69b9      	ldr	r1, [r7, #24]
 8002550:	430b      	orrs	r3, r1
 8002552:	60d3      	str	r3, [r2, #12]
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	691b      	ldr	r3, [r3, #16]
 8002558:	2b00      	cmp	r3, #0
 800255a:	d017      	beq.n	800258c <HAL_ADC_Init+0x220>
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	691a      	ldr	r2, [r3, #16]
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	681b      	ldr	r3, [r3, #0]
 8002566:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800256a:	611a      	str	r2, [r3, #16]
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8002574:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8002578:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 800257c:	687a      	ldr	r2, [r7, #4]
 800257e:	6911      	ldr	r1, [r2, #16]
 8002580:	687a      	ldr	r2, [r7, #4]
 8002582:	6812      	ldr	r2, [r2, #0]
 8002584:	430b      	orrs	r3, r1
 8002586:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 800258a:	e013      	b.n	80025b4 <HAL_ADC_Init+0x248>
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	691a      	ldr	r2, [r3, #16]
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	681b      	ldr	r3, [r3, #0]
 8002596:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800259a:	611a      	str	r2, [r3, #16]
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	681b      	ldr	r3, [r3, #0]
 80025a0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80025a4:	687a      	ldr	r2, [r7, #4]
 80025a6:	6812      	ldr	r2, [r2, #0]
 80025a8:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 80025ac:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80025b0:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80025ba:	2b01      	cmp	r3, #1
 80025bc:	d118      	bne.n	80025f0 <HAL_ADC_Init+0x284>
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	681b      	ldr	r3, [r3, #0]
 80025c2:	691b      	ldr	r3, [r3, #16]
 80025c4:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80025c8:	f023 0304 	bic.w	r3, r3, #4
 80025cc:	687a      	ldr	r2, [r7, #4]
 80025ce:	6c51      	ldr	r1, [r2, #68]	@ 0x44
 80025d0:	687a      	ldr	r2, [r7, #4]
 80025d2:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 80025d4:	4311      	orrs	r1, r2
 80025d6:	687a      	ldr	r2, [r7, #4]
 80025d8:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 80025da:	4311      	orrs	r1, r2
 80025dc:	687a      	ldr	r2, [r7, #4]
 80025de:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 80025e0:	430a      	orrs	r2, r1
 80025e2:	431a      	orrs	r2, r3
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	f042 0201 	orr.w	r2, r2, #1
 80025ec:	611a      	str	r2, [r3, #16]
 80025ee:	e007      	b.n	8002600 <HAL_ADC_Init+0x294>
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	691a      	ldr	r2, [r3, #16]
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	f022 0201 	bic.w	r2, r2, #1
 80025fe:	611a      	str	r2, [r3, #16]
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	695b      	ldr	r3, [r3, #20]
 8002604:	2b01      	cmp	r3, #1
 8002606:	d10c      	bne.n	8002622 <HAL_ADC_Init+0x2b6>
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	681b      	ldr	r3, [r3, #0]
 800260c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800260e:	f023 010f 	bic.w	r1, r3, #15
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	6a1b      	ldr	r3, [r3, #32]
 8002616:	1e5a      	subs	r2, r3, #1
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	430a      	orrs	r2, r1
 800261e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002620:	e007      	b.n	8002632 <HAL_ADC_Init+0x2c6>
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	681b      	ldr	r3, [r3, #0]
 800262c:	f022 020f 	bic.w	r2, r2, #15
 8002630:	631a      	str	r2, [r3, #48]	@ 0x30
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002636:	f023 0303 	bic.w	r3, r3, #3
 800263a:	f043 0201 	orr.w	r2, r3, #1
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002642:	e007      	b.n	8002654 <HAL_ADC_Init+0x2e8>
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002648:	f043 0210 	orr.w	r2, r3, #16
 800264c:	687b      	ldr	r3, [r7, #4]
 800264e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002650:	2301      	movs	r3, #1
 8002652:	77fb      	strb	r3, [r7, #31]
 8002654:	7ffb      	ldrb	r3, [r7, #31]
 8002656:	4618      	mov	r0, r3
 8002658:	3724      	adds	r7, #36	@ 0x24
 800265a:	46bd      	mov	sp, r7
 800265c:	bd90      	pop	{r4, r7, pc}
 800265e:	bf00      	nop
 8002660:	20000000 	.word	0x20000000
 8002664:	053e2d63 	.word	0x053e2d63
 8002668:	50000100 	.word	0x50000100
 800266c:	50000300 	.word	0x50000300
 8002670:	fff04007 	.word	0xfff04007

08002674 <HAL_ADC_Start>:
 8002674:	b580      	push	{r7, lr}
 8002676:	b086      	sub	sp, #24
 8002678:	af00      	add	r7, sp, #0
 800267a:	6078      	str	r0, [r7, #4]
 800267c:	4859      	ldr	r0, [pc, #356]	@ (80027e4 <HAL_ADC_Start+0x170>)
 800267e:	f7ff fd5b 	bl	8002138 <LL_ADC_GetMultimode>
 8002682:	6138      	str	r0, [r7, #16]
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	4618      	mov	r0, r3
 800268a:	f7ff fe35 	bl	80022f8 <LL_ADC_REG_IsConversionOngoing>
 800268e:	4603      	mov	r3, r0
 8002690:	2b00      	cmp	r3, #0
 8002692:	f040 809f 	bne.w	80027d4 <HAL_ADC_Start+0x160>
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 800269c:	2b01      	cmp	r3, #1
 800269e:	d101      	bne.n	80026a4 <HAL_ADC_Start+0x30>
 80026a0:	2302      	movs	r3, #2
 80026a2:	e09a      	b.n	80027da <HAL_ADC_Start+0x166>
 80026a4:	687b      	ldr	r3, [r7, #4]
 80026a6:	2201      	movs	r2, #1
 80026a8:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80026ac:	6878      	ldr	r0, [r7, #4]
 80026ae:	f000 fe63 	bl	8003378 <ADC_Enable>
 80026b2:	4603      	mov	r3, r0
 80026b4:	75fb      	strb	r3, [r7, #23]
 80026b6:	7dfb      	ldrb	r3, [r7, #23]
 80026b8:	2b00      	cmp	r3, #0
 80026ba:	f040 8086 	bne.w	80027ca <HAL_ADC_Start+0x156>
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80026c2:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80026c6:	f023 0301 	bic.w	r3, r3, #1
 80026ca:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	681b      	ldr	r3, [r3, #0]
 80026d6:	4a44      	ldr	r2, [pc, #272]	@ (80027e8 <HAL_ADC_Start+0x174>)
 80026d8:	4293      	cmp	r3, r2
 80026da:	d002      	beq.n	80026e2 <HAL_ADC_Start+0x6e>
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	e001      	b.n	80026e6 <HAL_ADC_Start+0x72>
 80026e2:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80026e6:	687a      	ldr	r2, [r7, #4]
 80026e8:	6812      	ldr	r2, [r2, #0]
 80026ea:	4293      	cmp	r3, r2
 80026ec:	d002      	beq.n	80026f4 <HAL_ADC_Start+0x80>
 80026ee:	693b      	ldr	r3, [r7, #16]
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	d105      	bne.n	8002700 <HAL_ADC_Start+0x8c>
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80026f8:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002704:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002708:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800270c:	d106      	bne.n	800271c <HAL_ADC_Start+0xa8>
 800270e:	687b      	ldr	r3, [r7, #4]
 8002710:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002712:	f023 0206 	bic.w	r2, r3, #6
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	661a      	str	r2, [r3, #96]	@ 0x60
 800271a:	e002      	b.n	8002722 <HAL_ADC_Start+0xae>
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	2200      	movs	r2, #0
 8002720:	661a      	str	r2, [r3, #96]	@ 0x60
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	221c      	movs	r2, #28
 8002728:	601a      	str	r2, [r3, #0]
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	2200      	movs	r2, #0
 800272e:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	681b      	ldr	r3, [r3, #0]
 8002736:	4a2c      	ldr	r2, [pc, #176]	@ (80027e8 <HAL_ADC_Start+0x174>)
 8002738:	4293      	cmp	r3, r2
 800273a:	d002      	beq.n	8002742 <HAL_ADC_Start+0xce>
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	681b      	ldr	r3, [r3, #0]
 8002740:	e001      	b.n	8002746 <HAL_ADC_Start+0xd2>
 8002742:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002746:	687a      	ldr	r2, [r7, #4]
 8002748:	6812      	ldr	r2, [r2, #0]
 800274a:	4293      	cmp	r3, r2
 800274c:	d008      	beq.n	8002760 <HAL_ADC_Start+0xec>
 800274e:	693b      	ldr	r3, [r7, #16]
 8002750:	2b00      	cmp	r3, #0
 8002752:	d005      	beq.n	8002760 <HAL_ADC_Start+0xec>
 8002754:	693b      	ldr	r3, [r7, #16]
 8002756:	2b05      	cmp	r3, #5
 8002758:	d002      	beq.n	8002760 <HAL_ADC_Start+0xec>
 800275a:	693b      	ldr	r3, [r7, #16]
 800275c:	2b09      	cmp	r3, #9
 800275e:	d114      	bne.n	800278a <HAL_ADC_Start+0x116>
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	681b      	ldr	r3, [r3, #0]
 8002764:	68db      	ldr	r3, [r3, #12]
 8002766:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800276a:	2b00      	cmp	r3, #0
 800276c:	d007      	beq.n	800277e <HAL_ADC_Start+0x10a>
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002772:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002776:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800277a:	687b      	ldr	r3, [r7, #4]
 800277c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	4618      	mov	r0, r3
 8002784:	f7ff fd90 	bl	80022a8 <LL_ADC_REG_StartConversion>
 8002788:	e026      	b.n	80027d8 <HAL_ADC_Start+0x164>
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800278e:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	4a13      	ldr	r2, [pc, #76]	@ (80027e8 <HAL_ADC_Start+0x174>)
 800279c:	4293      	cmp	r3, r2
 800279e:	d002      	beq.n	80027a6 <HAL_ADC_Start+0x132>
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	e001      	b.n	80027aa <HAL_ADC_Start+0x136>
 80027a6:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80027aa:	60fb      	str	r3, [r7, #12]
 80027ac:	68fb      	ldr	r3, [r7, #12]
 80027ae:	68db      	ldr	r3, [r3, #12]
 80027b0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80027b4:	2b00      	cmp	r3, #0
 80027b6:	d00f      	beq.n	80027d8 <HAL_ADC_Start+0x164>
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80027bc:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80027c0:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	65da      	str	r2, [r3, #92]	@ 0x5c
 80027c8:	e006      	b.n	80027d8 <HAL_ADC_Start+0x164>
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	2200      	movs	r2, #0
 80027ce:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80027d2:	e001      	b.n	80027d8 <HAL_ADC_Start+0x164>
 80027d4:	2302      	movs	r3, #2
 80027d6:	75fb      	strb	r3, [r7, #23]
 80027d8:	7dfb      	ldrb	r3, [r7, #23]
 80027da:	4618      	mov	r0, r3
 80027dc:	3718      	adds	r7, #24
 80027de:	46bd      	mov	sp, r7
 80027e0:	bd80      	pop	{r7, pc}
 80027e2:	bf00      	nop
 80027e4:	50000300 	.word	0x50000300
 80027e8:	50000100 	.word	0x50000100

080027ec <HAL_ADC_Stop>:
 80027ec:	b580      	push	{r7, lr}
 80027ee:	b084      	sub	sp, #16
 80027f0:	af00      	add	r7, sp, #0
 80027f2:	6078      	str	r0, [r7, #4]
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80027fa:	2b01      	cmp	r3, #1
 80027fc:	d101      	bne.n	8002802 <HAL_ADC_Stop+0x16>
 80027fe:	2302      	movs	r3, #2
 8002800:	e023      	b.n	800284a <HAL_ADC_Stop+0x5e>
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	2201      	movs	r2, #1
 8002806:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800280a:	2103      	movs	r1, #3
 800280c:	6878      	ldr	r0, [r7, #4]
 800280e:	f000 fcf7 	bl	8003200 <ADC_ConversionStop>
 8002812:	4603      	mov	r3, r0
 8002814:	73fb      	strb	r3, [r7, #15]
 8002816:	7bfb      	ldrb	r3, [r7, #15]
 8002818:	2b00      	cmp	r3, #0
 800281a:	d111      	bne.n	8002840 <HAL_ADC_Stop+0x54>
 800281c:	6878      	ldr	r0, [r7, #4]
 800281e:	f000 fe31 	bl	8003484 <ADC_Disable>
 8002822:	4603      	mov	r3, r0
 8002824:	73fb      	strb	r3, [r7, #15]
 8002826:	7bfb      	ldrb	r3, [r7, #15]
 8002828:	2b00      	cmp	r3, #0
 800282a:	d109      	bne.n	8002840 <HAL_ADC_Stop+0x54>
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002830:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002834:	f023 0301 	bic.w	r3, r3, #1
 8002838:	f043 0201 	orr.w	r2, r3, #1
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	2200      	movs	r2, #0
 8002844:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002848:	7bfb      	ldrb	r3, [r7, #15]
 800284a:	4618      	mov	r0, r3
 800284c:	3710      	adds	r7, #16
 800284e:	46bd      	mov	sp, r7
 8002850:	bd80      	pop	{r7, pc}
	...

08002854 <HAL_ADC_PollForConversion>:
 8002854:	b580      	push	{r7, lr}
 8002856:	b088      	sub	sp, #32
 8002858:	af00      	add	r7, sp, #0
 800285a:	6078      	str	r0, [r7, #4]
 800285c:	6039      	str	r1, [r7, #0]
 800285e:	4867      	ldr	r0, [pc, #412]	@ (80029fc <HAL_ADC_PollForConversion+0x1a8>)
 8002860:	f7ff fc6a 	bl	8002138 <LL_ADC_GetMultimode>
 8002864:	6178      	str	r0, [r7, #20]
 8002866:	687b      	ldr	r3, [r7, #4]
 8002868:	699b      	ldr	r3, [r3, #24]
 800286a:	2b08      	cmp	r3, #8
 800286c:	d102      	bne.n	8002874 <HAL_ADC_PollForConversion+0x20>
 800286e:	2308      	movs	r3, #8
 8002870:	61fb      	str	r3, [r7, #28]
 8002872:	e02a      	b.n	80028ca <HAL_ADC_PollForConversion+0x76>
 8002874:	697b      	ldr	r3, [r7, #20]
 8002876:	2b00      	cmp	r3, #0
 8002878:	d005      	beq.n	8002886 <HAL_ADC_PollForConversion+0x32>
 800287a:	697b      	ldr	r3, [r7, #20]
 800287c:	2b05      	cmp	r3, #5
 800287e:	d002      	beq.n	8002886 <HAL_ADC_PollForConversion+0x32>
 8002880:	697b      	ldr	r3, [r7, #20]
 8002882:	2b09      	cmp	r3, #9
 8002884:	d111      	bne.n	80028aa <HAL_ADC_PollForConversion+0x56>
 8002886:	687b      	ldr	r3, [r7, #4]
 8002888:	681b      	ldr	r3, [r3, #0]
 800288a:	68db      	ldr	r3, [r3, #12]
 800288c:	f003 0301 	and.w	r3, r3, #1
 8002890:	2b00      	cmp	r3, #0
 8002892:	d007      	beq.n	80028a4 <HAL_ADC_PollForConversion+0x50>
 8002894:	687b      	ldr	r3, [r7, #4]
 8002896:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002898:	f043 0220 	orr.w	r2, r3, #32
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	65da      	str	r2, [r3, #92]	@ 0x5c
 80028a0:	2301      	movs	r3, #1
 80028a2:	e0a6      	b.n	80029f2 <HAL_ADC_PollForConversion+0x19e>
 80028a4:	2304      	movs	r3, #4
 80028a6:	61fb      	str	r3, [r7, #28]
 80028a8:	e00f      	b.n	80028ca <HAL_ADC_PollForConversion+0x76>
 80028aa:	4854      	ldr	r0, [pc, #336]	@ (80029fc <HAL_ADC_PollForConversion+0x1a8>)
 80028ac:	f7ff fc52 	bl	8002154 <LL_ADC_GetMultiDMATransfer>
 80028b0:	4603      	mov	r3, r0
 80028b2:	2b00      	cmp	r3, #0
 80028b4:	d007      	beq.n	80028c6 <HAL_ADC_PollForConversion+0x72>
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80028ba:	f043 0220 	orr.w	r2, r3, #32
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80028c2:	2301      	movs	r3, #1
 80028c4:	e095      	b.n	80029f2 <HAL_ADC_PollForConversion+0x19e>
 80028c6:	2304      	movs	r3, #4
 80028c8:	61fb      	str	r3, [r7, #28]
 80028ca:	f7ff faa7 	bl	8001e1c <HAL_GetTick>
 80028ce:	6138      	str	r0, [r7, #16]
 80028d0:	e021      	b.n	8002916 <HAL_ADC_PollForConversion+0xc2>
 80028d2:	683b      	ldr	r3, [r7, #0]
 80028d4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80028d8:	d01d      	beq.n	8002916 <HAL_ADC_PollForConversion+0xc2>
 80028da:	f7ff fa9f 	bl	8001e1c <HAL_GetTick>
 80028de:	4602      	mov	r2, r0
 80028e0:	693b      	ldr	r3, [r7, #16]
 80028e2:	1ad3      	subs	r3, r2, r3
 80028e4:	683a      	ldr	r2, [r7, #0]
 80028e6:	429a      	cmp	r2, r3
 80028e8:	d302      	bcc.n	80028f0 <HAL_ADC_PollForConversion+0x9c>
 80028ea:	683b      	ldr	r3, [r7, #0]
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	d112      	bne.n	8002916 <HAL_ADC_PollForConversion+0xc2>
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	681a      	ldr	r2, [r3, #0]
 80028f6:	69fb      	ldr	r3, [r7, #28]
 80028f8:	4013      	ands	r3, r2
 80028fa:	2b00      	cmp	r3, #0
 80028fc:	d10b      	bne.n	8002916 <HAL_ADC_PollForConversion+0xc2>
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002902:	f043 0204 	orr.w	r2, r3, #4
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	65da      	str	r2, [r3, #92]	@ 0x5c
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	2200      	movs	r2, #0
 800290e:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002912:	2303      	movs	r3, #3
 8002914:	e06d      	b.n	80029f2 <HAL_ADC_PollForConversion+0x19e>
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	681b      	ldr	r3, [r3, #0]
 800291a:	681a      	ldr	r2, [r3, #0]
 800291c:	69fb      	ldr	r3, [r7, #28]
 800291e:	4013      	ands	r3, r2
 8002920:	2b00      	cmp	r3, #0
 8002922:	d0d6      	beq.n	80028d2 <HAL_ADC_PollForConversion+0x7e>
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002928:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	681b      	ldr	r3, [r3, #0]
 8002934:	4618      	mov	r0, r3
 8002936:	f7ff fb71 	bl	800201c <LL_ADC_REG_IsTriggerSourceSWStart>
 800293a:	4603      	mov	r3, r0
 800293c:	2b00      	cmp	r3, #0
 800293e:	d01c      	beq.n	800297a <HAL_ADC_PollForConversion+0x126>
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	7f5b      	ldrb	r3, [r3, #29]
 8002944:	2b00      	cmp	r3, #0
 8002946:	d118      	bne.n	800297a <HAL_ADC_PollForConversion+0x126>
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	681b      	ldr	r3, [r3, #0]
 800294e:	f003 0308 	and.w	r3, r3, #8
 8002952:	2b08      	cmp	r3, #8
 8002954:	d111      	bne.n	800297a <HAL_ADC_PollForConversion+0x126>
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800295a:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002966:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800296a:	2b00      	cmp	r3, #0
 800296c:	d105      	bne.n	800297a <HAL_ADC_PollForConversion+0x126>
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002972:	f043 0201 	orr.w	r2, r3, #1
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	65da      	str	r2, [r3, #92]	@ 0x5c
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	4a20      	ldr	r2, [pc, #128]	@ (8002a00 <HAL_ADC_PollForConversion+0x1ac>)
 8002980:	4293      	cmp	r3, r2
 8002982:	d002      	beq.n	800298a <HAL_ADC_PollForConversion+0x136>
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	e001      	b.n	800298e <HAL_ADC_PollForConversion+0x13a>
 800298a:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 800298e:	687a      	ldr	r2, [r7, #4]
 8002990:	6812      	ldr	r2, [r2, #0]
 8002992:	4293      	cmp	r3, r2
 8002994:	d008      	beq.n	80029a8 <HAL_ADC_PollForConversion+0x154>
 8002996:	697b      	ldr	r3, [r7, #20]
 8002998:	2b00      	cmp	r3, #0
 800299a:	d005      	beq.n	80029a8 <HAL_ADC_PollForConversion+0x154>
 800299c:	697b      	ldr	r3, [r7, #20]
 800299e:	2b05      	cmp	r3, #5
 80029a0:	d002      	beq.n	80029a8 <HAL_ADC_PollForConversion+0x154>
 80029a2:	697b      	ldr	r3, [r7, #20]
 80029a4:	2b09      	cmp	r3, #9
 80029a6:	d104      	bne.n	80029b2 <HAL_ADC_PollForConversion+0x15e>
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	68db      	ldr	r3, [r3, #12]
 80029ae:	61bb      	str	r3, [r7, #24]
 80029b0:	e00d      	b.n	80029ce <HAL_ADC_PollForConversion+0x17a>
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	681b      	ldr	r3, [r3, #0]
 80029b6:	4a12      	ldr	r2, [pc, #72]	@ (8002a00 <HAL_ADC_PollForConversion+0x1ac>)
 80029b8:	4293      	cmp	r3, r2
 80029ba:	d002      	beq.n	80029c2 <HAL_ADC_PollForConversion+0x16e>
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	681b      	ldr	r3, [r3, #0]
 80029c0:	e001      	b.n	80029c6 <HAL_ADC_PollForConversion+0x172>
 80029c2:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80029c6:	60fb      	str	r3, [r7, #12]
 80029c8:	68fb      	ldr	r3, [r7, #12]
 80029ca:	68db      	ldr	r3, [r3, #12]
 80029cc:	61bb      	str	r3, [r7, #24]
 80029ce:	69fb      	ldr	r3, [r7, #28]
 80029d0:	2b08      	cmp	r3, #8
 80029d2:	d104      	bne.n	80029de <HAL_ADC_PollForConversion+0x18a>
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	2208      	movs	r2, #8
 80029da:	601a      	str	r2, [r3, #0]
 80029dc:	e008      	b.n	80029f0 <HAL_ADC_PollForConversion+0x19c>
 80029de:	69bb      	ldr	r3, [r7, #24]
 80029e0:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	d103      	bne.n	80029f0 <HAL_ADC_PollForConversion+0x19c>
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	681b      	ldr	r3, [r3, #0]
 80029ec:	220c      	movs	r2, #12
 80029ee:	601a      	str	r2, [r3, #0]
 80029f0:	2300      	movs	r3, #0
 80029f2:	4618      	mov	r0, r3
 80029f4:	3720      	adds	r7, #32
 80029f6:	46bd      	mov	sp, r7
 80029f8:	bd80      	pop	{r7, pc}
 80029fa:	bf00      	nop
 80029fc:	50000300 	.word	0x50000300
 8002a00:	50000100 	.word	0x50000100

08002a04 <HAL_ADC_GetValue>:
 8002a04:	b480      	push	{r7}
 8002a06:	b083      	sub	sp, #12
 8002a08:	af00      	add	r7, sp, #0
 8002a0a:	6078      	str	r0, [r7, #4]
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	681b      	ldr	r3, [r3, #0]
 8002a10:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a12:	4618      	mov	r0, r3
 8002a14:	370c      	adds	r7, #12
 8002a16:	46bd      	mov	sp, r7
 8002a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a1c:	4770      	bx	lr
	...

08002a20 <HAL_ADC_ConfigChannel>:
 8002a20:	b580      	push	{r7, lr}
 8002a22:	b0b6      	sub	sp, #216	@ 0xd8
 8002a24:	af00      	add	r7, sp, #0
 8002a26:	6078      	str	r0, [r7, #4]
 8002a28:	6039      	str	r1, [r7, #0]
 8002a2a:	2300      	movs	r3, #0
 8002a2c:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8002a30:	2300      	movs	r3, #0
 8002a32:	60fb      	str	r3, [r7, #12]
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002a3a:	2b01      	cmp	r3, #1
 8002a3c:	d101      	bne.n	8002a42 <HAL_ADC_ConfigChannel+0x22>
 8002a3e:	2302      	movs	r3, #2
 8002a40:	e3c8      	b.n	80031d4 <HAL_ADC_ConfigChannel+0x7b4>
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	2201      	movs	r2, #1
 8002a46:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	681b      	ldr	r3, [r3, #0]
 8002a4e:	4618      	mov	r0, r3
 8002a50:	f7ff fc52 	bl	80022f8 <LL_ADC_REG_IsConversionOngoing>
 8002a54:	4603      	mov	r3, r0
 8002a56:	2b00      	cmp	r3, #0
 8002a58:	f040 83ad 	bne.w	80031b6 <HAL_ADC_ConfigChannel+0x796>
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	6818      	ldr	r0, [r3, #0]
 8002a60:	683b      	ldr	r3, [r7, #0]
 8002a62:	6859      	ldr	r1, [r3, #4]
 8002a64:	683b      	ldr	r3, [r7, #0]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	461a      	mov	r2, r3
 8002a6a:	f7ff faea 	bl	8002042 <LL_ADC_REG_SetSequencerRanks>
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	4618      	mov	r0, r3
 8002a74:	f7ff fc40 	bl	80022f8 <LL_ADC_REG_IsConversionOngoing>
 8002a78:	f8c7 00d0 	str.w	r0, [r7, #208]	@ 0xd0
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	681b      	ldr	r3, [r3, #0]
 8002a80:	4618      	mov	r0, r3
 8002a82:	f7ff fc60 	bl	8002346 <LL_ADC_INJ_IsConversionOngoing>
 8002a86:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8002a8a:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8002a8e:	2b00      	cmp	r3, #0
 8002a90:	f040 81d9 	bne.w	8002e46 <HAL_ADC_ConfigChannel+0x426>
 8002a94:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8002a98:	2b00      	cmp	r3, #0
 8002a9a:	f040 81d4 	bne.w	8002e46 <HAL_ADC_ConfigChannel+0x426>
 8002a9e:	683b      	ldr	r3, [r7, #0]
 8002aa0:	689b      	ldr	r3, [r3, #8]
 8002aa2:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8002aa6:	d10f      	bne.n	8002ac8 <HAL_ADC_ConfigChannel+0xa8>
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	6818      	ldr	r0, [r3, #0]
 8002aac:	683b      	ldr	r3, [r7, #0]
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	2200      	movs	r2, #0
 8002ab2:	4619      	mov	r1, r3
 8002ab4:	f7ff faf1 	bl	800209a <LL_ADC_SetChannelSamplingTime>
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8002ac0:	4618      	mov	r0, r3
 8002ac2:	f7ff fa98 	bl	8001ff6 <LL_ADC_SetSamplingTimeCommonConfig>
 8002ac6:	e00e      	b.n	8002ae6 <HAL_ADC_ConfigChannel+0xc6>
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	6818      	ldr	r0, [r3, #0]
 8002acc:	683b      	ldr	r3, [r7, #0]
 8002ace:	6819      	ldr	r1, [r3, #0]
 8002ad0:	683b      	ldr	r3, [r7, #0]
 8002ad2:	689b      	ldr	r3, [r3, #8]
 8002ad4:	461a      	mov	r2, r3
 8002ad6:	f7ff fae0 	bl	800209a <LL_ADC_SetChannelSamplingTime>
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	681b      	ldr	r3, [r3, #0]
 8002ade:	2100      	movs	r1, #0
 8002ae0:	4618      	mov	r0, r3
 8002ae2:	f7ff fa88 	bl	8001ff6 <LL_ADC_SetSamplingTimeCommonConfig>
 8002ae6:	683b      	ldr	r3, [r7, #0]
 8002ae8:	695a      	ldr	r2, [r3, #20]
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	68db      	ldr	r3, [r3, #12]
 8002af0:	08db      	lsrs	r3, r3, #3
 8002af2:	f003 0303 	and.w	r3, r3, #3
 8002af6:	005b      	lsls	r3, r3, #1
 8002af8:	fa02 f303 	lsl.w	r3, r2, r3
 8002afc:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8002b00:	683b      	ldr	r3, [r7, #0]
 8002b02:	691b      	ldr	r3, [r3, #16]
 8002b04:	2b04      	cmp	r3, #4
 8002b06:	d022      	beq.n	8002b4e <HAL_ADC_ConfigChannel+0x12e>
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	6818      	ldr	r0, [r3, #0]
 8002b0c:	683b      	ldr	r3, [r7, #0]
 8002b0e:	6919      	ldr	r1, [r3, #16]
 8002b10:	683b      	ldr	r3, [r7, #0]
 8002b12:	681a      	ldr	r2, [r3, #0]
 8002b14:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8002b18:	f7ff f9e2 	bl	8001ee0 <LL_ADC_SetOffset>
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	6818      	ldr	r0, [r3, #0]
 8002b20:	683b      	ldr	r3, [r7, #0]
 8002b22:	6919      	ldr	r1, [r3, #16]
 8002b24:	683b      	ldr	r3, [r7, #0]
 8002b26:	699b      	ldr	r3, [r3, #24]
 8002b28:	461a      	mov	r2, r3
 8002b2a:	f7ff fa2e 	bl	8001f8a <LL_ADC_SetOffsetSign>
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	6818      	ldr	r0, [r3, #0]
 8002b32:	683b      	ldr	r3, [r7, #0]
 8002b34:	6919      	ldr	r1, [r3, #16]
 8002b36:	683b      	ldr	r3, [r7, #0]
 8002b38:	7f1b      	ldrb	r3, [r3, #28]
 8002b3a:	2b01      	cmp	r3, #1
 8002b3c:	d102      	bne.n	8002b44 <HAL_ADC_ConfigChannel+0x124>
 8002b3e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8002b42:	e000      	b.n	8002b46 <HAL_ADC_ConfigChannel+0x126>
 8002b44:	2300      	movs	r3, #0
 8002b46:	461a      	mov	r2, r3
 8002b48:	f7ff fa3a 	bl	8001fc0 <LL_ADC_SetOffsetSaturation>
 8002b4c:	e17b      	b.n	8002e46 <HAL_ADC_ConfigChannel+0x426>
 8002b4e:	687b      	ldr	r3, [r7, #4]
 8002b50:	681b      	ldr	r3, [r3, #0]
 8002b52:	2100      	movs	r1, #0
 8002b54:	4618      	mov	r0, r3
 8002b56:	f7ff f9e7 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002b5a:	4603      	mov	r3, r0
 8002b5c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	d10a      	bne.n	8002b7a <HAL_ADC_ConfigChannel+0x15a>
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	2100      	movs	r1, #0
 8002b6a:	4618      	mov	r0, r3
 8002b6c:	f7ff f9dc 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002b70:	4603      	mov	r3, r0
 8002b72:	0e9b      	lsrs	r3, r3, #26
 8002b74:	f003 021f 	and.w	r2, r3, #31
 8002b78:	e01e      	b.n	8002bb8 <HAL_ADC_ConfigChannel+0x198>
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	681b      	ldr	r3, [r3, #0]
 8002b7e:	2100      	movs	r1, #0
 8002b80:	4618      	mov	r0, r3
 8002b82:	f7ff f9d1 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002b86:	4603      	mov	r3, r0
 8002b88:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8002b8c:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8002b90:	fa93 f3a3 	rbit	r3, r3
 8002b94:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8002b98:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8002b9c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8002ba0:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	d101      	bne.n	8002bac <HAL_ADC_ConfigChannel+0x18c>
 8002ba8:	2320      	movs	r3, #32
 8002baa:	e004      	b.n	8002bb6 <HAL_ADC_ConfigChannel+0x196>
 8002bac:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8002bb0:	fab3 f383 	clz	r3, r3
 8002bb4:	b2db      	uxtb	r3, r3
 8002bb6:	461a      	mov	r2, r3
 8002bb8:	683b      	ldr	r3, [r7, #0]
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002bc0:	2b00      	cmp	r3, #0
 8002bc2:	d105      	bne.n	8002bd0 <HAL_ADC_ConfigChannel+0x1b0>
 8002bc4:	683b      	ldr	r3, [r7, #0]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	0e9b      	lsrs	r3, r3, #26
 8002bca:	f003 031f 	and.w	r3, r3, #31
 8002bce:	e018      	b.n	8002c02 <HAL_ADC_ConfigChannel+0x1e2>
 8002bd0:	683b      	ldr	r3, [r7, #0]
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002bd8:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8002bdc:	fa93 f3a3 	rbit	r3, r3
 8002be0:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002be4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002be8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002bec:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8002bf0:	2b00      	cmp	r3, #0
 8002bf2:	d101      	bne.n	8002bf8 <HAL_ADC_ConfigChannel+0x1d8>
 8002bf4:	2320      	movs	r3, #32
 8002bf6:	e004      	b.n	8002c02 <HAL_ADC_ConfigChannel+0x1e2>
 8002bf8:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8002bfc:	fab3 f383 	clz	r3, r3
 8002c00:	b2db      	uxtb	r3, r3
 8002c02:	429a      	cmp	r2, r3
 8002c04:	d106      	bne.n	8002c14 <HAL_ADC_ConfigChannel+0x1f4>
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	2200      	movs	r2, #0
 8002c0c:	2100      	movs	r1, #0
 8002c0e:	4618      	mov	r0, r3
 8002c10:	f7ff f9a0 	bl	8001f54 <LL_ADC_SetOffsetState>
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	681b      	ldr	r3, [r3, #0]
 8002c18:	2101      	movs	r1, #1
 8002c1a:	4618      	mov	r0, r3
 8002c1c:	f7ff f984 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002c20:	4603      	mov	r3, r0
 8002c22:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002c26:	2b00      	cmp	r3, #0
 8002c28:	d10a      	bne.n	8002c40 <HAL_ADC_ConfigChannel+0x220>
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	2101      	movs	r1, #1
 8002c30:	4618      	mov	r0, r3
 8002c32:	f7ff f979 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002c36:	4603      	mov	r3, r0
 8002c38:	0e9b      	lsrs	r3, r3, #26
 8002c3a:	f003 021f 	and.w	r2, r3, #31
 8002c3e:	e01e      	b.n	8002c7e <HAL_ADC_ConfigChannel+0x25e>
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	2101      	movs	r1, #1
 8002c46:	4618      	mov	r0, r3
 8002c48:	f7ff f96e 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002c4c:	4603      	mov	r3, r0
 8002c4e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8002c52:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8002c56:	fa93 f3a3 	rbit	r3, r3
 8002c5a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8002c5e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8002c62:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8002c66:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8002c6a:	2b00      	cmp	r3, #0
 8002c6c:	d101      	bne.n	8002c72 <HAL_ADC_ConfigChannel+0x252>
 8002c6e:	2320      	movs	r3, #32
 8002c70:	e004      	b.n	8002c7c <HAL_ADC_ConfigChannel+0x25c>
 8002c72:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8002c76:	fab3 f383 	clz	r3, r3
 8002c7a:	b2db      	uxtb	r3, r3
 8002c7c:	461a      	mov	r2, r3
 8002c7e:	683b      	ldr	r3, [r7, #0]
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d105      	bne.n	8002c96 <HAL_ADC_ConfigChannel+0x276>
 8002c8a:	683b      	ldr	r3, [r7, #0]
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	0e9b      	lsrs	r3, r3, #26
 8002c90:	f003 031f 	and.w	r3, r3, #31
 8002c94:	e018      	b.n	8002cc8 <HAL_ADC_ConfigChannel+0x2a8>
 8002c96:	683b      	ldr	r3, [r7, #0]
 8002c98:	681b      	ldr	r3, [r3, #0]
 8002c9a:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8002c9e:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8002ca2:	fa93 f3a3 	rbit	r3, r3
 8002ca6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002caa:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8002cae:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8002cb2:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d101      	bne.n	8002cbe <HAL_ADC_ConfigChannel+0x29e>
 8002cba:	2320      	movs	r3, #32
 8002cbc:	e004      	b.n	8002cc8 <HAL_ADC_ConfigChannel+0x2a8>
 8002cbe:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8002cc2:	fab3 f383 	clz	r3, r3
 8002cc6:	b2db      	uxtb	r3, r3
 8002cc8:	429a      	cmp	r2, r3
 8002cca:	d106      	bne.n	8002cda <HAL_ADC_ConfigChannel+0x2ba>
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	2200      	movs	r2, #0
 8002cd2:	2101      	movs	r1, #1
 8002cd4:	4618      	mov	r0, r3
 8002cd6:	f7ff f93d 	bl	8001f54 <LL_ADC_SetOffsetState>
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	2102      	movs	r1, #2
 8002ce0:	4618      	mov	r0, r3
 8002ce2:	f7ff f921 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002ce6:	4603      	mov	r3, r0
 8002ce8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	d10a      	bne.n	8002d06 <HAL_ADC_ConfigChannel+0x2e6>
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	681b      	ldr	r3, [r3, #0]
 8002cf4:	2102      	movs	r1, #2
 8002cf6:	4618      	mov	r0, r3
 8002cf8:	f7ff f916 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002cfc:	4603      	mov	r3, r0
 8002cfe:	0e9b      	lsrs	r3, r3, #26
 8002d00:	f003 021f 	and.w	r2, r3, #31
 8002d04:	e01e      	b.n	8002d44 <HAL_ADC_ConfigChannel+0x324>
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	681b      	ldr	r3, [r3, #0]
 8002d0a:	2102      	movs	r1, #2
 8002d0c:	4618      	mov	r0, r3
 8002d0e:	f7ff f90b 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002d12:	4603      	mov	r3, r0
 8002d14:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002d18:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002d1c:	fa93 f3a3 	rbit	r3, r3
 8002d20:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8002d24:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002d28:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002d2c:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8002d30:	2b00      	cmp	r3, #0
 8002d32:	d101      	bne.n	8002d38 <HAL_ADC_ConfigChannel+0x318>
 8002d34:	2320      	movs	r3, #32
 8002d36:	e004      	b.n	8002d42 <HAL_ADC_ConfigChannel+0x322>
 8002d38:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8002d3c:	fab3 f383 	clz	r3, r3
 8002d40:	b2db      	uxtb	r3, r3
 8002d42:	461a      	mov	r2, r3
 8002d44:	683b      	ldr	r3, [r7, #0]
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002d4c:	2b00      	cmp	r3, #0
 8002d4e:	d105      	bne.n	8002d5c <HAL_ADC_ConfigChannel+0x33c>
 8002d50:	683b      	ldr	r3, [r7, #0]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	0e9b      	lsrs	r3, r3, #26
 8002d56:	f003 031f 	and.w	r3, r3, #31
 8002d5a:	e016      	b.n	8002d8a <HAL_ADC_ConfigChannel+0x36a>
 8002d5c:	683b      	ldr	r3, [r7, #0]
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8002d64:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8002d68:	fa93 f3a3 	rbit	r3, r3
 8002d6c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8002d6e:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8002d70:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8002d74:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002d78:	2b00      	cmp	r3, #0
 8002d7a:	d101      	bne.n	8002d80 <HAL_ADC_ConfigChannel+0x360>
 8002d7c:	2320      	movs	r3, #32
 8002d7e:	e004      	b.n	8002d8a <HAL_ADC_ConfigChannel+0x36a>
 8002d80:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002d84:	fab3 f383 	clz	r3, r3
 8002d88:	b2db      	uxtb	r3, r3
 8002d8a:	429a      	cmp	r2, r3
 8002d8c:	d106      	bne.n	8002d9c <HAL_ADC_ConfigChannel+0x37c>
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	2200      	movs	r2, #0
 8002d94:	2102      	movs	r1, #2
 8002d96:	4618      	mov	r0, r3
 8002d98:	f7ff f8dc 	bl	8001f54 <LL_ADC_SetOffsetState>
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	2103      	movs	r1, #3
 8002da2:	4618      	mov	r0, r3
 8002da4:	f7ff f8c0 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002da8:	4603      	mov	r3, r0
 8002daa:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	d10a      	bne.n	8002dc8 <HAL_ADC_ConfigChannel+0x3a8>
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	2103      	movs	r1, #3
 8002db8:	4618      	mov	r0, r3
 8002dba:	f7ff f8b5 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002dbe:	4603      	mov	r3, r0
 8002dc0:	0e9b      	lsrs	r3, r3, #26
 8002dc2:	f003 021f 	and.w	r2, r3, #31
 8002dc6:	e017      	b.n	8002df8 <HAL_ADC_ConfigChannel+0x3d8>
 8002dc8:	687b      	ldr	r3, [r7, #4]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	2103      	movs	r1, #3
 8002dce:	4618      	mov	r0, r3
 8002dd0:	f7ff f8aa 	bl	8001f28 <LL_ADC_GetOffsetChannel>
 8002dd4:	4603      	mov	r3, r0
 8002dd6:	677b      	str	r3, [r7, #116]	@ 0x74
 8002dd8:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8002dda:	fa93 f3a3 	rbit	r3, r3
 8002dde:	673b      	str	r3, [r7, #112]	@ 0x70
 8002de0:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8002de2:	67bb      	str	r3, [r7, #120]	@ 0x78
 8002de4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8002de6:	2b00      	cmp	r3, #0
 8002de8:	d101      	bne.n	8002dee <HAL_ADC_ConfigChannel+0x3ce>
 8002dea:	2320      	movs	r3, #32
 8002dec:	e003      	b.n	8002df6 <HAL_ADC_ConfigChannel+0x3d6>
 8002dee:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8002df0:	fab3 f383 	clz	r3, r3
 8002df4:	b2db      	uxtb	r3, r3
 8002df6:	461a      	mov	r2, r3
 8002df8:	683b      	ldr	r3, [r7, #0]
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002e00:	2b00      	cmp	r3, #0
 8002e02:	d105      	bne.n	8002e10 <HAL_ADC_ConfigChannel+0x3f0>
 8002e04:	683b      	ldr	r3, [r7, #0]
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	0e9b      	lsrs	r3, r3, #26
 8002e0a:	f003 031f 	and.w	r3, r3, #31
 8002e0e:	e011      	b.n	8002e34 <HAL_ADC_ConfigChannel+0x414>
 8002e10:	683b      	ldr	r3, [r7, #0]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	66bb      	str	r3, [r7, #104]	@ 0x68
 8002e16:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8002e18:	fa93 f3a3 	rbit	r3, r3
 8002e1c:	667b      	str	r3, [r7, #100]	@ 0x64
 8002e1e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8002e20:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8002e22:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	d101      	bne.n	8002e2c <HAL_ADC_ConfigChannel+0x40c>
 8002e28:	2320      	movs	r3, #32
 8002e2a:	e003      	b.n	8002e34 <HAL_ADC_ConfigChannel+0x414>
 8002e2c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8002e2e:	fab3 f383 	clz	r3, r3
 8002e32:	b2db      	uxtb	r3, r3
 8002e34:	429a      	cmp	r2, r3
 8002e36:	d106      	bne.n	8002e46 <HAL_ADC_ConfigChannel+0x426>
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	681b      	ldr	r3, [r3, #0]
 8002e3c:	2200      	movs	r2, #0
 8002e3e:	2103      	movs	r1, #3
 8002e40:	4618      	mov	r0, r3
 8002e42:	f7ff f887 	bl	8001f54 <LL_ADC_SetOffsetState>
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	4618      	mov	r0, r3
 8002e4c:	f7ff fa06 	bl	800225c <LL_ADC_IsEnabled>
 8002e50:	4603      	mov	r3, r0
 8002e52:	2b00      	cmp	r3, #0
 8002e54:	f040 8140 	bne.w	80030d8 <HAL_ADC_ConfigChannel+0x6b8>
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	6818      	ldr	r0, [r3, #0]
 8002e5c:	683b      	ldr	r3, [r7, #0]
 8002e5e:	6819      	ldr	r1, [r3, #0]
 8002e60:	683b      	ldr	r3, [r7, #0]
 8002e62:	68db      	ldr	r3, [r3, #12]
 8002e64:	461a      	mov	r2, r3
 8002e66:	f7ff f943 	bl	80020f0 <LL_ADC_SetChannelSingleDiff>
 8002e6a:	683b      	ldr	r3, [r7, #0]
 8002e6c:	68db      	ldr	r3, [r3, #12]
 8002e6e:	4a8f      	ldr	r2, [pc, #572]	@ (80030ac <HAL_ADC_ConfigChannel+0x68c>)
 8002e70:	4293      	cmp	r3, r2
 8002e72:	f040 8131 	bne.w	80030d8 <HAL_ADC_ConfigChannel+0x6b8>
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	6818      	ldr	r0, [r3, #0]
 8002e7a:	683b      	ldr	r3, [r7, #0]
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002e82:	2b00      	cmp	r3, #0
 8002e84:	d10b      	bne.n	8002e9e <HAL_ADC_ConfigChannel+0x47e>
 8002e86:	683b      	ldr	r3, [r7, #0]
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	0e9b      	lsrs	r3, r3, #26
 8002e8c:	3301      	adds	r3, #1
 8002e8e:	f003 031f 	and.w	r3, r3, #31
 8002e92:	2b09      	cmp	r3, #9
 8002e94:	bf94      	ite	ls
 8002e96:	2301      	movls	r3, #1
 8002e98:	2300      	movhi	r3, #0
 8002e9a:	b2db      	uxtb	r3, r3
 8002e9c:	e019      	b.n	8002ed2 <HAL_ADC_ConfigChannel+0x4b2>
 8002e9e:	683b      	ldr	r3, [r7, #0]
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8002ea4:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8002ea6:	fa93 f3a3 	rbit	r3, r3
 8002eaa:	65bb      	str	r3, [r7, #88]	@ 0x58
 8002eac:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8002eae:	663b      	str	r3, [r7, #96]	@ 0x60
 8002eb0:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	d101      	bne.n	8002eba <HAL_ADC_ConfigChannel+0x49a>
 8002eb6:	2320      	movs	r3, #32
 8002eb8:	e003      	b.n	8002ec2 <HAL_ADC_ConfigChannel+0x4a2>
 8002eba:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8002ebc:	fab3 f383 	clz	r3, r3
 8002ec0:	b2db      	uxtb	r3, r3
 8002ec2:	3301      	adds	r3, #1
 8002ec4:	f003 031f 	and.w	r3, r3, #31
 8002ec8:	2b09      	cmp	r3, #9
 8002eca:	bf94      	ite	ls
 8002ecc:	2301      	movls	r3, #1
 8002ece:	2300      	movhi	r3, #0
 8002ed0:	b2db      	uxtb	r3, r3
 8002ed2:	2b00      	cmp	r3, #0
 8002ed4:	d079      	beq.n	8002fca <HAL_ADC_ConfigChannel+0x5aa>
 8002ed6:	683b      	ldr	r3, [r7, #0]
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002ede:	2b00      	cmp	r3, #0
 8002ee0:	d107      	bne.n	8002ef2 <HAL_ADC_ConfigChannel+0x4d2>
 8002ee2:	683b      	ldr	r3, [r7, #0]
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	0e9b      	lsrs	r3, r3, #26
 8002ee8:	3301      	adds	r3, #1
 8002eea:	069b      	lsls	r3, r3, #26
 8002eec:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8002ef0:	e015      	b.n	8002f1e <HAL_ADC_ConfigChannel+0x4fe>
 8002ef2:	683b      	ldr	r3, [r7, #0]
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	653b      	str	r3, [r7, #80]	@ 0x50
 8002ef8:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8002efa:	fa93 f3a3 	rbit	r3, r3
 8002efe:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002f00:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8002f02:	657b      	str	r3, [r7, #84]	@ 0x54
 8002f04:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	d101      	bne.n	8002f0e <HAL_ADC_ConfigChannel+0x4ee>
 8002f0a:	2320      	movs	r3, #32
 8002f0c:	e003      	b.n	8002f16 <HAL_ADC_ConfigChannel+0x4f6>
 8002f0e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002f10:	fab3 f383 	clz	r3, r3
 8002f14:	b2db      	uxtb	r3, r3
 8002f16:	3301      	adds	r3, #1
 8002f18:	069b      	lsls	r3, r3, #26
 8002f1a:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8002f1e:	683b      	ldr	r3, [r7, #0]
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002f26:	2b00      	cmp	r3, #0
 8002f28:	d109      	bne.n	8002f3e <HAL_ADC_ConfigChannel+0x51e>
 8002f2a:	683b      	ldr	r3, [r7, #0]
 8002f2c:	681b      	ldr	r3, [r3, #0]
 8002f2e:	0e9b      	lsrs	r3, r3, #26
 8002f30:	3301      	adds	r3, #1
 8002f32:	f003 031f 	and.w	r3, r3, #31
 8002f36:	2101      	movs	r1, #1
 8002f38:	fa01 f303 	lsl.w	r3, r1, r3
 8002f3c:	e017      	b.n	8002f6e <HAL_ADC_ConfigChannel+0x54e>
 8002f3e:	683b      	ldr	r3, [r7, #0]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	647b      	str	r3, [r7, #68]	@ 0x44
 8002f44:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8002f46:	fa93 f3a3 	rbit	r3, r3
 8002f4a:	643b      	str	r3, [r7, #64]	@ 0x40
 8002f4c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8002f4e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002f50:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	d101      	bne.n	8002f5a <HAL_ADC_ConfigChannel+0x53a>
 8002f56:	2320      	movs	r3, #32
 8002f58:	e003      	b.n	8002f62 <HAL_ADC_ConfigChannel+0x542>
 8002f5a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8002f5c:	fab3 f383 	clz	r3, r3
 8002f60:	b2db      	uxtb	r3, r3
 8002f62:	3301      	adds	r3, #1
 8002f64:	f003 031f 	and.w	r3, r3, #31
 8002f68:	2101      	movs	r1, #1
 8002f6a:	fa01 f303 	lsl.w	r3, r1, r3
 8002f6e:	ea42 0103 	orr.w	r1, r2, r3
 8002f72:	683b      	ldr	r3, [r7, #0]
 8002f74:	681b      	ldr	r3, [r3, #0]
 8002f76:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	d10a      	bne.n	8002f94 <HAL_ADC_ConfigChannel+0x574>
 8002f7e:	683b      	ldr	r3, [r7, #0]
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	0e9b      	lsrs	r3, r3, #26
 8002f84:	3301      	adds	r3, #1
 8002f86:	f003 021f 	and.w	r2, r3, #31
 8002f8a:	4613      	mov	r3, r2
 8002f8c:	005b      	lsls	r3, r3, #1
 8002f8e:	4413      	add	r3, r2
 8002f90:	051b      	lsls	r3, r3, #20
 8002f92:	e018      	b.n	8002fc6 <HAL_ADC_ConfigChannel+0x5a6>
 8002f94:	683b      	ldr	r3, [r7, #0]
 8002f96:	681b      	ldr	r3, [r3, #0]
 8002f98:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002f9a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002f9c:	fa93 f3a3 	rbit	r3, r3
 8002fa0:	637b      	str	r3, [r7, #52]	@ 0x34
 8002fa2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002fa4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002fa6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8002fa8:	2b00      	cmp	r3, #0
 8002faa:	d101      	bne.n	8002fb0 <HAL_ADC_ConfigChannel+0x590>
 8002fac:	2320      	movs	r3, #32
 8002fae:	e003      	b.n	8002fb8 <HAL_ADC_ConfigChannel+0x598>
 8002fb0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8002fb2:	fab3 f383 	clz	r3, r3
 8002fb6:	b2db      	uxtb	r3, r3
 8002fb8:	3301      	adds	r3, #1
 8002fba:	f003 021f 	and.w	r2, r3, #31
 8002fbe:	4613      	mov	r3, r2
 8002fc0:	005b      	lsls	r3, r3, #1
 8002fc2:	4413      	add	r3, r2
 8002fc4:	051b      	lsls	r3, r3, #20
 8002fc6:	430b      	orrs	r3, r1
 8002fc8:	e081      	b.n	80030ce <HAL_ADC_ConfigChannel+0x6ae>
 8002fca:	683b      	ldr	r3, [r7, #0]
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002fd2:	2b00      	cmp	r3, #0
 8002fd4:	d107      	bne.n	8002fe6 <HAL_ADC_ConfigChannel+0x5c6>
 8002fd6:	683b      	ldr	r3, [r7, #0]
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	0e9b      	lsrs	r3, r3, #26
 8002fdc:	3301      	adds	r3, #1
 8002fde:	069b      	lsls	r3, r3, #26
 8002fe0:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8002fe4:	e015      	b.n	8003012 <HAL_ADC_ConfigChannel+0x5f2>
 8002fe6:	683b      	ldr	r3, [r7, #0]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002fec:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002fee:	fa93 f3a3 	rbit	r3, r3
 8002ff2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002ff4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002ff6:	633b      	str	r3, [r7, #48]	@ 0x30
 8002ff8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002ffa:	2b00      	cmp	r3, #0
 8002ffc:	d101      	bne.n	8003002 <HAL_ADC_ConfigChannel+0x5e2>
 8002ffe:	2320      	movs	r3, #32
 8003000:	e003      	b.n	800300a <HAL_ADC_ConfigChannel+0x5ea>
 8003002:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003004:	fab3 f383 	clz	r3, r3
 8003008:	b2db      	uxtb	r3, r3
 800300a:	3301      	adds	r3, #1
 800300c:	069b      	lsls	r3, r3, #26
 800300e:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003012:	683b      	ldr	r3, [r7, #0]
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800301a:	2b00      	cmp	r3, #0
 800301c:	d109      	bne.n	8003032 <HAL_ADC_ConfigChannel+0x612>
 800301e:	683b      	ldr	r3, [r7, #0]
 8003020:	681b      	ldr	r3, [r3, #0]
 8003022:	0e9b      	lsrs	r3, r3, #26
 8003024:	3301      	adds	r3, #1
 8003026:	f003 031f 	and.w	r3, r3, #31
 800302a:	2101      	movs	r1, #1
 800302c:	fa01 f303 	lsl.w	r3, r1, r3
 8003030:	e017      	b.n	8003062 <HAL_ADC_ConfigChannel+0x642>
 8003032:	683b      	ldr	r3, [r7, #0]
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	623b      	str	r3, [r7, #32]
 8003038:	6a3b      	ldr	r3, [r7, #32]
 800303a:	fa93 f3a3 	rbit	r3, r3
 800303e:	61fb      	str	r3, [r7, #28]
 8003040:	69fb      	ldr	r3, [r7, #28]
 8003042:	627b      	str	r3, [r7, #36]	@ 0x24
 8003044:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003046:	2b00      	cmp	r3, #0
 8003048:	d101      	bne.n	800304e <HAL_ADC_ConfigChannel+0x62e>
 800304a:	2320      	movs	r3, #32
 800304c:	e003      	b.n	8003056 <HAL_ADC_ConfigChannel+0x636>
 800304e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003050:	fab3 f383 	clz	r3, r3
 8003054:	b2db      	uxtb	r3, r3
 8003056:	3301      	adds	r3, #1
 8003058:	f003 031f 	and.w	r3, r3, #31
 800305c:	2101      	movs	r1, #1
 800305e:	fa01 f303 	lsl.w	r3, r1, r3
 8003062:	ea42 0103 	orr.w	r1, r2, r3
 8003066:	683b      	ldr	r3, [r7, #0]
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800306e:	2b00      	cmp	r3, #0
 8003070:	d10d      	bne.n	800308e <HAL_ADC_ConfigChannel+0x66e>
 8003072:	683b      	ldr	r3, [r7, #0]
 8003074:	681b      	ldr	r3, [r3, #0]
 8003076:	0e9b      	lsrs	r3, r3, #26
 8003078:	3301      	adds	r3, #1
 800307a:	f003 021f 	and.w	r2, r3, #31
 800307e:	4613      	mov	r3, r2
 8003080:	005b      	lsls	r3, r3, #1
 8003082:	4413      	add	r3, r2
 8003084:	3b1e      	subs	r3, #30
 8003086:	051b      	lsls	r3, r3, #20
 8003088:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800308c:	e01e      	b.n	80030cc <HAL_ADC_ConfigChannel+0x6ac>
 800308e:	683b      	ldr	r3, [r7, #0]
 8003090:	681b      	ldr	r3, [r3, #0]
 8003092:	617b      	str	r3, [r7, #20]
 8003094:	697b      	ldr	r3, [r7, #20]
 8003096:	fa93 f3a3 	rbit	r3, r3
 800309a:	613b      	str	r3, [r7, #16]
 800309c:	693b      	ldr	r3, [r7, #16]
 800309e:	61bb      	str	r3, [r7, #24]
 80030a0:	69bb      	ldr	r3, [r7, #24]
 80030a2:	2b00      	cmp	r3, #0
 80030a4:	d104      	bne.n	80030b0 <HAL_ADC_ConfigChannel+0x690>
 80030a6:	2320      	movs	r3, #32
 80030a8:	e006      	b.n	80030b8 <HAL_ADC_ConfigChannel+0x698>
 80030aa:	bf00      	nop
 80030ac:	407f0000 	.word	0x407f0000
 80030b0:	69bb      	ldr	r3, [r7, #24]
 80030b2:	fab3 f383 	clz	r3, r3
 80030b6:	b2db      	uxtb	r3, r3
 80030b8:	3301      	adds	r3, #1
 80030ba:	f003 021f 	and.w	r2, r3, #31
 80030be:	4613      	mov	r3, r2
 80030c0:	005b      	lsls	r3, r3, #1
 80030c2:	4413      	add	r3, r2
 80030c4:	3b1e      	subs	r3, #30
 80030c6:	051b      	lsls	r3, r3, #20
 80030c8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80030cc:	430b      	orrs	r3, r1
 80030ce:	683a      	ldr	r2, [r7, #0]
 80030d0:	6892      	ldr	r2, [r2, #8]
 80030d2:	4619      	mov	r1, r3
 80030d4:	f7fe ffe1 	bl	800209a <LL_ADC_SetChannelSamplingTime>
 80030d8:	683b      	ldr	r3, [r7, #0]
 80030da:	681a      	ldr	r2, [r3, #0]
 80030dc:	4b3f      	ldr	r3, [pc, #252]	@ (80031dc <HAL_ADC_ConfigChannel+0x7bc>)
 80030de:	4013      	ands	r3, r2
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d071      	beq.n	80031c8 <HAL_ADC_ConfigChannel+0x7a8>
 80030e4:	483e      	ldr	r0, [pc, #248]	@ (80031e0 <HAL_ADC_ConfigChannel+0x7c0>)
 80030e6:	f7fe feed 	bl	8001ec4 <LL_ADC_GetCommonPathInternalCh>
 80030ea:	f8c7 00c4 	str.w	r0, [r7, #196]	@ 0xc4
 80030ee:	683b      	ldr	r3, [r7, #0]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	4a3c      	ldr	r2, [pc, #240]	@ (80031e4 <HAL_ADC_ConfigChannel+0x7c4>)
 80030f4:	4293      	cmp	r3, r2
 80030f6:	d004      	beq.n	8003102 <HAL_ADC_ConfigChannel+0x6e2>
 80030f8:	683b      	ldr	r3, [r7, #0]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	4a3a      	ldr	r2, [pc, #232]	@ (80031e8 <HAL_ADC_ConfigChannel+0x7c8>)
 80030fe:	4293      	cmp	r3, r2
 8003100:	d127      	bne.n	8003152 <HAL_ADC_ConfigChannel+0x732>
 8003102:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003106:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800310a:	2b00      	cmp	r3, #0
 800310c:	d121      	bne.n	8003152 <HAL_ADC_ConfigChannel+0x732>
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003116:	d157      	bne.n	80031c8 <HAL_ADC_ConfigChannel+0x7a8>
 8003118:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800311c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003120:	4619      	mov	r1, r3
 8003122:	482f      	ldr	r0, [pc, #188]	@ (80031e0 <HAL_ADC_ConfigChannel+0x7c0>)
 8003124:	f7fe febb 	bl	8001e9e <LL_ADC_SetCommonPathInternalCh>
 8003128:	4b30      	ldr	r3, [pc, #192]	@ (80031ec <HAL_ADC_ConfigChannel+0x7cc>)
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	099b      	lsrs	r3, r3, #6
 800312e:	4a30      	ldr	r2, [pc, #192]	@ (80031f0 <HAL_ADC_ConfigChannel+0x7d0>)
 8003130:	fba2 2303 	umull	r2, r3, r2, r3
 8003134:	099b      	lsrs	r3, r3, #6
 8003136:	1c5a      	adds	r2, r3, #1
 8003138:	4613      	mov	r3, r2
 800313a:	005b      	lsls	r3, r3, #1
 800313c:	4413      	add	r3, r2
 800313e:	009b      	lsls	r3, r3, #2
 8003140:	60fb      	str	r3, [r7, #12]
 8003142:	e002      	b.n	800314a <HAL_ADC_ConfigChannel+0x72a>
 8003144:	68fb      	ldr	r3, [r7, #12]
 8003146:	3b01      	subs	r3, #1
 8003148:	60fb      	str	r3, [r7, #12]
 800314a:	68fb      	ldr	r3, [r7, #12]
 800314c:	2b00      	cmp	r3, #0
 800314e:	d1f9      	bne.n	8003144 <HAL_ADC_ConfigChannel+0x724>
 8003150:	e03a      	b.n	80031c8 <HAL_ADC_ConfigChannel+0x7a8>
 8003152:	683b      	ldr	r3, [r7, #0]
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	4a27      	ldr	r2, [pc, #156]	@ (80031f4 <HAL_ADC_ConfigChannel+0x7d4>)
 8003158:	4293      	cmp	r3, r2
 800315a:	d113      	bne.n	8003184 <HAL_ADC_ConfigChannel+0x764>
 800315c:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003160:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003164:	2b00      	cmp	r3, #0
 8003166:	d10d      	bne.n	8003184 <HAL_ADC_ConfigChannel+0x764>
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	4a22      	ldr	r2, [pc, #136]	@ (80031f8 <HAL_ADC_ConfigChannel+0x7d8>)
 800316e:	4293      	cmp	r3, r2
 8003170:	d02a      	beq.n	80031c8 <HAL_ADC_ConfigChannel+0x7a8>
 8003172:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003176:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800317a:	4619      	mov	r1, r3
 800317c:	4818      	ldr	r0, [pc, #96]	@ (80031e0 <HAL_ADC_ConfigChannel+0x7c0>)
 800317e:	f7fe fe8e 	bl	8001e9e <LL_ADC_SetCommonPathInternalCh>
 8003182:	e021      	b.n	80031c8 <HAL_ADC_ConfigChannel+0x7a8>
 8003184:	683b      	ldr	r3, [r7, #0]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	4a1c      	ldr	r2, [pc, #112]	@ (80031fc <HAL_ADC_ConfigChannel+0x7dc>)
 800318a:	4293      	cmp	r3, r2
 800318c:	d11c      	bne.n	80031c8 <HAL_ADC_ConfigChannel+0x7a8>
 800318e:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003192:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003196:	2b00      	cmp	r3, #0
 8003198:	d116      	bne.n	80031c8 <HAL_ADC_ConfigChannel+0x7a8>
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	681b      	ldr	r3, [r3, #0]
 800319e:	4a16      	ldr	r2, [pc, #88]	@ (80031f8 <HAL_ADC_ConfigChannel+0x7d8>)
 80031a0:	4293      	cmp	r3, r2
 80031a2:	d011      	beq.n	80031c8 <HAL_ADC_ConfigChannel+0x7a8>
 80031a4:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80031a8:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80031ac:	4619      	mov	r1, r3
 80031ae:	480c      	ldr	r0, [pc, #48]	@ (80031e0 <HAL_ADC_ConfigChannel+0x7c0>)
 80031b0:	f7fe fe75 	bl	8001e9e <LL_ADC_SetCommonPathInternalCh>
 80031b4:	e008      	b.n	80031c8 <HAL_ADC_ConfigChannel+0x7a8>
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80031ba:	f043 0220 	orr.w	r2, r3, #32
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80031c2:	2301      	movs	r3, #1
 80031c4:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	2200      	movs	r2, #0
 80031cc:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80031d0:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 80031d4:	4618      	mov	r0, r3
 80031d6:	37d8      	adds	r7, #216	@ 0xd8
 80031d8:	46bd      	mov	sp, r7
 80031da:	bd80      	pop	{r7, pc}
 80031dc:	80080000 	.word	0x80080000
 80031e0:	50000300 	.word	0x50000300
 80031e4:	c3210000 	.word	0xc3210000
 80031e8:	90c00010 	.word	0x90c00010
 80031ec:	20000000 	.word	0x20000000
 80031f0:	053e2d63 	.word	0x053e2d63
 80031f4:	c7520000 	.word	0xc7520000
 80031f8:	50000100 	.word	0x50000100
 80031fc:	cb840000 	.word	0xcb840000

08003200 <ADC_ConversionStop>:
 8003200:	b580      	push	{r7, lr}
 8003202:	b088      	sub	sp, #32
 8003204:	af00      	add	r7, sp, #0
 8003206:	6078      	str	r0, [r7, #4]
 8003208:	6039      	str	r1, [r7, #0]
 800320a:	2300      	movs	r3, #0
 800320c:	61fb      	str	r3, [r7, #28]
 800320e:	683b      	ldr	r3, [r7, #0]
 8003210:	61bb      	str	r3, [r7, #24]
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	681b      	ldr	r3, [r3, #0]
 8003216:	4618      	mov	r0, r3
 8003218:	f7ff f86e 	bl	80022f8 <LL_ADC_REG_IsConversionOngoing>
 800321c:	6138      	str	r0, [r7, #16]
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	4618      	mov	r0, r3
 8003224:	f7ff f88f 	bl	8002346 <LL_ADC_INJ_IsConversionOngoing>
 8003228:	60f8      	str	r0, [r7, #12]
 800322a:	693b      	ldr	r3, [r7, #16]
 800322c:	2b00      	cmp	r3, #0
 800322e:	d103      	bne.n	8003238 <ADC_ConversionStop+0x38>
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	2b00      	cmp	r3, #0
 8003234:	f000 8098 	beq.w	8003368 <ADC_ConversionStop+0x168>
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	68db      	ldr	r3, [r3, #12]
 800323e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003242:	2b00      	cmp	r3, #0
 8003244:	d02a      	beq.n	800329c <ADC_ConversionStop+0x9c>
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	7f5b      	ldrb	r3, [r3, #29]
 800324a:	2b01      	cmp	r3, #1
 800324c:	d126      	bne.n	800329c <ADC_ConversionStop+0x9c>
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	7f1b      	ldrb	r3, [r3, #28]
 8003252:	2b01      	cmp	r3, #1
 8003254:	d122      	bne.n	800329c <ADC_ConversionStop+0x9c>
 8003256:	2301      	movs	r3, #1
 8003258:	61bb      	str	r3, [r7, #24]
 800325a:	e014      	b.n	8003286 <ADC_ConversionStop+0x86>
 800325c:	69fb      	ldr	r3, [r7, #28]
 800325e:	4a45      	ldr	r2, [pc, #276]	@ (8003374 <ADC_ConversionStop+0x174>)
 8003260:	4293      	cmp	r3, r2
 8003262:	d90d      	bls.n	8003280 <ADC_ConversionStop+0x80>
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003268:	f043 0210 	orr.w	r2, r3, #16
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003274:	f043 0201 	orr.w	r2, r3, #1
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	661a      	str	r2, [r3, #96]	@ 0x60
 800327c:	2301      	movs	r3, #1
 800327e:	e074      	b.n	800336a <ADC_ConversionStop+0x16a>
 8003280:	69fb      	ldr	r3, [r7, #28]
 8003282:	3301      	adds	r3, #1
 8003284:	61fb      	str	r3, [r7, #28]
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003290:	2b40      	cmp	r3, #64	@ 0x40
 8003292:	d1e3      	bne.n	800325c <ADC_ConversionStop+0x5c>
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	2240      	movs	r2, #64	@ 0x40
 800329a:	601a      	str	r2, [r3, #0]
 800329c:	69bb      	ldr	r3, [r7, #24]
 800329e:	2b02      	cmp	r3, #2
 80032a0:	d014      	beq.n	80032cc <ADC_ConversionStop+0xcc>
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	4618      	mov	r0, r3
 80032a8:	f7ff f826 	bl	80022f8 <LL_ADC_REG_IsConversionOngoing>
 80032ac:	4603      	mov	r3, r0
 80032ae:	2b00      	cmp	r3, #0
 80032b0:	d00c      	beq.n	80032cc <ADC_ConversionStop+0xcc>
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	681b      	ldr	r3, [r3, #0]
 80032b6:	4618      	mov	r0, r3
 80032b8:	f7fe ffe3 	bl	8002282 <LL_ADC_IsDisableOngoing>
 80032bc:	4603      	mov	r3, r0
 80032be:	2b00      	cmp	r3, #0
 80032c0:	d104      	bne.n	80032cc <ADC_ConversionStop+0xcc>
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	4618      	mov	r0, r3
 80032c8:	f7ff f802 	bl	80022d0 <LL_ADC_REG_StopConversion>
 80032cc:	69bb      	ldr	r3, [r7, #24]
 80032ce:	2b01      	cmp	r3, #1
 80032d0:	d014      	beq.n	80032fc <ADC_ConversionStop+0xfc>
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	4618      	mov	r0, r3
 80032d8:	f7ff f835 	bl	8002346 <LL_ADC_INJ_IsConversionOngoing>
 80032dc:	4603      	mov	r3, r0
 80032de:	2b00      	cmp	r3, #0
 80032e0:	d00c      	beq.n	80032fc <ADC_ConversionStop+0xfc>
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	4618      	mov	r0, r3
 80032e8:	f7fe ffcb 	bl	8002282 <LL_ADC_IsDisableOngoing>
 80032ec:	4603      	mov	r3, r0
 80032ee:	2b00      	cmp	r3, #0
 80032f0:	d104      	bne.n	80032fc <ADC_ConversionStop+0xfc>
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	4618      	mov	r0, r3
 80032f8:	f7ff f811 	bl	800231e <LL_ADC_INJ_StopConversion>
 80032fc:	69bb      	ldr	r3, [r7, #24]
 80032fe:	2b02      	cmp	r3, #2
 8003300:	d005      	beq.n	800330e <ADC_ConversionStop+0x10e>
 8003302:	69bb      	ldr	r3, [r7, #24]
 8003304:	2b03      	cmp	r3, #3
 8003306:	d105      	bne.n	8003314 <ADC_ConversionStop+0x114>
 8003308:	230c      	movs	r3, #12
 800330a:	617b      	str	r3, [r7, #20]
 800330c:	e005      	b.n	800331a <ADC_ConversionStop+0x11a>
 800330e:	2308      	movs	r3, #8
 8003310:	617b      	str	r3, [r7, #20]
 8003312:	e002      	b.n	800331a <ADC_ConversionStop+0x11a>
 8003314:	2304      	movs	r3, #4
 8003316:	617b      	str	r3, [r7, #20]
 8003318:	bf00      	nop
 800331a:	f7fe fd7f 	bl	8001e1c <HAL_GetTick>
 800331e:	60b8      	str	r0, [r7, #8]
 8003320:	e01b      	b.n	800335a <ADC_ConversionStop+0x15a>
 8003322:	f7fe fd7b 	bl	8001e1c <HAL_GetTick>
 8003326:	4602      	mov	r2, r0
 8003328:	68bb      	ldr	r3, [r7, #8]
 800332a:	1ad3      	subs	r3, r2, r3
 800332c:	2b05      	cmp	r3, #5
 800332e:	d914      	bls.n	800335a <ADC_ConversionStop+0x15a>
 8003330:	687b      	ldr	r3, [r7, #4]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	689a      	ldr	r2, [r3, #8]
 8003336:	697b      	ldr	r3, [r7, #20]
 8003338:	4013      	ands	r3, r2
 800333a:	2b00      	cmp	r3, #0
 800333c:	d00d      	beq.n	800335a <ADC_ConversionStop+0x15a>
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003342:	f043 0210 	orr.w	r2, r3, #16
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	65da      	str	r2, [r3, #92]	@ 0x5c
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800334e:	f043 0201 	orr.w	r2, r3, #1
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	661a      	str	r2, [r3, #96]	@ 0x60
 8003356:	2301      	movs	r3, #1
 8003358:	e007      	b.n	800336a <ADC_ConversionStop+0x16a>
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	681b      	ldr	r3, [r3, #0]
 800335e:	689a      	ldr	r2, [r3, #8]
 8003360:	697b      	ldr	r3, [r7, #20]
 8003362:	4013      	ands	r3, r2
 8003364:	2b00      	cmp	r3, #0
 8003366:	d1dc      	bne.n	8003322 <ADC_ConversionStop+0x122>
 8003368:	2300      	movs	r3, #0
 800336a:	4618      	mov	r0, r3
 800336c:	3720      	adds	r7, #32
 800336e:	46bd      	mov	sp, r7
 8003370:	bd80      	pop	{r7, pc}
 8003372:	bf00      	nop
 8003374:	a33fffff 	.word	0xa33fffff

08003378 <ADC_Enable>:
 8003378:	b580      	push	{r7, lr}
 800337a:	b084      	sub	sp, #16
 800337c:	af00      	add	r7, sp, #0
 800337e:	6078      	str	r0, [r7, #4]
 8003380:	2300      	movs	r3, #0
 8003382:	60bb      	str	r3, [r7, #8]
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	681b      	ldr	r3, [r3, #0]
 8003388:	4618      	mov	r0, r3
 800338a:	f7fe ff67 	bl	800225c <LL_ADC_IsEnabled>
 800338e:	4603      	mov	r3, r0
 8003390:	2b00      	cmp	r3, #0
 8003392:	d169      	bne.n	8003468 <ADC_Enable+0xf0>
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	681b      	ldr	r3, [r3, #0]
 8003398:	689a      	ldr	r2, [r3, #8]
 800339a:	4b36      	ldr	r3, [pc, #216]	@ (8003474 <ADC_Enable+0xfc>)
 800339c:	4013      	ands	r3, r2
 800339e:	2b00      	cmp	r3, #0
 80033a0:	d00d      	beq.n	80033be <ADC_Enable+0x46>
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80033a6:	f043 0210 	orr.w	r2, r3, #16
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	65da      	str	r2, [r3, #92]	@ 0x5c
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80033b2:	f043 0201 	orr.w	r2, r3, #1
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	661a      	str	r2, [r3, #96]	@ 0x60
 80033ba:	2301      	movs	r3, #1
 80033bc:	e055      	b.n	800346a <ADC_Enable+0xf2>
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	4618      	mov	r0, r3
 80033c4:	f7fe ff22 	bl	800220c <LL_ADC_Enable>
 80033c8:	482b      	ldr	r0, [pc, #172]	@ (8003478 <ADC_Enable+0x100>)
 80033ca:	f7fe fd7b 	bl	8001ec4 <LL_ADC_GetCommonPathInternalCh>
 80033ce:	4603      	mov	r3, r0
 80033d0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80033d4:	2b00      	cmp	r3, #0
 80033d6:	d013      	beq.n	8003400 <ADC_Enable+0x88>
 80033d8:	4b28      	ldr	r3, [pc, #160]	@ (800347c <ADC_Enable+0x104>)
 80033da:	681b      	ldr	r3, [r3, #0]
 80033dc:	099b      	lsrs	r3, r3, #6
 80033de:	4a28      	ldr	r2, [pc, #160]	@ (8003480 <ADC_Enable+0x108>)
 80033e0:	fba2 2303 	umull	r2, r3, r2, r3
 80033e4:	099b      	lsrs	r3, r3, #6
 80033e6:	1c5a      	adds	r2, r3, #1
 80033e8:	4613      	mov	r3, r2
 80033ea:	005b      	lsls	r3, r3, #1
 80033ec:	4413      	add	r3, r2
 80033ee:	009b      	lsls	r3, r3, #2
 80033f0:	60bb      	str	r3, [r7, #8]
 80033f2:	e002      	b.n	80033fa <ADC_Enable+0x82>
 80033f4:	68bb      	ldr	r3, [r7, #8]
 80033f6:	3b01      	subs	r3, #1
 80033f8:	60bb      	str	r3, [r7, #8]
 80033fa:	68bb      	ldr	r3, [r7, #8]
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	d1f9      	bne.n	80033f4 <ADC_Enable+0x7c>
 8003400:	f7fe fd0c 	bl	8001e1c <HAL_GetTick>
 8003404:	60f8      	str	r0, [r7, #12]
 8003406:	e028      	b.n	800345a <ADC_Enable+0xe2>
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	4618      	mov	r0, r3
 800340e:	f7fe ff25 	bl	800225c <LL_ADC_IsEnabled>
 8003412:	4603      	mov	r3, r0
 8003414:	2b00      	cmp	r3, #0
 8003416:	d104      	bne.n	8003422 <ADC_Enable+0xaa>
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	4618      	mov	r0, r3
 800341e:	f7fe fef5 	bl	800220c <LL_ADC_Enable>
 8003422:	f7fe fcfb 	bl	8001e1c <HAL_GetTick>
 8003426:	4602      	mov	r2, r0
 8003428:	68fb      	ldr	r3, [r7, #12]
 800342a:	1ad3      	subs	r3, r2, r3
 800342c:	2b02      	cmp	r3, #2
 800342e:	d914      	bls.n	800345a <ADC_Enable+0xe2>
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	681b      	ldr	r3, [r3, #0]
 8003436:	f003 0301 	and.w	r3, r3, #1
 800343a:	2b01      	cmp	r3, #1
 800343c:	d00d      	beq.n	800345a <ADC_Enable+0xe2>
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003442:	f043 0210 	orr.w	r2, r3, #16
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	65da      	str	r2, [r3, #92]	@ 0x5c
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800344e:	f043 0201 	orr.w	r2, r3, #1
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	661a      	str	r2, [r3, #96]	@ 0x60
 8003456:	2301      	movs	r3, #1
 8003458:	e007      	b.n	800346a <ADC_Enable+0xf2>
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	681b      	ldr	r3, [r3, #0]
 8003460:	f003 0301 	and.w	r3, r3, #1
 8003464:	2b01      	cmp	r3, #1
 8003466:	d1cf      	bne.n	8003408 <ADC_Enable+0x90>
 8003468:	2300      	movs	r3, #0
 800346a:	4618      	mov	r0, r3
 800346c:	3710      	adds	r7, #16
 800346e:	46bd      	mov	sp, r7
 8003470:	bd80      	pop	{r7, pc}
 8003472:	bf00      	nop
 8003474:	8000003f 	.word	0x8000003f
 8003478:	50000300 	.word	0x50000300
 800347c:	20000000 	.word	0x20000000
 8003480:	053e2d63 	.word	0x053e2d63

08003484 <ADC_Disable>:
 8003484:	b580      	push	{r7, lr}
 8003486:	b084      	sub	sp, #16
 8003488:	af00      	add	r7, sp, #0
 800348a:	6078      	str	r0, [r7, #4]
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	4618      	mov	r0, r3
 8003492:	f7fe fef6 	bl	8002282 <LL_ADC_IsDisableOngoing>
 8003496:	60f8      	str	r0, [r7, #12]
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	4618      	mov	r0, r3
 800349e:	f7fe fedd 	bl	800225c <LL_ADC_IsEnabled>
 80034a2:	4603      	mov	r3, r0
 80034a4:	2b00      	cmp	r3, #0
 80034a6:	d047      	beq.n	8003538 <ADC_Disable+0xb4>
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d144      	bne.n	8003538 <ADC_Disable+0xb4>
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	689b      	ldr	r3, [r3, #8]
 80034b4:	f003 030d 	and.w	r3, r3, #13
 80034b8:	2b01      	cmp	r3, #1
 80034ba:	d10c      	bne.n	80034d6 <ADC_Disable+0x52>
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	4618      	mov	r0, r3
 80034c2:	f7fe feb7 	bl	8002234 <LL_ADC_Disable>
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	2203      	movs	r2, #3
 80034cc:	601a      	str	r2, [r3, #0]
 80034ce:	f7fe fca5 	bl	8001e1c <HAL_GetTick>
 80034d2:	60b8      	str	r0, [r7, #8]
 80034d4:	e029      	b.n	800352a <ADC_Disable+0xa6>
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80034da:	f043 0210 	orr.w	r2, r3, #16
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80034e2:	687b      	ldr	r3, [r7, #4]
 80034e4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80034e6:	f043 0201 	orr.w	r2, r3, #1
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	661a      	str	r2, [r3, #96]	@ 0x60
 80034ee:	2301      	movs	r3, #1
 80034f0:	e023      	b.n	800353a <ADC_Disable+0xb6>
 80034f2:	f7fe fc93 	bl	8001e1c <HAL_GetTick>
 80034f6:	4602      	mov	r2, r0
 80034f8:	68bb      	ldr	r3, [r7, #8]
 80034fa:	1ad3      	subs	r3, r2, r3
 80034fc:	2b02      	cmp	r3, #2
 80034fe:	d914      	bls.n	800352a <ADC_Disable+0xa6>
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	681b      	ldr	r3, [r3, #0]
 8003504:	689b      	ldr	r3, [r3, #8]
 8003506:	f003 0301 	and.w	r3, r3, #1
 800350a:	2b00      	cmp	r3, #0
 800350c:	d00d      	beq.n	800352a <ADC_Disable+0xa6>
 800350e:	687b      	ldr	r3, [r7, #4]
 8003510:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003512:	f043 0210 	orr.w	r2, r3, #16
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	65da      	str	r2, [r3, #92]	@ 0x5c
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800351e:	f043 0201 	orr.w	r2, r3, #1
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	661a      	str	r2, [r3, #96]	@ 0x60
 8003526:	2301      	movs	r3, #1
 8003528:	e007      	b.n	800353a <ADC_Disable+0xb6>
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	681b      	ldr	r3, [r3, #0]
 800352e:	689b      	ldr	r3, [r3, #8]
 8003530:	f003 0301 	and.w	r3, r3, #1
 8003534:	2b00      	cmp	r3, #0
 8003536:	d1dc      	bne.n	80034f2 <ADC_Disable+0x6e>
 8003538:	2300      	movs	r3, #0
 800353a:	4618      	mov	r0, r3
 800353c:	3710      	adds	r7, #16
 800353e:	46bd      	mov	sp, r7
 8003540:	bd80      	pop	{r7, pc}

08003542 <LL_ADC_IsEnabled>:
 8003542:	b480      	push	{r7}
 8003544:	b083      	sub	sp, #12
 8003546:	af00      	add	r7, sp, #0
 8003548:	6078      	str	r0, [r7, #4]
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	689b      	ldr	r3, [r3, #8]
 800354e:	f003 0301 	and.w	r3, r3, #1
 8003552:	2b01      	cmp	r3, #1
 8003554:	d101      	bne.n	800355a <LL_ADC_IsEnabled+0x18>
 8003556:	2301      	movs	r3, #1
 8003558:	e000      	b.n	800355c <LL_ADC_IsEnabled+0x1a>
 800355a:	2300      	movs	r3, #0
 800355c:	4618      	mov	r0, r3
 800355e:	370c      	adds	r7, #12
 8003560:	46bd      	mov	sp, r7
 8003562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003566:	4770      	bx	lr

08003568 <LL_ADC_REG_IsConversionOngoing>:
 8003568:	b480      	push	{r7}
 800356a:	b083      	sub	sp, #12
 800356c:	af00      	add	r7, sp, #0
 800356e:	6078      	str	r0, [r7, #4]
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	689b      	ldr	r3, [r3, #8]
 8003574:	f003 0304 	and.w	r3, r3, #4
 8003578:	2b04      	cmp	r3, #4
 800357a:	d101      	bne.n	8003580 <LL_ADC_REG_IsConversionOngoing+0x18>
 800357c:	2301      	movs	r3, #1
 800357e:	e000      	b.n	8003582 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003580:	2300      	movs	r3, #0
 8003582:	4618      	mov	r0, r3
 8003584:	370c      	adds	r7, #12
 8003586:	46bd      	mov	sp, r7
 8003588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800358c:	4770      	bx	lr
	...

08003590 <HAL_ADCEx_MultiModeConfigChannel>:
 8003590:	b590      	push	{r4, r7, lr}
 8003592:	b0a1      	sub	sp, #132	@ 0x84
 8003594:	af00      	add	r7, sp, #0
 8003596:	6078      	str	r0, [r7, #4]
 8003598:	6039      	str	r1, [r7, #0]
 800359a:	2300      	movs	r3, #0
 800359c:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80035a6:	2b01      	cmp	r3, #1
 80035a8:	d101      	bne.n	80035ae <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 80035aa:	2302      	movs	r3, #2
 80035ac:	e08b      	b.n	80036c6 <HAL_ADCEx_MultiModeConfigChannel+0x136>
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	2201      	movs	r2, #1
 80035b2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80035b6:	2300      	movs	r3, #0
 80035b8:	667b      	str	r3, [r7, #100]	@ 0x64
 80035ba:	2300      	movs	r3, #0
 80035bc:	66bb      	str	r3, [r7, #104]	@ 0x68
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80035c6:	d102      	bne.n	80035ce <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 80035c8:	4b41      	ldr	r3, [pc, #260]	@ (80036d0 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 80035ca:	60bb      	str	r3, [r7, #8]
 80035cc:	e001      	b.n	80035d2 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 80035ce:	2300      	movs	r3, #0
 80035d0:	60bb      	str	r3, [r7, #8]
 80035d2:	68bb      	ldr	r3, [r7, #8]
 80035d4:	2b00      	cmp	r3, #0
 80035d6:	d10b      	bne.n	80035f0 <HAL_ADCEx_MultiModeConfigChannel+0x60>
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80035dc:	f043 0220 	orr.w	r2, r3, #32
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	65da      	str	r2, [r3, #92]	@ 0x5c
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	2200      	movs	r2, #0
 80035e8:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80035ec:	2301      	movs	r3, #1
 80035ee:	e06a      	b.n	80036c6 <HAL_ADCEx_MultiModeConfigChannel+0x136>
 80035f0:	68bb      	ldr	r3, [r7, #8]
 80035f2:	4618      	mov	r0, r3
 80035f4:	f7ff ffb8 	bl	8003568 <LL_ADC_REG_IsConversionOngoing>
 80035f8:	67b8      	str	r0, [r7, #120]	@ 0x78
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	4618      	mov	r0, r3
 8003600:	f7ff ffb2 	bl	8003568 <LL_ADC_REG_IsConversionOngoing>
 8003604:	4603      	mov	r3, r0
 8003606:	2b00      	cmp	r3, #0
 8003608:	d14c      	bne.n	80036a4 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 800360a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800360c:	2b00      	cmp	r3, #0
 800360e:	d149      	bne.n	80036a4 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 8003610:	4b30      	ldr	r3, [pc, #192]	@ (80036d4 <HAL_ADCEx_MultiModeConfigChannel+0x144>)
 8003612:	677b      	str	r3, [r7, #116]	@ 0x74
 8003614:	683b      	ldr	r3, [r7, #0]
 8003616:	681b      	ldr	r3, [r3, #0]
 8003618:	2b00      	cmp	r3, #0
 800361a:	d028      	beq.n	800366e <HAL_ADCEx_MultiModeConfigChannel+0xde>
 800361c:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800361e:	689b      	ldr	r3, [r3, #8]
 8003620:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003624:	683b      	ldr	r3, [r7, #0]
 8003626:	6859      	ldr	r1, [r3, #4]
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 800362e:	035b      	lsls	r3, r3, #13
 8003630:	430b      	orrs	r3, r1
 8003632:	431a      	orrs	r2, r3
 8003634:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003636:	609a      	str	r2, [r3, #8]
 8003638:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 800363c:	f7ff ff81 	bl	8003542 <LL_ADC_IsEnabled>
 8003640:	4604      	mov	r4, r0
 8003642:	4823      	ldr	r0, [pc, #140]	@ (80036d0 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8003644:	f7ff ff7d 	bl	8003542 <LL_ADC_IsEnabled>
 8003648:	4603      	mov	r3, r0
 800364a:	4323      	orrs	r3, r4
 800364c:	2b00      	cmp	r3, #0
 800364e:	d133      	bne.n	80036b8 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003650:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003652:	689b      	ldr	r3, [r3, #8]
 8003654:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 8003658:	f023 030f 	bic.w	r3, r3, #15
 800365c:	683a      	ldr	r2, [r7, #0]
 800365e:	6811      	ldr	r1, [r2, #0]
 8003660:	683a      	ldr	r2, [r7, #0]
 8003662:	6892      	ldr	r2, [r2, #8]
 8003664:	430a      	orrs	r2, r1
 8003666:	431a      	orrs	r2, r3
 8003668:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800366a:	609a      	str	r2, [r3, #8]
 800366c:	e024      	b.n	80036b8 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 800366e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003670:	689b      	ldr	r3, [r3, #8]
 8003672:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003676:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003678:	609a      	str	r2, [r3, #8]
 800367a:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 800367e:	f7ff ff60 	bl	8003542 <LL_ADC_IsEnabled>
 8003682:	4604      	mov	r4, r0
 8003684:	4812      	ldr	r0, [pc, #72]	@ (80036d0 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8003686:	f7ff ff5c 	bl	8003542 <LL_ADC_IsEnabled>
 800368a:	4603      	mov	r3, r0
 800368c:	4323      	orrs	r3, r4
 800368e:	2b00      	cmp	r3, #0
 8003690:	d112      	bne.n	80036b8 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003692:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003694:	689b      	ldr	r3, [r3, #8]
 8003696:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 800369a:	f023 030f 	bic.w	r3, r3, #15
 800369e:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 80036a0:	6093      	str	r3, [r2, #8]
 80036a2:	e009      	b.n	80036b8 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80036a8:	f043 0220 	orr.w	r2, r3, #32
 80036ac:	687b      	ldr	r3, [r7, #4]
 80036ae:	65da      	str	r2, [r3, #92]	@ 0x5c
 80036b0:	2301      	movs	r3, #1
 80036b2:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 80036b6:	e000      	b.n	80036ba <HAL_ADCEx_MultiModeConfigChannel+0x12a>
 80036b8:	bf00      	nop
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	2200      	movs	r2, #0
 80036be:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80036c2:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 80036c6:	4618      	mov	r0, r3
 80036c8:	3784      	adds	r7, #132	@ 0x84
 80036ca:	46bd      	mov	sp, r7
 80036cc:	bd90      	pop	{r4, r7, pc}
 80036ce:	bf00      	nop
 80036d0:	50000100 	.word	0x50000100
 80036d4:	50000300 	.word	0x50000300

080036d8 <__NVIC_SetPriorityGrouping>:
 80036d8:	b480      	push	{r7}
 80036da:	b085      	sub	sp, #20
 80036dc:	af00      	add	r7, sp, #0
 80036de:	6078      	str	r0, [r7, #4]
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	f003 0307 	and.w	r3, r3, #7
 80036e6:	60fb      	str	r3, [r7, #12]
 80036e8:	4b0c      	ldr	r3, [pc, #48]	@ (800371c <__NVIC_SetPriorityGrouping+0x44>)
 80036ea:	68db      	ldr	r3, [r3, #12]
 80036ec:	60bb      	str	r3, [r7, #8]
 80036ee:	68ba      	ldr	r2, [r7, #8]
 80036f0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80036f4:	4013      	ands	r3, r2
 80036f6:	60bb      	str	r3, [r7, #8]
 80036f8:	68fb      	ldr	r3, [r7, #12]
 80036fa:	021a      	lsls	r2, r3, #8
 80036fc:	68bb      	ldr	r3, [r7, #8]
 80036fe:	4313      	orrs	r3, r2
 8003700:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003704:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003708:	60bb      	str	r3, [r7, #8]
 800370a:	4a04      	ldr	r2, [pc, #16]	@ (800371c <__NVIC_SetPriorityGrouping+0x44>)
 800370c:	68bb      	ldr	r3, [r7, #8]
 800370e:	60d3      	str	r3, [r2, #12]
 8003710:	bf00      	nop
 8003712:	3714      	adds	r7, #20
 8003714:	46bd      	mov	sp, r7
 8003716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800371a:	4770      	bx	lr
 800371c:	e000ed00 	.word	0xe000ed00

08003720 <__NVIC_GetPriorityGrouping>:
 8003720:	b480      	push	{r7}
 8003722:	af00      	add	r7, sp, #0
 8003724:	4b04      	ldr	r3, [pc, #16]	@ (8003738 <__NVIC_GetPriorityGrouping+0x18>)
 8003726:	68db      	ldr	r3, [r3, #12]
 8003728:	0a1b      	lsrs	r3, r3, #8
 800372a:	f003 0307 	and.w	r3, r3, #7
 800372e:	4618      	mov	r0, r3
 8003730:	46bd      	mov	sp, r7
 8003732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003736:	4770      	bx	lr
 8003738:	e000ed00 	.word	0xe000ed00

0800373c <__NVIC_EnableIRQ>:
 800373c:	b480      	push	{r7}
 800373e:	b083      	sub	sp, #12
 8003740:	af00      	add	r7, sp, #0
 8003742:	4603      	mov	r3, r0
 8003744:	71fb      	strb	r3, [r7, #7]
 8003746:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800374a:	2b00      	cmp	r3, #0
 800374c:	db0b      	blt.n	8003766 <__NVIC_EnableIRQ+0x2a>
 800374e:	79fb      	ldrb	r3, [r7, #7]
 8003750:	f003 021f 	and.w	r2, r3, #31
 8003754:	4907      	ldr	r1, [pc, #28]	@ (8003774 <__NVIC_EnableIRQ+0x38>)
 8003756:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800375a:	095b      	lsrs	r3, r3, #5
 800375c:	2001      	movs	r0, #1
 800375e:	fa00 f202 	lsl.w	r2, r0, r2
 8003762:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003766:	bf00      	nop
 8003768:	370c      	adds	r7, #12
 800376a:	46bd      	mov	sp, r7
 800376c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003770:	4770      	bx	lr
 8003772:	bf00      	nop
 8003774:	e000e100 	.word	0xe000e100

08003778 <__NVIC_SetPriority>:
 8003778:	b480      	push	{r7}
 800377a:	b083      	sub	sp, #12
 800377c:	af00      	add	r7, sp, #0
 800377e:	4603      	mov	r3, r0
 8003780:	6039      	str	r1, [r7, #0]
 8003782:	71fb      	strb	r3, [r7, #7]
 8003784:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003788:	2b00      	cmp	r3, #0
 800378a:	db0a      	blt.n	80037a2 <__NVIC_SetPriority+0x2a>
 800378c:	683b      	ldr	r3, [r7, #0]
 800378e:	b2da      	uxtb	r2, r3
 8003790:	490c      	ldr	r1, [pc, #48]	@ (80037c4 <__NVIC_SetPriority+0x4c>)
 8003792:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003796:	0112      	lsls	r2, r2, #4
 8003798:	b2d2      	uxtb	r2, r2
 800379a:	440b      	add	r3, r1
 800379c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80037a0:	e00a      	b.n	80037b8 <__NVIC_SetPriority+0x40>
 80037a2:	683b      	ldr	r3, [r7, #0]
 80037a4:	b2da      	uxtb	r2, r3
 80037a6:	4908      	ldr	r1, [pc, #32]	@ (80037c8 <__NVIC_SetPriority+0x50>)
 80037a8:	79fb      	ldrb	r3, [r7, #7]
 80037aa:	f003 030f 	and.w	r3, r3, #15
 80037ae:	3b04      	subs	r3, #4
 80037b0:	0112      	lsls	r2, r2, #4
 80037b2:	b2d2      	uxtb	r2, r2
 80037b4:	440b      	add	r3, r1
 80037b6:	761a      	strb	r2, [r3, #24]
 80037b8:	bf00      	nop
 80037ba:	370c      	adds	r7, #12
 80037bc:	46bd      	mov	sp, r7
 80037be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037c2:	4770      	bx	lr
 80037c4:	e000e100 	.word	0xe000e100
 80037c8:	e000ed00 	.word	0xe000ed00

080037cc <NVIC_EncodePriority>:
 80037cc:	b480      	push	{r7}
 80037ce:	b089      	sub	sp, #36	@ 0x24
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	60f8      	str	r0, [r7, #12]
 80037d4:	60b9      	str	r1, [r7, #8]
 80037d6:	607a      	str	r2, [r7, #4]
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	f003 0307 	and.w	r3, r3, #7
 80037de:	61fb      	str	r3, [r7, #28]
 80037e0:	69fb      	ldr	r3, [r7, #28]
 80037e2:	f1c3 0307 	rsb	r3, r3, #7
 80037e6:	2b04      	cmp	r3, #4
 80037e8:	bf28      	it	cs
 80037ea:	2304      	movcs	r3, #4
 80037ec:	61bb      	str	r3, [r7, #24]
 80037ee:	69fb      	ldr	r3, [r7, #28]
 80037f0:	3304      	adds	r3, #4
 80037f2:	2b06      	cmp	r3, #6
 80037f4:	d902      	bls.n	80037fc <NVIC_EncodePriority+0x30>
 80037f6:	69fb      	ldr	r3, [r7, #28]
 80037f8:	3b03      	subs	r3, #3
 80037fa:	e000      	b.n	80037fe <NVIC_EncodePriority+0x32>
 80037fc:	2300      	movs	r3, #0
 80037fe:	617b      	str	r3, [r7, #20]
 8003800:	f04f 32ff 	mov.w	r2, #4294967295
 8003804:	69bb      	ldr	r3, [r7, #24]
 8003806:	fa02 f303 	lsl.w	r3, r2, r3
 800380a:	43da      	mvns	r2, r3
 800380c:	68bb      	ldr	r3, [r7, #8]
 800380e:	401a      	ands	r2, r3
 8003810:	697b      	ldr	r3, [r7, #20]
 8003812:	409a      	lsls	r2, r3
 8003814:	f04f 31ff 	mov.w	r1, #4294967295
 8003818:	697b      	ldr	r3, [r7, #20]
 800381a:	fa01 f303 	lsl.w	r3, r1, r3
 800381e:	43d9      	mvns	r1, r3
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	400b      	ands	r3, r1
 8003824:	4313      	orrs	r3, r2
 8003826:	4618      	mov	r0, r3
 8003828:	3724      	adds	r7, #36	@ 0x24
 800382a:	46bd      	mov	sp, r7
 800382c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003830:	4770      	bx	lr
	...

08003834 <SysTick_Config>:
 8003834:	b580      	push	{r7, lr}
 8003836:	b082      	sub	sp, #8
 8003838:	af00      	add	r7, sp, #0
 800383a:	6078      	str	r0, [r7, #4]
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	3b01      	subs	r3, #1
 8003840:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003844:	d301      	bcc.n	800384a <SysTick_Config+0x16>
 8003846:	2301      	movs	r3, #1
 8003848:	e00f      	b.n	800386a <SysTick_Config+0x36>
 800384a:	4a0a      	ldr	r2, [pc, #40]	@ (8003874 <SysTick_Config+0x40>)
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	3b01      	subs	r3, #1
 8003850:	6053      	str	r3, [r2, #4]
 8003852:	210f      	movs	r1, #15
 8003854:	f04f 30ff 	mov.w	r0, #4294967295
 8003858:	f7ff ff8e 	bl	8003778 <__NVIC_SetPriority>
 800385c:	4b05      	ldr	r3, [pc, #20]	@ (8003874 <SysTick_Config+0x40>)
 800385e:	2200      	movs	r2, #0
 8003860:	609a      	str	r2, [r3, #8]
 8003862:	4b04      	ldr	r3, [pc, #16]	@ (8003874 <SysTick_Config+0x40>)
 8003864:	2207      	movs	r2, #7
 8003866:	601a      	str	r2, [r3, #0]
 8003868:	2300      	movs	r3, #0
 800386a:	4618      	mov	r0, r3
 800386c:	3708      	adds	r7, #8
 800386e:	46bd      	mov	sp, r7
 8003870:	bd80      	pop	{r7, pc}
 8003872:	bf00      	nop
 8003874:	e000e010 	.word	0xe000e010

08003878 <HAL_NVIC_SetPriorityGrouping>:
 8003878:	b580      	push	{r7, lr}
 800387a:	b082      	sub	sp, #8
 800387c:	af00      	add	r7, sp, #0
 800387e:	6078      	str	r0, [r7, #4]
 8003880:	6878      	ldr	r0, [r7, #4]
 8003882:	f7ff ff29 	bl	80036d8 <__NVIC_SetPriorityGrouping>
 8003886:	bf00      	nop
 8003888:	3708      	adds	r7, #8
 800388a:	46bd      	mov	sp, r7
 800388c:	bd80      	pop	{r7, pc}

0800388e <HAL_NVIC_SetPriority>:
 800388e:	b580      	push	{r7, lr}
 8003890:	b086      	sub	sp, #24
 8003892:	af00      	add	r7, sp, #0
 8003894:	4603      	mov	r3, r0
 8003896:	60b9      	str	r1, [r7, #8]
 8003898:	607a      	str	r2, [r7, #4]
 800389a:	73fb      	strb	r3, [r7, #15]
 800389c:	f7ff ff40 	bl	8003720 <__NVIC_GetPriorityGrouping>
 80038a0:	6178      	str	r0, [r7, #20]
 80038a2:	687a      	ldr	r2, [r7, #4]
 80038a4:	68b9      	ldr	r1, [r7, #8]
 80038a6:	6978      	ldr	r0, [r7, #20]
 80038a8:	f7ff ff90 	bl	80037cc <NVIC_EncodePriority>
 80038ac:	4602      	mov	r2, r0
 80038ae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80038b2:	4611      	mov	r1, r2
 80038b4:	4618      	mov	r0, r3
 80038b6:	f7ff ff5f 	bl	8003778 <__NVIC_SetPriority>
 80038ba:	bf00      	nop
 80038bc:	3718      	adds	r7, #24
 80038be:	46bd      	mov	sp, r7
 80038c0:	bd80      	pop	{r7, pc}

080038c2 <HAL_NVIC_EnableIRQ>:
 80038c2:	b580      	push	{r7, lr}
 80038c4:	b082      	sub	sp, #8
 80038c6:	af00      	add	r7, sp, #0
 80038c8:	4603      	mov	r3, r0
 80038ca:	71fb      	strb	r3, [r7, #7]
 80038cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80038d0:	4618      	mov	r0, r3
 80038d2:	f7ff ff33 	bl	800373c <__NVIC_EnableIRQ>
 80038d6:	bf00      	nop
 80038d8:	3708      	adds	r7, #8
 80038da:	46bd      	mov	sp, r7
 80038dc:	bd80      	pop	{r7, pc}

080038de <HAL_SYSTICK_Config>:
 80038de:	b580      	push	{r7, lr}
 80038e0:	b082      	sub	sp, #8
 80038e2:	af00      	add	r7, sp, #0
 80038e4:	6078      	str	r0, [r7, #4]
 80038e6:	6878      	ldr	r0, [r7, #4]
 80038e8:	f7ff ffa4 	bl	8003834 <SysTick_Config>
 80038ec:	4603      	mov	r3, r0
 80038ee:	4618      	mov	r0, r3
 80038f0:	3708      	adds	r7, #8
 80038f2:	46bd      	mov	sp, r7
 80038f4:	bd80      	pop	{r7, pc}
	...

080038f8 <HAL_FDCAN_Init>:
 80038f8:	b580      	push	{r7, lr}
 80038fa:	b084      	sub	sp, #16
 80038fc:	af00      	add	r7, sp, #0
 80038fe:	6078      	str	r0, [r7, #4]
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	2b00      	cmp	r3, #0
 8003904:	d101      	bne.n	800390a <HAL_FDCAN_Init+0x12>
 8003906:	2301      	movs	r3, #1
 8003908:	e147      	b.n	8003b9a <HAL_FDCAN_Init+0x2a2>
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003910:	b2db      	uxtb	r3, r3
 8003912:	2b00      	cmp	r3, #0
 8003914:	d106      	bne.n	8003924 <HAL_FDCAN_Init+0x2c>
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	2200      	movs	r2, #0
 800391a:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800391e:	6878      	ldr	r0, [r7, #4]
 8003920:	f7fe f802 	bl	8001928 <HAL_FDCAN_MspInit>
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	699a      	ldr	r2, [r3, #24]
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	f022 0210 	bic.w	r2, r2, #16
 8003932:	619a      	str	r2, [r3, #24]
 8003934:	f7fe fa72 	bl	8001e1c <HAL_GetTick>
 8003938:	60f8      	str	r0, [r7, #12]
 800393a:	e012      	b.n	8003962 <HAL_FDCAN_Init+0x6a>
 800393c:	f7fe fa6e 	bl	8001e1c <HAL_GetTick>
 8003940:	4602      	mov	r2, r0
 8003942:	68fb      	ldr	r3, [r7, #12]
 8003944:	1ad3      	subs	r3, r2, r3
 8003946:	2b0a      	cmp	r3, #10
 8003948:	d90b      	bls.n	8003962 <HAL_FDCAN_Init+0x6a>
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800394e:	f043 0201 	orr.w	r2, r3, #1
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	661a      	str	r2, [r3, #96]	@ 0x60
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	2203      	movs	r2, #3
 800395a:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 800395e:	2301      	movs	r3, #1
 8003960:	e11b      	b.n	8003b9a <HAL_FDCAN_Init+0x2a2>
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	681b      	ldr	r3, [r3, #0]
 8003966:	699b      	ldr	r3, [r3, #24]
 8003968:	f003 0308 	and.w	r3, r3, #8
 800396c:	2b08      	cmp	r3, #8
 800396e:	d0e5      	beq.n	800393c <HAL_FDCAN_Init+0x44>
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	699a      	ldr	r2, [r3, #24]
 8003976:	687b      	ldr	r3, [r7, #4]
 8003978:	681b      	ldr	r3, [r3, #0]
 800397a:	f042 0201 	orr.w	r2, r2, #1
 800397e:	619a      	str	r2, [r3, #24]
 8003980:	f7fe fa4c 	bl	8001e1c <HAL_GetTick>
 8003984:	60f8      	str	r0, [r7, #12]
 8003986:	e012      	b.n	80039ae <HAL_FDCAN_Init+0xb6>
 8003988:	f7fe fa48 	bl	8001e1c <HAL_GetTick>
 800398c:	4602      	mov	r2, r0
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	1ad3      	subs	r3, r2, r3
 8003992:	2b0a      	cmp	r3, #10
 8003994:	d90b      	bls.n	80039ae <HAL_FDCAN_Init+0xb6>
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800399a:	f043 0201 	orr.w	r2, r3, #1
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	661a      	str	r2, [r3, #96]	@ 0x60
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	2203      	movs	r2, #3
 80039a6:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80039aa:	2301      	movs	r3, #1
 80039ac:	e0f5      	b.n	8003b9a <HAL_FDCAN_Init+0x2a2>
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	699b      	ldr	r3, [r3, #24]
 80039b4:	f003 0301 	and.w	r3, r3, #1
 80039b8:	2b00      	cmp	r3, #0
 80039ba:	d0e5      	beq.n	8003988 <HAL_FDCAN_Init+0x90>
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	681b      	ldr	r3, [r3, #0]
 80039c0:	699a      	ldr	r2, [r3, #24]
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	f042 0202 	orr.w	r2, r2, #2
 80039ca:	619a      	str	r2, [r3, #24]
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	4a74      	ldr	r2, [pc, #464]	@ (8003ba4 <HAL_FDCAN_Init+0x2ac>)
 80039d2:	4293      	cmp	r3, r2
 80039d4:	d103      	bne.n	80039de <HAL_FDCAN_Init+0xe6>
 80039d6:	4a74      	ldr	r2, [pc, #464]	@ (8003ba8 <HAL_FDCAN_Init+0x2b0>)
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	685b      	ldr	r3, [r3, #4]
 80039dc:	6013      	str	r3, [r2, #0]
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	7c1b      	ldrb	r3, [r3, #16]
 80039e2:	2b01      	cmp	r3, #1
 80039e4:	d108      	bne.n	80039f8 <HAL_FDCAN_Init+0x100>
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	699a      	ldr	r2, [r3, #24]
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80039f4:	619a      	str	r2, [r3, #24]
 80039f6:	e007      	b.n	8003a08 <HAL_FDCAN_Init+0x110>
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	699a      	ldr	r2, [r3, #24]
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	681b      	ldr	r3, [r3, #0]
 8003a02:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003a06:	619a      	str	r2, [r3, #24]
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	7c5b      	ldrb	r3, [r3, #17]
 8003a0c:	2b01      	cmp	r3, #1
 8003a0e:	d108      	bne.n	8003a22 <HAL_FDCAN_Init+0x12a>
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	699a      	ldr	r2, [r3, #24]
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003a1e:	619a      	str	r2, [r3, #24]
 8003a20:	e007      	b.n	8003a32 <HAL_FDCAN_Init+0x13a>
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	681b      	ldr	r3, [r3, #0]
 8003a26:	699a      	ldr	r2, [r3, #24]
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8003a30:	619a      	str	r2, [r3, #24]
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	7c9b      	ldrb	r3, [r3, #18]
 8003a36:	2b01      	cmp	r3, #1
 8003a38:	d108      	bne.n	8003a4c <HAL_FDCAN_Init+0x154>
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	681b      	ldr	r3, [r3, #0]
 8003a3e:	699a      	ldr	r2, [r3, #24]
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003a48:	619a      	str	r2, [r3, #24]
 8003a4a:	e007      	b.n	8003a5c <HAL_FDCAN_Init+0x164>
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	699a      	ldr	r2, [r3, #24]
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8003a5a:	619a      	str	r2, [r3, #24]
 8003a5c:	687b      	ldr	r3, [r7, #4]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	699b      	ldr	r3, [r3, #24]
 8003a62:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	689a      	ldr	r2, [r3, #8]
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	430a      	orrs	r2, r1
 8003a70:	619a      	str	r2, [r3, #24]
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	699a      	ldr	r2, [r3, #24]
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	681b      	ldr	r3, [r3, #0]
 8003a7c:	f022 02a4 	bic.w	r2, r2, #164	@ 0xa4
 8003a80:	619a      	str	r2, [r3, #24]
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	691a      	ldr	r2, [r3, #16]
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	681b      	ldr	r3, [r3, #0]
 8003a8c:	f022 0210 	bic.w	r2, r2, #16
 8003a90:	611a      	str	r2, [r3, #16]
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	68db      	ldr	r3, [r3, #12]
 8003a96:	2b01      	cmp	r3, #1
 8003a98:	d108      	bne.n	8003aac <HAL_FDCAN_Init+0x1b4>
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	699a      	ldr	r2, [r3, #24]
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	f042 0204 	orr.w	r2, r2, #4
 8003aa8:	619a      	str	r2, [r3, #24]
 8003aaa:	e02c      	b.n	8003b06 <HAL_FDCAN_Init+0x20e>
 8003aac:	687b      	ldr	r3, [r7, #4]
 8003aae:	68db      	ldr	r3, [r3, #12]
 8003ab0:	2b00      	cmp	r3, #0
 8003ab2:	d028      	beq.n	8003b06 <HAL_FDCAN_Init+0x20e>
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	68db      	ldr	r3, [r3, #12]
 8003ab8:	2b02      	cmp	r3, #2
 8003aba:	d01c      	beq.n	8003af6 <HAL_FDCAN_Init+0x1fe>
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	699a      	ldr	r2, [r3, #24]
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8003aca:	619a      	str	r2, [r3, #24]
 8003acc:	687b      	ldr	r3, [r7, #4]
 8003ace:	681b      	ldr	r3, [r3, #0]
 8003ad0:	691a      	ldr	r2, [r3, #16]
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	f042 0210 	orr.w	r2, r2, #16
 8003ada:	611a      	str	r2, [r3, #16]
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	68db      	ldr	r3, [r3, #12]
 8003ae0:	2b03      	cmp	r3, #3
 8003ae2:	d110      	bne.n	8003b06 <HAL_FDCAN_Init+0x20e>
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	699a      	ldr	r2, [r3, #24]
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	f042 0220 	orr.w	r2, r2, #32
 8003af2:	619a      	str	r2, [r3, #24]
 8003af4:	e007      	b.n	8003b06 <HAL_FDCAN_Init+0x20e>
 8003af6:	687b      	ldr	r3, [r7, #4]
 8003af8:	681b      	ldr	r3, [r3, #0]
 8003afa:	699a      	ldr	r2, [r3, #24]
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	f042 0220 	orr.w	r2, r2, #32
 8003b04:	619a      	str	r2, [r3, #24]
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	699b      	ldr	r3, [r3, #24]
 8003b0a:	3b01      	subs	r3, #1
 8003b0c:	065a      	lsls	r2, r3, #25
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	69db      	ldr	r3, [r3, #28]
 8003b12:	3b01      	subs	r3, #1
 8003b14:	021b      	lsls	r3, r3, #8
 8003b16:	431a      	orrs	r2, r3
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	6a1b      	ldr	r3, [r3, #32]
 8003b1c:	3b01      	subs	r3, #1
 8003b1e:	ea42 0103 	orr.w	r1, r2, r3
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	695b      	ldr	r3, [r3, #20]
 8003b26:	3b01      	subs	r3, #1
 8003b28:	041a      	lsls	r2, r3, #16
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	430a      	orrs	r2, r1
 8003b30:	61da      	str	r2, [r3, #28]
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	689b      	ldr	r3, [r3, #8]
 8003b36:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8003b3a:	d115      	bne.n	8003b68 <HAL_FDCAN_Init+0x270>
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003b40:	1e5a      	subs	r2, r3, #1
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003b46:	3b01      	subs	r3, #1
 8003b48:	021b      	lsls	r3, r3, #8
 8003b4a:	431a      	orrs	r2, r3
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003b50:	3b01      	subs	r3, #1
 8003b52:	011b      	lsls	r3, r3, #4
 8003b54:	ea42 0103 	orr.w	r1, r2, r3
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b5c:	3b01      	subs	r3, #1
 8003b5e:	041a      	lsls	r2, r3, #16
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	681b      	ldr	r3, [r3, #0]
 8003b64:	430a      	orrs	r2, r1
 8003b66:	60da      	str	r2, [r3, #12]
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	681b      	ldr	r3, [r3, #0]
 8003b6c:	f8d3 10c0 	ldr.w	r1, [r3, #192]	@ 0xc0
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	430a      	orrs	r2, r1
 8003b7a:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 8003b7e:	6878      	ldr	r0, [r7, #4]
 8003b80:	f000 fc0e 	bl	80043a0 <FDCAN_CalcultateRamBlockAddresses>
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	2200      	movs	r2, #0
 8003b88:	659a      	str	r2, [r3, #88]	@ 0x58
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	2200      	movs	r2, #0
 8003b8e:	661a      	str	r2, [r3, #96]	@ 0x60
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	2201      	movs	r2, #1
 8003b94:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8003b98:	2300      	movs	r3, #0
 8003b9a:	4618      	mov	r0, r3
 8003b9c:	3710      	adds	r7, #16
 8003b9e:	46bd      	mov	sp, r7
 8003ba0:	bd80      	pop	{r7, pc}
 8003ba2:	bf00      	nop
 8003ba4:	40006400 	.word	0x40006400
 8003ba8:	40006500 	.word	0x40006500

08003bac <HAL_FDCAN_Start>:
 8003bac:	b480      	push	{r7}
 8003bae:	b083      	sub	sp, #12
 8003bb0:	af00      	add	r7, sp, #0
 8003bb2:	6078      	str	r0, [r7, #4]
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003bba:	b2db      	uxtb	r3, r3
 8003bbc:	2b01      	cmp	r3, #1
 8003bbe:	d110      	bne.n	8003be2 <HAL_FDCAN_Start+0x36>
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	2202      	movs	r2, #2
 8003bc4:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	699a      	ldr	r2, [r3, #24]
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	f022 0201 	bic.w	r2, r2, #1
 8003bd6:	619a      	str	r2, [r3, #24]
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	2200      	movs	r2, #0
 8003bdc:	661a      	str	r2, [r3, #96]	@ 0x60
 8003bde:	2300      	movs	r3, #0
 8003be0:	e006      	b.n	8003bf0 <HAL_FDCAN_Start+0x44>
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003be6:	f043 0204 	orr.w	r2, r3, #4
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	661a      	str	r2, [r3, #96]	@ 0x60
 8003bee:	2301      	movs	r3, #1
 8003bf0:	4618      	mov	r0, r3
 8003bf2:	370c      	adds	r7, #12
 8003bf4:	46bd      	mov	sp, r7
 8003bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bfa:	4770      	bx	lr

08003bfc <HAL_FDCAN_AddMessageToTxFifoQ>:
 8003bfc:	b580      	push	{r7, lr}
 8003bfe:	b086      	sub	sp, #24
 8003c00:	af00      	add	r7, sp, #0
 8003c02:	60f8      	str	r0, [r7, #12]
 8003c04:	60b9      	str	r1, [r7, #8]
 8003c06:	607a      	str	r2, [r7, #4]
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003c0e:	b2db      	uxtb	r3, r3
 8003c10:	2b02      	cmp	r3, #2
 8003c12:	d12c      	bne.n	8003c6e <HAL_FDCAN_AddMessageToTxFifoQ+0x72>
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8003c1c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	d007      	beq.n	8003c34 <HAL_FDCAN_AddMessageToTxFifoQ+0x38>
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003c28:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003c2c:	68fb      	ldr	r3, [r7, #12]
 8003c2e:	661a      	str	r2, [r3, #96]	@ 0x60
 8003c30:	2301      	movs	r3, #1
 8003c32:	e023      	b.n	8003c7c <HAL_FDCAN_AddMessageToTxFifoQ+0x80>
 8003c34:	68fb      	ldr	r3, [r7, #12]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8003c3c:	0c1b      	lsrs	r3, r3, #16
 8003c3e:	f003 0303 	and.w	r3, r3, #3
 8003c42:	617b      	str	r3, [r7, #20]
 8003c44:	697b      	ldr	r3, [r7, #20]
 8003c46:	687a      	ldr	r2, [r7, #4]
 8003c48:	68b9      	ldr	r1, [r7, #8]
 8003c4a:	68f8      	ldr	r0, [r7, #12]
 8003c4c:	f000 fbfe 	bl	800444c <FDCAN_CopyMessageToRAM>
 8003c50:	68fb      	ldr	r3, [r7, #12]
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	2101      	movs	r1, #1
 8003c56:	697a      	ldr	r2, [r7, #20]
 8003c58:	fa01 f202 	lsl.w	r2, r1, r2
 8003c5c:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
 8003c60:	2201      	movs	r2, #1
 8003c62:	697b      	ldr	r3, [r7, #20]
 8003c64:	409a      	lsls	r2, r3
 8003c66:	68fb      	ldr	r3, [r7, #12]
 8003c68:	659a      	str	r2, [r3, #88]	@ 0x58
 8003c6a:	2300      	movs	r3, #0
 8003c6c:	e006      	b.n	8003c7c <HAL_FDCAN_AddMessageToTxFifoQ+0x80>
 8003c6e:	68fb      	ldr	r3, [r7, #12]
 8003c70:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003c72:	f043 0208 	orr.w	r2, r3, #8
 8003c76:	68fb      	ldr	r3, [r7, #12]
 8003c78:	661a      	str	r2, [r3, #96]	@ 0x60
 8003c7a:	2301      	movs	r3, #1
 8003c7c:	4618      	mov	r0, r3
 8003c7e:	3718      	adds	r7, #24
 8003c80:	46bd      	mov	sp, r7
 8003c82:	bd80      	pop	{r7, pc}

08003c84 <HAL_FDCAN_GetRxMessage>:
 8003c84:	b480      	push	{r7}
 8003c86:	b08b      	sub	sp, #44	@ 0x2c
 8003c88:	af00      	add	r7, sp, #0
 8003c8a:	60f8      	str	r0, [r7, #12]
 8003c8c:	60b9      	str	r1, [r7, #8]
 8003c8e:	607a      	str	r2, [r7, #4]
 8003c90:	603b      	str	r3, [r7, #0]
 8003c92:	2300      	movs	r3, #0
 8003c94:	61fb      	str	r3, [r7, #28]
 8003c96:	68fb      	ldr	r3, [r7, #12]
 8003c98:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003c9c:	76fb      	strb	r3, [r7, #27]
 8003c9e:	7efb      	ldrb	r3, [r7, #27]
 8003ca0:	2b02      	cmp	r3, #2
 8003ca2:	f040 80e8 	bne.w	8003e76 <HAL_FDCAN_GetRxMessage+0x1f2>
 8003ca6:	68bb      	ldr	r3, [r7, #8]
 8003ca8:	2b40      	cmp	r3, #64	@ 0x40
 8003caa:	d137      	bne.n	8003d1c <HAL_FDCAN_GetRxMessage+0x98>
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003cb4:	f003 030f 	and.w	r3, r3, #15
 8003cb8:	2b00      	cmp	r3, #0
 8003cba:	d107      	bne.n	8003ccc <HAL_FDCAN_GetRxMessage+0x48>
 8003cbc:	68fb      	ldr	r3, [r7, #12]
 8003cbe:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003cc0:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8003cc4:	68fb      	ldr	r3, [r7, #12]
 8003cc6:	661a      	str	r2, [r3, #96]	@ 0x60
 8003cc8:	2301      	movs	r3, #1
 8003cca:	e0db      	b.n	8003e84 <HAL_FDCAN_GetRxMessage+0x200>
 8003ccc:	68fb      	ldr	r3, [r7, #12]
 8003cce:	681b      	ldr	r3, [r3, #0]
 8003cd0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003cd4:	0e1b      	lsrs	r3, r3, #24
 8003cd6:	f003 0301 	and.w	r3, r3, #1
 8003cda:	2b01      	cmp	r3, #1
 8003cdc:	d10a      	bne.n	8003cf4 <HAL_FDCAN_GetRxMessage+0x70>
 8003cde:	68fb      	ldr	r3, [r7, #12]
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003ce6:	0a5b      	lsrs	r3, r3, #9
 8003ce8:	f003 0301 	and.w	r3, r3, #1
 8003cec:	2b01      	cmp	r3, #1
 8003cee:	d101      	bne.n	8003cf4 <HAL_FDCAN_GetRxMessage+0x70>
 8003cf0:	2301      	movs	r3, #1
 8003cf2:	61fb      	str	r3, [r7, #28]
 8003cf4:	68fb      	ldr	r3, [r7, #12]
 8003cf6:	681b      	ldr	r3, [r3, #0]
 8003cf8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003cfc:	0a1b      	lsrs	r3, r3, #8
 8003cfe:	f003 0303 	and.w	r3, r3, #3
 8003d02:	69fa      	ldr	r2, [r7, #28]
 8003d04:	4413      	add	r3, r2
 8003d06:	61fb      	str	r3, [r7, #28]
 8003d08:	68fb      	ldr	r3, [r7, #12]
 8003d0a:	6c99      	ldr	r1, [r3, #72]	@ 0x48
 8003d0c:	69fa      	ldr	r2, [r7, #28]
 8003d0e:	4613      	mov	r3, r2
 8003d10:	00db      	lsls	r3, r3, #3
 8003d12:	4413      	add	r3, r2
 8003d14:	00db      	lsls	r3, r3, #3
 8003d16:	440b      	add	r3, r1
 8003d18:	627b      	str	r3, [r7, #36]	@ 0x24
 8003d1a:	e036      	b.n	8003d8a <HAL_FDCAN_GetRxMessage+0x106>
 8003d1c:	68fb      	ldr	r3, [r7, #12]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8003d24:	f003 030f 	and.w	r3, r3, #15
 8003d28:	2b00      	cmp	r3, #0
 8003d2a:	d107      	bne.n	8003d3c <HAL_FDCAN_GetRxMessage+0xb8>
 8003d2c:	68fb      	ldr	r3, [r7, #12]
 8003d2e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003d30:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8003d34:	68fb      	ldr	r3, [r7, #12]
 8003d36:	661a      	str	r2, [r3, #96]	@ 0x60
 8003d38:	2301      	movs	r3, #1
 8003d3a:	e0a3      	b.n	8003e84 <HAL_FDCAN_GetRxMessage+0x200>
 8003d3c:	68fb      	ldr	r3, [r7, #12]
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8003d44:	0e1b      	lsrs	r3, r3, #24
 8003d46:	f003 0301 	and.w	r3, r3, #1
 8003d4a:	2b01      	cmp	r3, #1
 8003d4c:	d10a      	bne.n	8003d64 <HAL_FDCAN_GetRxMessage+0xe0>
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003d56:	0a1b      	lsrs	r3, r3, #8
 8003d58:	f003 0301 	and.w	r3, r3, #1
 8003d5c:	2b01      	cmp	r3, #1
 8003d5e:	d101      	bne.n	8003d64 <HAL_FDCAN_GetRxMessage+0xe0>
 8003d60:	2301      	movs	r3, #1
 8003d62:	61fb      	str	r3, [r7, #28]
 8003d64:	68fb      	ldr	r3, [r7, #12]
 8003d66:	681b      	ldr	r3, [r3, #0]
 8003d68:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8003d6c:	0a1b      	lsrs	r3, r3, #8
 8003d6e:	f003 0303 	and.w	r3, r3, #3
 8003d72:	69fa      	ldr	r2, [r7, #28]
 8003d74:	4413      	add	r3, r2
 8003d76:	61fb      	str	r3, [r7, #28]
 8003d78:	68fb      	ldr	r3, [r7, #12]
 8003d7a:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8003d7c:	69fa      	ldr	r2, [r7, #28]
 8003d7e:	4613      	mov	r3, r2
 8003d80:	00db      	lsls	r3, r3, #3
 8003d82:	4413      	add	r3, r2
 8003d84:	00db      	lsls	r3, r3, #3
 8003d86:	440b      	add	r3, r1
 8003d88:	627b      	str	r3, [r7, #36]	@ 0x24
 8003d8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003d8c:	681b      	ldr	r3, [r3, #0]
 8003d8e:	f003 4280 	and.w	r2, r3, #1073741824	@ 0x40000000
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	605a      	str	r2, [r3, #4]
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	685b      	ldr	r3, [r3, #4]
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d107      	bne.n	8003dae <HAL_FDCAN_GetRxMessage+0x12a>
 8003d9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003da0:	681b      	ldr	r3, [r3, #0]
 8003da2:	0c9b      	lsrs	r3, r3, #18
 8003da4:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	601a      	str	r2, [r3, #0]
 8003dac:	e005      	b.n	8003dba <HAL_FDCAN_GetRxMessage+0x136>
 8003dae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	601a      	str	r2, [r3, #0]
 8003dba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003dbc:	681b      	ldr	r3, [r3, #0]
 8003dbe:	f003 5200 	and.w	r2, r3, #536870912	@ 0x20000000
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	609a      	str	r2, [r3, #8]
 8003dc6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	611a      	str	r2, [r3, #16]
 8003dd2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003dd4:	3304      	adds	r3, #4
 8003dd6:	627b      	str	r3, [r7, #36]	@ 0x24
 8003dd8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	b29a      	uxth	r2, r3
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	61da      	str	r2, [r3, #28]
 8003de2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	0c1b      	lsrs	r3, r3, #16
 8003de8:	f003 020f 	and.w	r2, r3, #15
 8003dec:	687b      	ldr	r3, [r7, #4]
 8003dee:	60da      	str	r2, [r3, #12]
 8003df0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	f403 1280 	and.w	r2, r3, #1048576	@ 0x100000
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	615a      	str	r2, [r3, #20]
 8003dfc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	f403 1200 	and.w	r2, r3, #2097152	@ 0x200000
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	619a      	str	r2, [r3, #24]
 8003e08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	0e1b      	lsrs	r3, r3, #24
 8003e0e:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	621a      	str	r2, [r3, #32]
 8003e16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e18:	681b      	ldr	r3, [r3, #0]
 8003e1a:	0fda      	lsrs	r2, r3, #31
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003e20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e22:	3304      	adds	r3, #4
 8003e24:	627b      	str	r3, [r7, #36]	@ 0x24
 8003e26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e28:	617b      	str	r3, [r7, #20]
 8003e2a:	2300      	movs	r3, #0
 8003e2c:	623b      	str	r3, [r7, #32]
 8003e2e:	e00a      	b.n	8003e46 <HAL_FDCAN_GetRxMessage+0x1c2>
 8003e30:	697a      	ldr	r2, [r7, #20]
 8003e32:	6a3b      	ldr	r3, [r7, #32]
 8003e34:	441a      	add	r2, r3
 8003e36:	6839      	ldr	r1, [r7, #0]
 8003e38:	6a3b      	ldr	r3, [r7, #32]
 8003e3a:	440b      	add	r3, r1
 8003e3c:	7812      	ldrb	r2, [r2, #0]
 8003e3e:	701a      	strb	r2, [r3, #0]
 8003e40:	6a3b      	ldr	r3, [r7, #32]
 8003e42:	3301      	adds	r3, #1
 8003e44:	623b      	str	r3, [r7, #32]
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	68db      	ldr	r3, [r3, #12]
 8003e4a:	4a11      	ldr	r2, [pc, #68]	@ (8003e90 <HAL_FDCAN_GetRxMessage+0x20c>)
 8003e4c:	5cd3      	ldrb	r3, [r2, r3]
 8003e4e:	461a      	mov	r2, r3
 8003e50:	6a3b      	ldr	r3, [r7, #32]
 8003e52:	4293      	cmp	r3, r2
 8003e54:	d3ec      	bcc.n	8003e30 <HAL_FDCAN_GetRxMessage+0x1ac>
 8003e56:	68bb      	ldr	r3, [r7, #8]
 8003e58:	2b40      	cmp	r3, #64	@ 0x40
 8003e5a:	d105      	bne.n	8003e68 <HAL_FDCAN_GetRxMessage+0x1e4>
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	69fa      	ldr	r2, [r7, #28]
 8003e62:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8003e66:	e004      	b.n	8003e72 <HAL_FDCAN_GetRxMessage+0x1ee>
 8003e68:	68fb      	ldr	r3, [r7, #12]
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	69fa      	ldr	r2, [r7, #28]
 8003e6e:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 8003e72:	2300      	movs	r3, #0
 8003e74:	e006      	b.n	8003e84 <HAL_FDCAN_GetRxMessage+0x200>
 8003e76:	68fb      	ldr	r3, [r7, #12]
 8003e78:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003e7a:	f043 0208 	orr.w	r2, r3, #8
 8003e7e:	68fb      	ldr	r3, [r7, #12]
 8003e80:	661a      	str	r2, [r3, #96]	@ 0x60
 8003e82:	2301      	movs	r3, #1
 8003e84:	4618      	mov	r0, r3
 8003e86:	372c      	adds	r7, #44	@ 0x2c
 8003e88:	46bd      	mov	sp, r7
 8003e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e8e:	4770      	bx	lr
 8003e90:	08006f00 	.word	0x08006f00

08003e94 <HAL_FDCAN_GetTxFifoFreeLevel>:
 8003e94:	b480      	push	{r7}
 8003e96:	b085      	sub	sp, #20
 8003e98:	af00      	add	r7, sp, #0
 8003e9a:	6078      	str	r0, [r7, #4]
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8003ea4:	f003 0307 	and.w	r3, r3, #7
 8003ea8:	60fb      	str	r3, [r7, #12]
 8003eaa:	68fb      	ldr	r3, [r7, #12]
 8003eac:	4618      	mov	r0, r3
 8003eae:	3714      	adds	r7, #20
 8003eb0:	46bd      	mov	sp, r7
 8003eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eb6:	4770      	bx	lr

08003eb8 <HAL_FDCAN_ActivateNotification>:
 8003eb8:	b480      	push	{r7}
 8003eba:	b087      	sub	sp, #28
 8003ebc:	af00      	add	r7, sp, #0
 8003ebe:	60f8      	str	r0, [r7, #12]
 8003ec0:	60b9      	str	r1, [r7, #8]
 8003ec2:	607a      	str	r2, [r7, #4]
 8003ec4:	68fb      	ldr	r3, [r7, #12]
 8003ec6:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003eca:	75fb      	strb	r3, [r7, #23]
 8003ecc:	7dfb      	ldrb	r3, [r7, #23]
 8003ece:	2b01      	cmp	r3, #1
 8003ed0:	d003      	beq.n	8003eda <HAL_FDCAN_ActivateNotification+0x22>
 8003ed2:	7dfb      	ldrb	r3, [r7, #23]
 8003ed4:	2b02      	cmp	r3, #2
 8003ed6:	f040 80c8 	bne.w	800406a <HAL_FDCAN_ActivateNotification+0x1b2>
 8003eda:	68fb      	ldr	r3, [r7, #12]
 8003edc:	681b      	ldr	r3, [r3, #0]
 8003ede:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003ee0:	613b      	str	r3, [r7, #16]
 8003ee2:	68bb      	ldr	r3, [r7, #8]
 8003ee4:	f003 0307 	and.w	r3, r3, #7
 8003ee8:	2b00      	cmp	r3, #0
 8003eea:	d004      	beq.n	8003ef6 <HAL_FDCAN_ActivateNotification+0x3e>
 8003eec:	693b      	ldr	r3, [r7, #16]
 8003eee:	f003 0301 	and.w	r3, r3, #1
 8003ef2:	2b00      	cmp	r3, #0
 8003ef4:	d03b      	beq.n	8003f6e <HAL_FDCAN_ActivateNotification+0xb6>
 8003ef6:	68bb      	ldr	r3, [r7, #8]
 8003ef8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8003efc:	2b00      	cmp	r3, #0
 8003efe:	d004      	beq.n	8003f0a <HAL_FDCAN_ActivateNotification+0x52>
 8003f00:	693b      	ldr	r3, [r7, #16]
 8003f02:	f003 0302 	and.w	r3, r3, #2
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d031      	beq.n	8003f6e <HAL_FDCAN_ActivateNotification+0xb6>
 8003f0a:	68bb      	ldr	r3, [r7, #8]
 8003f0c:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
 8003f10:	2b00      	cmp	r3, #0
 8003f12:	d004      	beq.n	8003f1e <HAL_FDCAN_ActivateNotification+0x66>
 8003f14:	693b      	ldr	r3, [r7, #16]
 8003f16:	f003 0304 	and.w	r3, r3, #4
 8003f1a:	2b00      	cmp	r3, #0
 8003f1c:	d027      	beq.n	8003f6e <HAL_FDCAN_ActivateNotification+0xb6>
 8003f1e:	68bb      	ldr	r3, [r7, #8]
 8003f20:	f403 53f0 	and.w	r3, r3, #7680	@ 0x1e00
 8003f24:	2b00      	cmp	r3, #0
 8003f26:	d004      	beq.n	8003f32 <HAL_FDCAN_ActivateNotification+0x7a>
 8003f28:	693b      	ldr	r3, [r7, #16]
 8003f2a:	f003 0308 	and.w	r3, r3, #8
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	d01d      	beq.n	8003f6e <HAL_FDCAN_ActivateNotification+0xb6>
 8003f32:	68bb      	ldr	r3, [r7, #8]
 8003f34:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8003f38:	2b00      	cmp	r3, #0
 8003f3a:	d004      	beq.n	8003f46 <HAL_FDCAN_ActivateNotification+0x8e>
 8003f3c:	693b      	ldr	r3, [r7, #16]
 8003f3e:	f003 0310 	and.w	r3, r3, #16
 8003f42:	2b00      	cmp	r3, #0
 8003f44:	d013      	beq.n	8003f6e <HAL_FDCAN_ActivateNotification+0xb6>
 8003f46:	68bb      	ldr	r3, [r7, #8]
 8003f48:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003f4c:	2b00      	cmp	r3, #0
 8003f4e:	d004      	beq.n	8003f5a <HAL_FDCAN_ActivateNotification+0xa2>
 8003f50:	693b      	ldr	r3, [r7, #16]
 8003f52:	f003 0320 	and.w	r3, r3, #32
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	d009      	beq.n	8003f6e <HAL_FDCAN_ActivateNotification+0xb6>
 8003f5a:	68bb      	ldr	r3, [r7, #8]
 8003f5c:	f403 037c 	and.w	r3, r3, #16515072	@ 0xfc0000
 8003f60:	2b00      	cmp	r3, #0
 8003f62:	d00c      	beq.n	8003f7e <HAL_FDCAN_ActivateNotification+0xc6>
 8003f64:	693b      	ldr	r3, [r7, #16]
 8003f66:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003f6a:	2b00      	cmp	r3, #0
 8003f6c:	d107      	bne.n	8003f7e <HAL_FDCAN_ActivateNotification+0xc6>
 8003f6e:	68fb      	ldr	r3, [r7, #12]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8003f74:	68fb      	ldr	r3, [r7, #12]
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	f042 0201 	orr.w	r2, r2, #1
 8003f7c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003f7e:	68bb      	ldr	r3, [r7, #8]
 8003f80:	f003 0307 	and.w	r3, r3, #7
 8003f84:	2b00      	cmp	r3, #0
 8003f86:	d004      	beq.n	8003f92 <HAL_FDCAN_ActivateNotification+0xda>
 8003f88:	693b      	ldr	r3, [r7, #16]
 8003f8a:	f003 0301 	and.w	r3, r3, #1
 8003f8e:	2b00      	cmp	r3, #0
 8003f90:	d13b      	bne.n	800400a <HAL_FDCAN_ActivateNotification+0x152>
 8003f92:	68bb      	ldr	r3, [r7, #8]
 8003f94:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8003f98:	2b00      	cmp	r3, #0
 8003f9a:	d004      	beq.n	8003fa6 <HAL_FDCAN_ActivateNotification+0xee>
 8003f9c:	693b      	ldr	r3, [r7, #16]
 8003f9e:	f003 0302 	and.w	r3, r3, #2
 8003fa2:	2b00      	cmp	r3, #0
 8003fa4:	d131      	bne.n	800400a <HAL_FDCAN_ActivateNotification+0x152>
 8003fa6:	68bb      	ldr	r3, [r7, #8]
 8003fa8:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	d004      	beq.n	8003fba <HAL_FDCAN_ActivateNotification+0x102>
 8003fb0:	693b      	ldr	r3, [r7, #16]
 8003fb2:	f003 0304 	and.w	r3, r3, #4
 8003fb6:	2b00      	cmp	r3, #0
 8003fb8:	d127      	bne.n	800400a <HAL_FDCAN_ActivateNotification+0x152>
 8003fba:	68bb      	ldr	r3, [r7, #8]
 8003fbc:	f403 53f0 	and.w	r3, r3, #7680	@ 0x1e00
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	d004      	beq.n	8003fce <HAL_FDCAN_ActivateNotification+0x116>
 8003fc4:	693b      	ldr	r3, [r7, #16]
 8003fc6:	f003 0308 	and.w	r3, r3, #8
 8003fca:	2b00      	cmp	r3, #0
 8003fcc:	d11d      	bne.n	800400a <HAL_FDCAN_ActivateNotification+0x152>
 8003fce:	68bb      	ldr	r3, [r7, #8]
 8003fd0:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8003fd4:	2b00      	cmp	r3, #0
 8003fd6:	d004      	beq.n	8003fe2 <HAL_FDCAN_ActivateNotification+0x12a>
 8003fd8:	693b      	ldr	r3, [r7, #16]
 8003fda:	f003 0310 	and.w	r3, r3, #16
 8003fde:	2b00      	cmp	r3, #0
 8003fe0:	d113      	bne.n	800400a <HAL_FDCAN_ActivateNotification+0x152>
 8003fe2:	68bb      	ldr	r3, [r7, #8]
 8003fe4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003fe8:	2b00      	cmp	r3, #0
 8003fea:	d004      	beq.n	8003ff6 <HAL_FDCAN_ActivateNotification+0x13e>
 8003fec:	693b      	ldr	r3, [r7, #16]
 8003fee:	f003 0320 	and.w	r3, r3, #32
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d109      	bne.n	800400a <HAL_FDCAN_ActivateNotification+0x152>
 8003ff6:	68bb      	ldr	r3, [r7, #8]
 8003ff8:	f403 037c 	and.w	r3, r3, #16515072	@ 0xfc0000
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	d00c      	beq.n	800401a <HAL_FDCAN_ActivateNotification+0x162>
 8004000:	693b      	ldr	r3, [r7, #16]
 8004002:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004006:	2b00      	cmp	r3, #0
 8004008:	d007      	beq.n	800401a <HAL_FDCAN_ActivateNotification+0x162>
 800400a:	68fb      	ldr	r3, [r7, #12]
 800400c:	681b      	ldr	r3, [r3, #0]
 800400e:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004010:	68fb      	ldr	r3, [r7, #12]
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	f042 0202 	orr.w	r2, r2, #2
 8004018:	65da      	str	r2, [r3, #92]	@ 0x5c
 800401a:	68bb      	ldr	r3, [r7, #8]
 800401c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004020:	2b00      	cmp	r3, #0
 8004022:	d009      	beq.n	8004038 <HAL_FDCAN_ActivateNotification+0x180>
 8004024:	68fb      	ldr	r3, [r7, #12]
 8004026:	681b      	ldr	r3, [r3, #0]
 8004028:	f8d3 10dc 	ldr.w	r1, [r3, #220]	@ 0xdc
 800402c:	68fb      	ldr	r3, [r7, #12]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	687a      	ldr	r2, [r7, #4]
 8004032:	430a      	orrs	r2, r1
 8004034:	f8c3 20dc 	str.w	r2, [r3, #220]	@ 0xdc
 8004038:	68bb      	ldr	r3, [r7, #8]
 800403a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800403e:	2b00      	cmp	r3, #0
 8004040:	d009      	beq.n	8004056 <HAL_FDCAN_ActivateNotification+0x19e>
 8004042:	68fb      	ldr	r3, [r7, #12]
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	f8d3 10e0 	ldr.w	r1, [r3, #224]	@ 0xe0
 800404a:	68fb      	ldr	r3, [r7, #12]
 800404c:	681b      	ldr	r3, [r3, #0]
 800404e:	687a      	ldr	r2, [r7, #4]
 8004050:	430a      	orrs	r2, r1
 8004052:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	681b      	ldr	r3, [r3, #0]
 800405a:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800405c:	68fb      	ldr	r3, [r7, #12]
 800405e:	681b      	ldr	r3, [r3, #0]
 8004060:	68ba      	ldr	r2, [r7, #8]
 8004062:	430a      	orrs	r2, r1
 8004064:	655a      	str	r2, [r3, #84]	@ 0x54
 8004066:	2300      	movs	r3, #0
 8004068:	e006      	b.n	8004078 <HAL_FDCAN_ActivateNotification+0x1c0>
 800406a:	68fb      	ldr	r3, [r7, #12]
 800406c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800406e:	f043 0202 	orr.w	r2, r3, #2
 8004072:	68fb      	ldr	r3, [r7, #12]
 8004074:	661a      	str	r2, [r3, #96]	@ 0x60
 8004076:	2301      	movs	r3, #1
 8004078:	4618      	mov	r0, r3
 800407a:	371c      	adds	r7, #28
 800407c:	46bd      	mov	sp, r7
 800407e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004082:	4770      	bx	lr

08004084 <HAL_FDCAN_IRQHandler>:
 8004084:	b580      	push	{r7, lr}
 8004086:	b08c      	sub	sp, #48	@ 0x30
 8004088:	af00      	add	r7, sp, #0
 800408a:	6078      	str	r0, [r7, #4]
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004092:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8004096:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004098:	687b      	ldr	r3, [r7, #4]
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800409e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80040a0:	4013      	ands	r3, r2
 80040a2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80040aa:	f003 0307 	and.w	r3, r3, #7
 80040ae:	62bb      	str	r3, [r7, #40]	@ 0x28
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	681b      	ldr	r3, [r3, #0]
 80040b4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80040b6:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80040b8:	4013      	ands	r3, r2
 80040ba:	62bb      	str	r3, [r7, #40]	@ 0x28
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80040c2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80040c6:	627b      	str	r3, [r7, #36]	@ 0x24
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	681b      	ldr	r3, [r3, #0]
 80040cc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80040ce:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80040d0:	4013      	ands	r3, r2
 80040d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	681b      	ldr	r3, [r3, #0]
 80040d8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80040da:	f403 0371 	and.w	r3, r3, #15794176	@ 0xf10000
 80040de:	623b      	str	r3, [r7, #32]
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80040e6:	6a3a      	ldr	r2, [r7, #32]
 80040e8:	4013      	ands	r3, r2
 80040ea:	623b      	str	r3, [r7, #32]
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80040f2:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 80040f6:	61fb      	str	r3, [r7, #28]
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	681b      	ldr	r3, [r3, #0]
 80040fc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80040fe:	69fa      	ldr	r2, [r7, #28]
 8004100:	4013      	ands	r3, r2
 8004102:	61fb      	str	r3, [r7, #28]
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800410a:	61bb      	str	r3, [r7, #24]
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	681b      	ldr	r3, [r3, #0]
 8004110:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004112:	617b      	str	r3, [r7, #20]
 8004114:	697b      	ldr	r3, [r7, #20]
 8004116:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800411a:	2b00      	cmp	r3, #0
 800411c:	d00b      	beq.n	8004136 <HAL_FDCAN_IRQHandler+0xb2>
 800411e:	69bb      	ldr	r3, [r7, #24]
 8004120:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004124:	2b00      	cmp	r3, #0
 8004126:	d006      	beq.n	8004136 <HAL_FDCAN_IRQHandler+0xb2>
 8004128:	687b      	ldr	r3, [r7, #4]
 800412a:	681b      	ldr	r3, [r3, #0]
 800412c:	2240      	movs	r2, #64	@ 0x40
 800412e:	651a      	str	r2, [r3, #80]	@ 0x50
 8004130:	6878      	ldr	r0, [r7, #4]
 8004132:	f000 f916 	bl	8004362 <HAL_FDCAN_HighPriorityMessageCallback>
 8004136:	697b      	ldr	r3, [r7, #20]
 8004138:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800413c:	2b00      	cmp	r3, #0
 800413e:	d019      	beq.n	8004174 <HAL_FDCAN_IRQHandler+0xf0>
 8004140:	69bb      	ldr	r3, [r7, #24]
 8004142:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004146:	2b00      	cmp	r3, #0
 8004148:	d014      	beq.n	8004174 <HAL_FDCAN_IRQHandler+0xf0>
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8004152:	613b      	str	r3, [r7, #16]
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	681b      	ldr	r3, [r3, #0]
 8004158:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800415c:	693a      	ldr	r2, [r7, #16]
 800415e:	4013      	ands	r3, r2
 8004160:	613b      	str	r3, [r7, #16]
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	681b      	ldr	r3, [r3, #0]
 8004166:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800416a:	651a      	str	r2, [r3, #80]	@ 0x50
 800416c:	6939      	ldr	r1, [r7, #16]
 800416e:	6878      	ldr	r0, [r7, #4]
 8004170:	f000 f8d8 	bl	8004324 <HAL_FDCAN_TxBufferAbortCallback>
 8004174:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004176:	2b00      	cmp	r3, #0
 8004178:	d007      	beq.n	800418a <HAL_FDCAN_IRQHandler+0x106>
 800417a:	687b      	ldr	r3, [r7, #4]
 800417c:	681b      	ldr	r3, [r3, #0]
 800417e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004180:	651a      	str	r2, [r3, #80]	@ 0x50
 8004182:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004184:	6878      	ldr	r0, [r7, #4]
 8004186:	f000 f8a2 	bl	80042ce <HAL_FDCAN_TxEventFifoCallback>
 800418a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800418c:	2b00      	cmp	r3, #0
 800418e:	d007      	beq.n	80041a0 <HAL_FDCAN_IRQHandler+0x11c>
 8004190:	687b      	ldr	r3, [r7, #4]
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8004196:	651a      	str	r2, [r3, #80]	@ 0x50
 8004198:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800419a:	6878      	ldr	r0, [r7, #4]
 800419c:	f7fc faae 	bl	80006fc <HAL_FDCAN_RxFifo0Callback>
 80041a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80041a2:	2b00      	cmp	r3, #0
 80041a4:	d007      	beq.n	80041b6 <HAL_FDCAN_IRQHandler+0x132>
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80041ac:	651a      	str	r2, [r3, #80]	@ 0x50
 80041ae:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80041b0:	6878      	ldr	r0, [r7, #4]
 80041b2:	f000 f897 	bl	80042e4 <HAL_FDCAN_RxFifo1Callback>
 80041b6:	697b      	ldr	r3, [r7, #20]
 80041b8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80041bc:	2b00      	cmp	r3, #0
 80041be:	d00c      	beq.n	80041da <HAL_FDCAN_IRQHandler+0x156>
 80041c0:	69bb      	ldr	r3, [r7, #24]
 80041c2:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80041c6:	2b00      	cmp	r3, #0
 80041c8:	d007      	beq.n	80041da <HAL_FDCAN_IRQHandler+0x156>
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80041d2:	651a      	str	r2, [r3, #80]	@ 0x50
 80041d4:	6878      	ldr	r0, [r7, #4]
 80041d6:	f000 f890 	bl	80042fa <HAL_FDCAN_TxFifoEmptyCallback>
 80041da:	697b      	ldr	r3, [r7, #20]
 80041dc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80041e0:	2b00      	cmp	r3, #0
 80041e2:	d018      	beq.n	8004216 <HAL_FDCAN_IRQHandler+0x192>
 80041e4:	69bb      	ldr	r3, [r7, #24]
 80041e6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80041ea:	2b00      	cmp	r3, #0
 80041ec:	d013      	beq.n	8004216 <HAL_FDCAN_IRQHandler+0x192>
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	681b      	ldr	r3, [r3, #0]
 80041f2:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80041f6:	60fb      	str	r3, [r7, #12]
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004200:	68fa      	ldr	r2, [r7, #12]
 8004202:	4013      	ands	r3, r2
 8004204:	60fb      	str	r3, [r7, #12]
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	681b      	ldr	r3, [r3, #0]
 800420a:	2280      	movs	r2, #128	@ 0x80
 800420c:	651a      	str	r2, [r3, #80]	@ 0x50
 800420e:	68f9      	ldr	r1, [r7, #12]
 8004210:	6878      	ldr	r0, [r7, #4]
 8004212:	f000 f87c 	bl	800430e <HAL_FDCAN_TxBufferCompleteCallback>
 8004216:	697b      	ldr	r3, [r7, #20]
 8004218:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800421c:	2b00      	cmp	r3, #0
 800421e:	d00c      	beq.n	800423a <HAL_FDCAN_IRQHandler+0x1b6>
 8004220:	69bb      	ldr	r3, [r7, #24]
 8004222:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004226:	2b00      	cmp	r3, #0
 8004228:	d007      	beq.n	800423a <HAL_FDCAN_IRQHandler+0x1b6>
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8004232:	651a      	str	r2, [r3, #80]	@ 0x50
 8004234:	6878      	ldr	r0, [r7, #4]
 8004236:	f000 f880 	bl	800433a <HAL_FDCAN_TimestampWraparoundCallback>
 800423a:	697b      	ldr	r3, [r7, #20]
 800423c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004240:	2b00      	cmp	r3, #0
 8004242:	d00c      	beq.n	800425e <HAL_FDCAN_IRQHandler+0x1da>
 8004244:	69bb      	ldr	r3, [r7, #24]
 8004246:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800424a:	2b00      	cmp	r3, #0
 800424c:	d007      	beq.n	800425e <HAL_FDCAN_IRQHandler+0x1da>
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	681b      	ldr	r3, [r3, #0]
 8004252:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8004256:	651a      	str	r2, [r3, #80]	@ 0x50
 8004258:	6878      	ldr	r0, [r7, #4]
 800425a:	f000 f878 	bl	800434e <HAL_FDCAN_TimeoutOccurredCallback>
 800425e:	697b      	ldr	r3, [r7, #20]
 8004260:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004264:	2b00      	cmp	r3, #0
 8004266:	d00f      	beq.n	8004288 <HAL_FDCAN_IRQHandler+0x204>
 8004268:	69bb      	ldr	r3, [r7, #24]
 800426a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800426e:	2b00      	cmp	r3, #0
 8004270:	d00a      	beq.n	8004288 <HAL_FDCAN_IRQHandler+0x204>
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	681b      	ldr	r3, [r3, #0]
 8004276:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800427a:	651a      	str	r2, [r3, #80]	@ 0x50
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004280:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	661a      	str	r2, [r3, #96]	@ 0x60
 8004288:	69fb      	ldr	r3, [r7, #28]
 800428a:	2b00      	cmp	r3, #0
 800428c:	d007      	beq.n	800429e <HAL_FDCAN_IRQHandler+0x21a>
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	681b      	ldr	r3, [r3, #0]
 8004292:	69fa      	ldr	r2, [r7, #28]
 8004294:	651a      	str	r2, [r3, #80]	@ 0x50
 8004296:	69f9      	ldr	r1, [r7, #28]
 8004298:	6878      	ldr	r0, [r7, #4]
 800429a:	f000 f876 	bl	800438a <HAL_FDCAN_ErrorStatusCallback>
 800429e:	6a3b      	ldr	r3, [r7, #32]
 80042a0:	2b00      	cmp	r3, #0
 80042a2:	d009      	beq.n	80042b8 <HAL_FDCAN_IRQHandler+0x234>
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	681b      	ldr	r3, [r3, #0]
 80042a8:	6a3a      	ldr	r2, [r7, #32]
 80042aa:	651a      	str	r2, [r3, #80]	@ 0x50
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80042b0:	6a3b      	ldr	r3, [r7, #32]
 80042b2:	431a      	orrs	r2, r3
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	661a      	str	r2, [r3, #96]	@ 0x60
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80042bc:	2b00      	cmp	r3, #0
 80042be:	d002      	beq.n	80042c6 <HAL_FDCAN_IRQHandler+0x242>
 80042c0:	6878      	ldr	r0, [r7, #4]
 80042c2:	f000 f858 	bl	8004376 <HAL_FDCAN_ErrorCallback>
 80042c6:	bf00      	nop
 80042c8:	3730      	adds	r7, #48	@ 0x30
 80042ca:	46bd      	mov	sp, r7
 80042cc:	bd80      	pop	{r7, pc}

080042ce <HAL_FDCAN_TxEventFifoCallback>:
 80042ce:	b480      	push	{r7}
 80042d0:	b083      	sub	sp, #12
 80042d2:	af00      	add	r7, sp, #0
 80042d4:	6078      	str	r0, [r7, #4]
 80042d6:	6039      	str	r1, [r7, #0]
 80042d8:	bf00      	nop
 80042da:	370c      	adds	r7, #12
 80042dc:	46bd      	mov	sp, r7
 80042de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042e2:	4770      	bx	lr

080042e4 <HAL_FDCAN_RxFifo1Callback>:
 80042e4:	b480      	push	{r7}
 80042e6:	b083      	sub	sp, #12
 80042e8:	af00      	add	r7, sp, #0
 80042ea:	6078      	str	r0, [r7, #4]
 80042ec:	6039      	str	r1, [r7, #0]
 80042ee:	bf00      	nop
 80042f0:	370c      	adds	r7, #12
 80042f2:	46bd      	mov	sp, r7
 80042f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042f8:	4770      	bx	lr

080042fa <HAL_FDCAN_TxFifoEmptyCallback>:
 80042fa:	b480      	push	{r7}
 80042fc:	b083      	sub	sp, #12
 80042fe:	af00      	add	r7, sp, #0
 8004300:	6078      	str	r0, [r7, #4]
 8004302:	bf00      	nop
 8004304:	370c      	adds	r7, #12
 8004306:	46bd      	mov	sp, r7
 8004308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800430c:	4770      	bx	lr

0800430e <HAL_FDCAN_TxBufferCompleteCallback>:
 800430e:	b480      	push	{r7}
 8004310:	b083      	sub	sp, #12
 8004312:	af00      	add	r7, sp, #0
 8004314:	6078      	str	r0, [r7, #4]
 8004316:	6039      	str	r1, [r7, #0]
 8004318:	bf00      	nop
 800431a:	370c      	adds	r7, #12
 800431c:	46bd      	mov	sp, r7
 800431e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004322:	4770      	bx	lr

08004324 <HAL_FDCAN_TxBufferAbortCallback>:
 8004324:	b480      	push	{r7}
 8004326:	b083      	sub	sp, #12
 8004328:	af00      	add	r7, sp, #0
 800432a:	6078      	str	r0, [r7, #4]
 800432c:	6039      	str	r1, [r7, #0]
 800432e:	bf00      	nop
 8004330:	370c      	adds	r7, #12
 8004332:	46bd      	mov	sp, r7
 8004334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004338:	4770      	bx	lr

0800433a <HAL_FDCAN_TimestampWraparoundCallback>:
 800433a:	b480      	push	{r7}
 800433c:	b083      	sub	sp, #12
 800433e:	af00      	add	r7, sp, #0
 8004340:	6078      	str	r0, [r7, #4]
 8004342:	bf00      	nop
 8004344:	370c      	adds	r7, #12
 8004346:	46bd      	mov	sp, r7
 8004348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800434c:	4770      	bx	lr

0800434e <HAL_FDCAN_TimeoutOccurredCallback>:
 800434e:	b480      	push	{r7}
 8004350:	b083      	sub	sp, #12
 8004352:	af00      	add	r7, sp, #0
 8004354:	6078      	str	r0, [r7, #4]
 8004356:	bf00      	nop
 8004358:	370c      	adds	r7, #12
 800435a:	46bd      	mov	sp, r7
 800435c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004360:	4770      	bx	lr

08004362 <HAL_FDCAN_HighPriorityMessageCallback>:
 8004362:	b480      	push	{r7}
 8004364:	b083      	sub	sp, #12
 8004366:	af00      	add	r7, sp, #0
 8004368:	6078      	str	r0, [r7, #4]
 800436a:	bf00      	nop
 800436c:	370c      	adds	r7, #12
 800436e:	46bd      	mov	sp, r7
 8004370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004374:	4770      	bx	lr

08004376 <HAL_FDCAN_ErrorCallback>:
 8004376:	b480      	push	{r7}
 8004378:	b083      	sub	sp, #12
 800437a:	af00      	add	r7, sp, #0
 800437c:	6078      	str	r0, [r7, #4]
 800437e:	bf00      	nop
 8004380:	370c      	adds	r7, #12
 8004382:	46bd      	mov	sp, r7
 8004384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004388:	4770      	bx	lr

0800438a <HAL_FDCAN_ErrorStatusCallback>:
 800438a:	b480      	push	{r7}
 800438c:	b083      	sub	sp, #12
 800438e:	af00      	add	r7, sp, #0
 8004390:	6078      	str	r0, [r7, #4]
 8004392:	6039      	str	r1, [r7, #0]
 8004394:	bf00      	nop
 8004396:	370c      	adds	r7, #12
 8004398:	46bd      	mov	sp, r7
 800439a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800439e:	4770      	bx	lr

080043a0 <FDCAN_CalcultateRamBlockAddresses>:
 80043a0:	b480      	push	{r7}
 80043a2:	b085      	sub	sp, #20
 80043a4:	af00      	add	r7, sp, #0
 80043a6:	6078      	str	r0, [r7, #4]
 80043a8:	4b27      	ldr	r3, [pc, #156]	@ (8004448 <FDCAN_CalcultateRamBlockAddresses+0xa8>)
 80043aa:	60bb      	str	r3, [r7, #8]
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	68ba      	ldr	r2, [r7, #8]
 80043b0:	641a      	str	r2, [r3, #64]	@ 0x40
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80043ba:	f423 11f8 	bic.w	r1, r3, #2031616	@ 0x1f0000
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80043c2:	041a      	lsls	r2, r3, #16
 80043c4:	687b      	ldr	r3, [r7, #4]
 80043c6:	681b      	ldr	r3, [r3, #0]
 80043c8:	430a      	orrs	r2, r1
 80043ca:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80043ce:	68bb      	ldr	r3, [r7, #8]
 80043d0:	f103 0270 	add.w	r2, r3, #112	@ 0x70
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	645a      	str	r2, [r3, #68]	@ 0x44
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	681b      	ldr	r3, [r3, #0]
 80043dc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80043e0:	f023 6170 	bic.w	r1, r3, #251658240	@ 0xf000000
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80043e8:	061a      	lsls	r2, r3, #24
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	681b      	ldr	r3, [r3, #0]
 80043ee:	430a      	orrs	r2, r1
 80043f0:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80043f4:	68bb      	ldr	r3, [r7, #8]
 80043f6:	f103 02b0 	add.w	r2, r3, #176	@ 0xb0
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	649a      	str	r2, [r3, #72]	@ 0x48
 80043fe:	68bb      	ldr	r3, [r7, #8]
 8004400:	f503 72c4 	add.w	r2, r3, #392	@ 0x188
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	64da      	str	r2, [r3, #76]	@ 0x4c
 8004408:	68bb      	ldr	r3, [r7, #8]
 800440a:	f503 7218 	add.w	r2, r3, #608	@ 0x260
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	651a      	str	r2, [r3, #80]	@ 0x50
 8004412:	68bb      	ldr	r3, [r7, #8]
 8004414:	f503 721e 	add.w	r2, r3, #632	@ 0x278
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	655a      	str	r2, [r3, #84]	@ 0x54
 800441c:	68bb      	ldr	r3, [r7, #8]
 800441e:	60fb      	str	r3, [r7, #12]
 8004420:	e005      	b.n	800442e <FDCAN_CalcultateRamBlockAddresses+0x8e>
 8004422:	68fb      	ldr	r3, [r7, #12]
 8004424:	2200      	movs	r2, #0
 8004426:	601a      	str	r2, [r3, #0]
 8004428:	68fb      	ldr	r3, [r7, #12]
 800442a:	3304      	adds	r3, #4
 800442c:	60fb      	str	r3, [r7, #12]
 800442e:	68bb      	ldr	r3, [r7, #8]
 8004430:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 8004434:	68fa      	ldr	r2, [r7, #12]
 8004436:	429a      	cmp	r2, r3
 8004438:	d3f3      	bcc.n	8004422 <FDCAN_CalcultateRamBlockAddresses+0x82>
 800443a:	bf00      	nop
 800443c:	bf00      	nop
 800443e:	3714      	adds	r7, #20
 8004440:	46bd      	mov	sp, r7
 8004442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004446:	4770      	bx	lr
 8004448:	4000a400 	.word	0x4000a400

0800444c <FDCAN_CopyMessageToRAM>:
 800444c:	b480      	push	{r7}
 800444e:	b089      	sub	sp, #36	@ 0x24
 8004450:	af00      	add	r7, sp, #0
 8004452:	60f8      	str	r0, [r7, #12]
 8004454:	60b9      	str	r1, [r7, #8]
 8004456:	607a      	str	r2, [r7, #4]
 8004458:	603b      	str	r3, [r7, #0]
 800445a:	68bb      	ldr	r3, [r7, #8]
 800445c:	685b      	ldr	r3, [r3, #4]
 800445e:	2b00      	cmp	r3, #0
 8004460:	d10a      	bne.n	8004478 <FDCAN_CopyMessageToRAM+0x2c>
 8004462:	68bb      	ldr	r3, [r7, #8]
 8004464:	691a      	ldr	r2, [r3, #16]
 8004466:	68bb      	ldr	r3, [r7, #8]
 8004468:	689b      	ldr	r3, [r3, #8]
 800446a:	431a      	orrs	r2, r3
 800446c:	68bb      	ldr	r3, [r7, #8]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	049b      	lsls	r3, r3, #18
 8004472:	4313      	orrs	r3, r2
 8004474:	61fb      	str	r3, [r7, #28]
 8004476:	e00a      	b.n	800448e <FDCAN_CopyMessageToRAM+0x42>
 8004478:	68bb      	ldr	r3, [r7, #8]
 800447a:	691a      	ldr	r2, [r3, #16]
 800447c:	68bb      	ldr	r3, [r7, #8]
 800447e:	689b      	ldr	r3, [r3, #8]
 8004480:	431a      	orrs	r2, r3
 8004482:	68bb      	ldr	r3, [r7, #8]
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	4313      	orrs	r3, r2
 8004488:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800448c:	61fb      	str	r3, [r7, #28]
 800448e:	68bb      	ldr	r3, [r7, #8]
 8004490:	6a1b      	ldr	r3, [r3, #32]
 8004492:	061a      	lsls	r2, r3, #24
 8004494:	68bb      	ldr	r3, [r7, #8]
 8004496:	69db      	ldr	r3, [r3, #28]
 8004498:	431a      	orrs	r2, r3
 800449a:	68bb      	ldr	r3, [r7, #8]
 800449c:	699b      	ldr	r3, [r3, #24]
 800449e:	431a      	orrs	r2, r3
 80044a0:	68bb      	ldr	r3, [r7, #8]
 80044a2:	695b      	ldr	r3, [r3, #20]
 80044a4:	431a      	orrs	r2, r3
 80044a6:	68bb      	ldr	r3, [r7, #8]
 80044a8:	68db      	ldr	r3, [r3, #12]
 80044aa:	041b      	lsls	r3, r3, #16
 80044ac:	4313      	orrs	r3, r2
 80044ae:	613b      	str	r3, [r7, #16]
 80044b0:	68fb      	ldr	r3, [r7, #12]
 80044b2:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80044b4:	683a      	ldr	r2, [r7, #0]
 80044b6:	4613      	mov	r3, r2
 80044b8:	00db      	lsls	r3, r3, #3
 80044ba:	4413      	add	r3, r2
 80044bc:	00db      	lsls	r3, r3, #3
 80044be:	440b      	add	r3, r1
 80044c0:	61bb      	str	r3, [r7, #24]
 80044c2:	69bb      	ldr	r3, [r7, #24]
 80044c4:	69fa      	ldr	r2, [r7, #28]
 80044c6:	601a      	str	r2, [r3, #0]
 80044c8:	69bb      	ldr	r3, [r7, #24]
 80044ca:	3304      	adds	r3, #4
 80044cc:	61bb      	str	r3, [r7, #24]
 80044ce:	69bb      	ldr	r3, [r7, #24]
 80044d0:	693a      	ldr	r2, [r7, #16]
 80044d2:	601a      	str	r2, [r3, #0]
 80044d4:	69bb      	ldr	r3, [r7, #24]
 80044d6:	3304      	adds	r3, #4
 80044d8:	61bb      	str	r3, [r7, #24]
 80044da:	2300      	movs	r3, #0
 80044dc:	617b      	str	r3, [r7, #20]
 80044de:	e020      	b.n	8004522 <FDCAN_CopyMessageToRAM+0xd6>
 80044e0:	697b      	ldr	r3, [r7, #20]
 80044e2:	3303      	adds	r3, #3
 80044e4:	687a      	ldr	r2, [r7, #4]
 80044e6:	4413      	add	r3, r2
 80044e8:	781b      	ldrb	r3, [r3, #0]
 80044ea:	061a      	lsls	r2, r3, #24
 80044ec:	697b      	ldr	r3, [r7, #20]
 80044ee:	3302      	adds	r3, #2
 80044f0:	6879      	ldr	r1, [r7, #4]
 80044f2:	440b      	add	r3, r1
 80044f4:	781b      	ldrb	r3, [r3, #0]
 80044f6:	041b      	lsls	r3, r3, #16
 80044f8:	431a      	orrs	r2, r3
 80044fa:	697b      	ldr	r3, [r7, #20]
 80044fc:	3301      	adds	r3, #1
 80044fe:	6879      	ldr	r1, [r7, #4]
 8004500:	440b      	add	r3, r1
 8004502:	781b      	ldrb	r3, [r3, #0]
 8004504:	021b      	lsls	r3, r3, #8
 8004506:	4313      	orrs	r3, r2
 8004508:	6879      	ldr	r1, [r7, #4]
 800450a:	697a      	ldr	r2, [r7, #20]
 800450c:	440a      	add	r2, r1
 800450e:	7812      	ldrb	r2, [r2, #0]
 8004510:	431a      	orrs	r2, r3
 8004512:	69bb      	ldr	r3, [r7, #24]
 8004514:	601a      	str	r2, [r3, #0]
 8004516:	69bb      	ldr	r3, [r7, #24]
 8004518:	3304      	adds	r3, #4
 800451a:	61bb      	str	r3, [r7, #24]
 800451c:	697b      	ldr	r3, [r7, #20]
 800451e:	3304      	adds	r3, #4
 8004520:	617b      	str	r3, [r7, #20]
 8004522:	68bb      	ldr	r3, [r7, #8]
 8004524:	68db      	ldr	r3, [r3, #12]
 8004526:	4a06      	ldr	r2, [pc, #24]	@ (8004540 <FDCAN_CopyMessageToRAM+0xf4>)
 8004528:	5cd3      	ldrb	r3, [r2, r3]
 800452a:	461a      	mov	r2, r3
 800452c:	697b      	ldr	r3, [r7, #20]
 800452e:	4293      	cmp	r3, r2
 8004530:	d3d6      	bcc.n	80044e0 <FDCAN_CopyMessageToRAM+0x94>
 8004532:	bf00      	nop
 8004534:	bf00      	nop
 8004536:	3724      	adds	r7, #36	@ 0x24
 8004538:	46bd      	mov	sp, r7
 800453a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800453e:	4770      	bx	lr
 8004540:	08006f00 	.word	0x08006f00

08004544 <HAL_GPIO_Init>:
 8004544:	b480      	push	{r7}
 8004546:	b087      	sub	sp, #28
 8004548:	af00      	add	r7, sp, #0
 800454a:	6078      	str	r0, [r7, #4]
 800454c:	6039      	str	r1, [r7, #0]
 800454e:	2300      	movs	r3, #0
 8004550:	617b      	str	r3, [r7, #20]
 8004552:	e15a      	b.n	800480a <HAL_GPIO_Init+0x2c6>
 8004554:	683b      	ldr	r3, [r7, #0]
 8004556:	681a      	ldr	r2, [r3, #0]
 8004558:	2101      	movs	r1, #1
 800455a:	697b      	ldr	r3, [r7, #20]
 800455c:	fa01 f303 	lsl.w	r3, r1, r3
 8004560:	4013      	ands	r3, r2
 8004562:	60fb      	str	r3, [r7, #12]
 8004564:	68fb      	ldr	r3, [r7, #12]
 8004566:	2b00      	cmp	r3, #0
 8004568:	f000 814c 	beq.w	8004804 <HAL_GPIO_Init+0x2c0>
 800456c:	683b      	ldr	r3, [r7, #0]
 800456e:	685b      	ldr	r3, [r3, #4]
 8004570:	f003 0303 	and.w	r3, r3, #3
 8004574:	2b01      	cmp	r3, #1
 8004576:	d005      	beq.n	8004584 <HAL_GPIO_Init+0x40>
 8004578:	683b      	ldr	r3, [r7, #0]
 800457a:	685b      	ldr	r3, [r3, #4]
 800457c:	f003 0303 	and.w	r3, r3, #3
 8004580:	2b02      	cmp	r3, #2
 8004582:	d130      	bne.n	80045e6 <HAL_GPIO_Init+0xa2>
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	689b      	ldr	r3, [r3, #8]
 8004588:	613b      	str	r3, [r7, #16]
 800458a:	697b      	ldr	r3, [r7, #20]
 800458c:	005b      	lsls	r3, r3, #1
 800458e:	2203      	movs	r2, #3
 8004590:	fa02 f303 	lsl.w	r3, r2, r3
 8004594:	43db      	mvns	r3, r3
 8004596:	693a      	ldr	r2, [r7, #16]
 8004598:	4013      	ands	r3, r2
 800459a:	613b      	str	r3, [r7, #16]
 800459c:	683b      	ldr	r3, [r7, #0]
 800459e:	68da      	ldr	r2, [r3, #12]
 80045a0:	697b      	ldr	r3, [r7, #20]
 80045a2:	005b      	lsls	r3, r3, #1
 80045a4:	fa02 f303 	lsl.w	r3, r2, r3
 80045a8:	693a      	ldr	r2, [r7, #16]
 80045aa:	4313      	orrs	r3, r2
 80045ac:	613b      	str	r3, [r7, #16]
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	693a      	ldr	r2, [r7, #16]
 80045b2:	609a      	str	r2, [r3, #8]
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	685b      	ldr	r3, [r3, #4]
 80045b8:	613b      	str	r3, [r7, #16]
 80045ba:	2201      	movs	r2, #1
 80045bc:	697b      	ldr	r3, [r7, #20]
 80045be:	fa02 f303 	lsl.w	r3, r2, r3
 80045c2:	43db      	mvns	r3, r3
 80045c4:	693a      	ldr	r2, [r7, #16]
 80045c6:	4013      	ands	r3, r2
 80045c8:	613b      	str	r3, [r7, #16]
 80045ca:	683b      	ldr	r3, [r7, #0]
 80045cc:	685b      	ldr	r3, [r3, #4]
 80045ce:	091b      	lsrs	r3, r3, #4
 80045d0:	f003 0201 	and.w	r2, r3, #1
 80045d4:	697b      	ldr	r3, [r7, #20]
 80045d6:	fa02 f303 	lsl.w	r3, r2, r3
 80045da:	693a      	ldr	r2, [r7, #16]
 80045dc:	4313      	orrs	r3, r2
 80045de:	613b      	str	r3, [r7, #16]
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	693a      	ldr	r2, [r7, #16]
 80045e4:	605a      	str	r2, [r3, #4]
 80045e6:	683b      	ldr	r3, [r7, #0]
 80045e8:	685b      	ldr	r3, [r3, #4]
 80045ea:	f003 0303 	and.w	r3, r3, #3
 80045ee:	2b03      	cmp	r3, #3
 80045f0:	d017      	beq.n	8004622 <HAL_GPIO_Init+0xde>
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	68db      	ldr	r3, [r3, #12]
 80045f6:	613b      	str	r3, [r7, #16]
 80045f8:	697b      	ldr	r3, [r7, #20]
 80045fa:	005b      	lsls	r3, r3, #1
 80045fc:	2203      	movs	r2, #3
 80045fe:	fa02 f303 	lsl.w	r3, r2, r3
 8004602:	43db      	mvns	r3, r3
 8004604:	693a      	ldr	r2, [r7, #16]
 8004606:	4013      	ands	r3, r2
 8004608:	613b      	str	r3, [r7, #16]
 800460a:	683b      	ldr	r3, [r7, #0]
 800460c:	689a      	ldr	r2, [r3, #8]
 800460e:	697b      	ldr	r3, [r7, #20]
 8004610:	005b      	lsls	r3, r3, #1
 8004612:	fa02 f303 	lsl.w	r3, r2, r3
 8004616:	693a      	ldr	r2, [r7, #16]
 8004618:	4313      	orrs	r3, r2
 800461a:	613b      	str	r3, [r7, #16]
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	693a      	ldr	r2, [r7, #16]
 8004620:	60da      	str	r2, [r3, #12]
 8004622:	683b      	ldr	r3, [r7, #0]
 8004624:	685b      	ldr	r3, [r3, #4]
 8004626:	f003 0303 	and.w	r3, r3, #3
 800462a:	2b02      	cmp	r3, #2
 800462c:	d123      	bne.n	8004676 <HAL_GPIO_Init+0x132>
 800462e:	697b      	ldr	r3, [r7, #20]
 8004630:	08da      	lsrs	r2, r3, #3
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	3208      	adds	r2, #8
 8004636:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800463a:	613b      	str	r3, [r7, #16]
 800463c:	697b      	ldr	r3, [r7, #20]
 800463e:	f003 0307 	and.w	r3, r3, #7
 8004642:	009b      	lsls	r3, r3, #2
 8004644:	220f      	movs	r2, #15
 8004646:	fa02 f303 	lsl.w	r3, r2, r3
 800464a:	43db      	mvns	r3, r3
 800464c:	693a      	ldr	r2, [r7, #16]
 800464e:	4013      	ands	r3, r2
 8004650:	613b      	str	r3, [r7, #16]
 8004652:	683b      	ldr	r3, [r7, #0]
 8004654:	691a      	ldr	r2, [r3, #16]
 8004656:	697b      	ldr	r3, [r7, #20]
 8004658:	f003 0307 	and.w	r3, r3, #7
 800465c:	009b      	lsls	r3, r3, #2
 800465e:	fa02 f303 	lsl.w	r3, r2, r3
 8004662:	693a      	ldr	r2, [r7, #16]
 8004664:	4313      	orrs	r3, r2
 8004666:	613b      	str	r3, [r7, #16]
 8004668:	697b      	ldr	r3, [r7, #20]
 800466a:	08da      	lsrs	r2, r3, #3
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	3208      	adds	r2, #8
 8004670:	6939      	ldr	r1, [r7, #16]
 8004672:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	613b      	str	r3, [r7, #16]
 800467c:	697b      	ldr	r3, [r7, #20]
 800467e:	005b      	lsls	r3, r3, #1
 8004680:	2203      	movs	r2, #3
 8004682:	fa02 f303 	lsl.w	r3, r2, r3
 8004686:	43db      	mvns	r3, r3
 8004688:	693a      	ldr	r2, [r7, #16]
 800468a:	4013      	ands	r3, r2
 800468c:	613b      	str	r3, [r7, #16]
 800468e:	683b      	ldr	r3, [r7, #0]
 8004690:	685b      	ldr	r3, [r3, #4]
 8004692:	f003 0203 	and.w	r2, r3, #3
 8004696:	697b      	ldr	r3, [r7, #20]
 8004698:	005b      	lsls	r3, r3, #1
 800469a:	fa02 f303 	lsl.w	r3, r2, r3
 800469e:	693a      	ldr	r2, [r7, #16]
 80046a0:	4313      	orrs	r3, r2
 80046a2:	613b      	str	r3, [r7, #16]
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	693a      	ldr	r2, [r7, #16]
 80046a8:	601a      	str	r2, [r3, #0]
 80046aa:	683b      	ldr	r3, [r7, #0]
 80046ac:	685b      	ldr	r3, [r3, #4]
 80046ae:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80046b2:	2b00      	cmp	r3, #0
 80046b4:	f000 80a6 	beq.w	8004804 <HAL_GPIO_Init+0x2c0>
 80046b8:	4b5b      	ldr	r3, [pc, #364]	@ (8004828 <HAL_GPIO_Init+0x2e4>)
 80046ba:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80046bc:	4a5a      	ldr	r2, [pc, #360]	@ (8004828 <HAL_GPIO_Init+0x2e4>)
 80046be:	f043 0301 	orr.w	r3, r3, #1
 80046c2:	6613      	str	r3, [r2, #96]	@ 0x60
 80046c4:	4b58      	ldr	r3, [pc, #352]	@ (8004828 <HAL_GPIO_Init+0x2e4>)
 80046c6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80046c8:	f003 0301 	and.w	r3, r3, #1
 80046cc:	60bb      	str	r3, [r7, #8]
 80046ce:	68bb      	ldr	r3, [r7, #8]
 80046d0:	4a56      	ldr	r2, [pc, #344]	@ (800482c <HAL_GPIO_Init+0x2e8>)
 80046d2:	697b      	ldr	r3, [r7, #20]
 80046d4:	089b      	lsrs	r3, r3, #2
 80046d6:	3302      	adds	r3, #2
 80046d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80046dc:	613b      	str	r3, [r7, #16]
 80046de:	697b      	ldr	r3, [r7, #20]
 80046e0:	f003 0303 	and.w	r3, r3, #3
 80046e4:	009b      	lsls	r3, r3, #2
 80046e6:	220f      	movs	r2, #15
 80046e8:	fa02 f303 	lsl.w	r3, r2, r3
 80046ec:	43db      	mvns	r3, r3
 80046ee:	693a      	ldr	r2, [r7, #16]
 80046f0:	4013      	ands	r3, r2
 80046f2:	613b      	str	r3, [r7, #16]
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80046fa:	d01f      	beq.n	800473c <HAL_GPIO_Init+0x1f8>
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	4a4c      	ldr	r2, [pc, #304]	@ (8004830 <HAL_GPIO_Init+0x2ec>)
 8004700:	4293      	cmp	r3, r2
 8004702:	d019      	beq.n	8004738 <HAL_GPIO_Init+0x1f4>
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	4a4b      	ldr	r2, [pc, #300]	@ (8004834 <HAL_GPIO_Init+0x2f0>)
 8004708:	4293      	cmp	r3, r2
 800470a:	d013      	beq.n	8004734 <HAL_GPIO_Init+0x1f0>
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	4a4a      	ldr	r2, [pc, #296]	@ (8004838 <HAL_GPIO_Init+0x2f4>)
 8004710:	4293      	cmp	r3, r2
 8004712:	d00d      	beq.n	8004730 <HAL_GPIO_Init+0x1ec>
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	4a49      	ldr	r2, [pc, #292]	@ (800483c <HAL_GPIO_Init+0x2f8>)
 8004718:	4293      	cmp	r3, r2
 800471a:	d007      	beq.n	800472c <HAL_GPIO_Init+0x1e8>
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	4a48      	ldr	r2, [pc, #288]	@ (8004840 <HAL_GPIO_Init+0x2fc>)
 8004720:	4293      	cmp	r3, r2
 8004722:	d101      	bne.n	8004728 <HAL_GPIO_Init+0x1e4>
 8004724:	2305      	movs	r3, #5
 8004726:	e00a      	b.n	800473e <HAL_GPIO_Init+0x1fa>
 8004728:	2306      	movs	r3, #6
 800472a:	e008      	b.n	800473e <HAL_GPIO_Init+0x1fa>
 800472c:	2304      	movs	r3, #4
 800472e:	e006      	b.n	800473e <HAL_GPIO_Init+0x1fa>
 8004730:	2303      	movs	r3, #3
 8004732:	e004      	b.n	800473e <HAL_GPIO_Init+0x1fa>
 8004734:	2302      	movs	r3, #2
 8004736:	e002      	b.n	800473e <HAL_GPIO_Init+0x1fa>
 8004738:	2301      	movs	r3, #1
 800473a:	e000      	b.n	800473e <HAL_GPIO_Init+0x1fa>
 800473c:	2300      	movs	r3, #0
 800473e:	697a      	ldr	r2, [r7, #20]
 8004740:	f002 0203 	and.w	r2, r2, #3
 8004744:	0092      	lsls	r2, r2, #2
 8004746:	4093      	lsls	r3, r2
 8004748:	693a      	ldr	r2, [r7, #16]
 800474a:	4313      	orrs	r3, r2
 800474c:	613b      	str	r3, [r7, #16]
 800474e:	4937      	ldr	r1, [pc, #220]	@ (800482c <HAL_GPIO_Init+0x2e8>)
 8004750:	697b      	ldr	r3, [r7, #20]
 8004752:	089b      	lsrs	r3, r3, #2
 8004754:	3302      	adds	r3, #2
 8004756:	693a      	ldr	r2, [r7, #16]
 8004758:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800475c:	4b39      	ldr	r3, [pc, #228]	@ (8004844 <HAL_GPIO_Init+0x300>)
 800475e:	689b      	ldr	r3, [r3, #8]
 8004760:	613b      	str	r3, [r7, #16]
 8004762:	68fb      	ldr	r3, [r7, #12]
 8004764:	43db      	mvns	r3, r3
 8004766:	693a      	ldr	r2, [r7, #16]
 8004768:	4013      	ands	r3, r2
 800476a:	613b      	str	r3, [r7, #16]
 800476c:	683b      	ldr	r3, [r7, #0]
 800476e:	685b      	ldr	r3, [r3, #4]
 8004770:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004774:	2b00      	cmp	r3, #0
 8004776:	d003      	beq.n	8004780 <HAL_GPIO_Init+0x23c>
 8004778:	693a      	ldr	r2, [r7, #16]
 800477a:	68fb      	ldr	r3, [r7, #12]
 800477c:	4313      	orrs	r3, r2
 800477e:	613b      	str	r3, [r7, #16]
 8004780:	4a30      	ldr	r2, [pc, #192]	@ (8004844 <HAL_GPIO_Init+0x300>)
 8004782:	693b      	ldr	r3, [r7, #16]
 8004784:	6093      	str	r3, [r2, #8]
 8004786:	4b2f      	ldr	r3, [pc, #188]	@ (8004844 <HAL_GPIO_Init+0x300>)
 8004788:	68db      	ldr	r3, [r3, #12]
 800478a:	613b      	str	r3, [r7, #16]
 800478c:	68fb      	ldr	r3, [r7, #12]
 800478e:	43db      	mvns	r3, r3
 8004790:	693a      	ldr	r2, [r7, #16]
 8004792:	4013      	ands	r3, r2
 8004794:	613b      	str	r3, [r7, #16]
 8004796:	683b      	ldr	r3, [r7, #0]
 8004798:	685b      	ldr	r3, [r3, #4]
 800479a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800479e:	2b00      	cmp	r3, #0
 80047a0:	d003      	beq.n	80047aa <HAL_GPIO_Init+0x266>
 80047a2:	693a      	ldr	r2, [r7, #16]
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	4313      	orrs	r3, r2
 80047a8:	613b      	str	r3, [r7, #16]
 80047aa:	4a26      	ldr	r2, [pc, #152]	@ (8004844 <HAL_GPIO_Init+0x300>)
 80047ac:	693b      	ldr	r3, [r7, #16]
 80047ae:	60d3      	str	r3, [r2, #12]
 80047b0:	4b24      	ldr	r3, [pc, #144]	@ (8004844 <HAL_GPIO_Init+0x300>)
 80047b2:	685b      	ldr	r3, [r3, #4]
 80047b4:	613b      	str	r3, [r7, #16]
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	43db      	mvns	r3, r3
 80047ba:	693a      	ldr	r2, [r7, #16]
 80047bc:	4013      	ands	r3, r2
 80047be:	613b      	str	r3, [r7, #16]
 80047c0:	683b      	ldr	r3, [r7, #0]
 80047c2:	685b      	ldr	r3, [r3, #4]
 80047c4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80047c8:	2b00      	cmp	r3, #0
 80047ca:	d003      	beq.n	80047d4 <HAL_GPIO_Init+0x290>
 80047cc:	693a      	ldr	r2, [r7, #16]
 80047ce:	68fb      	ldr	r3, [r7, #12]
 80047d0:	4313      	orrs	r3, r2
 80047d2:	613b      	str	r3, [r7, #16]
 80047d4:	4a1b      	ldr	r2, [pc, #108]	@ (8004844 <HAL_GPIO_Init+0x300>)
 80047d6:	693b      	ldr	r3, [r7, #16]
 80047d8:	6053      	str	r3, [r2, #4]
 80047da:	4b1a      	ldr	r3, [pc, #104]	@ (8004844 <HAL_GPIO_Init+0x300>)
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	613b      	str	r3, [r7, #16]
 80047e0:	68fb      	ldr	r3, [r7, #12]
 80047e2:	43db      	mvns	r3, r3
 80047e4:	693a      	ldr	r2, [r7, #16]
 80047e6:	4013      	ands	r3, r2
 80047e8:	613b      	str	r3, [r7, #16]
 80047ea:	683b      	ldr	r3, [r7, #0]
 80047ec:	685b      	ldr	r3, [r3, #4]
 80047ee:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d003      	beq.n	80047fe <HAL_GPIO_Init+0x2ba>
 80047f6:	693a      	ldr	r2, [r7, #16]
 80047f8:	68fb      	ldr	r3, [r7, #12]
 80047fa:	4313      	orrs	r3, r2
 80047fc:	613b      	str	r3, [r7, #16]
 80047fe:	4a11      	ldr	r2, [pc, #68]	@ (8004844 <HAL_GPIO_Init+0x300>)
 8004800:	693b      	ldr	r3, [r7, #16]
 8004802:	6013      	str	r3, [r2, #0]
 8004804:	697b      	ldr	r3, [r7, #20]
 8004806:	3301      	adds	r3, #1
 8004808:	617b      	str	r3, [r7, #20]
 800480a:	683b      	ldr	r3, [r7, #0]
 800480c:	681a      	ldr	r2, [r3, #0]
 800480e:	697b      	ldr	r3, [r7, #20]
 8004810:	fa22 f303 	lsr.w	r3, r2, r3
 8004814:	2b00      	cmp	r3, #0
 8004816:	f47f ae9d 	bne.w	8004554 <HAL_GPIO_Init+0x10>
 800481a:	bf00      	nop
 800481c:	bf00      	nop
 800481e:	371c      	adds	r7, #28
 8004820:	46bd      	mov	sp, r7
 8004822:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004826:	4770      	bx	lr
 8004828:	40021000 	.word	0x40021000
 800482c:	40010000 	.word	0x40010000
 8004830:	48000400 	.word	0x48000400
 8004834:	48000800 	.word	0x48000800
 8004838:	48000c00 	.word	0x48000c00
 800483c:	48001000 	.word	0x48001000
 8004840:	48001400 	.word	0x48001400
 8004844:	40010400 	.word	0x40010400

08004848 <HAL_GPIO_WritePin>:
 8004848:	b480      	push	{r7}
 800484a:	b083      	sub	sp, #12
 800484c:	af00      	add	r7, sp, #0
 800484e:	6078      	str	r0, [r7, #4]
 8004850:	460b      	mov	r3, r1
 8004852:	807b      	strh	r3, [r7, #2]
 8004854:	4613      	mov	r3, r2
 8004856:	707b      	strb	r3, [r7, #1]
 8004858:	787b      	ldrb	r3, [r7, #1]
 800485a:	2b00      	cmp	r3, #0
 800485c:	d003      	beq.n	8004866 <HAL_GPIO_WritePin+0x1e>
 800485e:	887a      	ldrh	r2, [r7, #2]
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	619a      	str	r2, [r3, #24]
 8004864:	e002      	b.n	800486c <HAL_GPIO_WritePin+0x24>
 8004866:	887a      	ldrh	r2, [r7, #2]
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	629a      	str	r2, [r3, #40]	@ 0x28
 800486c:	bf00      	nop
 800486e:	370c      	adds	r7, #12
 8004870:	46bd      	mov	sp, r7
 8004872:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004876:	4770      	bx	lr

08004878 <HAL_PWREx_ControlVoltageScaling>:
 8004878:	b480      	push	{r7}
 800487a:	b085      	sub	sp, #20
 800487c:	af00      	add	r7, sp, #0
 800487e:	6078      	str	r0, [r7, #4]
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	2b00      	cmp	r3, #0
 8004884:	d141      	bne.n	800490a <HAL_PWREx_ControlVoltageScaling+0x92>
 8004886:	4b4b      	ldr	r3, [pc, #300]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004888:	681b      	ldr	r3, [r3, #0]
 800488a:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800488e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004892:	d131      	bne.n	80048f8 <HAL_PWREx_ControlVoltageScaling+0x80>
 8004894:	4b47      	ldr	r3, [pc, #284]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004896:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800489a:	4a46      	ldr	r2, [pc, #280]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800489c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80048a0:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 80048a4:	4b43      	ldr	r3, [pc, #268]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80048a6:	681b      	ldr	r3, [r3, #0]
 80048a8:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 80048ac:	4a41      	ldr	r2, [pc, #260]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80048ae:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80048b2:	6013      	str	r3, [r2, #0]
 80048b4:	4b40      	ldr	r3, [pc, #256]	@ (80049b8 <HAL_PWREx_ControlVoltageScaling+0x140>)
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	2232      	movs	r2, #50	@ 0x32
 80048ba:	fb02 f303 	mul.w	r3, r2, r3
 80048be:	4a3f      	ldr	r2, [pc, #252]	@ (80049bc <HAL_PWREx_ControlVoltageScaling+0x144>)
 80048c0:	fba2 2303 	umull	r2, r3, r2, r3
 80048c4:	0c9b      	lsrs	r3, r3, #18
 80048c6:	3301      	adds	r3, #1
 80048c8:	60fb      	str	r3, [r7, #12]
 80048ca:	e002      	b.n	80048d2 <HAL_PWREx_ControlVoltageScaling+0x5a>
 80048cc:	68fb      	ldr	r3, [r7, #12]
 80048ce:	3b01      	subs	r3, #1
 80048d0:	60fb      	str	r3, [r7, #12]
 80048d2:	4b38      	ldr	r3, [pc, #224]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80048d4:	695b      	ldr	r3, [r3, #20]
 80048d6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80048da:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80048de:	d102      	bne.n	80048e6 <HAL_PWREx_ControlVoltageScaling+0x6e>
 80048e0:	68fb      	ldr	r3, [r7, #12]
 80048e2:	2b00      	cmp	r3, #0
 80048e4:	d1f2      	bne.n	80048cc <HAL_PWREx_ControlVoltageScaling+0x54>
 80048e6:	4b33      	ldr	r3, [pc, #204]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80048e8:	695b      	ldr	r3, [r3, #20]
 80048ea:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80048ee:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80048f2:	d158      	bne.n	80049a6 <HAL_PWREx_ControlVoltageScaling+0x12e>
 80048f4:	2303      	movs	r3, #3
 80048f6:	e057      	b.n	80049a8 <HAL_PWREx_ControlVoltageScaling+0x130>
 80048f8:	4b2e      	ldr	r3, [pc, #184]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80048fa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80048fe:	4a2d      	ldr	r2, [pc, #180]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004900:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004904:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004908:	e04d      	b.n	80049a6 <HAL_PWREx_ControlVoltageScaling+0x12e>
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004910:	d141      	bne.n	8004996 <HAL_PWREx_ControlVoltageScaling+0x11e>
 8004912:	4b28      	ldr	r3, [pc, #160]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800491a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800491e:	d131      	bne.n	8004984 <HAL_PWREx_ControlVoltageScaling+0x10c>
 8004920:	4b24      	ldr	r3, [pc, #144]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004922:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004926:	4a23      	ldr	r2, [pc, #140]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004928:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800492c:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004930:	4b20      	ldr	r3, [pc, #128]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8004938:	4a1e      	ldr	r2, [pc, #120]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800493a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800493e:	6013      	str	r3, [r2, #0]
 8004940:	4b1d      	ldr	r3, [pc, #116]	@ (80049b8 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	2232      	movs	r2, #50	@ 0x32
 8004946:	fb02 f303 	mul.w	r3, r2, r3
 800494a:	4a1c      	ldr	r2, [pc, #112]	@ (80049bc <HAL_PWREx_ControlVoltageScaling+0x144>)
 800494c:	fba2 2303 	umull	r2, r3, r2, r3
 8004950:	0c9b      	lsrs	r3, r3, #18
 8004952:	3301      	adds	r3, #1
 8004954:	60fb      	str	r3, [r7, #12]
 8004956:	e002      	b.n	800495e <HAL_PWREx_ControlVoltageScaling+0xe6>
 8004958:	68fb      	ldr	r3, [r7, #12]
 800495a:	3b01      	subs	r3, #1
 800495c:	60fb      	str	r3, [r7, #12]
 800495e:	4b15      	ldr	r3, [pc, #84]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004960:	695b      	ldr	r3, [r3, #20]
 8004962:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004966:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800496a:	d102      	bne.n	8004972 <HAL_PWREx_ControlVoltageScaling+0xfa>
 800496c:	68fb      	ldr	r3, [r7, #12]
 800496e:	2b00      	cmp	r3, #0
 8004970:	d1f2      	bne.n	8004958 <HAL_PWREx_ControlVoltageScaling+0xe0>
 8004972:	4b10      	ldr	r3, [pc, #64]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004974:	695b      	ldr	r3, [r3, #20]
 8004976:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800497a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800497e:	d112      	bne.n	80049a6 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004980:	2303      	movs	r3, #3
 8004982:	e011      	b.n	80049a8 <HAL_PWREx_ControlVoltageScaling+0x130>
 8004984:	4b0b      	ldr	r3, [pc, #44]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004986:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800498a:	4a0a      	ldr	r2, [pc, #40]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800498c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004990:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004994:	e007      	b.n	80049a6 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004996:	4b07      	ldr	r3, [pc, #28]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 800499e:	4a05      	ldr	r2, [pc, #20]	@ (80049b4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80049a0:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80049a4:	6013      	str	r3, [r2, #0]
 80049a6:	2300      	movs	r3, #0
 80049a8:	4618      	mov	r0, r3
 80049aa:	3714      	adds	r7, #20
 80049ac:	46bd      	mov	sp, r7
 80049ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049b2:	4770      	bx	lr
 80049b4:	40007000 	.word	0x40007000
 80049b8:	20000000 	.word	0x20000000
 80049bc:	431bde83 	.word	0x431bde83

080049c0 <HAL_PWREx_DisableUCPDDeadBattery>:
 80049c0:	b480      	push	{r7}
 80049c2:	af00      	add	r7, sp, #0
 80049c4:	4b05      	ldr	r3, [pc, #20]	@ (80049dc <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 80049c6:	689b      	ldr	r3, [r3, #8]
 80049c8:	4a04      	ldr	r2, [pc, #16]	@ (80049dc <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 80049ca:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80049ce:	6093      	str	r3, [r2, #8]
 80049d0:	bf00      	nop
 80049d2:	46bd      	mov	sp, r7
 80049d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049d8:	4770      	bx	lr
 80049da:	bf00      	nop
 80049dc:	40007000 	.word	0x40007000

080049e0 <HAL_RCC_OscConfig>:
 80049e0:	b580      	push	{r7, lr}
 80049e2:	b088      	sub	sp, #32
 80049e4:	af00      	add	r7, sp, #0
 80049e6:	6078      	str	r0, [r7, #4]
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	2b00      	cmp	r3, #0
 80049ec:	d101      	bne.n	80049f2 <HAL_RCC_OscConfig+0x12>
 80049ee:	2301      	movs	r3, #1
 80049f0:	e2fe      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	681b      	ldr	r3, [r3, #0]
 80049f6:	f003 0301 	and.w	r3, r3, #1
 80049fa:	2b00      	cmp	r3, #0
 80049fc:	d075      	beq.n	8004aea <HAL_RCC_OscConfig+0x10a>
 80049fe:	4b97      	ldr	r3, [pc, #604]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a00:	689b      	ldr	r3, [r3, #8]
 8004a02:	f003 030c 	and.w	r3, r3, #12
 8004a06:	61bb      	str	r3, [r7, #24]
 8004a08:	4b94      	ldr	r3, [pc, #592]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a0a:	68db      	ldr	r3, [r3, #12]
 8004a0c:	f003 0303 	and.w	r3, r3, #3
 8004a10:	617b      	str	r3, [r7, #20]
 8004a12:	69bb      	ldr	r3, [r7, #24]
 8004a14:	2b0c      	cmp	r3, #12
 8004a16:	d102      	bne.n	8004a1e <HAL_RCC_OscConfig+0x3e>
 8004a18:	697b      	ldr	r3, [r7, #20]
 8004a1a:	2b03      	cmp	r3, #3
 8004a1c:	d002      	beq.n	8004a24 <HAL_RCC_OscConfig+0x44>
 8004a1e:	69bb      	ldr	r3, [r7, #24]
 8004a20:	2b08      	cmp	r3, #8
 8004a22:	d10b      	bne.n	8004a3c <HAL_RCC_OscConfig+0x5c>
 8004a24:	4b8d      	ldr	r3, [pc, #564]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004a2c:	2b00      	cmp	r3, #0
 8004a2e:	d05b      	beq.n	8004ae8 <HAL_RCC_OscConfig+0x108>
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	685b      	ldr	r3, [r3, #4]
 8004a34:	2b00      	cmp	r3, #0
 8004a36:	d157      	bne.n	8004ae8 <HAL_RCC_OscConfig+0x108>
 8004a38:	2301      	movs	r3, #1
 8004a3a:	e2d9      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	685b      	ldr	r3, [r3, #4]
 8004a40:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004a44:	d106      	bne.n	8004a54 <HAL_RCC_OscConfig+0x74>
 8004a46:	4b85      	ldr	r3, [pc, #532]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a48:	681b      	ldr	r3, [r3, #0]
 8004a4a:	4a84      	ldr	r2, [pc, #528]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a4c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004a50:	6013      	str	r3, [r2, #0]
 8004a52:	e01d      	b.n	8004a90 <HAL_RCC_OscConfig+0xb0>
 8004a54:	687b      	ldr	r3, [r7, #4]
 8004a56:	685b      	ldr	r3, [r3, #4]
 8004a58:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004a5c:	d10c      	bne.n	8004a78 <HAL_RCC_OscConfig+0x98>
 8004a5e:	4b7f      	ldr	r3, [pc, #508]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	4a7e      	ldr	r2, [pc, #504]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a64:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004a68:	6013      	str	r3, [r2, #0]
 8004a6a:	4b7c      	ldr	r3, [pc, #496]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	4a7b      	ldr	r2, [pc, #492]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a70:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004a74:	6013      	str	r3, [r2, #0]
 8004a76:	e00b      	b.n	8004a90 <HAL_RCC_OscConfig+0xb0>
 8004a78:	4b78      	ldr	r3, [pc, #480]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	4a77      	ldr	r2, [pc, #476]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a7e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004a82:	6013      	str	r3, [r2, #0]
 8004a84:	4b75      	ldr	r3, [pc, #468]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a86:	681b      	ldr	r3, [r3, #0]
 8004a88:	4a74      	ldr	r2, [pc, #464]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004a8a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004a8e:	6013      	str	r3, [r2, #0]
 8004a90:	687b      	ldr	r3, [r7, #4]
 8004a92:	685b      	ldr	r3, [r3, #4]
 8004a94:	2b00      	cmp	r3, #0
 8004a96:	d013      	beq.n	8004ac0 <HAL_RCC_OscConfig+0xe0>
 8004a98:	f7fd f9c0 	bl	8001e1c <HAL_GetTick>
 8004a9c:	6138      	str	r0, [r7, #16]
 8004a9e:	e008      	b.n	8004ab2 <HAL_RCC_OscConfig+0xd2>
 8004aa0:	f7fd f9bc 	bl	8001e1c <HAL_GetTick>
 8004aa4:	4602      	mov	r2, r0
 8004aa6:	693b      	ldr	r3, [r7, #16]
 8004aa8:	1ad3      	subs	r3, r2, r3
 8004aaa:	2b64      	cmp	r3, #100	@ 0x64
 8004aac:	d901      	bls.n	8004ab2 <HAL_RCC_OscConfig+0xd2>
 8004aae:	2303      	movs	r3, #3
 8004ab0:	e29e      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004ab2:	4b6a      	ldr	r3, [pc, #424]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004aba:	2b00      	cmp	r3, #0
 8004abc:	d0f0      	beq.n	8004aa0 <HAL_RCC_OscConfig+0xc0>
 8004abe:	e014      	b.n	8004aea <HAL_RCC_OscConfig+0x10a>
 8004ac0:	f7fd f9ac 	bl	8001e1c <HAL_GetTick>
 8004ac4:	6138      	str	r0, [r7, #16]
 8004ac6:	e008      	b.n	8004ada <HAL_RCC_OscConfig+0xfa>
 8004ac8:	f7fd f9a8 	bl	8001e1c <HAL_GetTick>
 8004acc:	4602      	mov	r2, r0
 8004ace:	693b      	ldr	r3, [r7, #16]
 8004ad0:	1ad3      	subs	r3, r2, r3
 8004ad2:	2b64      	cmp	r3, #100	@ 0x64
 8004ad4:	d901      	bls.n	8004ada <HAL_RCC_OscConfig+0xfa>
 8004ad6:	2303      	movs	r3, #3
 8004ad8:	e28a      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004ada:	4b60      	ldr	r3, [pc, #384]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004adc:	681b      	ldr	r3, [r3, #0]
 8004ade:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004ae2:	2b00      	cmp	r3, #0
 8004ae4:	d1f0      	bne.n	8004ac8 <HAL_RCC_OscConfig+0xe8>
 8004ae6:	e000      	b.n	8004aea <HAL_RCC_OscConfig+0x10a>
 8004ae8:	bf00      	nop
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	681b      	ldr	r3, [r3, #0]
 8004aee:	f003 0302 	and.w	r3, r3, #2
 8004af2:	2b00      	cmp	r3, #0
 8004af4:	d075      	beq.n	8004be2 <HAL_RCC_OscConfig+0x202>
 8004af6:	4b59      	ldr	r3, [pc, #356]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004af8:	689b      	ldr	r3, [r3, #8]
 8004afa:	f003 030c 	and.w	r3, r3, #12
 8004afe:	61bb      	str	r3, [r7, #24]
 8004b00:	4b56      	ldr	r3, [pc, #344]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004b02:	68db      	ldr	r3, [r3, #12]
 8004b04:	f003 0303 	and.w	r3, r3, #3
 8004b08:	617b      	str	r3, [r7, #20]
 8004b0a:	69bb      	ldr	r3, [r7, #24]
 8004b0c:	2b0c      	cmp	r3, #12
 8004b0e:	d102      	bne.n	8004b16 <HAL_RCC_OscConfig+0x136>
 8004b10:	697b      	ldr	r3, [r7, #20]
 8004b12:	2b02      	cmp	r3, #2
 8004b14:	d002      	beq.n	8004b1c <HAL_RCC_OscConfig+0x13c>
 8004b16:	69bb      	ldr	r3, [r7, #24]
 8004b18:	2b04      	cmp	r3, #4
 8004b1a:	d11f      	bne.n	8004b5c <HAL_RCC_OscConfig+0x17c>
 8004b1c:	4b4f      	ldr	r3, [pc, #316]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004b1e:	681b      	ldr	r3, [r3, #0]
 8004b20:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004b24:	2b00      	cmp	r3, #0
 8004b26:	d005      	beq.n	8004b34 <HAL_RCC_OscConfig+0x154>
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	68db      	ldr	r3, [r3, #12]
 8004b2c:	2b00      	cmp	r3, #0
 8004b2e:	d101      	bne.n	8004b34 <HAL_RCC_OscConfig+0x154>
 8004b30:	2301      	movs	r3, #1
 8004b32:	e25d      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004b34:	4b49      	ldr	r3, [pc, #292]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004b36:	685b      	ldr	r3, [r3, #4]
 8004b38:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	691b      	ldr	r3, [r3, #16]
 8004b40:	061b      	lsls	r3, r3, #24
 8004b42:	4946      	ldr	r1, [pc, #280]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004b44:	4313      	orrs	r3, r2
 8004b46:	604b      	str	r3, [r1, #4]
 8004b48:	4b45      	ldr	r3, [pc, #276]	@ (8004c60 <HAL_RCC_OscConfig+0x280>)
 8004b4a:	681b      	ldr	r3, [r3, #0]
 8004b4c:	4618      	mov	r0, r3
 8004b4e:	f7fd f919 	bl	8001d84 <HAL_InitTick>
 8004b52:	4603      	mov	r3, r0
 8004b54:	2b00      	cmp	r3, #0
 8004b56:	d043      	beq.n	8004be0 <HAL_RCC_OscConfig+0x200>
 8004b58:	2301      	movs	r3, #1
 8004b5a:	e249      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	68db      	ldr	r3, [r3, #12]
 8004b60:	2b00      	cmp	r3, #0
 8004b62:	d023      	beq.n	8004bac <HAL_RCC_OscConfig+0x1cc>
 8004b64:	4b3d      	ldr	r3, [pc, #244]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004b66:	681b      	ldr	r3, [r3, #0]
 8004b68:	4a3c      	ldr	r2, [pc, #240]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004b6a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004b6e:	6013      	str	r3, [r2, #0]
 8004b70:	f7fd f954 	bl	8001e1c <HAL_GetTick>
 8004b74:	6138      	str	r0, [r7, #16]
 8004b76:	e008      	b.n	8004b8a <HAL_RCC_OscConfig+0x1aa>
 8004b78:	f7fd f950 	bl	8001e1c <HAL_GetTick>
 8004b7c:	4602      	mov	r2, r0
 8004b7e:	693b      	ldr	r3, [r7, #16]
 8004b80:	1ad3      	subs	r3, r2, r3
 8004b82:	2b02      	cmp	r3, #2
 8004b84:	d901      	bls.n	8004b8a <HAL_RCC_OscConfig+0x1aa>
 8004b86:	2303      	movs	r3, #3
 8004b88:	e232      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004b8a:	4b34      	ldr	r3, [pc, #208]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004b8c:	681b      	ldr	r3, [r3, #0]
 8004b8e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004b92:	2b00      	cmp	r3, #0
 8004b94:	d0f0      	beq.n	8004b78 <HAL_RCC_OscConfig+0x198>
 8004b96:	4b31      	ldr	r3, [pc, #196]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004b98:	685b      	ldr	r3, [r3, #4]
 8004b9a:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8004b9e:	687b      	ldr	r3, [r7, #4]
 8004ba0:	691b      	ldr	r3, [r3, #16]
 8004ba2:	061b      	lsls	r3, r3, #24
 8004ba4:	492d      	ldr	r1, [pc, #180]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004ba6:	4313      	orrs	r3, r2
 8004ba8:	604b      	str	r3, [r1, #4]
 8004baa:	e01a      	b.n	8004be2 <HAL_RCC_OscConfig+0x202>
 8004bac:	4b2b      	ldr	r3, [pc, #172]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	4a2a      	ldr	r2, [pc, #168]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004bb2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004bb6:	6013      	str	r3, [r2, #0]
 8004bb8:	f7fd f930 	bl	8001e1c <HAL_GetTick>
 8004bbc:	6138      	str	r0, [r7, #16]
 8004bbe:	e008      	b.n	8004bd2 <HAL_RCC_OscConfig+0x1f2>
 8004bc0:	f7fd f92c 	bl	8001e1c <HAL_GetTick>
 8004bc4:	4602      	mov	r2, r0
 8004bc6:	693b      	ldr	r3, [r7, #16]
 8004bc8:	1ad3      	subs	r3, r2, r3
 8004bca:	2b02      	cmp	r3, #2
 8004bcc:	d901      	bls.n	8004bd2 <HAL_RCC_OscConfig+0x1f2>
 8004bce:	2303      	movs	r3, #3
 8004bd0:	e20e      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004bd2:	4b22      	ldr	r3, [pc, #136]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004bda:	2b00      	cmp	r3, #0
 8004bdc:	d1f0      	bne.n	8004bc0 <HAL_RCC_OscConfig+0x1e0>
 8004bde:	e000      	b.n	8004be2 <HAL_RCC_OscConfig+0x202>
 8004be0:	bf00      	nop
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	f003 0308 	and.w	r3, r3, #8
 8004bea:	2b00      	cmp	r3, #0
 8004bec:	d041      	beq.n	8004c72 <HAL_RCC_OscConfig+0x292>
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	695b      	ldr	r3, [r3, #20]
 8004bf2:	2b00      	cmp	r3, #0
 8004bf4:	d01c      	beq.n	8004c30 <HAL_RCC_OscConfig+0x250>
 8004bf6:	4b19      	ldr	r3, [pc, #100]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004bf8:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004bfc:	4a17      	ldr	r2, [pc, #92]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004bfe:	f043 0301 	orr.w	r3, r3, #1
 8004c02:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8004c06:	f7fd f909 	bl	8001e1c <HAL_GetTick>
 8004c0a:	6138      	str	r0, [r7, #16]
 8004c0c:	e008      	b.n	8004c20 <HAL_RCC_OscConfig+0x240>
 8004c0e:	f7fd f905 	bl	8001e1c <HAL_GetTick>
 8004c12:	4602      	mov	r2, r0
 8004c14:	693b      	ldr	r3, [r7, #16]
 8004c16:	1ad3      	subs	r3, r2, r3
 8004c18:	2b02      	cmp	r3, #2
 8004c1a:	d901      	bls.n	8004c20 <HAL_RCC_OscConfig+0x240>
 8004c1c:	2303      	movs	r3, #3
 8004c1e:	e1e7      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004c20:	4b0e      	ldr	r3, [pc, #56]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004c22:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004c26:	f003 0302 	and.w	r3, r3, #2
 8004c2a:	2b00      	cmp	r3, #0
 8004c2c:	d0ef      	beq.n	8004c0e <HAL_RCC_OscConfig+0x22e>
 8004c2e:	e020      	b.n	8004c72 <HAL_RCC_OscConfig+0x292>
 8004c30:	4b0a      	ldr	r3, [pc, #40]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004c32:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004c36:	4a09      	ldr	r2, [pc, #36]	@ (8004c5c <HAL_RCC_OscConfig+0x27c>)
 8004c38:	f023 0301 	bic.w	r3, r3, #1
 8004c3c:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8004c40:	f7fd f8ec 	bl	8001e1c <HAL_GetTick>
 8004c44:	6138      	str	r0, [r7, #16]
 8004c46:	e00d      	b.n	8004c64 <HAL_RCC_OscConfig+0x284>
 8004c48:	f7fd f8e8 	bl	8001e1c <HAL_GetTick>
 8004c4c:	4602      	mov	r2, r0
 8004c4e:	693b      	ldr	r3, [r7, #16]
 8004c50:	1ad3      	subs	r3, r2, r3
 8004c52:	2b02      	cmp	r3, #2
 8004c54:	d906      	bls.n	8004c64 <HAL_RCC_OscConfig+0x284>
 8004c56:	2303      	movs	r3, #3
 8004c58:	e1ca      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004c5a:	bf00      	nop
 8004c5c:	40021000 	.word	0x40021000
 8004c60:	20000004 	.word	0x20000004
 8004c64:	4b8c      	ldr	r3, [pc, #560]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004c66:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004c6a:	f003 0302 	and.w	r3, r3, #2
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	d1ea      	bne.n	8004c48 <HAL_RCC_OscConfig+0x268>
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	681b      	ldr	r3, [r3, #0]
 8004c76:	f003 0304 	and.w	r3, r3, #4
 8004c7a:	2b00      	cmp	r3, #0
 8004c7c:	f000 80a6 	beq.w	8004dcc <HAL_RCC_OscConfig+0x3ec>
 8004c80:	2300      	movs	r3, #0
 8004c82:	77fb      	strb	r3, [r7, #31]
 8004c84:	4b84      	ldr	r3, [pc, #528]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004c86:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004c88:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004c8c:	2b00      	cmp	r3, #0
 8004c8e:	d101      	bne.n	8004c94 <HAL_RCC_OscConfig+0x2b4>
 8004c90:	2301      	movs	r3, #1
 8004c92:	e000      	b.n	8004c96 <HAL_RCC_OscConfig+0x2b6>
 8004c94:	2300      	movs	r3, #0
 8004c96:	2b00      	cmp	r3, #0
 8004c98:	d00d      	beq.n	8004cb6 <HAL_RCC_OscConfig+0x2d6>
 8004c9a:	4b7f      	ldr	r3, [pc, #508]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004c9c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004c9e:	4a7e      	ldr	r2, [pc, #504]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004ca0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004ca4:	6593      	str	r3, [r2, #88]	@ 0x58
 8004ca6:	4b7c      	ldr	r3, [pc, #496]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004ca8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004caa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004cae:	60fb      	str	r3, [r7, #12]
 8004cb0:	68fb      	ldr	r3, [r7, #12]
 8004cb2:	2301      	movs	r3, #1
 8004cb4:	77fb      	strb	r3, [r7, #31]
 8004cb6:	4b79      	ldr	r3, [pc, #484]	@ (8004e9c <HAL_RCC_OscConfig+0x4bc>)
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d118      	bne.n	8004cf4 <HAL_RCC_OscConfig+0x314>
 8004cc2:	4b76      	ldr	r3, [pc, #472]	@ (8004e9c <HAL_RCC_OscConfig+0x4bc>)
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	4a75      	ldr	r2, [pc, #468]	@ (8004e9c <HAL_RCC_OscConfig+0x4bc>)
 8004cc8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004ccc:	6013      	str	r3, [r2, #0]
 8004cce:	f7fd f8a5 	bl	8001e1c <HAL_GetTick>
 8004cd2:	6138      	str	r0, [r7, #16]
 8004cd4:	e008      	b.n	8004ce8 <HAL_RCC_OscConfig+0x308>
 8004cd6:	f7fd f8a1 	bl	8001e1c <HAL_GetTick>
 8004cda:	4602      	mov	r2, r0
 8004cdc:	693b      	ldr	r3, [r7, #16]
 8004cde:	1ad3      	subs	r3, r2, r3
 8004ce0:	2b02      	cmp	r3, #2
 8004ce2:	d901      	bls.n	8004ce8 <HAL_RCC_OscConfig+0x308>
 8004ce4:	2303      	movs	r3, #3
 8004ce6:	e183      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004ce8:	4b6c      	ldr	r3, [pc, #432]	@ (8004e9c <HAL_RCC_OscConfig+0x4bc>)
 8004cea:	681b      	ldr	r3, [r3, #0]
 8004cec:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004cf0:	2b00      	cmp	r3, #0
 8004cf2:	d0f0      	beq.n	8004cd6 <HAL_RCC_OscConfig+0x2f6>
 8004cf4:	687b      	ldr	r3, [r7, #4]
 8004cf6:	689b      	ldr	r3, [r3, #8]
 8004cf8:	2b01      	cmp	r3, #1
 8004cfa:	d108      	bne.n	8004d0e <HAL_RCC_OscConfig+0x32e>
 8004cfc:	4b66      	ldr	r3, [pc, #408]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004cfe:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004d02:	4a65      	ldr	r2, [pc, #404]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004d04:	f043 0301 	orr.w	r3, r3, #1
 8004d08:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004d0c:	e024      	b.n	8004d58 <HAL_RCC_OscConfig+0x378>
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	689b      	ldr	r3, [r3, #8]
 8004d12:	2b05      	cmp	r3, #5
 8004d14:	d110      	bne.n	8004d38 <HAL_RCC_OscConfig+0x358>
 8004d16:	4b60      	ldr	r3, [pc, #384]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004d18:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004d1c:	4a5e      	ldr	r2, [pc, #376]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004d1e:	f043 0304 	orr.w	r3, r3, #4
 8004d22:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004d26:	4b5c      	ldr	r3, [pc, #368]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004d28:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004d2c:	4a5a      	ldr	r2, [pc, #360]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004d2e:	f043 0301 	orr.w	r3, r3, #1
 8004d32:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004d36:	e00f      	b.n	8004d58 <HAL_RCC_OscConfig+0x378>
 8004d38:	4b57      	ldr	r3, [pc, #348]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004d3a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004d3e:	4a56      	ldr	r2, [pc, #344]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004d40:	f023 0301 	bic.w	r3, r3, #1
 8004d44:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004d48:	4b53      	ldr	r3, [pc, #332]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004d4a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004d4e:	4a52      	ldr	r2, [pc, #328]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004d50:	f023 0304 	bic.w	r3, r3, #4
 8004d54:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	689b      	ldr	r3, [r3, #8]
 8004d5c:	2b00      	cmp	r3, #0
 8004d5e:	d016      	beq.n	8004d8e <HAL_RCC_OscConfig+0x3ae>
 8004d60:	f7fd f85c 	bl	8001e1c <HAL_GetTick>
 8004d64:	6138      	str	r0, [r7, #16]
 8004d66:	e00a      	b.n	8004d7e <HAL_RCC_OscConfig+0x39e>
 8004d68:	f7fd f858 	bl	8001e1c <HAL_GetTick>
 8004d6c:	4602      	mov	r2, r0
 8004d6e:	693b      	ldr	r3, [r7, #16]
 8004d70:	1ad3      	subs	r3, r2, r3
 8004d72:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004d76:	4293      	cmp	r3, r2
 8004d78:	d901      	bls.n	8004d7e <HAL_RCC_OscConfig+0x39e>
 8004d7a:	2303      	movs	r3, #3
 8004d7c:	e138      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004d7e:	4b46      	ldr	r3, [pc, #280]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004d80:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004d84:	f003 0302 	and.w	r3, r3, #2
 8004d88:	2b00      	cmp	r3, #0
 8004d8a:	d0ed      	beq.n	8004d68 <HAL_RCC_OscConfig+0x388>
 8004d8c:	e015      	b.n	8004dba <HAL_RCC_OscConfig+0x3da>
 8004d8e:	f7fd f845 	bl	8001e1c <HAL_GetTick>
 8004d92:	6138      	str	r0, [r7, #16]
 8004d94:	e00a      	b.n	8004dac <HAL_RCC_OscConfig+0x3cc>
 8004d96:	f7fd f841 	bl	8001e1c <HAL_GetTick>
 8004d9a:	4602      	mov	r2, r0
 8004d9c:	693b      	ldr	r3, [r7, #16]
 8004d9e:	1ad3      	subs	r3, r2, r3
 8004da0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004da4:	4293      	cmp	r3, r2
 8004da6:	d901      	bls.n	8004dac <HAL_RCC_OscConfig+0x3cc>
 8004da8:	2303      	movs	r3, #3
 8004daa:	e121      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004dac:	4b3a      	ldr	r3, [pc, #232]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004dae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004db2:	f003 0302 	and.w	r3, r3, #2
 8004db6:	2b00      	cmp	r3, #0
 8004db8:	d1ed      	bne.n	8004d96 <HAL_RCC_OscConfig+0x3b6>
 8004dba:	7ffb      	ldrb	r3, [r7, #31]
 8004dbc:	2b01      	cmp	r3, #1
 8004dbe:	d105      	bne.n	8004dcc <HAL_RCC_OscConfig+0x3ec>
 8004dc0:	4b35      	ldr	r3, [pc, #212]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004dc2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004dc4:	4a34      	ldr	r2, [pc, #208]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004dc6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004dca:	6593      	str	r3, [r2, #88]	@ 0x58
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	681b      	ldr	r3, [r3, #0]
 8004dd0:	f003 0320 	and.w	r3, r3, #32
 8004dd4:	2b00      	cmp	r3, #0
 8004dd6:	d03c      	beq.n	8004e52 <HAL_RCC_OscConfig+0x472>
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	699b      	ldr	r3, [r3, #24]
 8004ddc:	2b00      	cmp	r3, #0
 8004dde:	d01c      	beq.n	8004e1a <HAL_RCC_OscConfig+0x43a>
 8004de0:	4b2d      	ldr	r3, [pc, #180]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004de2:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8004de6:	4a2c      	ldr	r2, [pc, #176]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004de8:	f043 0301 	orr.w	r3, r3, #1
 8004dec:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8004df0:	f7fd f814 	bl	8001e1c <HAL_GetTick>
 8004df4:	6138      	str	r0, [r7, #16]
 8004df6:	e008      	b.n	8004e0a <HAL_RCC_OscConfig+0x42a>
 8004df8:	f7fd f810 	bl	8001e1c <HAL_GetTick>
 8004dfc:	4602      	mov	r2, r0
 8004dfe:	693b      	ldr	r3, [r7, #16]
 8004e00:	1ad3      	subs	r3, r2, r3
 8004e02:	2b02      	cmp	r3, #2
 8004e04:	d901      	bls.n	8004e0a <HAL_RCC_OscConfig+0x42a>
 8004e06:	2303      	movs	r3, #3
 8004e08:	e0f2      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004e0a:	4b23      	ldr	r3, [pc, #140]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004e0c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8004e10:	f003 0302 	and.w	r3, r3, #2
 8004e14:	2b00      	cmp	r3, #0
 8004e16:	d0ef      	beq.n	8004df8 <HAL_RCC_OscConfig+0x418>
 8004e18:	e01b      	b.n	8004e52 <HAL_RCC_OscConfig+0x472>
 8004e1a:	4b1f      	ldr	r3, [pc, #124]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004e1c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8004e20:	4a1d      	ldr	r2, [pc, #116]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004e22:	f023 0301 	bic.w	r3, r3, #1
 8004e26:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8004e2a:	f7fc fff7 	bl	8001e1c <HAL_GetTick>
 8004e2e:	6138      	str	r0, [r7, #16]
 8004e30:	e008      	b.n	8004e44 <HAL_RCC_OscConfig+0x464>
 8004e32:	f7fc fff3 	bl	8001e1c <HAL_GetTick>
 8004e36:	4602      	mov	r2, r0
 8004e38:	693b      	ldr	r3, [r7, #16]
 8004e3a:	1ad3      	subs	r3, r2, r3
 8004e3c:	2b02      	cmp	r3, #2
 8004e3e:	d901      	bls.n	8004e44 <HAL_RCC_OscConfig+0x464>
 8004e40:	2303      	movs	r3, #3
 8004e42:	e0d5      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004e44:	4b14      	ldr	r3, [pc, #80]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004e46:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8004e4a:	f003 0302 	and.w	r3, r3, #2
 8004e4e:	2b00      	cmp	r3, #0
 8004e50:	d1ef      	bne.n	8004e32 <HAL_RCC_OscConfig+0x452>
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	69db      	ldr	r3, [r3, #28]
 8004e56:	2b00      	cmp	r3, #0
 8004e58:	f000 80c9 	beq.w	8004fee <HAL_RCC_OscConfig+0x60e>
 8004e5c:	4b0e      	ldr	r3, [pc, #56]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004e5e:	689b      	ldr	r3, [r3, #8]
 8004e60:	f003 030c 	and.w	r3, r3, #12
 8004e64:	2b0c      	cmp	r3, #12
 8004e66:	f000 8083 	beq.w	8004f70 <HAL_RCC_OscConfig+0x590>
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	69db      	ldr	r3, [r3, #28]
 8004e6e:	2b02      	cmp	r3, #2
 8004e70:	d15e      	bne.n	8004f30 <HAL_RCC_OscConfig+0x550>
 8004e72:	4b09      	ldr	r3, [pc, #36]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	4a08      	ldr	r2, [pc, #32]	@ (8004e98 <HAL_RCC_OscConfig+0x4b8>)
 8004e78:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8004e7c:	6013      	str	r3, [r2, #0]
 8004e7e:	f7fc ffcd 	bl	8001e1c <HAL_GetTick>
 8004e82:	6138      	str	r0, [r7, #16]
 8004e84:	e00c      	b.n	8004ea0 <HAL_RCC_OscConfig+0x4c0>
 8004e86:	f7fc ffc9 	bl	8001e1c <HAL_GetTick>
 8004e8a:	4602      	mov	r2, r0
 8004e8c:	693b      	ldr	r3, [r7, #16]
 8004e8e:	1ad3      	subs	r3, r2, r3
 8004e90:	2b02      	cmp	r3, #2
 8004e92:	d905      	bls.n	8004ea0 <HAL_RCC_OscConfig+0x4c0>
 8004e94:	2303      	movs	r3, #3
 8004e96:	e0ab      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004e98:	40021000 	.word	0x40021000
 8004e9c:	40007000 	.word	0x40007000
 8004ea0:	4b55      	ldr	r3, [pc, #340]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004ea8:	2b00      	cmp	r3, #0
 8004eaa:	d1ec      	bne.n	8004e86 <HAL_RCC_OscConfig+0x4a6>
 8004eac:	4b52      	ldr	r3, [pc, #328]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004eae:	68da      	ldr	r2, [r3, #12]
 8004eb0:	4b52      	ldr	r3, [pc, #328]	@ (8004ffc <HAL_RCC_OscConfig+0x61c>)
 8004eb2:	4013      	ands	r3, r2
 8004eb4:	687a      	ldr	r2, [r7, #4]
 8004eb6:	6a11      	ldr	r1, [r2, #32]
 8004eb8:	687a      	ldr	r2, [r7, #4]
 8004eba:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8004ebc:	3a01      	subs	r2, #1
 8004ebe:	0112      	lsls	r2, r2, #4
 8004ec0:	4311      	orrs	r1, r2
 8004ec2:	687a      	ldr	r2, [r7, #4]
 8004ec4:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8004ec6:	0212      	lsls	r2, r2, #8
 8004ec8:	4311      	orrs	r1, r2
 8004eca:	687a      	ldr	r2, [r7, #4]
 8004ecc:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8004ece:	0852      	lsrs	r2, r2, #1
 8004ed0:	3a01      	subs	r2, #1
 8004ed2:	0552      	lsls	r2, r2, #21
 8004ed4:	4311      	orrs	r1, r2
 8004ed6:	687a      	ldr	r2, [r7, #4]
 8004ed8:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8004eda:	0852      	lsrs	r2, r2, #1
 8004edc:	3a01      	subs	r2, #1
 8004ede:	0652      	lsls	r2, r2, #25
 8004ee0:	4311      	orrs	r1, r2
 8004ee2:	687a      	ldr	r2, [r7, #4]
 8004ee4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8004ee6:	06d2      	lsls	r2, r2, #27
 8004ee8:	430a      	orrs	r2, r1
 8004eea:	4943      	ldr	r1, [pc, #268]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004eec:	4313      	orrs	r3, r2
 8004eee:	60cb      	str	r3, [r1, #12]
 8004ef0:	4b41      	ldr	r3, [pc, #260]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	4a40      	ldr	r2, [pc, #256]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004ef6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8004efa:	6013      	str	r3, [r2, #0]
 8004efc:	4b3e      	ldr	r3, [pc, #248]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004efe:	68db      	ldr	r3, [r3, #12]
 8004f00:	4a3d      	ldr	r2, [pc, #244]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004f02:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8004f06:	60d3      	str	r3, [r2, #12]
 8004f08:	f7fc ff88 	bl	8001e1c <HAL_GetTick>
 8004f0c:	6138      	str	r0, [r7, #16]
 8004f0e:	e008      	b.n	8004f22 <HAL_RCC_OscConfig+0x542>
 8004f10:	f7fc ff84 	bl	8001e1c <HAL_GetTick>
 8004f14:	4602      	mov	r2, r0
 8004f16:	693b      	ldr	r3, [r7, #16]
 8004f18:	1ad3      	subs	r3, r2, r3
 8004f1a:	2b02      	cmp	r3, #2
 8004f1c:	d901      	bls.n	8004f22 <HAL_RCC_OscConfig+0x542>
 8004f1e:	2303      	movs	r3, #3
 8004f20:	e066      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004f22:	4b35      	ldr	r3, [pc, #212]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004f2a:	2b00      	cmp	r3, #0
 8004f2c:	d0f0      	beq.n	8004f10 <HAL_RCC_OscConfig+0x530>
 8004f2e:	e05e      	b.n	8004fee <HAL_RCC_OscConfig+0x60e>
 8004f30:	4b31      	ldr	r3, [pc, #196]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004f32:	681b      	ldr	r3, [r3, #0]
 8004f34:	4a30      	ldr	r2, [pc, #192]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004f36:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8004f3a:	6013      	str	r3, [r2, #0]
 8004f3c:	f7fc ff6e 	bl	8001e1c <HAL_GetTick>
 8004f40:	6138      	str	r0, [r7, #16]
 8004f42:	e008      	b.n	8004f56 <HAL_RCC_OscConfig+0x576>
 8004f44:	f7fc ff6a 	bl	8001e1c <HAL_GetTick>
 8004f48:	4602      	mov	r2, r0
 8004f4a:	693b      	ldr	r3, [r7, #16]
 8004f4c:	1ad3      	subs	r3, r2, r3
 8004f4e:	2b02      	cmp	r3, #2
 8004f50:	d901      	bls.n	8004f56 <HAL_RCC_OscConfig+0x576>
 8004f52:	2303      	movs	r3, #3
 8004f54:	e04c      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004f56:	4b28      	ldr	r3, [pc, #160]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004f5e:	2b00      	cmp	r3, #0
 8004f60:	d1f0      	bne.n	8004f44 <HAL_RCC_OscConfig+0x564>
 8004f62:	4b25      	ldr	r3, [pc, #148]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004f64:	68da      	ldr	r2, [r3, #12]
 8004f66:	4924      	ldr	r1, [pc, #144]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004f68:	4b25      	ldr	r3, [pc, #148]	@ (8005000 <HAL_RCC_OscConfig+0x620>)
 8004f6a:	4013      	ands	r3, r2
 8004f6c:	60cb      	str	r3, [r1, #12]
 8004f6e:	e03e      	b.n	8004fee <HAL_RCC_OscConfig+0x60e>
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	69db      	ldr	r3, [r3, #28]
 8004f74:	2b01      	cmp	r3, #1
 8004f76:	d101      	bne.n	8004f7c <HAL_RCC_OscConfig+0x59c>
 8004f78:	2301      	movs	r3, #1
 8004f7a:	e039      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004f7c:	4b1e      	ldr	r3, [pc, #120]	@ (8004ff8 <HAL_RCC_OscConfig+0x618>)
 8004f7e:	68db      	ldr	r3, [r3, #12]
 8004f80:	617b      	str	r3, [r7, #20]
 8004f82:	697b      	ldr	r3, [r7, #20]
 8004f84:	f003 0203 	and.w	r2, r3, #3
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	6a1b      	ldr	r3, [r3, #32]
 8004f8c:	429a      	cmp	r2, r3
 8004f8e:	d12c      	bne.n	8004fea <HAL_RCC_OscConfig+0x60a>
 8004f90:	697b      	ldr	r3, [r7, #20]
 8004f92:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8004f96:	687b      	ldr	r3, [r7, #4]
 8004f98:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f9a:	3b01      	subs	r3, #1
 8004f9c:	011b      	lsls	r3, r3, #4
 8004f9e:	429a      	cmp	r2, r3
 8004fa0:	d123      	bne.n	8004fea <HAL_RCC_OscConfig+0x60a>
 8004fa2:	697b      	ldr	r3, [r7, #20]
 8004fa4:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004fac:	021b      	lsls	r3, r3, #8
 8004fae:	429a      	cmp	r2, r3
 8004fb0:	d11b      	bne.n	8004fea <HAL_RCC_OscConfig+0x60a>
 8004fb2:	697b      	ldr	r3, [r7, #20]
 8004fb4:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004fbc:	06db      	lsls	r3, r3, #27
 8004fbe:	429a      	cmp	r2, r3
 8004fc0:	d113      	bne.n	8004fea <HAL_RCC_OscConfig+0x60a>
 8004fc2:	697b      	ldr	r3, [r7, #20]
 8004fc4:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004fcc:	085b      	lsrs	r3, r3, #1
 8004fce:	3b01      	subs	r3, #1
 8004fd0:	055b      	lsls	r3, r3, #21
 8004fd2:	429a      	cmp	r2, r3
 8004fd4:	d109      	bne.n	8004fea <HAL_RCC_OscConfig+0x60a>
 8004fd6:	697b      	ldr	r3, [r7, #20]
 8004fd8:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004fe0:	085b      	lsrs	r3, r3, #1
 8004fe2:	3b01      	subs	r3, #1
 8004fe4:	065b      	lsls	r3, r3, #25
 8004fe6:	429a      	cmp	r2, r3
 8004fe8:	d001      	beq.n	8004fee <HAL_RCC_OscConfig+0x60e>
 8004fea:	2301      	movs	r3, #1
 8004fec:	e000      	b.n	8004ff0 <HAL_RCC_OscConfig+0x610>
 8004fee:	2300      	movs	r3, #0
 8004ff0:	4618      	mov	r0, r3
 8004ff2:	3720      	adds	r7, #32
 8004ff4:	46bd      	mov	sp, r7
 8004ff6:	bd80      	pop	{r7, pc}
 8004ff8:	40021000 	.word	0x40021000
 8004ffc:	019f800c 	.word	0x019f800c
 8005000:	feeefffc 	.word	0xfeeefffc

08005004 <HAL_RCC_ClockConfig>:
 8005004:	b580      	push	{r7, lr}
 8005006:	b086      	sub	sp, #24
 8005008:	af00      	add	r7, sp, #0
 800500a:	6078      	str	r0, [r7, #4]
 800500c:	6039      	str	r1, [r7, #0]
 800500e:	2300      	movs	r3, #0
 8005010:	617b      	str	r3, [r7, #20]
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	2b00      	cmp	r3, #0
 8005016:	d101      	bne.n	800501c <HAL_RCC_ClockConfig+0x18>
 8005018:	2301      	movs	r3, #1
 800501a:	e11e      	b.n	800525a <HAL_RCC_ClockConfig+0x256>
 800501c:	4b91      	ldr	r3, [pc, #580]	@ (8005264 <HAL_RCC_ClockConfig+0x260>)
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	f003 030f 	and.w	r3, r3, #15
 8005024:	683a      	ldr	r2, [r7, #0]
 8005026:	429a      	cmp	r2, r3
 8005028:	d910      	bls.n	800504c <HAL_RCC_ClockConfig+0x48>
 800502a:	4b8e      	ldr	r3, [pc, #568]	@ (8005264 <HAL_RCC_ClockConfig+0x260>)
 800502c:	681b      	ldr	r3, [r3, #0]
 800502e:	f023 020f 	bic.w	r2, r3, #15
 8005032:	498c      	ldr	r1, [pc, #560]	@ (8005264 <HAL_RCC_ClockConfig+0x260>)
 8005034:	683b      	ldr	r3, [r7, #0]
 8005036:	4313      	orrs	r3, r2
 8005038:	600b      	str	r3, [r1, #0]
 800503a:	4b8a      	ldr	r3, [pc, #552]	@ (8005264 <HAL_RCC_ClockConfig+0x260>)
 800503c:	681b      	ldr	r3, [r3, #0]
 800503e:	f003 030f 	and.w	r3, r3, #15
 8005042:	683a      	ldr	r2, [r7, #0]
 8005044:	429a      	cmp	r2, r3
 8005046:	d001      	beq.n	800504c <HAL_RCC_ClockConfig+0x48>
 8005048:	2301      	movs	r3, #1
 800504a:	e106      	b.n	800525a <HAL_RCC_ClockConfig+0x256>
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	f003 0301 	and.w	r3, r3, #1
 8005054:	2b00      	cmp	r3, #0
 8005056:	d073      	beq.n	8005140 <HAL_RCC_ClockConfig+0x13c>
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	685b      	ldr	r3, [r3, #4]
 800505c:	2b03      	cmp	r3, #3
 800505e:	d129      	bne.n	80050b4 <HAL_RCC_ClockConfig+0xb0>
 8005060:	4b81      	ldr	r3, [pc, #516]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005068:	2b00      	cmp	r3, #0
 800506a:	d101      	bne.n	8005070 <HAL_RCC_ClockConfig+0x6c>
 800506c:	2301      	movs	r3, #1
 800506e:	e0f4      	b.n	800525a <HAL_RCC_ClockConfig+0x256>
 8005070:	f000 f966 	bl	8005340 <RCC_GetSysClockFreqFromPLLSource>
 8005074:	6138      	str	r0, [r7, #16]
 8005076:	693b      	ldr	r3, [r7, #16]
 8005078:	4a7c      	ldr	r2, [pc, #496]	@ (800526c <HAL_RCC_ClockConfig+0x268>)
 800507a:	4293      	cmp	r3, r2
 800507c:	d93f      	bls.n	80050fe <HAL_RCC_ClockConfig+0xfa>
 800507e:	4b7a      	ldr	r3, [pc, #488]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 8005080:	689b      	ldr	r3, [r3, #8]
 8005082:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8005086:	2b00      	cmp	r3, #0
 8005088:	d009      	beq.n	800509e <HAL_RCC_ClockConfig+0x9a>
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	681b      	ldr	r3, [r3, #0]
 800508e:	f003 0302 	and.w	r3, r3, #2
 8005092:	2b00      	cmp	r3, #0
 8005094:	d033      	beq.n	80050fe <HAL_RCC_ClockConfig+0xfa>
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	689b      	ldr	r3, [r3, #8]
 800509a:	2b00      	cmp	r3, #0
 800509c:	d12f      	bne.n	80050fe <HAL_RCC_ClockConfig+0xfa>
 800509e:	4b72      	ldr	r3, [pc, #456]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 80050a0:	689b      	ldr	r3, [r3, #8]
 80050a2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80050a6:	4a70      	ldr	r2, [pc, #448]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 80050a8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80050ac:	6093      	str	r3, [r2, #8]
 80050ae:	2380      	movs	r3, #128	@ 0x80
 80050b0:	617b      	str	r3, [r7, #20]
 80050b2:	e024      	b.n	80050fe <HAL_RCC_ClockConfig+0xfa>
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	685b      	ldr	r3, [r3, #4]
 80050b8:	2b02      	cmp	r3, #2
 80050ba:	d107      	bne.n	80050cc <HAL_RCC_ClockConfig+0xc8>
 80050bc:	4b6a      	ldr	r3, [pc, #424]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80050c4:	2b00      	cmp	r3, #0
 80050c6:	d109      	bne.n	80050dc <HAL_RCC_ClockConfig+0xd8>
 80050c8:	2301      	movs	r3, #1
 80050ca:	e0c6      	b.n	800525a <HAL_RCC_ClockConfig+0x256>
 80050cc:	4b66      	ldr	r3, [pc, #408]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 80050ce:	681b      	ldr	r3, [r3, #0]
 80050d0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80050d4:	2b00      	cmp	r3, #0
 80050d6:	d101      	bne.n	80050dc <HAL_RCC_ClockConfig+0xd8>
 80050d8:	2301      	movs	r3, #1
 80050da:	e0be      	b.n	800525a <HAL_RCC_ClockConfig+0x256>
 80050dc:	f000 f8ce 	bl	800527c <HAL_RCC_GetSysClockFreq>
 80050e0:	6138      	str	r0, [r7, #16]
 80050e2:	693b      	ldr	r3, [r7, #16]
 80050e4:	4a61      	ldr	r2, [pc, #388]	@ (800526c <HAL_RCC_ClockConfig+0x268>)
 80050e6:	4293      	cmp	r3, r2
 80050e8:	d909      	bls.n	80050fe <HAL_RCC_ClockConfig+0xfa>
 80050ea:	4b5f      	ldr	r3, [pc, #380]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 80050ec:	689b      	ldr	r3, [r3, #8]
 80050ee:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80050f2:	4a5d      	ldr	r2, [pc, #372]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 80050f4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80050f8:	6093      	str	r3, [r2, #8]
 80050fa:	2380      	movs	r3, #128	@ 0x80
 80050fc:	617b      	str	r3, [r7, #20]
 80050fe:	4b5a      	ldr	r3, [pc, #360]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 8005100:	689b      	ldr	r3, [r3, #8]
 8005102:	f023 0203 	bic.w	r2, r3, #3
 8005106:	687b      	ldr	r3, [r7, #4]
 8005108:	685b      	ldr	r3, [r3, #4]
 800510a:	4957      	ldr	r1, [pc, #348]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 800510c:	4313      	orrs	r3, r2
 800510e:	608b      	str	r3, [r1, #8]
 8005110:	f7fc fe84 	bl	8001e1c <HAL_GetTick>
 8005114:	60f8      	str	r0, [r7, #12]
 8005116:	e00a      	b.n	800512e <HAL_RCC_ClockConfig+0x12a>
 8005118:	f7fc fe80 	bl	8001e1c <HAL_GetTick>
 800511c:	4602      	mov	r2, r0
 800511e:	68fb      	ldr	r3, [r7, #12]
 8005120:	1ad3      	subs	r3, r2, r3
 8005122:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005126:	4293      	cmp	r3, r2
 8005128:	d901      	bls.n	800512e <HAL_RCC_ClockConfig+0x12a>
 800512a:	2303      	movs	r3, #3
 800512c:	e095      	b.n	800525a <HAL_RCC_ClockConfig+0x256>
 800512e:	4b4e      	ldr	r3, [pc, #312]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 8005130:	689b      	ldr	r3, [r3, #8]
 8005132:	f003 020c 	and.w	r2, r3, #12
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	685b      	ldr	r3, [r3, #4]
 800513a:	009b      	lsls	r3, r3, #2
 800513c:	429a      	cmp	r2, r3
 800513e:	d1eb      	bne.n	8005118 <HAL_RCC_ClockConfig+0x114>
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	f003 0302 	and.w	r3, r3, #2
 8005148:	2b00      	cmp	r3, #0
 800514a:	d023      	beq.n	8005194 <HAL_RCC_ClockConfig+0x190>
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	f003 0304 	and.w	r3, r3, #4
 8005154:	2b00      	cmp	r3, #0
 8005156:	d005      	beq.n	8005164 <HAL_RCC_ClockConfig+0x160>
 8005158:	4b43      	ldr	r3, [pc, #268]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 800515a:	689b      	ldr	r3, [r3, #8]
 800515c:	4a42      	ldr	r2, [pc, #264]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 800515e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8005162:	6093      	str	r3, [r2, #8]
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	681b      	ldr	r3, [r3, #0]
 8005168:	f003 0308 	and.w	r3, r3, #8
 800516c:	2b00      	cmp	r3, #0
 800516e:	d007      	beq.n	8005180 <HAL_RCC_ClockConfig+0x17c>
 8005170:	4b3d      	ldr	r3, [pc, #244]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 8005172:	689b      	ldr	r3, [r3, #8]
 8005174:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8005178:	4a3b      	ldr	r2, [pc, #236]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 800517a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800517e:	6093      	str	r3, [r2, #8]
 8005180:	4b39      	ldr	r3, [pc, #228]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 8005182:	689b      	ldr	r3, [r3, #8]
 8005184:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	689b      	ldr	r3, [r3, #8]
 800518c:	4936      	ldr	r1, [pc, #216]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 800518e:	4313      	orrs	r3, r2
 8005190:	608b      	str	r3, [r1, #8]
 8005192:	e008      	b.n	80051a6 <HAL_RCC_ClockConfig+0x1a2>
 8005194:	697b      	ldr	r3, [r7, #20]
 8005196:	2b80      	cmp	r3, #128	@ 0x80
 8005198:	d105      	bne.n	80051a6 <HAL_RCC_ClockConfig+0x1a2>
 800519a:	4b33      	ldr	r3, [pc, #204]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 800519c:	689b      	ldr	r3, [r3, #8]
 800519e:	4a32      	ldr	r2, [pc, #200]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 80051a0:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80051a4:	6093      	str	r3, [r2, #8]
 80051a6:	4b2f      	ldr	r3, [pc, #188]	@ (8005264 <HAL_RCC_ClockConfig+0x260>)
 80051a8:	681b      	ldr	r3, [r3, #0]
 80051aa:	f003 030f 	and.w	r3, r3, #15
 80051ae:	683a      	ldr	r2, [r7, #0]
 80051b0:	429a      	cmp	r2, r3
 80051b2:	d21d      	bcs.n	80051f0 <HAL_RCC_ClockConfig+0x1ec>
 80051b4:	4b2b      	ldr	r3, [pc, #172]	@ (8005264 <HAL_RCC_ClockConfig+0x260>)
 80051b6:	681b      	ldr	r3, [r3, #0]
 80051b8:	f023 020f 	bic.w	r2, r3, #15
 80051bc:	4929      	ldr	r1, [pc, #164]	@ (8005264 <HAL_RCC_ClockConfig+0x260>)
 80051be:	683b      	ldr	r3, [r7, #0]
 80051c0:	4313      	orrs	r3, r2
 80051c2:	600b      	str	r3, [r1, #0]
 80051c4:	f7fc fe2a 	bl	8001e1c <HAL_GetTick>
 80051c8:	60f8      	str	r0, [r7, #12]
 80051ca:	e00a      	b.n	80051e2 <HAL_RCC_ClockConfig+0x1de>
 80051cc:	f7fc fe26 	bl	8001e1c <HAL_GetTick>
 80051d0:	4602      	mov	r2, r0
 80051d2:	68fb      	ldr	r3, [r7, #12]
 80051d4:	1ad3      	subs	r3, r2, r3
 80051d6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80051da:	4293      	cmp	r3, r2
 80051dc:	d901      	bls.n	80051e2 <HAL_RCC_ClockConfig+0x1de>
 80051de:	2303      	movs	r3, #3
 80051e0:	e03b      	b.n	800525a <HAL_RCC_ClockConfig+0x256>
 80051e2:	4b20      	ldr	r3, [pc, #128]	@ (8005264 <HAL_RCC_ClockConfig+0x260>)
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	f003 030f 	and.w	r3, r3, #15
 80051ea:	683a      	ldr	r2, [r7, #0]
 80051ec:	429a      	cmp	r2, r3
 80051ee:	d1ed      	bne.n	80051cc <HAL_RCC_ClockConfig+0x1c8>
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	681b      	ldr	r3, [r3, #0]
 80051f4:	f003 0304 	and.w	r3, r3, #4
 80051f8:	2b00      	cmp	r3, #0
 80051fa:	d008      	beq.n	800520e <HAL_RCC_ClockConfig+0x20a>
 80051fc:	4b1a      	ldr	r3, [pc, #104]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 80051fe:	689b      	ldr	r3, [r3, #8]
 8005200:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	68db      	ldr	r3, [r3, #12]
 8005208:	4917      	ldr	r1, [pc, #92]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 800520a:	4313      	orrs	r3, r2
 800520c:	608b      	str	r3, [r1, #8]
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	681b      	ldr	r3, [r3, #0]
 8005212:	f003 0308 	and.w	r3, r3, #8
 8005216:	2b00      	cmp	r3, #0
 8005218:	d009      	beq.n	800522e <HAL_RCC_ClockConfig+0x22a>
 800521a:	4b13      	ldr	r3, [pc, #76]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 800521c:	689b      	ldr	r3, [r3, #8]
 800521e:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	691b      	ldr	r3, [r3, #16]
 8005226:	00db      	lsls	r3, r3, #3
 8005228:	490f      	ldr	r1, [pc, #60]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 800522a:	4313      	orrs	r3, r2
 800522c:	608b      	str	r3, [r1, #8]
 800522e:	f000 f825 	bl	800527c <HAL_RCC_GetSysClockFreq>
 8005232:	4602      	mov	r2, r0
 8005234:	4b0c      	ldr	r3, [pc, #48]	@ (8005268 <HAL_RCC_ClockConfig+0x264>)
 8005236:	689b      	ldr	r3, [r3, #8]
 8005238:	091b      	lsrs	r3, r3, #4
 800523a:	f003 030f 	and.w	r3, r3, #15
 800523e:	490c      	ldr	r1, [pc, #48]	@ (8005270 <HAL_RCC_ClockConfig+0x26c>)
 8005240:	5ccb      	ldrb	r3, [r1, r3]
 8005242:	f003 031f 	and.w	r3, r3, #31
 8005246:	fa22 f303 	lsr.w	r3, r2, r3
 800524a:	4a0a      	ldr	r2, [pc, #40]	@ (8005274 <HAL_RCC_ClockConfig+0x270>)
 800524c:	6013      	str	r3, [r2, #0]
 800524e:	4b0a      	ldr	r3, [pc, #40]	@ (8005278 <HAL_RCC_ClockConfig+0x274>)
 8005250:	681b      	ldr	r3, [r3, #0]
 8005252:	4618      	mov	r0, r3
 8005254:	f7fc fd96 	bl	8001d84 <HAL_InitTick>
 8005258:	4603      	mov	r3, r0
 800525a:	4618      	mov	r0, r3
 800525c:	3718      	adds	r7, #24
 800525e:	46bd      	mov	sp, r7
 8005260:	bd80      	pop	{r7, pc}
 8005262:	bf00      	nop
 8005264:	40022000 	.word	0x40022000
 8005268:	40021000 	.word	0x40021000
 800526c:	04c4b400 	.word	0x04c4b400
 8005270:	08006ef0 	.word	0x08006ef0
 8005274:	20000000 	.word	0x20000000
 8005278:	20000004 	.word	0x20000004

0800527c <HAL_RCC_GetSysClockFreq>:
 800527c:	b480      	push	{r7}
 800527e:	b087      	sub	sp, #28
 8005280:	af00      	add	r7, sp, #0
 8005282:	4b2c      	ldr	r3, [pc, #176]	@ (8005334 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005284:	689b      	ldr	r3, [r3, #8]
 8005286:	f003 030c 	and.w	r3, r3, #12
 800528a:	2b04      	cmp	r3, #4
 800528c:	d102      	bne.n	8005294 <HAL_RCC_GetSysClockFreq+0x18>
 800528e:	4b2a      	ldr	r3, [pc, #168]	@ (8005338 <HAL_RCC_GetSysClockFreq+0xbc>)
 8005290:	613b      	str	r3, [r7, #16]
 8005292:	e047      	b.n	8005324 <HAL_RCC_GetSysClockFreq+0xa8>
 8005294:	4b27      	ldr	r3, [pc, #156]	@ (8005334 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005296:	689b      	ldr	r3, [r3, #8]
 8005298:	f003 030c 	and.w	r3, r3, #12
 800529c:	2b08      	cmp	r3, #8
 800529e:	d102      	bne.n	80052a6 <HAL_RCC_GetSysClockFreq+0x2a>
 80052a0:	4b26      	ldr	r3, [pc, #152]	@ (800533c <HAL_RCC_GetSysClockFreq+0xc0>)
 80052a2:	613b      	str	r3, [r7, #16]
 80052a4:	e03e      	b.n	8005324 <HAL_RCC_GetSysClockFreq+0xa8>
 80052a6:	4b23      	ldr	r3, [pc, #140]	@ (8005334 <HAL_RCC_GetSysClockFreq+0xb8>)
 80052a8:	689b      	ldr	r3, [r3, #8]
 80052aa:	f003 030c 	and.w	r3, r3, #12
 80052ae:	2b0c      	cmp	r3, #12
 80052b0:	d136      	bne.n	8005320 <HAL_RCC_GetSysClockFreq+0xa4>
 80052b2:	4b20      	ldr	r3, [pc, #128]	@ (8005334 <HAL_RCC_GetSysClockFreq+0xb8>)
 80052b4:	68db      	ldr	r3, [r3, #12]
 80052b6:	f003 0303 	and.w	r3, r3, #3
 80052ba:	60fb      	str	r3, [r7, #12]
 80052bc:	4b1d      	ldr	r3, [pc, #116]	@ (8005334 <HAL_RCC_GetSysClockFreq+0xb8>)
 80052be:	68db      	ldr	r3, [r3, #12]
 80052c0:	091b      	lsrs	r3, r3, #4
 80052c2:	f003 030f 	and.w	r3, r3, #15
 80052c6:	3301      	adds	r3, #1
 80052c8:	60bb      	str	r3, [r7, #8]
 80052ca:	68fb      	ldr	r3, [r7, #12]
 80052cc:	2b03      	cmp	r3, #3
 80052ce:	d10c      	bne.n	80052ea <HAL_RCC_GetSysClockFreq+0x6e>
 80052d0:	4a1a      	ldr	r2, [pc, #104]	@ (800533c <HAL_RCC_GetSysClockFreq+0xc0>)
 80052d2:	68bb      	ldr	r3, [r7, #8]
 80052d4:	fbb2 f3f3 	udiv	r3, r2, r3
 80052d8:	4a16      	ldr	r2, [pc, #88]	@ (8005334 <HAL_RCC_GetSysClockFreq+0xb8>)
 80052da:	68d2      	ldr	r2, [r2, #12]
 80052dc:	0a12      	lsrs	r2, r2, #8
 80052de:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80052e2:	fb02 f303 	mul.w	r3, r2, r3
 80052e6:	617b      	str	r3, [r7, #20]
 80052e8:	e00c      	b.n	8005304 <HAL_RCC_GetSysClockFreq+0x88>
 80052ea:	4a13      	ldr	r2, [pc, #76]	@ (8005338 <HAL_RCC_GetSysClockFreq+0xbc>)
 80052ec:	68bb      	ldr	r3, [r7, #8]
 80052ee:	fbb2 f3f3 	udiv	r3, r2, r3
 80052f2:	4a10      	ldr	r2, [pc, #64]	@ (8005334 <HAL_RCC_GetSysClockFreq+0xb8>)
 80052f4:	68d2      	ldr	r2, [r2, #12]
 80052f6:	0a12      	lsrs	r2, r2, #8
 80052f8:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80052fc:	fb02 f303 	mul.w	r3, r2, r3
 8005300:	617b      	str	r3, [r7, #20]
 8005302:	bf00      	nop
 8005304:	4b0b      	ldr	r3, [pc, #44]	@ (8005334 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005306:	68db      	ldr	r3, [r3, #12]
 8005308:	0e5b      	lsrs	r3, r3, #25
 800530a:	f003 0303 	and.w	r3, r3, #3
 800530e:	3301      	adds	r3, #1
 8005310:	005b      	lsls	r3, r3, #1
 8005312:	607b      	str	r3, [r7, #4]
 8005314:	697a      	ldr	r2, [r7, #20]
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	fbb2 f3f3 	udiv	r3, r2, r3
 800531c:	613b      	str	r3, [r7, #16]
 800531e:	e001      	b.n	8005324 <HAL_RCC_GetSysClockFreq+0xa8>
 8005320:	2300      	movs	r3, #0
 8005322:	613b      	str	r3, [r7, #16]
 8005324:	693b      	ldr	r3, [r7, #16]
 8005326:	4618      	mov	r0, r3
 8005328:	371c      	adds	r7, #28
 800532a:	46bd      	mov	sp, r7
 800532c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005330:	4770      	bx	lr
 8005332:	bf00      	nop
 8005334:	40021000 	.word	0x40021000
 8005338:	00f42400 	.word	0x00f42400
 800533c:	007a1200 	.word	0x007a1200

08005340 <RCC_GetSysClockFreqFromPLLSource>:
 8005340:	b480      	push	{r7}
 8005342:	b087      	sub	sp, #28
 8005344:	af00      	add	r7, sp, #0
 8005346:	4b1e      	ldr	r3, [pc, #120]	@ (80053c0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8005348:	68db      	ldr	r3, [r3, #12]
 800534a:	f003 0303 	and.w	r3, r3, #3
 800534e:	613b      	str	r3, [r7, #16]
 8005350:	4b1b      	ldr	r3, [pc, #108]	@ (80053c0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8005352:	68db      	ldr	r3, [r3, #12]
 8005354:	091b      	lsrs	r3, r3, #4
 8005356:	f003 030f 	and.w	r3, r3, #15
 800535a:	3301      	adds	r3, #1
 800535c:	60fb      	str	r3, [r7, #12]
 800535e:	693b      	ldr	r3, [r7, #16]
 8005360:	2b03      	cmp	r3, #3
 8005362:	d10c      	bne.n	800537e <RCC_GetSysClockFreqFromPLLSource+0x3e>
 8005364:	4a17      	ldr	r2, [pc, #92]	@ (80053c4 <RCC_GetSysClockFreqFromPLLSource+0x84>)
 8005366:	68fb      	ldr	r3, [r7, #12]
 8005368:	fbb2 f3f3 	udiv	r3, r2, r3
 800536c:	4a14      	ldr	r2, [pc, #80]	@ (80053c0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800536e:	68d2      	ldr	r2, [r2, #12]
 8005370:	0a12      	lsrs	r2, r2, #8
 8005372:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8005376:	fb02 f303 	mul.w	r3, r2, r3
 800537a:	617b      	str	r3, [r7, #20]
 800537c:	e00c      	b.n	8005398 <RCC_GetSysClockFreqFromPLLSource+0x58>
 800537e:	4a12      	ldr	r2, [pc, #72]	@ (80053c8 <RCC_GetSysClockFreqFromPLLSource+0x88>)
 8005380:	68fb      	ldr	r3, [r7, #12]
 8005382:	fbb2 f3f3 	udiv	r3, r2, r3
 8005386:	4a0e      	ldr	r2, [pc, #56]	@ (80053c0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8005388:	68d2      	ldr	r2, [r2, #12]
 800538a:	0a12      	lsrs	r2, r2, #8
 800538c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8005390:	fb02 f303 	mul.w	r3, r2, r3
 8005394:	617b      	str	r3, [r7, #20]
 8005396:	bf00      	nop
 8005398:	4b09      	ldr	r3, [pc, #36]	@ (80053c0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800539a:	68db      	ldr	r3, [r3, #12]
 800539c:	0e5b      	lsrs	r3, r3, #25
 800539e:	f003 0303 	and.w	r3, r3, #3
 80053a2:	3301      	adds	r3, #1
 80053a4:	005b      	lsls	r3, r3, #1
 80053a6:	60bb      	str	r3, [r7, #8]
 80053a8:	697a      	ldr	r2, [r7, #20]
 80053aa:	68bb      	ldr	r3, [r7, #8]
 80053ac:	fbb2 f3f3 	udiv	r3, r2, r3
 80053b0:	607b      	str	r3, [r7, #4]
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	4618      	mov	r0, r3
 80053b6:	371c      	adds	r7, #28
 80053b8:	46bd      	mov	sp, r7
 80053ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053be:	4770      	bx	lr
 80053c0:	40021000 	.word	0x40021000
 80053c4:	007a1200 	.word	0x007a1200
 80053c8:	00f42400 	.word	0x00f42400

080053cc <HAL_RCCEx_PeriphCLKConfig>:
 80053cc:	b580      	push	{r7, lr}
 80053ce:	b086      	sub	sp, #24
 80053d0:	af00      	add	r7, sp, #0
 80053d2:	6078      	str	r0, [r7, #4]
 80053d4:	2300      	movs	r3, #0
 80053d6:	74fb      	strb	r3, [r7, #19]
 80053d8:	2300      	movs	r3, #0
 80053da:	74bb      	strb	r3, [r7, #18]
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80053e4:	2b00      	cmp	r3, #0
 80053e6:	f000 8098 	beq.w	800551a <HAL_RCCEx_PeriphCLKConfig+0x14e>
 80053ea:	2300      	movs	r3, #0
 80053ec:	747b      	strb	r3, [r7, #17]
 80053ee:	4b43      	ldr	r3, [pc, #268]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80053f0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80053f2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	d10d      	bne.n	8005416 <HAL_RCCEx_PeriphCLKConfig+0x4a>
 80053fa:	4b40      	ldr	r3, [pc, #256]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80053fc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80053fe:	4a3f      	ldr	r2, [pc, #252]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005400:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005404:	6593      	str	r3, [r2, #88]	@ 0x58
 8005406:	4b3d      	ldr	r3, [pc, #244]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005408:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800540a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800540e:	60bb      	str	r3, [r7, #8]
 8005410:	68bb      	ldr	r3, [r7, #8]
 8005412:	2301      	movs	r3, #1
 8005414:	747b      	strb	r3, [r7, #17]
 8005416:	4b3a      	ldr	r3, [pc, #232]	@ (8005500 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	4a39      	ldr	r2, [pc, #228]	@ (8005500 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 800541c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005420:	6013      	str	r3, [r2, #0]
 8005422:	f7fc fcfb 	bl	8001e1c <HAL_GetTick>
 8005426:	60f8      	str	r0, [r7, #12]
 8005428:	e009      	b.n	800543e <HAL_RCCEx_PeriphCLKConfig+0x72>
 800542a:	f7fc fcf7 	bl	8001e1c <HAL_GetTick>
 800542e:	4602      	mov	r2, r0
 8005430:	68fb      	ldr	r3, [r7, #12]
 8005432:	1ad3      	subs	r3, r2, r3
 8005434:	2b02      	cmp	r3, #2
 8005436:	d902      	bls.n	800543e <HAL_RCCEx_PeriphCLKConfig+0x72>
 8005438:	2303      	movs	r3, #3
 800543a:	74fb      	strb	r3, [r7, #19]
 800543c:	e005      	b.n	800544a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800543e:	4b30      	ldr	r3, [pc, #192]	@ (8005500 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8005440:	681b      	ldr	r3, [r3, #0]
 8005442:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005446:	2b00      	cmp	r3, #0
 8005448:	d0ef      	beq.n	800542a <HAL_RCCEx_PeriphCLKConfig+0x5e>
 800544a:	7cfb      	ldrb	r3, [r7, #19]
 800544c:	2b00      	cmp	r3, #0
 800544e:	d159      	bne.n	8005504 <HAL_RCCEx_PeriphCLKConfig+0x138>
 8005450:	4b2a      	ldr	r3, [pc, #168]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005452:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005456:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800545a:	617b      	str	r3, [r7, #20]
 800545c:	697b      	ldr	r3, [r7, #20]
 800545e:	2b00      	cmp	r3, #0
 8005460:	d01e      	beq.n	80054a0 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8005462:	687b      	ldr	r3, [r7, #4]
 8005464:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005466:	697a      	ldr	r2, [r7, #20]
 8005468:	429a      	cmp	r2, r3
 800546a:	d019      	beq.n	80054a0 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 800546c:	4b23      	ldr	r3, [pc, #140]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800546e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005472:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005476:	617b      	str	r3, [r7, #20]
 8005478:	4b20      	ldr	r3, [pc, #128]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800547a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800547e:	4a1f      	ldr	r2, [pc, #124]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005480:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005484:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005488:	4b1c      	ldr	r3, [pc, #112]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800548a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800548e:	4a1b      	ldr	r2, [pc, #108]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005490:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005494:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005498:	4a18      	ldr	r2, [pc, #96]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800549a:	697b      	ldr	r3, [r7, #20]
 800549c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80054a0:	697b      	ldr	r3, [r7, #20]
 80054a2:	f003 0301 	and.w	r3, r3, #1
 80054a6:	2b00      	cmp	r3, #0
 80054a8:	d016      	beq.n	80054d8 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80054aa:	f7fc fcb7 	bl	8001e1c <HAL_GetTick>
 80054ae:	60f8      	str	r0, [r7, #12]
 80054b0:	e00b      	b.n	80054ca <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80054b2:	f7fc fcb3 	bl	8001e1c <HAL_GetTick>
 80054b6:	4602      	mov	r2, r0
 80054b8:	68fb      	ldr	r3, [r7, #12]
 80054ba:	1ad3      	subs	r3, r2, r3
 80054bc:	f241 3288 	movw	r2, #5000	@ 0x1388
 80054c0:	4293      	cmp	r3, r2
 80054c2:	d902      	bls.n	80054ca <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80054c4:	2303      	movs	r3, #3
 80054c6:	74fb      	strb	r3, [r7, #19]
 80054c8:	e006      	b.n	80054d8 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80054ca:	4b0c      	ldr	r3, [pc, #48]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80054cc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80054d0:	f003 0302 	and.w	r3, r3, #2
 80054d4:	2b00      	cmp	r3, #0
 80054d6:	d0ec      	beq.n	80054b2 <HAL_RCCEx_PeriphCLKConfig+0xe6>
 80054d8:	7cfb      	ldrb	r3, [r7, #19]
 80054da:	2b00      	cmp	r3, #0
 80054dc:	d10b      	bne.n	80054f6 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 80054de:	4b07      	ldr	r3, [pc, #28]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80054e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80054e4:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80054e8:	687b      	ldr	r3, [r7, #4]
 80054ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80054ec:	4903      	ldr	r1, [pc, #12]	@ (80054fc <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80054ee:	4313      	orrs	r3, r2
 80054f0:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 80054f4:	e008      	b.n	8005508 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80054f6:	7cfb      	ldrb	r3, [r7, #19]
 80054f8:	74bb      	strb	r3, [r7, #18]
 80054fa:	e005      	b.n	8005508 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80054fc:	40021000 	.word	0x40021000
 8005500:	40007000 	.word	0x40007000
 8005504:	7cfb      	ldrb	r3, [r7, #19]
 8005506:	74bb      	strb	r3, [r7, #18]
 8005508:	7c7b      	ldrb	r3, [r7, #17]
 800550a:	2b01      	cmp	r3, #1
 800550c:	d105      	bne.n	800551a <HAL_RCCEx_PeriphCLKConfig+0x14e>
 800550e:	4ba6      	ldr	r3, [pc, #664]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005510:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005512:	4aa5      	ldr	r2, [pc, #660]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005514:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005518:	6593      	str	r3, [r2, #88]	@ 0x58
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	681b      	ldr	r3, [r3, #0]
 800551e:	f003 0301 	and.w	r3, r3, #1
 8005522:	2b00      	cmp	r3, #0
 8005524:	d00a      	beq.n	800553c <HAL_RCCEx_PeriphCLKConfig+0x170>
 8005526:	4ba0      	ldr	r3, [pc, #640]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005528:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800552c:	f023 0203 	bic.w	r2, r3, #3
 8005530:	687b      	ldr	r3, [r7, #4]
 8005532:	685b      	ldr	r3, [r3, #4]
 8005534:	499c      	ldr	r1, [pc, #624]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005536:	4313      	orrs	r3, r2
 8005538:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800553c:	687b      	ldr	r3, [r7, #4]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	f003 0302 	and.w	r3, r3, #2
 8005544:	2b00      	cmp	r3, #0
 8005546:	d00a      	beq.n	800555e <HAL_RCCEx_PeriphCLKConfig+0x192>
 8005548:	4b97      	ldr	r3, [pc, #604]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800554a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800554e:	f023 020c 	bic.w	r2, r3, #12
 8005552:	687b      	ldr	r3, [r7, #4]
 8005554:	689b      	ldr	r3, [r3, #8]
 8005556:	4994      	ldr	r1, [pc, #592]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005558:	4313      	orrs	r3, r2
 800555a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	f003 0304 	and.w	r3, r3, #4
 8005566:	2b00      	cmp	r3, #0
 8005568:	d00a      	beq.n	8005580 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 800556a:	4b8f      	ldr	r3, [pc, #572]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800556c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005570:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	68db      	ldr	r3, [r3, #12]
 8005578:	498b      	ldr	r1, [pc, #556]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800557a:	4313      	orrs	r3, r2
 800557c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	681b      	ldr	r3, [r3, #0]
 8005584:	f003 0308 	and.w	r3, r3, #8
 8005588:	2b00      	cmp	r3, #0
 800558a:	d00a      	beq.n	80055a2 <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 800558c:	4b86      	ldr	r3, [pc, #536]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800558e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005592:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 8005596:	687b      	ldr	r3, [r7, #4]
 8005598:	691b      	ldr	r3, [r3, #16]
 800559a:	4983      	ldr	r1, [pc, #524]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800559c:	4313      	orrs	r3, r2
 800559e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80055a2:	687b      	ldr	r3, [r7, #4]
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	f003 0320 	and.w	r3, r3, #32
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	d00a      	beq.n	80055c4 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 80055ae:	4b7e      	ldr	r3, [pc, #504]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80055b0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80055b4:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80055b8:	687b      	ldr	r3, [r7, #4]
 80055ba:	695b      	ldr	r3, [r3, #20]
 80055bc:	497a      	ldr	r1, [pc, #488]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80055be:	4313      	orrs	r3, r2
 80055c0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80055cc:	2b00      	cmp	r3, #0
 80055ce:	d00a      	beq.n	80055e6 <HAL_RCCEx_PeriphCLKConfig+0x21a>
 80055d0:	4b75      	ldr	r3, [pc, #468]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80055d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80055d6:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	699b      	ldr	r3, [r3, #24]
 80055de:	4972      	ldr	r1, [pc, #456]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80055e0:	4313      	orrs	r3, r2
 80055e2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80055ee:	2b00      	cmp	r3, #0
 80055f0:	d00a      	beq.n	8005608 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 80055f2:	4b6d      	ldr	r3, [pc, #436]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80055f4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80055f8:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 80055fc:	687b      	ldr	r3, [r7, #4]
 80055fe:	69db      	ldr	r3, [r3, #28]
 8005600:	4969      	ldr	r1, [pc, #420]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005602:	4313      	orrs	r3, r2
 8005604:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005608:	687b      	ldr	r3, [r7, #4]
 800560a:	681b      	ldr	r3, [r3, #0]
 800560c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005610:	2b00      	cmp	r3, #0
 8005612:	d00a      	beq.n	800562a <HAL_RCCEx_PeriphCLKConfig+0x25e>
 8005614:	4b64      	ldr	r3, [pc, #400]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005616:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800561a:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	6a1b      	ldr	r3, [r3, #32]
 8005622:	4961      	ldr	r1, [pc, #388]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005624:	4313      	orrs	r3, r2
 8005626:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800562a:	687b      	ldr	r3, [r7, #4]
 800562c:	681b      	ldr	r3, [r3, #0]
 800562e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005632:	2b00      	cmp	r3, #0
 8005634:	d00a      	beq.n	800564c <HAL_RCCEx_PeriphCLKConfig+0x280>
 8005636:	4b5c      	ldr	r3, [pc, #368]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005638:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800563c:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8005640:	687b      	ldr	r3, [r7, #4]
 8005642:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005644:	4958      	ldr	r1, [pc, #352]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005646:	4313      	orrs	r3, r2
 8005648:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005654:	2b00      	cmp	r3, #0
 8005656:	d015      	beq.n	8005684 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8005658:	4b53      	ldr	r3, [pc, #332]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800565a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800565e:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8005662:	687b      	ldr	r3, [r7, #4]
 8005664:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005666:	4950      	ldr	r1, [pc, #320]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005668:	4313      	orrs	r3, r2
 800566a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800566e:	687b      	ldr	r3, [r7, #4]
 8005670:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005672:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8005676:	d105      	bne.n	8005684 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8005678:	4b4b      	ldr	r3, [pc, #300]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800567a:	68db      	ldr	r3, [r3, #12]
 800567c:	4a4a      	ldr	r2, [pc, #296]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800567e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005682:	60d3      	str	r3, [r2, #12]
 8005684:	687b      	ldr	r3, [r7, #4]
 8005686:	681b      	ldr	r3, [r3, #0]
 8005688:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800568c:	2b00      	cmp	r3, #0
 800568e:	d015      	beq.n	80056bc <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 8005690:	4b45      	ldr	r3, [pc, #276]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005692:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005696:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 800569a:	687b      	ldr	r3, [r7, #4]
 800569c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800569e:	4942      	ldr	r1, [pc, #264]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80056a0:	4313      	orrs	r3, r2
 80056a2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80056aa:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80056ae:	d105      	bne.n	80056bc <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 80056b0:	4b3d      	ldr	r3, [pc, #244]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80056b2:	68db      	ldr	r3, [r3, #12]
 80056b4:	4a3c      	ldr	r2, [pc, #240]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80056b6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80056ba:	60d3      	str	r3, [r2, #12]
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	681b      	ldr	r3, [r3, #0]
 80056c0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80056c4:	2b00      	cmp	r3, #0
 80056c6:	d015      	beq.n	80056f4 <HAL_RCCEx_PeriphCLKConfig+0x328>
 80056c8:	4b37      	ldr	r3, [pc, #220]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80056ca:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80056ce:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80056d6:	4934      	ldr	r1, [pc, #208]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80056d8:	4313      	orrs	r3, r2
 80056da:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80056e2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80056e6:	d105      	bne.n	80056f4 <HAL_RCCEx_PeriphCLKConfig+0x328>
 80056e8:	4b2f      	ldr	r3, [pc, #188]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80056ea:	68db      	ldr	r3, [r3, #12]
 80056ec:	4a2e      	ldr	r2, [pc, #184]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80056ee:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80056f2:	60d3      	str	r3, [r2, #12]
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	681b      	ldr	r3, [r3, #0]
 80056f8:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80056fc:	2b00      	cmp	r3, #0
 80056fe:	d015      	beq.n	800572c <HAL_RCCEx_PeriphCLKConfig+0x360>
 8005700:	4b29      	ldr	r3, [pc, #164]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005702:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005706:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800570e:	4926      	ldr	r1, [pc, #152]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005710:	4313      	orrs	r3, r2
 8005712:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005716:	687b      	ldr	r3, [r7, #4]
 8005718:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800571a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800571e:	d105      	bne.n	800572c <HAL_RCCEx_PeriphCLKConfig+0x360>
 8005720:	4b21      	ldr	r3, [pc, #132]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005722:	68db      	ldr	r3, [r3, #12]
 8005724:	4a20      	ldr	r2, [pc, #128]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005726:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800572a:	60d3      	str	r3, [r2, #12]
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005734:	2b00      	cmp	r3, #0
 8005736:	d015      	beq.n	8005764 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8005738:	4b1b      	ldr	r3, [pc, #108]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800573a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800573e:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8005742:	687b      	ldr	r3, [r7, #4]
 8005744:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005746:	4918      	ldr	r1, [pc, #96]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005748:	4313      	orrs	r3, r2
 800574a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005752:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8005756:	d105      	bne.n	8005764 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8005758:	4b13      	ldr	r3, [pc, #76]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800575a:	68db      	ldr	r3, [r3, #12]
 800575c:	4a12      	ldr	r2, [pc, #72]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800575e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005762:	60d3      	str	r3, [r2, #12]
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	681b      	ldr	r3, [r3, #0]
 8005768:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800576c:	2b00      	cmp	r3, #0
 800576e:	d015      	beq.n	800579c <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8005770:	4b0d      	ldr	r3, [pc, #52]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005772:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005776:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 800577a:	687b      	ldr	r3, [r7, #4]
 800577c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800577e:	490a      	ldr	r1, [pc, #40]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005780:	4313      	orrs	r3, r2
 8005782:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005786:	687b      	ldr	r3, [r7, #4]
 8005788:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800578a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800578e:	d105      	bne.n	800579c <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8005790:	4b05      	ldr	r3, [pc, #20]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005792:	68db      	ldr	r3, [r3, #12]
 8005794:	4a04      	ldr	r2, [pc, #16]	@ (80057a8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005796:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800579a:	60d3      	str	r3, [r2, #12]
 800579c:	7cbb      	ldrb	r3, [r7, #18]
 800579e:	4618      	mov	r0, r3
 80057a0:	3718      	adds	r7, #24
 80057a2:	46bd      	mov	sp, r7
 80057a4:	bd80      	pop	{r7, pc}
 80057a6:	bf00      	nop
 80057a8:	40021000 	.word	0x40021000

080057ac <HAL_TIM_Base_Init>:
 80057ac:	b580      	push	{r7, lr}
 80057ae:	b082      	sub	sp, #8
 80057b0:	af00      	add	r7, sp, #0
 80057b2:	6078      	str	r0, [r7, #4]
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	2b00      	cmp	r3, #0
 80057b8:	d101      	bne.n	80057be <HAL_TIM_Base_Init+0x12>
 80057ba:	2301      	movs	r3, #1
 80057bc:	e049      	b.n	8005852 <HAL_TIM_Base_Init+0xa6>
 80057be:	687b      	ldr	r3, [r7, #4]
 80057c0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80057c4:	b2db      	uxtb	r3, r3
 80057c6:	2b00      	cmp	r3, #0
 80057c8:	d106      	bne.n	80057d8 <HAL_TIM_Base_Init+0x2c>
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	2200      	movs	r2, #0
 80057ce:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80057d2:	6878      	ldr	r0, [r7, #4]
 80057d4:	f7fc f90a 	bl	80019ec <HAL_TIM_Base_MspInit>
 80057d8:	687b      	ldr	r3, [r7, #4]
 80057da:	2202      	movs	r2, #2
 80057dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	681a      	ldr	r2, [r3, #0]
 80057e4:	687b      	ldr	r3, [r7, #4]
 80057e6:	3304      	adds	r3, #4
 80057e8:	4619      	mov	r1, r3
 80057ea:	4610      	mov	r0, r2
 80057ec:	f000 fd92 	bl	8006314 <TIM_Base_SetConfig>
 80057f0:	687b      	ldr	r3, [r7, #4]
 80057f2:	2201      	movs	r2, #1
 80057f4:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 80057f8:	687b      	ldr	r3, [r7, #4]
 80057fa:	2201      	movs	r2, #1
 80057fc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	2201      	movs	r2, #1
 8005804:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	2201      	movs	r2, #1
 800580c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	2201      	movs	r2, #1
 8005814:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	2201      	movs	r2, #1
 800581c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	2201      	movs	r2, #1
 8005824:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005828:	687b      	ldr	r3, [r7, #4]
 800582a:	2201      	movs	r2, #1
 800582c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005830:	687b      	ldr	r3, [r7, #4]
 8005832:	2201      	movs	r2, #1
 8005834:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005838:	687b      	ldr	r3, [r7, #4]
 800583a:	2201      	movs	r2, #1
 800583c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005840:	687b      	ldr	r3, [r7, #4]
 8005842:	2201      	movs	r2, #1
 8005844:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8005848:	687b      	ldr	r3, [r7, #4]
 800584a:	2201      	movs	r2, #1
 800584c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005850:	2300      	movs	r3, #0
 8005852:	4618      	mov	r0, r3
 8005854:	3708      	adds	r7, #8
 8005856:	46bd      	mov	sp, r7
 8005858:	bd80      	pop	{r7, pc}
	...

0800585c <HAL_TIM_Base_Start_IT>:
 800585c:	b480      	push	{r7}
 800585e:	b085      	sub	sp, #20
 8005860:	af00      	add	r7, sp, #0
 8005862:	6078      	str	r0, [r7, #4]
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800586a:	b2db      	uxtb	r3, r3
 800586c:	2b01      	cmp	r3, #1
 800586e:	d001      	beq.n	8005874 <HAL_TIM_Base_Start_IT+0x18>
 8005870:	2301      	movs	r3, #1
 8005872:	e04a      	b.n	800590a <HAL_TIM_Base_Start_IT+0xae>
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	2202      	movs	r2, #2
 8005878:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	681b      	ldr	r3, [r3, #0]
 8005880:	68da      	ldr	r2, [r3, #12]
 8005882:	687b      	ldr	r3, [r7, #4]
 8005884:	681b      	ldr	r3, [r3, #0]
 8005886:	f042 0201 	orr.w	r2, r2, #1
 800588a:	60da      	str	r2, [r3, #12]
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	4a21      	ldr	r2, [pc, #132]	@ (8005918 <HAL_TIM_Base_Start_IT+0xbc>)
 8005892:	4293      	cmp	r3, r2
 8005894:	d018      	beq.n	80058c8 <HAL_TIM_Base_Start_IT+0x6c>
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	681b      	ldr	r3, [r3, #0]
 800589a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800589e:	d013      	beq.n	80058c8 <HAL_TIM_Base_Start_IT+0x6c>
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	4a1d      	ldr	r2, [pc, #116]	@ (800591c <HAL_TIM_Base_Start_IT+0xc0>)
 80058a6:	4293      	cmp	r3, r2
 80058a8:	d00e      	beq.n	80058c8 <HAL_TIM_Base_Start_IT+0x6c>
 80058aa:	687b      	ldr	r3, [r7, #4]
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	4a1c      	ldr	r2, [pc, #112]	@ (8005920 <HAL_TIM_Base_Start_IT+0xc4>)
 80058b0:	4293      	cmp	r3, r2
 80058b2:	d009      	beq.n	80058c8 <HAL_TIM_Base_Start_IT+0x6c>
 80058b4:	687b      	ldr	r3, [r7, #4]
 80058b6:	681b      	ldr	r3, [r3, #0]
 80058b8:	4a1a      	ldr	r2, [pc, #104]	@ (8005924 <HAL_TIM_Base_Start_IT+0xc8>)
 80058ba:	4293      	cmp	r3, r2
 80058bc:	d004      	beq.n	80058c8 <HAL_TIM_Base_Start_IT+0x6c>
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	681b      	ldr	r3, [r3, #0]
 80058c2:	4a19      	ldr	r2, [pc, #100]	@ (8005928 <HAL_TIM_Base_Start_IT+0xcc>)
 80058c4:	4293      	cmp	r3, r2
 80058c6:	d115      	bne.n	80058f4 <HAL_TIM_Base_Start_IT+0x98>
 80058c8:	687b      	ldr	r3, [r7, #4]
 80058ca:	681b      	ldr	r3, [r3, #0]
 80058cc:	689a      	ldr	r2, [r3, #8]
 80058ce:	4b17      	ldr	r3, [pc, #92]	@ (800592c <HAL_TIM_Base_Start_IT+0xd0>)
 80058d0:	4013      	ands	r3, r2
 80058d2:	60fb      	str	r3, [r7, #12]
 80058d4:	68fb      	ldr	r3, [r7, #12]
 80058d6:	2b06      	cmp	r3, #6
 80058d8:	d015      	beq.n	8005906 <HAL_TIM_Base_Start_IT+0xaa>
 80058da:	68fb      	ldr	r3, [r7, #12]
 80058dc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80058e0:	d011      	beq.n	8005906 <HAL_TIM_Base_Start_IT+0xaa>
 80058e2:	687b      	ldr	r3, [r7, #4]
 80058e4:	681b      	ldr	r3, [r3, #0]
 80058e6:	681a      	ldr	r2, [r3, #0]
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	681b      	ldr	r3, [r3, #0]
 80058ec:	f042 0201 	orr.w	r2, r2, #1
 80058f0:	601a      	str	r2, [r3, #0]
 80058f2:	e008      	b.n	8005906 <HAL_TIM_Base_Start_IT+0xaa>
 80058f4:	687b      	ldr	r3, [r7, #4]
 80058f6:	681b      	ldr	r3, [r3, #0]
 80058f8:	681a      	ldr	r2, [r3, #0]
 80058fa:	687b      	ldr	r3, [r7, #4]
 80058fc:	681b      	ldr	r3, [r3, #0]
 80058fe:	f042 0201 	orr.w	r2, r2, #1
 8005902:	601a      	str	r2, [r3, #0]
 8005904:	e000      	b.n	8005908 <HAL_TIM_Base_Start_IT+0xac>
 8005906:	bf00      	nop
 8005908:	2300      	movs	r3, #0
 800590a:	4618      	mov	r0, r3
 800590c:	3714      	adds	r7, #20
 800590e:	46bd      	mov	sp, r7
 8005910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005914:	4770      	bx	lr
 8005916:	bf00      	nop
 8005918:	40012c00 	.word	0x40012c00
 800591c:	40000400 	.word	0x40000400
 8005920:	40000800 	.word	0x40000800
 8005924:	40013400 	.word	0x40013400
 8005928:	40014000 	.word	0x40014000
 800592c:	00010007 	.word	0x00010007

08005930 <HAL_TIM_PWM_Init>:
 8005930:	b580      	push	{r7, lr}
 8005932:	b082      	sub	sp, #8
 8005934:	af00      	add	r7, sp, #0
 8005936:	6078      	str	r0, [r7, #4]
 8005938:	687b      	ldr	r3, [r7, #4]
 800593a:	2b00      	cmp	r3, #0
 800593c:	d101      	bne.n	8005942 <HAL_TIM_PWM_Init+0x12>
 800593e:	2301      	movs	r3, #1
 8005940:	e049      	b.n	80059d6 <HAL_TIM_PWM_Init+0xa6>
 8005942:	687b      	ldr	r3, [r7, #4]
 8005944:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005948:	b2db      	uxtb	r3, r3
 800594a:	2b00      	cmp	r3, #0
 800594c:	d106      	bne.n	800595c <HAL_TIM_PWM_Init+0x2c>
 800594e:	687b      	ldr	r3, [r7, #4]
 8005950:	2200      	movs	r2, #0
 8005952:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005956:	6878      	ldr	r0, [r7, #4]
 8005958:	f000 f841 	bl	80059de <HAL_TIM_PWM_MspInit>
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	2202      	movs	r2, #2
 8005960:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	681a      	ldr	r2, [r3, #0]
 8005968:	687b      	ldr	r3, [r7, #4]
 800596a:	3304      	adds	r3, #4
 800596c:	4619      	mov	r1, r3
 800596e:	4610      	mov	r0, r2
 8005970:	f000 fcd0 	bl	8006314 <TIM_Base_SetConfig>
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	2201      	movs	r2, #1
 8005978:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	2201      	movs	r2, #1
 8005980:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005984:	687b      	ldr	r3, [r7, #4]
 8005986:	2201      	movs	r2, #1
 8005988:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800598c:	687b      	ldr	r3, [r7, #4]
 800598e:	2201      	movs	r2, #1
 8005990:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005994:	687b      	ldr	r3, [r7, #4]
 8005996:	2201      	movs	r2, #1
 8005998:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800599c:	687b      	ldr	r3, [r7, #4]
 800599e:	2201      	movs	r2, #1
 80059a0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	2201      	movs	r2, #1
 80059a8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	2201      	movs	r2, #1
 80059b0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80059b4:	687b      	ldr	r3, [r7, #4]
 80059b6:	2201      	movs	r2, #1
 80059b8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	2201      	movs	r2, #1
 80059c0:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	2201      	movs	r2, #1
 80059c8:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 80059cc:	687b      	ldr	r3, [r7, #4]
 80059ce:	2201      	movs	r2, #1
 80059d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80059d4:	2300      	movs	r3, #0
 80059d6:	4618      	mov	r0, r3
 80059d8:	3708      	adds	r7, #8
 80059da:	46bd      	mov	sp, r7
 80059dc:	bd80      	pop	{r7, pc}

080059de <HAL_TIM_PWM_MspInit>:
 80059de:	b480      	push	{r7}
 80059e0:	b083      	sub	sp, #12
 80059e2:	af00      	add	r7, sp, #0
 80059e4:	6078      	str	r0, [r7, #4]
 80059e6:	bf00      	nop
 80059e8:	370c      	adds	r7, #12
 80059ea:	46bd      	mov	sp, r7
 80059ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059f0:	4770      	bx	lr
	...

080059f4 <HAL_TIM_PWM_Start>:
 80059f4:	b580      	push	{r7, lr}
 80059f6:	b084      	sub	sp, #16
 80059f8:	af00      	add	r7, sp, #0
 80059fa:	6078      	str	r0, [r7, #4]
 80059fc:	6039      	str	r1, [r7, #0]
 80059fe:	683b      	ldr	r3, [r7, #0]
 8005a00:	2b00      	cmp	r3, #0
 8005a02:	d109      	bne.n	8005a18 <HAL_TIM_PWM_Start+0x24>
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8005a0a:	b2db      	uxtb	r3, r3
 8005a0c:	2b01      	cmp	r3, #1
 8005a0e:	bf14      	ite	ne
 8005a10:	2301      	movne	r3, #1
 8005a12:	2300      	moveq	r3, #0
 8005a14:	b2db      	uxtb	r3, r3
 8005a16:	e03c      	b.n	8005a92 <HAL_TIM_PWM_Start+0x9e>
 8005a18:	683b      	ldr	r3, [r7, #0]
 8005a1a:	2b04      	cmp	r3, #4
 8005a1c:	d109      	bne.n	8005a32 <HAL_TIM_PWM_Start+0x3e>
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8005a24:	b2db      	uxtb	r3, r3
 8005a26:	2b01      	cmp	r3, #1
 8005a28:	bf14      	ite	ne
 8005a2a:	2301      	movne	r3, #1
 8005a2c:	2300      	moveq	r3, #0
 8005a2e:	b2db      	uxtb	r3, r3
 8005a30:	e02f      	b.n	8005a92 <HAL_TIM_PWM_Start+0x9e>
 8005a32:	683b      	ldr	r3, [r7, #0]
 8005a34:	2b08      	cmp	r3, #8
 8005a36:	d109      	bne.n	8005a4c <HAL_TIM_PWM_Start+0x58>
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005a3e:	b2db      	uxtb	r3, r3
 8005a40:	2b01      	cmp	r3, #1
 8005a42:	bf14      	ite	ne
 8005a44:	2301      	movne	r3, #1
 8005a46:	2300      	moveq	r3, #0
 8005a48:	b2db      	uxtb	r3, r3
 8005a4a:	e022      	b.n	8005a92 <HAL_TIM_PWM_Start+0x9e>
 8005a4c:	683b      	ldr	r3, [r7, #0]
 8005a4e:	2b0c      	cmp	r3, #12
 8005a50:	d109      	bne.n	8005a66 <HAL_TIM_PWM_Start+0x72>
 8005a52:	687b      	ldr	r3, [r7, #4]
 8005a54:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005a58:	b2db      	uxtb	r3, r3
 8005a5a:	2b01      	cmp	r3, #1
 8005a5c:	bf14      	ite	ne
 8005a5e:	2301      	movne	r3, #1
 8005a60:	2300      	moveq	r3, #0
 8005a62:	b2db      	uxtb	r3, r3
 8005a64:	e015      	b.n	8005a92 <HAL_TIM_PWM_Start+0x9e>
 8005a66:	683b      	ldr	r3, [r7, #0]
 8005a68:	2b10      	cmp	r3, #16
 8005a6a:	d109      	bne.n	8005a80 <HAL_TIM_PWM_Start+0x8c>
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005a72:	b2db      	uxtb	r3, r3
 8005a74:	2b01      	cmp	r3, #1
 8005a76:	bf14      	ite	ne
 8005a78:	2301      	movne	r3, #1
 8005a7a:	2300      	moveq	r3, #0
 8005a7c:	b2db      	uxtb	r3, r3
 8005a7e:	e008      	b.n	8005a92 <HAL_TIM_PWM_Start+0x9e>
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8005a86:	b2db      	uxtb	r3, r3
 8005a88:	2b01      	cmp	r3, #1
 8005a8a:	bf14      	ite	ne
 8005a8c:	2301      	movne	r3, #1
 8005a8e:	2300      	moveq	r3, #0
 8005a90:	b2db      	uxtb	r3, r3
 8005a92:	2b00      	cmp	r3, #0
 8005a94:	d001      	beq.n	8005a9a <HAL_TIM_PWM_Start+0xa6>
 8005a96:	2301      	movs	r3, #1
 8005a98:	e097      	b.n	8005bca <HAL_TIM_PWM_Start+0x1d6>
 8005a9a:	683b      	ldr	r3, [r7, #0]
 8005a9c:	2b00      	cmp	r3, #0
 8005a9e:	d104      	bne.n	8005aaa <HAL_TIM_PWM_Start+0xb6>
 8005aa0:	687b      	ldr	r3, [r7, #4]
 8005aa2:	2202      	movs	r2, #2
 8005aa4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005aa8:	e023      	b.n	8005af2 <HAL_TIM_PWM_Start+0xfe>
 8005aaa:	683b      	ldr	r3, [r7, #0]
 8005aac:	2b04      	cmp	r3, #4
 8005aae:	d104      	bne.n	8005aba <HAL_TIM_PWM_Start+0xc6>
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	2202      	movs	r2, #2
 8005ab4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005ab8:	e01b      	b.n	8005af2 <HAL_TIM_PWM_Start+0xfe>
 8005aba:	683b      	ldr	r3, [r7, #0]
 8005abc:	2b08      	cmp	r3, #8
 8005abe:	d104      	bne.n	8005aca <HAL_TIM_PWM_Start+0xd6>
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	2202      	movs	r2, #2
 8005ac4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005ac8:	e013      	b.n	8005af2 <HAL_TIM_PWM_Start+0xfe>
 8005aca:	683b      	ldr	r3, [r7, #0]
 8005acc:	2b0c      	cmp	r3, #12
 8005ace:	d104      	bne.n	8005ada <HAL_TIM_PWM_Start+0xe6>
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	2202      	movs	r2, #2
 8005ad4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005ad8:	e00b      	b.n	8005af2 <HAL_TIM_PWM_Start+0xfe>
 8005ada:	683b      	ldr	r3, [r7, #0]
 8005adc:	2b10      	cmp	r3, #16
 8005ade:	d104      	bne.n	8005aea <HAL_TIM_PWM_Start+0xf6>
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	2202      	movs	r2, #2
 8005ae4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005ae8:	e003      	b.n	8005af2 <HAL_TIM_PWM_Start+0xfe>
 8005aea:	687b      	ldr	r3, [r7, #4]
 8005aec:	2202      	movs	r2, #2
 8005aee:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005af2:	687b      	ldr	r3, [r7, #4]
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	2201      	movs	r2, #1
 8005af8:	6839      	ldr	r1, [r7, #0]
 8005afa:	4618      	mov	r0, r3
 8005afc:	f001 f838 	bl	8006b70 <TIM_CCxChannelCmd>
 8005b00:	687b      	ldr	r3, [r7, #4]
 8005b02:	681b      	ldr	r3, [r3, #0]
 8005b04:	4a33      	ldr	r2, [pc, #204]	@ (8005bd4 <HAL_TIM_PWM_Start+0x1e0>)
 8005b06:	4293      	cmp	r3, r2
 8005b08:	d013      	beq.n	8005b32 <HAL_TIM_PWM_Start+0x13e>
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	4a32      	ldr	r2, [pc, #200]	@ (8005bd8 <HAL_TIM_PWM_Start+0x1e4>)
 8005b10:	4293      	cmp	r3, r2
 8005b12:	d00e      	beq.n	8005b32 <HAL_TIM_PWM_Start+0x13e>
 8005b14:	687b      	ldr	r3, [r7, #4]
 8005b16:	681b      	ldr	r3, [r3, #0]
 8005b18:	4a30      	ldr	r2, [pc, #192]	@ (8005bdc <HAL_TIM_PWM_Start+0x1e8>)
 8005b1a:	4293      	cmp	r3, r2
 8005b1c:	d009      	beq.n	8005b32 <HAL_TIM_PWM_Start+0x13e>
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	4a2f      	ldr	r2, [pc, #188]	@ (8005be0 <HAL_TIM_PWM_Start+0x1ec>)
 8005b24:	4293      	cmp	r3, r2
 8005b26:	d004      	beq.n	8005b32 <HAL_TIM_PWM_Start+0x13e>
 8005b28:	687b      	ldr	r3, [r7, #4]
 8005b2a:	681b      	ldr	r3, [r3, #0]
 8005b2c:	4a2d      	ldr	r2, [pc, #180]	@ (8005be4 <HAL_TIM_PWM_Start+0x1f0>)
 8005b2e:	4293      	cmp	r3, r2
 8005b30:	d101      	bne.n	8005b36 <HAL_TIM_PWM_Start+0x142>
 8005b32:	2301      	movs	r3, #1
 8005b34:	e000      	b.n	8005b38 <HAL_TIM_PWM_Start+0x144>
 8005b36:	2300      	movs	r3, #0
 8005b38:	2b00      	cmp	r3, #0
 8005b3a:	d007      	beq.n	8005b4c <HAL_TIM_PWM_Start+0x158>
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	681b      	ldr	r3, [r3, #0]
 8005b40:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005b42:	687b      	ldr	r3, [r7, #4]
 8005b44:	681b      	ldr	r3, [r3, #0]
 8005b46:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005b4a:	645a      	str	r2, [r3, #68]	@ 0x44
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	681b      	ldr	r3, [r3, #0]
 8005b50:	4a20      	ldr	r2, [pc, #128]	@ (8005bd4 <HAL_TIM_PWM_Start+0x1e0>)
 8005b52:	4293      	cmp	r3, r2
 8005b54:	d018      	beq.n	8005b88 <HAL_TIM_PWM_Start+0x194>
 8005b56:	687b      	ldr	r3, [r7, #4]
 8005b58:	681b      	ldr	r3, [r3, #0]
 8005b5a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005b5e:	d013      	beq.n	8005b88 <HAL_TIM_PWM_Start+0x194>
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	681b      	ldr	r3, [r3, #0]
 8005b64:	4a20      	ldr	r2, [pc, #128]	@ (8005be8 <HAL_TIM_PWM_Start+0x1f4>)
 8005b66:	4293      	cmp	r3, r2
 8005b68:	d00e      	beq.n	8005b88 <HAL_TIM_PWM_Start+0x194>
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	681b      	ldr	r3, [r3, #0]
 8005b6e:	4a1f      	ldr	r2, [pc, #124]	@ (8005bec <HAL_TIM_PWM_Start+0x1f8>)
 8005b70:	4293      	cmp	r3, r2
 8005b72:	d009      	beq.n	8005b88 <HAL_TIM_PWM_Start+0x194>
 8005b74:	687b      	ldr	r3, [r7, #4]
 8005b76:	681b      	ldr	r3, [r3, #0]
 8005b78:	4a17      	ldr	r2, [pc, #92]	@ (8005bd8 <HAL_TIM_PWM_Start+0x1e4>)
 8005b7a:	4293      	cmp	r3, r2
 8005b7c:	d004      	beq.n	8005b88 <HAL_TIM_PWM_Start+0x194>
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	681b      	ldr	r3, [r3, #0]
 8005b82:	4a16      	ldr	r2, [pc, #88]	@ (8005bdc <HAL_TIM_PWM_Start+0x1e8>)
 8005b84:	4293      	cmp	r3, r2
 8005b86:	d115      	bne.n	8005bb4 <HAL_TIM_PWM_Start+0x1c0>
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	681b      	ldr	r3, [r3, #0]
 8005b8c:	689a      	ldr	r2, [r3, #8]
 8005b8e:	4b18      	ldr	r3, [pc, #96]	@ (8005bf0 <HAL_TIM_PWM_Start+0x1fc>)
 8005b90:	4013      	ands	r3, r2
 8005b92:	60fb      	str	r3, [r7, #12]
 8005b94:	68fb      	ldr	r3, [r7, #12]
 8005b96:	2b06      	cmp	r3, #6
 8005b98:	d015      	beq.n	8005bc6 <HAL_TIM_PWM_Start+0x1d2>
 8005b9a:	68fb      	ldr	r3, [r7, #12]
 8005b9c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005ba0:	d011      	beq.n	8005bc6 <HAL_TIM_PWM_Start+0x1d2>
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	681b      	ldr	r3, [r3, #0]
 8005ba6:	681a      	ldr	r2, [r3, #0]
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	681b      	ldr	r3, [r3, #0]
 8005bac:	f042 0201 	orr.w	r2, r2, #1
 8005bb0:	601a      	str	r2, [r3, #0]
 8005bb2:	e008      	b.n	8005bc6 <HAL_TIM_PWM_Start+0x1d2>
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	681a      	ldr	r2, [r3, #0]
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	681b      	ldr	r3, [r3, #0]
 8005bbe:	f042 0201 	orr.w	r2, r2, #1
 8005bc2:	601a      	str	r2, [r3, #0]
 8005bc4:	e000      	b.n	8005bc8 <HAL_TIM_PWM_Start+0x1d4>
 8005bc6:	bf00      	nop
 8005bc8:	2300      	movs	r3, #0
 8005bca:	4618      	mov	r0, r3
 8005bcc:	3710      	adds	r7, #16
 8005bce:	46bd      	mov	sp, r7
 8005bd0:	bd80      	pop	{r7, pc}
 8005bd2:	bf00      	nop
 8005bd4:	40012c00 	.word	0x40012c00
 8005bd8:	40013400 	.word	0x40013400
 8005bdc:	40014000 	.word	0x40014000
 8005be0:	40014400 	.word	0x40014400
 8005be4:	40014800 	.word	0x40014800
 8005be8:	40000400 	.word	0x40000400
 8005bec:	40000800 	.word	0x40000800
 8005bf0:	00010007 	.word	0x00010007

08005bf4 <HAL_TIM_IRQHandler>:
 8005bf4:	b580      	push	{r7, lr}
 8005bf6:	b084      	sub	sp, #16
 8005bf8:	af00      	add	r7, sp, #0
 8005bfa:	6078      	str	r0, [r7, #4]
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	681b      	ldr	r3, [r3, #0]
 8005c00:	68db      	ldr	r3, [r3, #12]
 8005c02:	60fb      	str	r3, [r7, #12]
 8005c04:	687b      	ldr	r3, [r7, #4]
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	691b      	ldr	r3, [r3, #16]
 8005c0a:	60bb      	str	r3, [r7, #8]
 8005c0c:	68bb      	ldr	r3, [r7, #8]
 8005c0e:	f003 0302 	and.w	r3, r3, #2
 8005c12:	2b00      	cmp	r3, #0
 8005c14:	d020      	beq.n	8005c58 <HAL_TIM_IRQHandler+0x64>
 8005c16:	68fb      	ldr	r3, [r7, #12]
 8005c18:	f003 0302 	and.w	r3, r3, #2
 8005c1c:	2b00      	cmp	r3, #0
 8005c1e:	d01b      	beq.n	8005c58 <HAL_TIM_IRQHandler+0x64>
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	f06f 0202 	mvn.w	r2, #2
 8005c28:	611a      	str	r2, [r3, #16]
 8005c2a:	687b      	ldr	r3, [r7, #4]
 8005c2c:	2201      	movs	r2, #1
 8005c2e:	771a      	strb	r2, [r3, #28]
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	699b      	ldr	r3, [r3, #24]
 8005c36:	f003 0303 	and.w	r3, r3, #3
 8005c3a:	2b00      	cmp	r3, #0
 8005c3c:	d003      	beq.n	8005c46 <HAL_TIM_IRQHandler+0x52>
 8005c3e:	6878      	ldr	r0, [r7, #4]
 8005c40:	f000 fb4a 	bl	80062d8 <HAL_TIM_IC_CaptureCallback>
 8005c44:	e005      	b.n	8005c52 <HAL_TIM_IRQHandler+0x5e>
 8005c46:	6878      	ldr	r0, [r7, #4]
 8005c48:	f000 fb3c 	bl	80062c4 <HAL_TIM_OC_DelayElapsedCallback>
 8005c4c:	6878      	ldr	r0, [r7, #4]
 8005c4e:	f000 fb4d 	bl	80062ec <HAL_TIM_PWM_PulseFinishedCallback>
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	2200      	movs	r2, #0
 8005c56:	771a      	strb	r2, [r3, #28]
 8005c58:	68bb      	ldr	r3, [r7, #8]
 8005c5a:	f003 0304 	and.w	r3, r3, #4
 8005c5e:	2b00      	cmp	r3, #0
 8005c60:	d020      	beq.n	8005ca4 <HAL_TIM_IRQHandler+0xb0>
 8005c62:	68fb      	ldr	r3, [r7, #12]
 8005c64:	f003 0304 	and.w	r3, r3, #4
 8005c68:	2b00      	cmp	r3, #0
 8005c6a:	d01b      	beq.n	8005ca4 <HAL_TIM_IRQHandler+0xb0>
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	f06f 0204 	mvn.w	r2, #4
 8005c74:	611a      	str	r2, [r3, #16]
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	2202      	movs	r2, #2
 8005c7a:	771a      	strb	r2, [r3, #28]
 8005c7c:	687b      	ldr	r3, [r7, #4]
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	699b      	ldr	r3, [r3, #24]
 8005c82:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005c86:	2b00      	cmp	r3, #0
 8005c88:	d003      	beq.n	8005c92 <HAL_TIM_IRQHandler+0x9e>
 8005c8a:	6878      	ldr	r0, [r7, #4]
 8005c8c:	f000 fb24 	bl	80062d8 <HAL_TIM_IC_CaptureCallback>
 8005c90:	e005      	b.n	8005c9e <HAL_TIM_IRQHandler+0xaa>
 8005c92:	6878      	ldr	r0, [r7, #4]
 8005c94:	f000 fb16 	bl	80062c4 <HAL_TIM_OC_DelayElapsedCallback>
 8005c98:	6878      	ldr	r0, [r7, #4]
 8005c9a:	f000 fb27 	bl	80062ec <HAL_TIM_PWM_PulseFinishedCallback>
 8005c9e:	687b      	ldr	r3, [r7, #4]
 8005ca0:	2200      	movs	r2, #0
 8005ca2:	771a      	strb	r2, [r3, #28]
 8005ca4:	68bb      	ldr	r3, [r7, #8]
 8005ca6:	f003 0308 	and.w	r3, r3, #8
 8005caa:	2b00      	cmp	r3, #0
 8005cac:	d020      	beq.n	8005cf0 <HAL_TIM_IRQHandler+0xfc>
 8005cae:	68fb      	ldr	r3, [r7, #12]
 8005cb0:	f003 0308 	and.w	r3, r3, #8
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	d01b      	beq.n	8005cf0 <HAL_TIM_IRQHandler+0xfc>
 8005cb8:	687b      	ldr	r3, [r7, #4]
 8005cba:	681b      	ldr	r3, [r3, #0]
 8005cbc:	f06f 0208 	mvn.w	r2, #8
 8005cc0:	611a      	str	r2, [r3, #16]
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	2204      	movs	r2, #4
 8005cc6:	771a      	strb	r2, [r3, #28]
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	681b      	ldr	r3, [r3, #0]
 8005ccc:	69db      	ldr	r3, [r3, #28]
 8005cce:	f003 0303 	and.w	r3, r3, #3
 8005cd2:	2b00      	cmp	r3, #0
 8005cd4:	d003      	beq.n	8005cde <HAL_TIM_IRQHandler+0xea>
 8005cd6:	6878      	ldr	r0, [r7, #4]
 8005cd8:	f000 fafe 	bl	80062d8 <HAL_TIM_IC_CaptureCallback>
 8005cdc:	e005      	b.n	8005cea <HAL_TIM_IRQHandler+0xf6>
 8005cde:	6878      	ldr	r0, [r7, #4]
 8005ce0:	f000 faf0 	bl	80062c4 <HAL_TIM_OC_DelayElapsedCallback>
 8005ce4:	6878      	ldr	r0, [r7, #4]
 8005ce6:	f000 fb01 	bl	80062ec <HAL_TIM_PWM_PulseFinishedCallback>
 8005cea:	687b      	ldr	r3, [r7, #4]
 8005cec:	2200      	movs	r2, #0
 8005cee:	771a      	strb	r2, [r3, #28]
 8005cf0:	68bb      	ldr	r3, [r7, #8]
 8005cf2:	f003 0310 	and.w	r3, r3, #16
 8005cf6:	2b00      	cmp	r3, #0
 8005cf8:	d020      	beq.n	8005d3c <HAL_TIM_IRQHandler+0x148>
 8005cfa:	68fb      	ldr	r3, [r7, #12]
 8005cfc:	f003 0310 	and.w	r3, r3, #16
 8005d00:	2b00      	cmp	r3, #0
 8005d02:	d01b      	beq.n	8005d3c <HAL_TIM_IRQHandler+0x148>
 8005d04:	687b      	ldr	r3, [r7, #4]
 8005d06:	681b      	ldr	r3, [r3, #0]
 8005d08:	f06f 0210 	mvn.w	r2, #16
 8005d0c:	611a      	str	r2, [r3, #16]
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	2208      	movs	r2, #8
 8005d12:	771a      	strb	r2, [r3, #28]
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	681b      	ldr	r3, [r3, #0]
 8005d18:	69db      	ldr	r3, [r3, #28]
 8005d1a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005d1e:	2b00      	cmp	r3, #0
 8005d20:	d003      	beq.n	8005d2a <HAL_TIM_IRQHandler+0x136>
 8005d22:	6878      	ldr	r0, [r7, #4]
 8005d24:	f000 fad8 	bl	80062d8 <HAL_TIM_IC_CaptureCallback>
 8005d28:	e005      	b.n	8005d36 <HAL_TIM_IRQHandler+0x142>
 8005d2a:	6878      	ldr	r0, [r7, #4]
 8005d2c:	f000 faca 	bl	80062c4 <HAL_TIM_OC_DelayElapsedCallback>
 8005d30:	6878      	ldr	r0, [r7, #4]
 8005d32:	f000 fadb 	bl	80062ec <HAL_TIM_PWM_PulseFinishedCallback>
 8005d36:	687b      	ldr	r3, [r7, #4]
 8005d38:	2200      	movs	r2, #0
 8005d3a:	771a      	strb	r2, [r3, #28]
 8005d3c:	68bb      	ldr	r3, [r7, #8]
 8005d3e:	f003 0301 	and.w	r3, r3, #1
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d00c      	beq.n	8005d60 <HAL_TIM_IRQHandler+0x16c>
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	f003 0301 	and.w	r3, r3, #1
 8005d4c:	2b00      	cmp	r3, #0
 8005d4e:	d007      	beq.n	8005d60 <HAL_TIM_IRQHandler+0x16c>
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	681b      	ldr	r3, [r3, #0]
 8005d54:	f06f 0201 	mvn.w	r2, #1
 8005d58:	611a      	str	r2, [r3, #16]
 8005d5a:	6878      	ldr	r0, [r7, #4]
 8005d5c:	f000 faa8 	bl	80062b0 <HAL_TIM_PeriodElapsedCallback>
 8005d60:	68bb      	ldr	r3, [r7, #8]
 8005d62:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005d66:	2b00      	cmp	r3, #0
 8005d68:	d104      	bne.n	8005d74 <HAL_TIM_IRQHandler+0x180>
 8005d6a:	68bb      	ldr	r3, [r7, #8]
 8005d6c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8005d70:	2b00      	cmp	r3, #0
 8005d72:	d00c      	beq.n	8005d8e <HAL_TIM_IRQHandler+0x19a>
 8005d74:	68fb      	ldr	r3, [r7, #12]
 8005d76:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005d7a:	2b00      	cmp	r3, #0
 8005d7c:	d007      	beq.n	8005d8e <HAL_TIM_IRQHandler+0x19a>
 8005d7e:	687b      	ldr	r3, [r7, #4]
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8005d86:	611a      	str	r2, [r3, #16]
 8005d88:	6878      	ldr	r0, [r7, #4]
 8005d8a:	f001 f82f 	bl	8006dec <HAL_TIMEx_BreakCallback>
 8005d8e:	68bb      	ldr	r3, [r7, #8]
 8005d90:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005d94:	2b00      	cmp	r3, #0
 8005d96:	d00c      	beq.n	8005db2 <HAL_TIM_IRQHandler+0x1be>
 8005d98:	68fb      	ldr	r3, [r7, #12]
 8005d9a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005d9e:	2b00      	cmp	r3, #0
 8005da0:	d007      	beq.n	8005db2 <HAL_TIM_IRQHandler+0x1be>
 8005da2:	687b      	ldr	r3, [r7, #4]
 8005da4:	681b      	ldr	r3, [r3, #0]
 8005da6:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8005daa:	611a      	str	r2, [r3, #16]
 8005dac:	6878      	ldr	r0, [r7, #4]
 8005dae:	f001 f827 	bl	8006e00 <HAL_TIMEx_Break2Callback>
 8005db2:	68bb      	ldr	r3, [r7, #8]
 8005db4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005db8:	2b00      	cmp	r3, #0
 8005dba:	d00c      	beq.n	8005dd6 <HAL_TIM_IRQHandler+0x1e2>
 8005dbc:	68fb      	ldr	r3, [r7, #12]
 8005dbe:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005dc2:	2b00      	cmp	r3, #0
 8005dc4:	d007      	beq.n	8005dd6 <HAL_TIM_IRQHandler+0x1e2>
 8005dc6:	687b      	ldr	r3, [r7, #4]
 8005dc8:	681b      	ldr	r3, [r3, #0]
 8005dca:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8005dce:	611a      	str	r2, [r3, #16]
 8005dd0:	6878      	ldr	r0, [r7, #4]
 8005dd2:	f000 fa95 	bl	8006300 <HAL_TIM_TriggerCallback>
 8005dd6:	68bb      	ldr	r3, [r7, #8]
 8005dd8:	f003 0320 	and.w	r3, r3, #32
 8005ddc:	2b00      	cmp	r3, #0
 8005dde:	d00c      	beq.n	8005dfa <HAL_TIM_IRQHandler+0x206>
 8005de0:	68fb      	ldr	r3, [r7, #12]
 8005de2:	f003 0320 	and.w	r3, r3, #32
 8005de6:	2b00      	cmp	r3, #0
 8005de8:	d007      	beq.n	8005dfa <HAL_TIM_IRQHandler+0x206>
 8005dea:	687b      	ldr	r3, [r7, #4]
 8005dec:	681b      	ldr	r3, [r3, #0]
 8005dee:	f06f 0220 	mvn.w	r2, #32
 8005df2:	611a      	str	r2, [r3, #16]
 8005df4:	6878      	ldr	r0, [r7, #4]
 8005df6:	f000 ffef 	bl	8006dd8 <HAL_TIMEx_CommutCallback>
 8005dfa:	68bb      	ldr	r3, [r7, #8]
 8005dfc:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8005e00:	2b00      	cmp	r3, #0
 8005e02:	d00c      	beq.n	8005e1e <HAL_TIM_IRQHandler+0x22a>
 8005e04:	68fb      	ldr	r3, [r7, #12]
 8005e06:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8005e0a:	2b00      	cmp	r3, #0
 8005e0c:	d007      	beq.n	8005e1e <HAL_TIM_IRQHandler+0x22a>
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	681b      	ldr	r3, [r3, #0]
 8005e12:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8005e16:	611a      	str	r2, [r3, #16]
 8005e18:	6878      	ldr	r0, [r7, #4]
 8005e1a:	f000 fffb 	bl	8006e14 <HAL_TIMEx_EncoderIndexCallback>
 8005e1e:	68bb      	ldr	r3, [r7, #8]
 8005e20:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8005e24:	2b00      	cmp	r3, #0
 8005e26:	d00c      	beq.n	8005e42 <HAL_TIM_IRQHandler+0x24e>
 8005e28:	68fb      	ldr	r3, [r7, #12]
 8005e2a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8005e2e:	2b00      	cmp	r3, #0
 8005e30:	d007      	beq.n	8005e42 <HAL_TIM_IRQHandler+0x24e>
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8005e3a:	611a      	str	r2, [r3, #16]
 8005e3c:	6878      	ldr	r0, [r7, #4]
 8005e3e:	f000 fff3 	bl	8006e28 <HAL_TIMEx_DirectionChangeCallback>
 8005e42:	68bb      	ldr	r3, [r7, #8]
 8005e44:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005e48:	2b00      	cmp	r3, #0
 8005e4a:	d00c      	beq.n	8005e66 <HAL_TIM_IRQHandler+0x272>
 8005e4c:	68fb      	ldr	r3, [r7, #12]
 8005e4e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005e52:	2b00      	cmp	r3, #0
 8005e54:	d007      	beq.n	8005e66 <HAL_TIM_IRQHandler+0x272>
 8005e56:	687b      	ldr	r3, [r7, #4]
 8005e58:	681b      	ldr	r3, [r3, #0]
 8005e5a:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8005e5e:	611a      	str	r2, [r3, #16]
 8005e60:	6878      	ldr	r0, [r7, #4]
 8005e62:	f000 ffeb 	bl	8006e3c <HAL_TIMEx_IndexErrorCallback>
 8005e66:	68bb      	ldr	r3, [r7, #8]
 8005e68:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8005e6c:	2b00      	cmp	r3, #0
 8005e6e:	d00c      	beq.n	8005e8a <HAL_TIM_IRQHandler+0x296>
 8005e70:	68fb      	ldr	r3, [r7, #12]
 8005e72:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8005e76:	2b00      	cmp	r3, #0
 8005e78:	d007      	beq.n	8005e8a <HAL_TIM_IRQHandler+0x296>
 8005e7a:	687b      	ldr	r3, [r7, #4]
 8005e7c:	681b      	ldr	r3, [r3, #0]
 8005e7e:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8005e82:	611a      	str	r2, [r3, #16]
 8005e84:	6878      	ldr	r0, [r7, #4]
 8005e86:	f000 ffe3 	bl	8006e50 <HAL_TIMEx_TransitionErrorCallback>
 8005e8a:	bf00      	nop
 8005e8c:	3710      	adds	r7, #16
 8005e8e:	46bd      	mov	sp, r7
 8005e90:	bd80      	pop	{r7, pc}
	...

08005e94 <HAL_TIM_PWM_ConfigChannel>:
 8005e94:	b580      	push	{r7, lr}
 8005e96:	b086      	sub	sp, #24
 8005e98:	af00      	add	r7, sp, #0
 8005e9a:	60f8      	str	r0, [r7, #12]
 8005e9c:	60b9      	str	r1, [r7, #8]
 8005e9e:	607a      	str	r2, [r7, #4]
 8005ea0:	2300      	movs	r3, #0
 8005ea2:	75fb      	strb	r3, [r7, #23]
 8005ea4:	68fb      	ldr	r3, [r7, #12]
 8005ea6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005eaa:	2b01      	cmp	r3, #1
 8005eac:	d101      	bne.n	8005eb2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8005eae:	2302      	movs	r3, #2
 8005eb0:	e0ff      	b.n	80060b2 <HAL_TIM_PWM_ConfigChannel+0x21e>
 8005eb2:	68fb      	ldr	r3, [r7, #12]
 8005eb4:	2201      	movs	r2, #1
 8005eb6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005eba:	687b      	ldr	r3, [r7, #4]
 8005ebc:	2b14      	cmp	r3, #20
 8005ebe:	f200 80f0 	bhi.w	80060a2 <HAL_TIM_PWM_ConfigChannel+0x20e>
 8005ec2:	a201      	add	r2, pc, #4	@ (adr r2, 8005ec8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8005ec4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005ec8:	08005f1d 	.word	0x08005f1d
 8005ecc:	080060a3 	.word	0x080060a3
 8005ed0:	080060a3 	.word	0x080060a3
 8005ed4:	080060a3 	.word	0x080060a3
 8005ed8:	08005f5d 	.word	0x08005f5d
 8005edc:	080060a3 	.word	0x080060a3
 8005ee0:	080060a3 	.word	0x080060a3
 8005ee4:	080060a3 	.word	0x080060a3
 8005ee8:	08005f9f 	.word	0x08005f9f
 8005eec:	080060a3 	.word	0x080060a3
 8005ef0:	080060a3 	.word	0x080060a3
 8005ef4:	080060a3 	.word	0x080060a3
 8005ef8:	08005fdf 	.word	0x08005fdf
 8005efc:	080060a3 	.word	0x080060a3
 8005f00:	080060a3 	.word	0x080060a3
 8005f04:	080060a3 	.word	0x080060a3
 8005f08:	08006021 	.word	0x08006021
 8005f0c:	080060a3 	.word	0x080060a3
 8005f10:	080060a3 	.word	0x080060a3
 8005f14:	080060a3 	.word	0x080060a3
 8005f18:	08006061 	.word	0x08006061
 8005f1c:	68fb      	ldr	r3, [r7, #12]
 8005f1e:	681b      	ldr	r3, [r3, #0]
 8005f20:	68b9      	ldr	r1, [r7, #8]
 8005f22:	4618      	mov	r0, r3
 8005f24:	f000 fa92 	bl	800644c <TIM_OC1_SetConfig>
 8005f28:	68fb      	ldr	r3, [r7, #12]
 8005f2a:	681b      	ldr	r3, [r3, #0]
 8005f2c:	699a      	ldr	r2, [r3, #24]
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	f042 0208 	orr.w	r2, r2, #8
 8005f36:	619a      	str	r2, [r3, #24]
 8005f38:	68fb      	ldr	r3, [r7, #12]
 8005f3a:	681b      	ldr	r3, [r3, #0]
 8005f3c:	699a      	ldr	r2, [r3, #24]
 8005f3e:	68fb      	ldr	r3, [r7, #12]
 8005f40:	681b      	ldr	r3, [r3, #0]
 8005f42:	f022 0204 	bic.w	r2, r2, #4
 8005f46:	619a      	str	r2, [r3, #24]
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	681b      	ldr	r3, [r3, #0]
 8005f4c:	6999      	ldr	r1, [r3, #24]
 8005f4e:	68bb      	ldr	r3, [r7, #8]
 8005f50:	691a      	ldr	r2, [r3, #16]
 8005f52:	68fb      	ldr	r3, [r7, #12]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	430a      	orrs	r2, r1
 8005f58:	619a      	str	r2, [r3, #24]
 8005f5a:	e0a5      	b.n	80060a8 <HAL_TIM_PWM_ConfigChannel+0x214>
 8005f5c:	68fb      	ldr	r3, [r7, #12]
 8005f5e:	681b      	ldr	r3, [r3, #0]
 8005f60:	68b9      	ldr	r1, [r7, #8]
 8005f62:	4618      	mov	r0, r3
 8005f64:	f000 fb02 	bl	800656c <TIM_OC2_SetConfig>
 8005f68:	68fb      	ldr	r3, [r7, #12]
 8005f6a:	681b      	ldr	r3, [r3, #0]
 8005f6c:	699a      	ldr	r2, [r3, #24]
 8005f6e:	68fb      	ldr	r3, [r7, #12]
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005f76:	619a      	str	r2, [r3, #24]
 8005f78:	68fb      	ldr	r3, [r7, #12]
 8005f7a:	681b      	ldr	r3, [r3, #0]
 8005f7c:	699a      	ldr	r2, [r3, #24]
 8005f7e:	68fb      	ldr	r3, [r7, #12]
 8005f80:	681b      	ldr	r3, [r3, #0]
 8005f82:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005f86:	619a      	str	r2, [r3, #24]
 8005f88:	68fb      	ldr	r3, [r7, #12]
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	6999      	ldr	r1, [r3, #24]
 8005f8e:	68bb      	ldr	r3, [r7, #8]
 8005f90:	691b      	ldr	r3, [r3, #16]
 8005f92:	021a      	lsls	r2, r3, #8
 8005f94:	68fb      	ldr	r3, [r7, #12]
 8005f96:	681b      	ldr	r3, [r3, #0]
 8005f98:	430a      	orrs	r2, r1
 8005f9a:	619a      	str	r2, [r3, #24]
 8005f9c:	e084      	b.n	80060a8 <HAL_TIM_PWM_ConfigChannel+0x214>
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	681b      	ldr	r3, [r3, #0]
 8005fa2:	68b9      	ldr	r1, [r7, #8]
 8005fa4:	4618      	mov	r0, r3
 8005fa6:	f000 fb6b 	bl	8006680 <TIM_OC3_SetConfig>
 8005faa:	68fb      	ldr	r3, [r7, #12]
 8005fac:	681b      	ldr	r3, [r3, #0]
 8005fae:	69da      	ldr	r2, [r3, #28]
 8005fb0:	68fb      	ldr	r3, [r7, #12]
 8005fb2:	681b      	ldr	r3, [r3, #0]
 8005fb4:	f042 0208 	orr.w	r2, r2, #8
 8005fb8:	61da      	str	r2, [r3, #28]
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	681b      	ldr	r3, [r3, #0]
 8005fbe:	69da      	ldr	r2, [r3, #28]
 8005fc0:	68fb      	ldr	r3, [r7, #12]
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	f022 0204 	bic.w	r2, r2, #4
 8005fc8:	61da      	str	r2, [r3, #28]
 8005fca:	68fb      	ldr	r3, [r7, #12]
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	69d9      	ldr	r1, [r3, #28]
 8005fd0:	68bb      	ldr	r3, [r7, #8]
 8005fd2:	691a      	ldr	r2, [r3, #16]
 8005fd4:	68fb      	ldr	r3, [r7, #12]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	430a      	orrs	r2, r1
 8005fda:	61da      	str	r2, [r3, #28]
 8005fdc:	e064      	b.n	80060a8 <HAL_TIM_PWM_ConfigChannel+0x214>
 8005fde:	68fb      	ldr	r3, [r7, #12]
 8005fe0:	681b      	ldr	r3, [r3, #0]
 8005fe2:	68b9      	ldr	r1, [r7, #8]
 8005fe4:	4618      	mov	r0, r3
 8005fe6:	f000 fbd3 	bl	8006790 <TIM_OC4_SetConfig>
 8005fea:	68fb      	ldr	r3, [r7, #12]
 8005fec:	681b      	ldr	r3, [r3, #0]
 8005fee:	69da      	ldr	r2, [r3, #28]
 8005ff0:	68fb      	ldr	r3, [r7, #12]
 8005ff2:	681b      	ldr	r3, [r3, #0]
 8005ff4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005ff8:	61da      	str	r2, [r3, #28]
 8005ffa:	68fb      	ldr	r3, [r7, #12]
 8005ffc:	681b      	ldr	r3, [r3, #0]
 8005ffe:	69da      	ldr	r2, [r3, #28]
 8006000:	68fb      	ldr	r3, [r7, #12]
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8006008:	61da      	str	r2, [r3, #28]
 800600a:	68fb      	ldr	r3, [r7, #12]
 800600c:	681b      	ldr	r3, [r3, #0]
 800600e:	69d9      	ldr	r1, [r3, #28]
 8006010:	68bb      	ldr	r3, [r7, #8]
 8006012:	691b      	ldr	r3, [r3, #16]
 8006014:	021a      	lsls	r2, r3, #8
 8006016:	68fb      	ldr	r3, [r7, #12]
 8006018:	681b      	ldr	r3, [r3, #0]
 800601a:	430a      	orrs	r2, r1
 800601c:	61da      	str	r2, [r3, #28]
 800601e:	e043      	b.n	80060a8 <HAL_TIM_PWM_ConfigChannel+0x214>
 8006020:	68fb      	ldr	r3, [r7, #12]
 8006022:	681b      	ldr	r3, [r3, #0]
 8006024:	68b9      	ldr	r1, [r7, #8]
 8006026:	4618      	mov	r0, r3
 8006028:	f000 fc3c 	bl	80068a4 <TIM_OC5_SetConfig>
 800602c:	68fb      	ldr	r3, [r7, #12]
 800602e:	681b      	ldr	r3, [r3, #0]
 8006030:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8006032:	68fb      	ldr	r3, [r7, #12]
 8006034:	681b      	ldr	r3, [r3, #0]
 8006036:	f042 0208 	orr.w	r2, r2, #8
 800603a:	651a      	str	r2, [r3, #80]	@ 0x50
 800603c:	68fb      	ldr	r3, [r7, #12]
 800603e:	681b      	ldr	r3, [r3, #0]
 8006040:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8006042:	68fb      	ldr	r3, [r7, #12]
 8006044:	681b      	ldr	r3, [r3, #0]
 8006046:	f022 0204 	bic.w	r2, r2, #4
 800604a:	651a      	str	r2, [r3, #80]	@ 0x50
 800604c:	68fb      	ldr	r3, [r7, #12]
 800604e:	681b      	ldr	r3, [r3, #0]
 8006050:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 8006052:	68bb      	ldr	r3, [r7, #8]
 8006054:	691a      	ldr	r2, [r3, #16]
 8006056:	68fb      	ldr	r3, [r7, #12]
 8006058:	681b      	ldr	r3, [r3, #0]
 800605a:	430a      	orrs	r2, r1
 800605c:	651a      	str	r2, [r3, #80]	@ 0x50
 800605e:	e023      	b.n	80060a8 <HAL_TIM_PWM_ConfigChannel+0x214>
 8006060:	68fb      	ldr	r3, [r7, #12]
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	68b9      	ldr	r1, [r7, #8]
 8006066:	4618      	mov	r0, r3
 8006068:	f000 fc80 	bl	800696c <TIM_OC6_SetConfig>
 800606c:	68fb      	ldr	r3, [r7, #12]
 800606e:	681b      	ldr	r3, [r3, #0]
 8006070:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8006072:	68fb      	ldr	r3, [r7, #12]
 8006074:	681b      	ldr	r3, [r3, #0]
 8006076:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800607a:	651a      	str	r2, [r3, #80]	@ 0x50
 800607c:	68fb      	ldr	r3, [r7, #12]
 800607e:	681b      	ldr	r3, [r3, #0]
 8006080:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8006082:	68fb      	ldr	r3, [r7, #12]
 8006084:	681b      	ldr	r3, [r3, #0]
 8006086:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800608a:	651a      	str	r2, [r3, #80]	@ 0x50
 800608c:	68fb      	ldr	r3, [r7, #12]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 8006092:	68bb      	ldr	r3, [r7, #8]
 8006094:	691b      	ldr	r3, [r3, #16]
 8006096:	021a      	lsls	r2, r3, #8
 8006098:	68fb      	ldr	r3, [r7, #12]
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	430a      	orrs	r2, r1
 800609e:	651a      	str	r2, [r3, #80]	@ 0x50
 80060a0:	e002      	b.n	80060a8 <HAL_TIM_PWM_ConfigChannel+0x214>
 80060a2:	2301      	movs	r3, #1
 80060a4:	75fb      	strb	r3, [r7, #23]
 80060a6:	bf00      	nop
 80060a8:	68fb      	ldr	r3, [r7, #12]
 80060aa:	2200      	movs	r2, #0
 80060ac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80060b0:	7dfb      	ldrb	r3, [r7, #23]
 80060b2:	4618      	mov	r0, r3
 80060b4:	3718      	adds	r7, #24
 80060b6:	46bd      	mov	sp, r7
 80060b8:	bd80      	pop	{r7, pc}
 80060ba:	bf00      	nop

080060bc <HAL_TIM_ConfigClockSource>:
 80060bc:	b580      	push	{r7, lr}
 80060be:	b084      	sub	sp, #16
 80060c0:	af00      	add	r7, sp, #0
 80060c2:	6078      	str	r0, [r7, #4]
 80060c4:	6039      	str	r1, [r7, #0]
 80060c6:	2300      	movs	r3, #0
 80060c8:	73fb      	strb	r3, [r7, #15]
 80060ca:	687b      	ldr	r3, [r7, #4]
 80060cc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80060d0:	2b01      	cmp	r3, #1
 80060d2:	d101      	bne.n	80060d8 <HAL_TIM_ConfigClockSource+0x1c>
 80060d4:	2302      	movs	r3, #2
 80060d6:	e0de      	b.n	8006296 <HAL_TIM_ConfigClockSource+0x1da>
 80060d8:	687b      	ldr	r3, [r7, #4]
 80060da:	2201      	movs	r2, #1
 80060dc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80060e0:	687b      	ldr	r3, [r7, #4]
 80060e2:	2202      	movs	r2, #2
 80060e4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80060e8:	687b      	ldr	r3, [r7, #4]
 80060ea:	681b      	ldr	r3, [r3, #0]
 80060ec:	689b      	ldr	r3, [r3, #8]
 80060ee:	60bb      	str	r3, [r7, #8]
 80060f0:	68bb      	ldr	r3, [r7, #8]
 80060f2:	f423 1344 	bic.w	r3, r3, #3211264	@ 0x310000
 80060f6:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80060fa:	60bb      	str	r3, [r7, #8]
 80060fc:	68bb      	ldr	r3, [r7, #8]
 80060fe:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006102:	60bb      	str	r3, [r7, #8]
 8006104:	687b      	ldr	r3, [r7, #4]
 8006106:	681b      	ldr	r3, [r3, #0]
 8006108:	68ba      	ldr	r2, [r7, #8]
 800610a:	609a      	str	r2, [r3, #8]
 800610c:	683b      	ldr	r3, [r7, #0]
 800610e:	681b      	ldr	r3, [r3, #0]
 8006110:	4a63      	ldr	r2, [pc, #396]	@ (80062a0 <HAL_TIM_ConfigClockSource+0x1e4>)
 8006112:	4293      	cmp	r3, r2
 8006114:	f000 80a9 	beq.w	800626a <HAL_TIM_ConfigClockSource+0x1ae>
 8006118:	4a61      	ldr	r2, [pc, #388]	@ (80062a0 <HAL_TIM_ConfigClockSource+0x1e4>)
 800611a:	4293      	cmp	r3, r2
 800611c:	f200 80ae 	bhi.w	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 8006120:	4a60      	ldr	r2, [pc, #384]	@ (80062a4 <HAL_TIM_ConfigClockSource+0x1e8>)
 8006122:	4293      	cmp	r3, r2
 8006124:	f000 80a1 	beq.w	800626a <HAL_TIM_ConfigClockSource+0x1ae>
 8006128:	4a5e      	ldr	r2, [pc, #376]	@ (80062a4 <HAL_TIM_ConfigClockSource+0x1e8>)
 800612a:	4293      	cmp	r3, r2
 800612c:	f200 80a6 	bhi.w	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 8006130:	4a5d      	ldr	r2, [pc, #372]	@ (80062a8 <HAL_TIM_ConfigClockSource+0x1ec>)
 8006132:	4293      	cmp	r3, r2
 8006134:	f000 8099 	beq.w	800626a <HAL_TIM_ConfigClockSource+0x1ae>
 8006138:	4a5b      	ldr	r2, [pc, #364]	@ (80062a8 <HAL_TIM_ConfigClockSource+0x1ec>)
 800613a:	4293      	cmp	r3, r2
 800613c:	f200 809e 	bhi.w	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 8006140:	4a5a      	ldr	r2, [pc, #360]	@ (80062ac <HAL_TIM_ConfigClockSource+0x1f0>)
 8006142:	4293      	cmp	r3, r2
 8006144:	f000 8091 	beq.w	800626a <HAL_TIM_ConfigClockSource+0x1ae>
 8006148:	4a58      	ldr	r2, [pc, #352]	@ (80062ac <HAL_TIM_ConfigClockSource+0x1f0>)
 800614a:	4293      	cmp	r3, r2
 800614c:	f200 8096 	bhi.w	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 8006150:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8006154:	f000 8089 	beq.w	800626a <HAL_TIM_ConfigClockSource+0x1ae>
 8006158:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 800615c:	f200 808e 	bhi.w	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 8006160:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006164:	d03e      	beq.n	80061e4 <HAL_TIM_ConfigClockSource+0x128>
 8006166:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800616a:	f200 8087 	bhi.w	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 800616e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006172:	f000 8086 	beq.w	8006282 <HAL_TIM_ConfigClockSource+0x1c6>
 8006176:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800617a:	d87f      	bhi.n	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 800617c:	2b70      	cmp	r3, #112	@ 0x70
 800617e:	d01a      	beq.n	80061b6 <HAL_TIM_ConfigClockSource+0xfa>
 8006180:	2b70      	cmp	r3, #112	@ 0x70
 8006182:	d87b      	bhi.n	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 8006184:	2b60      	cmp	r3, #96	@ 0x60
 8006186:	d050      	beq.n	800622a <HAL_TIM_ConfigClockSource+0x16e>
 8006188:	2b60      	cmp	r3, #96	@ 0x60
 800618a:	d877      	bhi.n	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 800618c:	2b50      	cmp	r3, #80	@ 0x50
 800618e:	d03c      	beq.n	800620a <HAL_TIM_ConfigClockSource+0x14e>
 8006190:	2b50      	cmp	r3, #80	@ 0x50
 8006192:	d873      	bhi.n	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 8006194:	2b40      	cmp	r3, #64	@ 0x40
 8006196:	d058      	beq.n	800624a <HAL_TIM_ConfigClockSource+0x18e>
 8006198:	2b40      	cmp	r3, #64	@ 0x40
 800619a:	d86f      	bhi.n	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 800619c:	2b30      	cmp	r3, #48	@ 0x30
 800619e:	d064      	beq.n	800626a <HAL_TIM_ConfigClockSource+0x1ae>
 80061a0:	2b30      	cmp	r3, #48	@ 0x30
 80061a2:	d86b      	bhi.n	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 80061a4:	2b20      	cmp	r3, #32
 80061a6:	d060      	beq.n	800626a <HAL_TIM_ConfigClockSource+0x1ae>
 80061a8:	2b20      	cmp	r3, #32
 80061aa:	d867      	bhi.n	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 80061ac:	2b00      	cmp	r3, #0
 80061ae:	d05c      	beq.n	800626a <HAL_TIM_ConfigClockSource+0x1ae>
 80061b0:	2b10      	cmp	r3, #16
 80061b2:	d05a      	beq.n	800626a <HAL_TIM_ConfigClockSource+0x1ae>
 80061b4:	e062      	b.n	800627c <HAL_TIM_ConfigClockSource+0x1c0>
 80061b6:	687b      	ldr	r3, [r7, #4]
 80061b8:	6818      	ldr	r0, [r3, #0]
 80061ba:	683b      	ldr	r3, [r7, #0]
 80061bc:	6899      	ldr	r1, [r3, #8]
 80061be:	683b      	ldr	r3, [r7, #0]
 80061c0:	685a      	ldr	r2, [r3, #4]
 80061c2:	683b      	ldr	r3, [r7, #0]
 80061c4:	68db      	ldr	r3, [r3, #12]
 80061c6:	f000 fcb3 	bl	8006b30 <TIM_ETR_SetConfig>
 80061ca:	687b      	ldr	r3, [r7, #4]
 80061cc:	681b      	ldr	r3, [r3, #0]
 80061ce:	689b      	ldr	r3, [r3, #8]
 80061d0:	60bb      	str	r3, [r7, #8]
 80061d2:	68bb      	ldr	r3, [r7, #8]
 80061d4:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80061d8:	60bb      	str	r3, [r7, #8]
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	681b      	ldr	r3, [r3, #0]
 80061de:	68ba      	ldr	r2, [r7, #8]
 80061e0:	609a      	str	r2, [r3, #8]
 80061e2:	e04f      	b.n	8006284 <HAL_TIM_ConfigClockSource+0x1c8>
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	6818      	ldr	r0, [r3, #0]
 80061e8:	683b      	ldr	r3, [r7, #0]
 80061ea:	6899      	ldr	r1, [r3, #8]
 80061ec:	683b      	ldr	r3, [r7, #0]
 80061ee:	685a      	ldr	r2, [r3, #4]
 80061f0:	683b      	ldr	r3, [r7, #0]
 80061f2:	68db      	ldr	r3, [r3, #12]
 80061f4:	f000 fc9c 	bl	8006b30 <TIM_ETR_SetConfig>
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	689a      	ldr	r2, [r3, #8]
 80061fe:	687b      	ldr	r3, [r7, #4]
 8006200:	681b      	ldr	r3, [r3, #0]
 8006202:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006206:	609a      	str	r2, [r3, #8]
 8006208:	e03c      	b.n	8006284 <HAL_TIM_ConfigClockSource+0x1c8>
 800620a:	687b      	ldr	r3, [r7, #4]
 800620c:	6818      	ldr	r0, [r3, #0]
 800620e:	683b      	ldr	r3, [r7, #0]
 8006210:	6859      	ldr	r1, [r3, #4]
 8006212:	683b      	ldr	r3, [r7, #0]
 8006214:	68db      	ldr	r3, [r3, #12]
 8006216:	461a      	mov	r2, r3
 8006218:	f000 fc0e 	bl	8006a38 <TIM_TI1_ConfigInputStage>
 800621c:	687b      	ldr	r3, [r7, #4]
 800621e:	681b      	ldr	r3, [r3, #0]
 8006220:	2150      	movs	r1, #80	@ 0x50
 8006222:	4618      	mov	r0, r3
 8006224:	f000 fc67 	bl	8006af6 <TIM_ITRx_SetConfig>
 8006228:	e02c      	b.n	8006284 <HAL_TIM_ConfigClockSource+0x1c8>
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	6818      	ldr	r0, [r3, #0]
 800622e:	683b      	ldr	r3, [r7, #0]
 8006230:	6859      	ldr	r1, [r3, #4]
 8006232:	683b      	ldr	r3, [r7, #0]
 8006234:	68db      	ldr	r3, [r3, #12]
 8006236:	461a      	mov	r2, r3
 8006238:	f000 fc2d 	bl	8006a96 <TIM_TI2_ConfigInputStage>
 800623c:	687b      	ldr	r3, [r7, #4]
 800623e:	681b      	ldr	r3, [r3, #0]
 8006240:	2160      	movs	r1, #96	@ 0x60
 8006242:	4618      	mov	r0, r3
 8006244:	f000 fc57 	bl	8006af6 <TIM_ITRx_SetConfig>
 8006248:	e01c      	b.n	8006284 <HAL_TIM_ConfigClockSource+0x1c8>
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	6818      	ldr	r0, [r3, #0]
 800624e:	683b      	ldr	r3, [r7, #0]
 8006250:	6859      	ldr	r1, [r3, #4]
 8006252:	683b      	ldr	r3, [r7, #0]
 8006254:	68db      	ldr	r3, [r3, #12]
 8006256:	461a      	mov	r2, r3
 8006258:	f000 fbee 	bl	8006a38 <TIM_TI1_ConfigInputStage>
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	681b      	ldr	r3, [r3, #0]
 8006260:	2140      	movs	r1, #64	@ 0x40
 8006262:	4618      	mov	r0, r3
 8006264:	f000 fc47 	bl	8006af6 <TIM_ITRx_SetConfig>
 8006268:	e00c      	b.n	8006284 <HAL_TIM_ConfigClockSource+0x1c8>
 800626a:	687b      	ldr	r3, [r7, #4]
 800626c:	681a      	ldr	r2, [r3, #0]
 800626e:	683b      	ldr	r3, [r7, #0]
 8006270:	681b      	ldr	r3, [r3, #0]
 8006272:	4619      	mov	r1, r3
 8006274:	4610      	mov	r0, r2
 8006276:	f000 fc3e 	bl	8006af6 <TIM_ITRx_SetConfig>
 800627a:	e003      	b.n	8006284 <HAL_TIM_ConfigClockSource+0x1c8>
 800627c:	2301      	movs	r3, #1
 800627e:	73fb      	strb	r3, [r7, #15]
 8006280:	e000      	b.n	8006284 <HAL_TIM_ConfigClockSource+0x1c8>
 8006282:	bf00      	nop
 8006284:	687b      	ldr	r3, [r7, #4]
 8006286:	2201      	movs	r2, #1
 8006288:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800628c:	687b      	ldr	r3, [r7, #4]
 800628e:	2200      	movs	r2, #0
 8006290:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006294:	7bfb      	ldrb	r3, [r7, #15]
 8006296:	4618      	mov	r0, r3
 8006298:	3710      	adds	r7, #16
 800629a:	46bd      	mov	sp, r7
 800629c:	bd80      	pop	{r7, pc}
 800629e:	bf00      	nop
 80062a0:	00100070 	.word	0x00100070
 80062a4:	00100040 	.word	0x00100040
 80062a8:	00100030 	.word	0x00100030
 80062ac:	00100020 	.word	0x00100020

080062b0 <HAL_TIM_PeriodElapsedCallback>:
 80062b0:	b480      	push	{r7}
 80062b2:	b083      	sub	sp, #12
 80062b4:	af00      	add	r7, sp, #0
 80062b6:	6078      	str	r0, [r7, #4]
 80062b8:	bf00      	nop
 80062ba:	370c      	adds	r7, #12
 80062bc:	46bd      	mov	sp, r7
 80062be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062c2:	4770      	bx	lr

080062c4 <HAL_TIM_OC_DelayElapsedCallback>:
 80062c4:	b480      	push	{r7}
 80062c6:	b083      	sub	sp, #12
 80062c8:	af00      	add	r7, sp, #0
 80062ca:	6078      	str	r0, [r7, #4]
 80062cc:	bf00      	nop
 80062ce:	370c      	adds	r7, #12
 80062d0:	46bd      	mov	sp, r7
 80062d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062d6:	4770      	bx	lr

080062d8 <HAL_TIM_IC_CaptureCallback>:
 80062d8:	b480      	push	{r7}
 80062da:	b083      	sub	sp, #12
 80062dc:	af00      	add	r7, sp, #0
 80062de:	6078      	str	r0, [r7, #4]
 80062e0:	bf00      	nop
 80062e2:	370c      	adds	r7, #12
 80062e4:	46bd      	mov	sp, r7
 80062e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062ea:	4770      	bx	lr

080062ec <HAL_TIM_PWM_PulseFinishedCallback>:
 80062ec:	b480      	push	{r7}
 80062ee:	b083      	sub	sp, #12
 80062f0:	af00      	add	r7, sp, #0
 80062f2:	6078      	str	r0, [r7, #4]
 80062f4:	bf00      	nop
 80062f6:	370c      	adds	r7, #12
 80062f8:	46bd      	mov	sp, r7
 80062fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062fe:	4770      	bx	lr

08006300 <HAL_TIM_TriggerCallback>:
 8006300:	b480      	push	{r7}
 8006302:	b083      	sub	sp, #12
 8006304:	af00      	add	r7, sp, #0
 8006306:	6078      	str	r0, [r7, #4]
 8006308:	bf00      	nop
 800630a:	370c      	adds	r7, #12
 800630c:	46bd      	mov	sp, r7
 800630e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006312:	4770      	bx	lr

08006314 <TIM_Base_SetConfig>:
 8006314:	b480      	push	{r7}
 8006316:	b085      	sub	sp, #20
 8006318:	af00      	add	r7, sp, #0
 800631a:	6078      	str	r0, [r7, #4]
 800631c:	6039      	str	r1, [r7, #0]
 800631e:	687b      	ldr	r3, [r7, #4]
 8006320:	681b      	ldr	r3, [r3, #0]
 8006322:	60fb      	str	r3, [r7, #12]
 8006324:	687b      	ldr	r3, [r7, #4]
 8006326:	4a42      	ldr	r2, [pc, #264]	@ (8006430 <TIM_Base_SetConfig+0x11c>)
 8006328:	4293      	cmp	r3, r2
 800632a:	d00f      	beq.n	800634c <TIM_Base_SetConfig+0x38>
 800632c:	687b      	ldr	r3, [r7, #4]
 800632e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006332:	d00b      	beq.n	800634c <TIM_Base_SetConfig+0x38>
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	4a3f      	ldr	r2, [pc, #252]	@ (8006434 <TIM_Base_SetConfig+0x120>)
 8006338:	4293      	cmp	r3, r2
 800633a:	d007      	beq.n	800634c <TIM_Base_SetConfig+0x38>
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	4a3e      	ldr	r2, [pc, #248]	@ (8006438 <TIM_Base_SetConfig+0x124>)
 8006340:	4293      	cmp	r3, r2
 8006342:	d003      	beq.n	800634c <TIM_Base_SetConfig+0x38>
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	4a3d      	ldr	r2, [pc, #244]	@ (800643c <TIM_Base_SetConfig+0x128>)
 8006348:	4293      	cmp	r3, r2
 800634a:	d108      	bne.n	800635e <TIM_Base_SetConfig+0x4a>
 800634c:	68fb      	ldr	r3, [r7, #12]
 800634e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006352:	60fb      	str	r3, [r7, #12]
 8006354:	683b      	ldr	r3, [r7, #0]
 8006356:	685b      	ldr	r3, [r3, #4]
 8006358:	68fa      	ldr	r2, [r7, #12]
 800635a:	4313      	orrs	r3, r2
 800635c:	60fb      	str	r3, [r7, #12]
 800635e:	687b      	ldr	r3, [r7, #4]
 8006360:	4a33      	ldr	r2, [pc, #204]	@ (8006430 <TIM_Base_SetConfig+0x11c>)
 8006362:	4293      	cmp	r3, r2
 8006364:	d01b      	beq.n	800639e <TIM_Base_SetConfig+0x8a>
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800636c:	d017      	beq.n	800639e <TIM_Base_SetConfig+0x8a>
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	4a30      	ldr	r2, [pc, #192]	@ (8006434 <TIM_Base_SetConfig+0x120>)
 8006372:	4293      	cmp	r3, r2
 8006374:	d013      	beq.n	800639e <TIM_Base_SetConfig+0x8a>
 8006376:	687b      	ldr	r3, [r7, #4]
 8006378:	4a2f      	ldr	r2, [pc, #188]	@ (8006438 <TIM_Base_SetConfig+0x124>)
 800637a:	4293      	cmp	r3, r2
 800637c:	d00f      	beq.n	800639e <TIM_Base_SetConfig+0x8a>
 800637e:	687b      	ldr	r3, [r7, #4]
 8006380:	4a2e      	ldr	r2, [pc, #184]	@ (800643c <TIM_Base_SetConfig+0x128>)
 8006382:	4293      	cmp	r3, r2
 8006384:	d00b      	beq.n	800639e <TIM_Base_SetConfig+0x8a>
 8006386:	687b      	ldr	r3, [r7, #4]
 8006388:	4a2d      	ldr	r2, [pc, #180]	@ (8006440 <TIM_Base_SetConfig+0x12c>)
 800638a:	4293      	cmp	r3, r2
 800638c:	d007      	beq.n	800639e <TIM_Base_SetConfig+0x8a>
 800638e:	687b      	ldr	r3, [r7, #4]
 8006390:	4a2c      	ldr	r2, [pc, #176]	@ (8006444 <TIM_Base_SetConfig+0x130>)
 8006392:	4293      	cmp	r3, r2
 8006394:	d003      	beq.n	800639e <TIM_Base_SetConfig+0x8a>
 8006396:	687b      	ldr	r3, [r7, #4]
 8006398:	4a2b      	ldr	r2, [pc, #172]	@ (8006448 <TIM_Base_SetConfig+0x134>)
 800639a:	4293      	cmp	r3, r2
 800639c:	d108      	bne.n	80063b0 <TIM_Base_SetConfig+0x9c>
 800639e:	68fb      	ldr	r3, [r7, #12]
 80063a0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80063a4:	60fb      	str	r3, [r7, #12]
 80063a6:	683b      	ldr	r3, [r7, #0]
 80063a8:	68db      	ldr	r3, [r3, #12]
 80063aa:	68fa      	ldr	r2, [r7, #12]
 80063ac:	4313      	orrs	r3, r2
 80063ae:	60fb      	str	r3, [r7, #12]
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80063b6:	683b      	ldr	r3, [r7, #0]
 80063b8:	695b      	ldr	r3, [r3, #20]
 80063ba:	4313      	orrs	r3, r2
 80063bc:	60fb      	str	r3, [r7, #12]
 80063be:	687b      	ldr	r3, [r7, #4]
 80063c0:	68fa      	ldr	r2, [r7, #12]
 80063c2:	601a      	str	r2, [r3, #0]
 80063c4:	683b      	ldr	r3, [r7, #0]
 80063c6:	689a      	ldr	r2, [r3, #8]
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	62da      	str	r2, [r3, #44]	@ 0x2c
 80063cc:	683b      	ldr	r3, [r7, #0]
 80063ce:	681a      	ldr	r2, [r3, #0]
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	629a      	str	r2, [r3, #40]	@ 0x28
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	4a16      	ldr	r2, [pc, #88]	@ (8006430 <TIM_Base_SetConfig+0x11c>)
 80063d8:	4293      	cmp	r3, r2
 80063da:	d00f      	beq.n	80063fc <TIM_Base_SetConfig+0xe8>
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	4a17      	ldr	r2, [pc, #92]	@ (800643c <TIM_Base_SetConfig+0x128>)
 80063e0:	4293      	cmp	r3, r2
 80063e2:	d00b      	beq.n	80063fc <TIM_Base_SetConfig+0xe8>
 80063e4:	687b      	ldr	r3, [r7, #4]
 80063e6:	4a16      	ldr	r2, [pc, #88]	@ (8006440 <TIM_Base_SetConfig+0x12c>)
 80063e8:	4293      	cmp	r3, r2
 80063ea:	d007      	beq.n	80063fc <TIM_Base_SetConfig+0xe8>
 80063ec:	687b      	ldr	r3, [r7, #4]
 80063ee:	4a15      	ldr	r2, [pc, #84]	@ (8006444 <TIM_Base_SetConfig+0x130>)
 80063f0:	4293      	cmp	r3, r2
 80063f2:	d003      	beq.n	80063fc <TIM_Base_SetConfig+0xe8>
 80063f4:	687b      	ldr	r3, [r7, #4]
 80063f6:	4a14      	ldr	r2, [pc, #80]	@ (8006448 <TIM_Base_SetConfig+0x134>)
 80063f8:	4293      	cmp	r3, r2
 80063fa:	d103      	bne.n	8006404 <TIM_Base_SetConfig+0xf0>
 80063fc:	683b      	ldr	r3, [r7, #0]
 80063fe:	691a      	ldr	r2, [r3, #16]
 8006400:	687b      	ldr	r3, [r7, #4]
 8006402:	631a      	str	r2, [r3, #48]	@ 0x30
 8006404:	687b      	ldr	r3, [r7, #4]
 8006406:	2201      	movs	r2, #1
 8006408:	615a      	str	r2, [r3, #20]
 800640a:	687b      	ldr	r3, [r7, #4]
 800640c:	691b      	ldr	r3, [r3, #16]
 800640e:	f003 0301 	and.w	r3, r3, #1
 8006412:	2b01      	cmp	r3, #1
 8006414:	d105      	bne.n	8006422 <TIM_Base_SetConfig+0x10e>
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	691b      	ldr	r3, [r3, #16]
 800641a:	f023 0201 	bic.w	r2, r3, #1
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	611a      	str	r2, [r3, #16]
 8006422:	bf00      	nop
 8006424:	3714      	adds	r7, #20
 8006426:	46bd      	mov	sp, r7
 8006428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800642c:	4770      	bx	lr
 800642e:	bf00      	nop
 8006430:	40012c00 	.word	0x40012c00
 8006434:	40000400 	.word	0x40000400
 8006438:	40000800 	.word	0x40000800
 800643c:	40013400 	.word	0x40013400
 8006440:	40014000 	.word	0x40014000
 8006444:	40014400 	.word	0x40014400
 8006448:	40014800 	.word	0x40014800

0800644c <TIM_OC1_SetConfig>:
 800644c:	b480      	push	{r7}
 800644e:	b087      	sub	sp, #28
 8006450:	af00      	add	r7, sp, #0
 8006452:	6078      	str	r0, [r7, #4]
 8006454:	6039      	str	r1, [r7, #0]
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	6a1b      	ldr	r3, [r3, #32]
 800645a:	617b      	str	r3, [r7, #20]
 800645c:	687b      	ldr	r3, [r7, #4]
 800645e:	6a1b      	ldr	r3, [r3, #32]
 8006460:	f023 0201 	bic.w	r2, r3, #1
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	621a      	str	r2, [r3, #32]
 8006468:	687b      	ldr	r3, [r7, #4]
 800646a:	685b      	ldr	r3, [r3, #4]
 800646c:	613b      	str	r3, [r7, #16]
 800646e:	687b      	ldr	r3, [r7, #4]
 8006470:	699b      	ldr	r3, [r3, #24]
 8006472:	60fb      	str	r3, [r7, #12]
 8006474:	68fb      	ldr	r3, [r7, #12]
 8006476:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800647a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800647e:	60fb      	str	r3, [r7, #12]
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	f023 0303 	bic.w	r3, r3, #3
 8006486:	60fb      	str	r3, [r7, #12]
 8006488:	683b      	ldr	r3, [r7, #0]
 800648a:	681b      	ldr	r3, [r3, #0]
 800648c:	68fa      	ldr	r2, [r7, #12]
 800648e:	4313      	orrs	r3, r2
 8006490:	60fb      	str	r3, [r7, #12]
 8006492:	697b      	ldr	r3, [r7, #20]
 8006494:	f023 0302 	bic.w	r3, r3, #2
 8006498:	617b      	str	r3, [r7, #20]
 800649a:	683b      	ldr	r3, [r7, #0]
 800649c:	689b      	ldr	r3, [r3, #8]
 800649e:	697a      	ldr	r2, [r7, #20]
 80064a0:	4313      	orrs	r3, r2
 80064a2:	617b      	str	r3, [r7, #20]
 80064a4:	687b      	ldr	r3, [r7, #4]
 80064a6:	4a2c      	ldr	r2, [pc, #176]	@ (8006558 <TIM_OC1_SetConfig+0x10c>)
 80064a8:	4293      	cmp	r3, r2
 80064aa:	d00f      	beq.n	80064cc <TIM_OC1_SetConfig+0x80>
 80064ac:	687b      	ldr	r3, [r7, #4]
 80064ae:	4a2b      	ldr	r2, [pc, #172]	@ (800655c <TIM_OC1_SetConfig+0x110>)
 80064b0:	4293      	cmp	r3, r2
 80064b2:	d00b      	beq.n	80064cc <TIM_OC1_SetConfig+0x80>
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	4a2a      	ldr	r2, [pc, #168]	@ (8006560 <TIM_OC1_SetConfig+0x114>)
 80064b8:	4293      	cmp	r3, r2
 80064ba:	d007      	beq.n	80064cc <TIM_OC1_SetConfig+0x80>
 80064bc:	687b      	ldr	r3, [r7, #4]
 80064be:	4a29      	ldr	r2, [pc, #164]	@ (8006564 <TIM_OC1_SetConfig+0x118>)
 80064c0:	4293      	cmp	r3, r2
 80064c2:	d003      	beq.n	80064cc <TIM_OC1_SetConfig+0x80>
 80064c4:	687b      	ldr	r3, [r7, #4]
 80064c6:	4a28      	ldr	r2, [pc, #160]	@ (8006568 <TIM_OC1_SetConfig+0x11c>)
 80064c8:	4293      	cmp	r3, r2
 80064ca:	d10c      	bne.n	80064e6 <TIM_OC1_SetConfig+0x9a>
 80064cc:	697b      	ldr	r3, [r7, #20]
 80064ce:	f023 0308 	bic.w	r3, r3, #8
 80064d2:	617b      	str	r3, [r7, #20]
 80064d4:	683b      	ldr	r3, [r7, #0]
 80064d6:	68db      	ldr	r3, [r3, #12]
 80064d8:	697a      	ldr	r2, [r7, #20]
 80064da:	4313      	orrs	r3, r2
 80064dc:	617b      	str	r3, [r7, #20]
 80064de:	697b      	ldr	r3, [r7, #20]
 80064e0:	f023 0304 	bic.w	r3, r3, #4
 80064e4:	617b      	str	r3, [r7, #20]
 80064e6:	687b      	ldr	r3, [r7, #4]
 80064e8:	4a1b      	ldr	r2, [pc, #108]	@ (8006558 <TIM_OC1_SetConfig+0x10c>)
 80064ea:	4293      	cmp	r3, r2
 80064ec:	d00f      	beq.n	800650e <TIM_OC1_SetConfig+0xc2>
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	4a1a      	ldr	r2, [pc, #104]	@ (800655c <TIM_OC1_SetConfig+0x110>)
 80064f2:	4293      	cmp	r3, r2
 80064f4:	d00b      	beq.n	800650e <TIM_OC1_SetConfig+0xc2>
 80064f6:	687b      	ldr	r3, [r7, #4]
 80064f8:	4a19      	ldr	r2, [pc, #100]	@ (8006560 <TIM_OC1_SetConfig+0x114>)
 80064fa:	4293      	cmp	r3, r2
 80064fc:	d007      	beq.n	800650e <TIM_OC1_SetConfig+0xc2>
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	4a18      	ldr	r2, [pc, #96]	@ (8006564 <TIM_OC1_SetConfig+0x118>)
 8006502:	4293      	cmp	r3, r2
 8006504:	d003      	beq.n	800650e <TIM_OC1_SetConfig+0xc2>
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	4a17      	ldr	r2, [pc, #92]	@ (8006568 <TIM_OC1_SetConfig+0x11c>)
 800650a:	4293      	cmp	r3, r2
 800650c:	d111      	bne.n	8006532 <TIM_OC1_SetConfig+0xe6>
 800650e:	693b      	ldr	r3, [r7, #16]
 8006510:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006514:	613b      	str	r3, [r7, #16]
 8006516:	693b      	ldr	r3, [r7, #16]
 8006518:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800651c:	613b      	str	r3, [r7, #16]
 800651e:	683b      	ldr	r3, [r7, #0]
 8006520:	695b      	ldr	r3, [r3, #20]
 8006522:	693a      	ldr	r2, [r7, #16]
 8006524:	4313      	orrs	r3, r2
 8006526:	613b      	str	r3, [r7, #16]
 8006528:	683b      	ldr	r3, [r7, #0]
 800652a:	699b      	ldr	r3, [r3, #24]
 800652c:	693a      	ldr	r2, [r7, #16]
 800652e:	4313      	orrs	r3, r2
 8006530:	613b      	str	r3, [r7, #16]
 8006532:	687b      	ldr	r3, [r7, #4]
 8006534:	693a      	ldr	r2, [r7, #16]
 8006536:	605a      	str	r2, [r3, #4]
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	68fa      	ldr	r2, [r7, #12]
 800653c:	619a      	str	r2, [r3, #24]
 800653e:	683b      	ldr	r3, [r7, #0]
 8006540:	685a      	ldr	r2, [r3, #4]
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	635a      	str	r2, [r3, #52]	@ 0x34
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	697a      	ldr	r2, [r7, #20]
 800654a:	621a      	str	r2, [r3, #32]
 800654c:	bf00      	nop
 800654e:	371c      	adds	r7, #28
 8006550:	46bd      	mov	sp, r7
 8006552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006556:	4770      	bx	lr
 8006558:	40012c00 	.word	0x40012c00
 800655c:	40013400 	.word	0x40013400
 8006560:	40014000 	.word	0x40014000
 8006564:	40014400 	.word	0x40014400
 8006568:	40014800 	.word	0x40014800

0800656c <TIM_OC2_SetConfig>:
 800656c:	b480      	push	{r7}
 800656e:	b087      	sub	sp, #28
 8006570:	af00      	add	r7, sp, #0
 8006572:	6078      	str	r0, [r7, #4]
 8006574:	6039      	str	r1, [r7, #0]
 8006576:	687b      	ldr	r3, [r7, #4]
 8006578:	6a1b      	ldr	r3, [r3, #32]
 800657a:	617b      	str	r3, [r7, #20]
 800657c:	687b      	ldr	r3, [r7, #4]
 800657e:	6a1b      	ldr	r3, [r3, #32]
 8006580:	f023 0210 	bic.w	r2, r3, #16
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	621a      	str	r2, [r3, #32]
 8006588:	687b      	ldr	r3, [r7, #4]
 800658a:	685b      	ldr	r3, [r3, #4]
 800658c:	613b      	str	r3, [r7, #16]
 800658e:	687b      	ldr	r3, [r7, #4]
 8006590:	699b      	ldr	r3, [r3, #24]
 8006592:	60fb      	str	r3, [r7, #12]
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800659a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800659e:	60fb      	str	r3, [r7, #12]
 80065a0:	68fb      	ldr	r3, [r7, #12]
 80065a2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80065a6:	60fb      	str	r3, [r7, #12]
 80065a8:	683b      	ldr	r3, [r7, #0]
 80065aa:	681b      	ldr	r3, [r3, #0]
 80065ac:	021b      	lsls	r3, r3, #8
 80065ae:	68fa      	ldr	r2, [r7, #12]
 80065b0:	4313      	orrs	r3, r2
 80065b2:	60fb      	str	r3, [r7, #12]
 80065b4:	697b      	ldr	r3, [r7, #20]
 80065b6:	f023 0320 	bic.w	r3, r3, #32
 80065ba:	617b      	str	r3, [r7, #20]
 80065bc:	683b      	ldr	r3, [r7, #0]
 80065be:	689b      	ldr	r3, [r3, #8]
 80065c0:	011b      	lsls	r3, r3, #4
 80065c2:	697a      	ldr	r2, [r7, #20]
 80065c4:	4313      	orrs	r3, r2
 80065c6:	617b      	str	r3, [r7, #20]
 80065c8:	687b      	ldr	r3, [r7, #4]
 80065ca:	4a28      	ldr	r2, [pc, #160]	@ (800666c <TIM_OC2_SetConfig+0x100>)
 80065cc:	4293      	cmp	r3, r2
 80065ce:	d003      	beq.n	80065d8 <TIM_OC2_SetConfig+0x6c>
 80065d0:	687b      	ldr	r3, [r7, #4]
 80065d2:	4a27      	ldr	r2, [pc, #156]	@ (8006670 <TIM_OC2_SetConfig+0x104>)
 80065d4:	4293      	cmp	r3, r2
 80065d6:	d10d      	bne.n	80065f4 <TIM_OC2_SetConfig+0x88>
 80065d8:	697b      	ldr	r3, [r7, #20]
 80065da:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80065de:	617b      	str	r3, [r7, #20]
 80065e0:	683b      	ldr	r3, [r7, #0]
 80065e2:	68db      	ldr	r3, [r3, #12]
 80065e4:	011b      	lsls	r3, r3, #4
 80065e6:	697a      	ldr	r2, [r7, #20]
 80065e8:	4313      	orrs	r3, r2
 80065ea:	617b      	str	r3, [r7, #20]
 80065ec:	697b      	ldr	r3, [r7, #20]
 80065ee:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80065f2:	617b      	str	r3, [r7, #20]
 80065f4:	687b      	ldr	r3, [r7, #4]
 80065f6:	4a1d      	ldr	r2, [pc, #116]	@ (800666c <TIM_OC2_SetConfig+0x100>)
 80065f8:	4293      	cmp	r3, r2
 80065fa:	d00f      	beq.n	800661c <TIM_OC2_SetConfig+0xb0>
 80065fc:	687b      	ldr	r3, [r7, #4]
 80065fe:	4a1c      	ldr	r2, [pc, #112]	@ (8006670 <TIM_OC2_SetConfig+0x104>)
 8006600:	4293      	cmp	r3, r2
 8006602:	d00b      	beq.n	800661c <TIM_OC2_SetConfig+0xb0>
 8006604:	687b      	ldr	r3, [r7, #4]
 8006606:	4a1b      	ldr	r2, [pc, #108]	@ (8006674 <TIM_OC2_SetConfig+0x108>)
 8006608:	4293      	cmp	r3, r2
 800660a:	d007      	beq.n	800661c <TIM_OC2_SetConfig+0xb0>
 800660c:	687b      	ldr	r3, [r7, #4]
 800660e:	4a1a      	ldr	r2, [pc, #104]	@ (8006678 <TIM_OC2_SetConfig+0x10c>)
 8006610:	4293      	cmp	r3, r2
 8006612:	d003      	beq.n	800661c <TIM_OC2_SetConfig+0xb0>
 8006614:	687b      	ldr	r3, [r7, #4]
 8006616:	4a19      	ldr	r2, [pc, #100]	@ (800667c <TIM_OC2_SetConfig+0x110>)
 8006618:	4293      	cmp	r3, r2
 800661a:	d113      	bne.n	8006644 <TIM_OC2_SetConfig+0xd8>
 800661c:	693b      	ldr	r3, [r7, #16]
 800661e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006622:	613b      	str	r3, [r7, #16]
 8006624:	693b      	ldr	r3, [r7, #16]
 8006626:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800662a:	613b      	str	r3, [r7, #16]
 800662c:	683b      	ldr	r3, [r7, #0]
 800662e:	695b      	ldr	r3, [r3, #20]
 8006630:	009b      	lsls	r3, r3, #2
 8006632:	693a      	ldr	r2, [r7, #16]
 8006634:	4313      	orrs	r3, r2
 8006636:	613b      	str	r3, [r7, #16]
 8006638:	683b      	ldr	r3, [r7, #0]
 800663a:	699b      	ldr	r3, [r3, #24]
 800663c:	009b      	lsls	r3, r3, #2
 800663e:	693a      	ldr	r2, [r7, #16]
 8006640:	4313      	orrs	r3, r2
 8006642:	613b      	str	r3, [r7, #16]
 8006644:	687b      	ldr	r3, [r7, #4]
 8006646:	693a      	ldr	r2, [r7, #16]
 8006648:	605a      	str	r2, [r3, #4]
 800664a:	687b      	ldr	r3, [r7, #4]
 800664c:	68fa      	ldr	r2, [r7, #12]
 800664e:	619a      	str	r2, [r3, #24]
 8006650:	683b      	ldr	r3, [r7, #0]
 8006652:	685a      	ldr	r2, [r3, #4]
 8006654:	687b      	ldr	r3, [r7, #4]
 8006656:	639a      	str	r2, [r3, #56]	@ 0x38
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	697a      	ldr	r2, [r7, #20]
 800665c:	621a      	str	r2, [r3, #32]
 800665e:	bf00      	nop
 8006660:	371c      	adds	r7, #28
 8006662:	46bd      	mov	sp, r7
 8006664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006668:	4770      	bx	lr
 800666a:	bf00      	nop
 800666c:	40012c00 	.word	0x40012c00
 8006670:	40013400 	.word	0x40013400
 8006674:	40014000 	.word	0x40014000
 8006678:	40014400 	.word	0x40014400
 800667c:	40014800 	.word	0x40014800

08006680 <TIM_OC3_SetConfig>:
 8006680:	b480      	push	{r7}
 8006682:	b087      	sub	sp, #28
 8006684:	af00      	add	r7, sp, #0
 8006686:	6078      	str	r0, [r7, #4]
 8006688:	6039      	str	r1, [r7, #0]
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	6a1b      	ldr	r3, [r3, #32]
 800668e:	617b      	str	r3, [r7, #20]
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	6a1b      	ldr	r3, [r3, #32]
 8006694:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8006698:	687b      	ldr	r3, [r7, #4]
 800669a:	621a      	str	r2, [r3, #32]
 800669c:	687b      	ldr	r3, [r7, #4]
 800669e:	685b      	ldr	r3, [r3, #4]
 80066a0:	613b      	str	r3, [r7, #16]
 80066a2:	687b      	ldr	r3, [r7, #4]
 80066a4:	69db      	ldr	r3, [r3, #28]
 80066a6:	60fb      	str	r3, [r7, #12]
 80066a8:	68fb      	ldr	r3, [r7, #12]
 80066aa:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80066ae:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80066b2:	60fb      	str	r3, [r7, #12]
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	f023 0303 	bic.w	r3, r3, #3
 80066ba:	60fb      	str	r3, [r7, #12]
 80066bc:	683b      	ldr	r3, [r7, #0]
 80066be:	681b      	ldr	r3, [r3, #0]
 80066c0:	68fa      	ldr	r2, [r7, #12]
 80066c2:	4313      	orrs	r3, r2
 80066c4:	60fb      	str	r3, [r7, #12]
 80066c6:	697b      	ldr	r3, [r7, #20]
 80066c8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80066cc:	617b      	str	r3, [r7, #20]
 80066ce:	683b      	ldr	r3, [r7, #0]
 80066d0:	689b      	ldr	r3, [r3, #8]
 80066d2:	021b      	lsls	r3, r3, #8
 80066d4:	697a      	ldr	r2, [r7, #20]
 80066d6:	4313      	orrs	r3, r2
 80066d8:	617b      	str	r3, [r7, #20]
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	4a27      	ldr	r2, [pc, #156]	@ (800677c <TIM_OC3_SetConfig+0xfc>)
 80066de:	4293      	cmp	r3, r2
 80066e0:	d003      	beq.n	80066ea <TIM_OC3_SetConfig+0x6a>
 80066e2:	687b      	ldr	r3, [r7, #4]
 80066e4:	4a26      	ldr	r2, [pc, #152]	@ (8006780 <TIM_OC3_SetConfig+0x100>)
 80066e6:	4293      	cmp	r3, r2
 80066e8:	d10d      	bne.n	8006706 <TIM_OC3_SetConfig+0x86>
 80066ea:	697b      	ldr	r3, [r7, #20]
 80066ec:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80066f0:	617b      	str	r3, [r7, #20]
 80066f2:	683b      	ldr	r3, [r7, #0]
 80066f4:	68db      	ldr	r3, [r3, #12]
 80066f6:	021b      	lsls	r3, r3, #8
 80066f8:	697a      	ldr	r2, [r7, #20]
 80066fa:	4313      	orrs	r3, r2
 80066fc:	617b      	str	r3, [r7, #20]
 80066fe:	697b      	ldr	r3, [r7, #20]
 8006700:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006704:	617b      	str	r3, [r7, #20]
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	4a1c      	ldr	r2, [pc, #112]	@ (800677c <TIM_OC3_SetConfig+0xfc>)
 800670a:	4293      	cmp	r3, r2
 800670c:	d00f      	beq.n	800672e <TIM_OC3_SetConfig+0xae>
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	4a1b      	ldr	r2, [pc, #108]	@ (8006780 <TIM_OC3_SetConfig+0x100>)
 8006712:	4293      	cmp	r3, r2
 8006714:	d00b      	beq.n	800672e <TIM_OC3_SetConfig+0xae>
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	4a1a      	ldr	r2, [pc, #104]	@ (8006784 <TIM_OC3_SetConfig+0x104>)
 800671a:	4293      	cmp	r3, r2
 800671c:	d007      	beq.n	800672e <TIM_OC3_SetConfig+0xae>
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	4a19      	ldr	r2, [pc, #100]	@ (8006788 <TIM_OC3_SetConfig+0x108>)
 8006722:	4293      	cmp	r3, r2
 8006724:	d003      	beq.n	800672e <TIM_OC3_SetConfig+0xae>
 8006726:	687b      	ldr	r3, [r7, #4]
 8006728:	4a18      	ldr	r2, [pc, #96]	@ (800678c <TIM_OC3_SetConfig+0x10c>)
 800672a:	4293      	cmp	r3, r2
 800672c:	d113      	bne.n	8006756 <TIM_OC3_SetConfig+0xd6>
 800672e:	693b      	ldr	r3, [r7, #16]
 8006730:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006734:	613b      	str	r3, [r7, #16]
 8006736:	693b      	ldr	r3, [r7, #16]
 8006738:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800673c:	613b      	str	r3, [r7, #16]
 800673e:	683b      	ldr	r3, [r7, #0]
 8006740:	695b      	ldr	r3, [r3, #20]
 8006742:	011b      	lsls	r3, r3, #4
 8006744:	693a      	ldr	r2, [r7, #16]
 8006746:	4313      	orrs	r3, r2
 8006748:	613b      	str	r3, [r7, #16]
 800674a:	683b      	ldr	r3, [r7, #0]
 800674c:	699b      	ldr	r3, [r3, #24]
 800674e:	011b      	lsls	r3, r3, #4
 8006750:	693a      	ldr	r2, [r7, #16]
 8006752:	4313      	orrs	r3, r2
 8006754:	613b      	str	r3, [r7, #16]
 8006756:	687b      	ldr	r3, [r7, #4]
 8006758:	693a      	ldr	r2, [r7, #16]
 800675a:	605a      	str	r2, [r3, #4]
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	68fa      	ldr	r2, [r7, #12]
 8006760:	61da      	str	r2, [r3, #28]
 8006762:	683b      	ldr	r3, [r7, #0]
 8006764:	685a      	ldr	r2, [r3, #4]
 8006766:	687b      	ldr	r3, [r7, #4]
 8006768:	63da      	str	r2, [r3, #60]	@ 0x3c
 800676a:	687b      	ldr	r3, [r7, #4]
 800676c:	697a      	ldr	r2, [r7, #20]
 800676e:	621a      	str	r2, [r3, #32]
 8006770:	bf00      	nop
 8006772:	371c      	adds	r7, #28
 8006774:	46bd      	mov	sp, r7
 8006776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800677a:	4770      	bx	lr
 800677c:	40012c00 	.word	0x40012c00
 8006780:	40013400 	.word	0x40013400
 8006784:	40014000 	.word	0x40014000
 8006788:	40014400 	.word	0x40014400
 800678c:	40014800 	.word	0x40014800

08006790 <TIM_OC4_SetConfig>:
 8006790:	b480      	push	{r7}
 8006792:	b087      	sub	sp, #28
 8006794:	af00      	add	r7, sp, #0
 8006796:	6078      	str	r0, [r7, #4]
 8006798:	6039      	str	r1, [r7, #0]
 800679a:	687b      	ldr	r3, [r7, #4]
 800679c:	6a1b      	ldr	r3, [r3, #32]
 800679e:	617b      	str	r3, [r7, #20]
 80067a0:	687b      	ldr	r3, [r7, #4]
 80067a2:	6a1b      	ldr	r3, [r3, #32]
 80067a4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80067a8:	687b      	ldr	r3, [r7, #4]
 80067aa:	621a      	str	r2, [r3, #32]
 80067ac:	687b      	ldr	r3, [r7, #4]
 80067ae:	685b      	ldr	r3, [r3, #4]
 80067b0:	613b      	str	r3, [r7, #16]
 80067b2:	687b      	ldr	r3, [r7, #4]
 80067b4:	69db      	ldr	r3, [r3, #28]
 80067b6:	60fb      	str	r3, [r7, #12]
 80067b8:	68fb      	ldr	r3, [r7, #12]
 80067ba:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80067be:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80067c2:	60fb      	str	r3, [r7, #12]
 80067c4:	68fb      	ldr	r3, [r7, #12]
 80067c6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80067ca:	60fb      	str	r3, [r7, #12]
 80067cc:	683b      	ldr	r3, [r7, #0]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	021b      	lsls	r3, r3, #8
 80067d2:	68fa      	ldr	r2, [r7, #12]
 80067d4:	4313      	orrs	r3, r2
 80067d6:	60fb      	str	r3, [r7, #12]
 80067d8:	697b      	ldr	r3, [r7, #20]
 80067da:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80067de:	617b      	str	r3, [r7, #20]
 80067e0:	683b      	ldr	r3, [r7, #0]
 80067e2:	689b      	ldr	r3, [r3, #8]
 80067e4:	031b      	lsls	r3, r3, #12
 80067e6:	697a      	ldr	r2, [r7, #20]
 80067e8:	4313      	orrs	r3, r2
 80067ea:	617b      	str	r3, [r7, #20]
 80067ec:	687b      	ldr	r3, [r7, #4]
 80067ee:	4a28      	ldr	r2, [pc, #160]	@ (8006890 <TIM_OC4_SetConfig+0x100>)
 80067f0:	4293      	cmp	r3, r2
 80067f2:	d003      	beq.n	80067fc <TIM_OC4_SetConfig+0x6c>
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	4a27      	ldr	r2, [pc, #156]	@ (8006894 <TIM_OC4_SetConfig+0x104>)
 80067f8:	4293      	cmp	r3, r2
 80067fa:	d10d      	bne.n	8006818 <TIM_OC4_SetConfig+0x88>
 80067fc:	697b      	ldr	r3, [r7, #20]
 80067fe:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8006802:	617b      	str	r3, [r7, #20]
 8006804:	683b      	ldr	r3, [r7, #0]
 8006806:	68db      	ldr	r3, [r3, #12]
 8006808:	031b      	lsls	r3, r3, #12
 800680a:	697a      	ldr	r2, [r7, #20]
 800680c:	4313      	orrs	r3, r2
 800680e:	617b      	str	r3, [r7, #20]
 8006810:	697b      	ldr	r3, [r7, #20]
 8006812:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006816:	617b      	str	r3, [r7, #20]
 8006818:	687b      	ldr	r3, [r7, #4]
 800681a:	4a1d      	ldr	r2, [pc, #116]	@ (8006890 <TIM_OC4_SetConfig+0x100>)
 800681c:	4293      	cmp	r3, r2
 800681e:	d00f      	beq.n	8006840 <TIM_OC4_SetConfig+0xb0>
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	4a1c      	ldr	r2, [pc, #112]	@ (8006894 <TIM_OC4_SetConfig+0x104>)
 8006824:	4293      	cmp	r3, r2
 8006826:	d00b      	beq.n	8006840 <TIM_OC4_SetConfig+0xb0>
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	4a1b      	ldr	r2, [pc, #108]	@ (8006898 <TIM_OC4_SetConfig+0x108>)
 800682c:	4293      	cmp	r3, r2
 800682e:	d007      	beq.n	8006840 <TIM_OC4_SetConfig+0xb0>
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	4a1a      	ldr	r2, [pc, #104]	@ (800689c <TIM_OC4_SetConfig+0x10c>)
 8006834:	4293      	cmp	r3, r2
 8006836:	d003      	beq.n	8006840 <TIM_OC4_SetConfig+0xb0>
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	4a19      	ldr	r2, [pc, #100]	@ (80068a0 <TIM_OC4_SetConfig+0x110>)
 800683c:	4293      	cmp	r3, r2
 800683e:	d113      	bne.n	8006868 <TIM_OC4_SetConfig+0xd8>
 8006840:	693b      	ldr	r3, [r7, #16]
 8006842:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006846:	613b      	str	r3, [r7, #16]
 8006848:	693b      	ldr	r3, [r7, #16]
 800684a:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800684e:	613b      	str	r3, [r7, #16]
 8006850:	683b      	ldr	r3, [r7, #0]
 8006852:	695b      	ldr	r3, [r3, #20]
 8006854:	019b      	lsls	r3, r3, #6
 8006856:	693a      	ldr	r2, [r7, #16]
 8006858:	4313      	orrs	r3, r2
 800685a:	613b      	str	r3, [r7, #16]
 800685c:	683b      	ldr	r3, [r7, #0]
 800685e:	699b      	ldr	r3, [r3, #24]
 8006860:	019b      	lsls	r3, r3, #6
 8006862:	693a      	ldr	r2, [r7, #16]
 8006864:	4313      	orrs	r3, r2
 8006866:	613b      	str	r3, [r7, #16]
 8006868:	687b      	ldr	r3, [r7, #4]
 800686a:	693a      	ldr	r2, [r7, #16]
 800686c:	605a      	str	r2, [r3, #4]
 800686e:	687b      	ldr	r3, [r7, #4]
 8006870:	68fa      	ldr	r2, [r7, #12]
 8006872:	61da      	str	r2, [r3, #28]
 8006874:	683b      	ldr	r3, [r7, #0]
 8006876:	685a      	ldr	r2, [r3, #4]
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	641a      	str	r2, [r3, #64]	@ 0x40
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	697a      	ldr	r2, [r7, #20]
 8006880:	621a      	str	r2, [r3, #32]
 8006882:	bf00      	nop
 8006884:	371c      	adds	r7, #28
 8006886:	46bd      	mov	sp, r7
 8006888:	f85d 7b04 	ldr.w	r7, [sp], #4
 800688c:	4770      	bx	lr
 800688e:	bf00      	nop
 8006890:	40012c00 	.word	0x40012c00
 8006894:	40013400 	.word	0x40013400
 8006898:	40014000 	.word	0x40014000
 800689c:	40014400 	.word	0x40014400
 80068a0:	40014800 	.word	0x40014800

080068a4 <TIM_OC5_SetConfig>:
 80068a4:	b480      	push	{r7}
 80068a6:	b087      	sub	sp, #28
 80068a8:	af00      	add	r7, sp, #0
 80068aa:	6078      	str	r0, [r7, #4]
 80068ac:	6039      	str	r1, [r7, #0]
 80068ae:	687b      	ldr	r3, [r7, #4]
 80068b0:	6a1b      	ldr	r3, [r3, #32]
 80068b2:	613b      	str	r3, [r7, #16]
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	6a1b      	ldr	r3, [r3, #32]
 80068b8:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	621a      	str	r2, [r3, #32]
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	685b      	ldr	r3, [r3, #4]
 80068c4:	617b      	str	r3, [r7, #20]
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80068ca:	60fb      	str	r3, [r7, #12]
 80068cc:	68fb      	ldr	r3, [r7, #12]
 80068ce:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80068d2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80068d6:	60fb      	str	r3, [r7, #12]
 80068d8:	683b      	ldr	r3, [r7, #0]
 80068da:	681b      	ldr	r3, [r3, #0]
 80068dc:	68fa      	ldr	r2, [r7, #12]
 80068de:	4313      	orrs	r3, r2
 80068e0:	60fb      	str	r3, [r7, #12]
 80068e2:	693b      	ldr	r3, [r7, #16]
 80068e4:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80068e8:	613b      	str	r3, [r7, #16]
 80068ea:	683b      	ldr	r3, [r7, #0]
 80068ec:	689b      	ldr	r3, [r3, #8]
 80068ee:	041b      	lsls	r3, r3, #16
 80068f0:	693a      	ldr	r2, [r7, #16]
 80068f2:	4313      	orrs	r3, r2
 80068f4:	613b      	str	r3, [r7, #16]
 80068f6:	687b      	ldr	r3, [r7, #4]
 80068f8:	4a17      	ldr	r2, [pc, #92]	@ (8006958 <TIM_OC5_SetConfig+0xb4>)
 80068fa:	4293      	cmp	r3, r2
 80068fc:	d00f      	beq.n	800691e <TIM_OC5_SetConfig+0x7a>
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	4a16      	ldr	r2, [pc, #88]	@ (800695c <TIM_OC5_SetConfig+0xb8>)
 8006902:	4293      	cmp	r3, r2
 8006904:	d00b      	beq.n	800691e <TIM_OC5_SetConfig+0x7a>
 8006906:	687b      	ldr	r3, [r7, #4]
 8006908:	4a15      	ldr	r2, [pc, #84]	@ (8006960 <TIM_OC5_SetConfig+0xbc>)
 800690a:	4293      	cmp	r3, r2
 800690c:	d007      	beq.n	800691e <TIM_OC5_SetConfig+0x7a>
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	4a14      	ldr	r2, [pc, #80]	@ (8006964 <TIM_OC5_SetConfig+0xc0>)
 8006912:	4293      	cmp	r3, r2
 8006914:	d003      	beq.n	800691e <TIM_OC5_SetConfig+0x7a>
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	4a13      	ldr	r2, [pc, #76]	@ (8006968 <TIM_OC5_SetConfig+0xc4>)
 800691a:	4293      	cmp	r3, r2
 800691c:	d109      	bne.n	8006932 <TIM_OC5_SetConfig+0x8e>
 800691e:	697b      	ldr	r3, [r7, #20]
 8006920:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006924:	617b      	str	r3, [r7, #20]
 8006926:	683b      	ldr	r3, [r7, #0]
 8006928:	695b      	ldr	r3, [r3, #20]
 800692a:	021b      	lsls	r3, r3, #8
 800692c:	697a      	ldr	r2, [r7, #20]
 800692e:	4313      	orrs	r3, r2
 8006930:	617b      	str	r3, [r7, #20]
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	697a      	ldr	r2, [r7, #20]
 8006936:	605a      	str	r2, [r3, #4]
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	68fa      	ldr	r2, [r7, #12]
 800693c:	651a      	str	r2, [r3, #80]	@ 0x50
 800693e:	683b      	ldr	r3, [r7, #0]
 8006940:	685a      	ldr	r2, [r3, #4]
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	649a      	str	r2, [r3, #72]	@ 0x48
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	693a      	ldr	r2, [r7, #16]
 800694a:	621a      	str	r2, [r3, #32]
 800694c:	bf00      	nop
 800694e:	371c      	adds	r7, #28
 8006950:	46bd      	mov	sp, r7
 8006952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006956:	4770      	bx	lr
 8006958:	40012c00 	.word	0x40012c00
 800695c:	40013400 	.word	0x40013400
 8006960:	40014000 	.word	0x40014000
 8006964:	40014400 	.word	0x40014400
 8006968:	40014800 	.word	0x40014800

0800696c <TIM_OC6_SetConfig>:
 800696c:	b480      	push	{r7}
 800696e:	b087      	sub	sp, #28
 8006970:	af00      	add	r7, sp, #0
 8006972:	6078      	str	r0, [r7, #4]
 8006974:	6039      	str	r1, [r7, #0]
 8006976:	687b      	ldr	r3, [r7, #4]
 8006978:	6a1b      	ldr	r3, [r3, #32]
 800697a:	613b      	str	r3, [r7, #16]
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	6a1b      	ldr	r3, [r3, #32]
 8006980:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	621a      	str	r2, [r3, #32]
 8006988:	687b      	ldr	r3, [r7, #4]
 800698a:	685b      	ldr	r3, [r3, #4]
 800698c:	617b      	str	r3, [r7, #20]
 800698e:	687b      	ldr	r3, [r7, #4]
 8006990:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006992:	60fb      	str	r3, [r7, #12]
 8006994:	68fb      	ldr	r3, [r7, #12]
 8006996:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800699a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800699e:	60fb      	str	r3, [r7, #12]
 80069a0:	683b      	ldr	r3, [r7, #0]
 80069a2:	681b      	ldr	r3, [r3, #0]
 80069a4:	021b      	lsls	r3, r3, #8
 80069a6:	68fa      	ldr	r2, [r7, #12]
 80069a8:	4313      	orrs	r3, r2
 80069aa:	60fb      	str	r3, [r7, #12]
 80069ac:	693b      	ldr	r3, [r7, #16]
 80069ae:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80069b2:	613b      	str	r3, [r7, #16]
 80069b4:	683b      	ldr	r3, [r7, #0]
 80069b6:	689b      	ldr	r3, [r3, #8]
 80069b8:	051b      	lsls	r3, r3, #20
 80069ba:	693a      	ldr	r2, [r7, #16]
 80069bc:	4313      	orrs	r3, r2
 80069be:	613b      	str	r3, [r7, #16]
 80069c0:	687b      	ldr	r3, [r7, #4]
 80069c2:	4a18      	ldr	r2, [pc, #96]	@ (8006a24 <TIM_OC6_SetConfig+0xb8>)
 80069c4:	4293      	cmp	r3, r2
 80069c6:	d00f      	beq.n	80069e8 <TIM_OC6_SetConfig+0x7c>
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	4a17      	ldr	r2, [pc, #92]	@ (8006a28 <TIM_OC6_SetConfig+0xbc>)
 80069cc:	4293      	cmp	r3, r2
 80069ce:	d00b      	beq.n	80069e8 <TIM_OC6_SetConfig+0x7c>
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	4a16      	ldr	r2, [pc, #88]	@ (8006a2c <TIM_OC6_SetConfig+0xc0>)
 80069d4:	4293      	cmp	r3, r2
 80069d6:	d007      	beq.n	80069e8 <TIM_OC6_SetConfig+0x7c>
 80069d8:	687b      	ldr	r3, [r7, #4]
 80069da:	4a15      	ldr	r2, [pc, #84]	@ (8006a30 <TIM_OC6_SetConfig+0xc4>)
 80069dc:	4293      	cmp	r3, r2
 80069de:	d003      	beq.n	80069e8 <TIM_OC6_SetConfig+0x7c>
 80069e0:	687b      	ldr	r3, [r7, #4]
 80069e2:	4a14      	ldr	r2, [pc, #80]	@ (8006a34 <TIM_OC6_SetConfig+0xc8>)
 80069e4:	4293      	cmp	r3, r2
 80069e6:	d109      	bne.n	80069fc <TIM_OC6_SetConfig+0x90>
 80069e8:	697b      	ldr	r3, [r7, #20]
 80069ea:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80069ee:	617b      	str	r3, [r7, #20]
 80069f0:	683b      	ldr	r3, [r7, #0]
 80069f2:	695b      	ldr	r3, [r3, #20]
 80069f4:	029b      	lsls	r3, r3, #10
 80069f6:	697a      	ldr	r2, [r7, #20]
 80069f8:	4313      	orrs	r3, r2
 80069fa:	617b      	str	r3, [r7, #20]
 80069fc:	687b      	ldr	r3, [r7, #4]
 80069fe:	697a      	ldr	r2, [r7, #20]
 8006a00:	605a      	str	r2, [r3, #4]
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	68fa      	ldr	r2, [r7, #12]
 8006a06:	651a      	str	r2, [r3, #80]	@ 0x50
 8006a08:	683b      	ldr	r3, [r7, #0]
 8006a0a:	685a      	ldr	r2, [r3, #4]
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006a10:	687b      	ldr	r3, [r7, #4]
 8006a12:	693a      	ldr	r2, [r7, #16]
 8006a14:	621a      	str	r2, [r3, #32]
 8006a16:	bf00      	nop
 8006a18:	371c      	adds	r7, #28
 8006a1a:	46bd      	mov	sp, r7
 8006a1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a20:	4770      	bx	lr
 8006a22:	bf00      	nop
 8006a24:	40012c00 	.word	0x40012c00
 8006a28:	40013400 	.word	0x40013400
 8006a2c:	40014000 	.word	0x40014000
 8006a30:	40014400 	.word	0x40014400
 8006a34:	40014800 	.word	0x40014800

08006a38 <TIM_TI1_ConfigInputStage>:
 8006a38:	b480      	push	{r7}
 8006a3a:	b087      	sub	sp, #28
 8006a3c:	af00      	add	r7, sp, #0
 8006a3e:	60f8      	str	r0, [r7, #12]
 8006a40:	60b9      	str	r1, [r7, #8]
 8006a42:	607a      	str	r2, [r7, #4]
 8006a44:	68fb      	ldr	r3, [r7, #12]
 8006a46:	6a1b      	ldr	r3, [r3, #32]
 8006a48:	617b      	str	r3, [r7, #20]
 8006a4a:	68fb      	ldr	r3, [r7, #12]
 8006a4c:	6a1b      	ldr	r3, [r3, #32]
 8006a4e:	f023 0201 	bic.w	r2, r3, #1
 8006a52:	68fb      	ldr	r3, [r7, #12]
 8006a54:	621a      	str	r2, [r3, #32]
 8006a56:	68fb      	ldr	r3, [r7, #12]
 8006a58:	699b      	ldr	r3, [r3, #24]
 8006a5a:	613b      	str	r3, [r7, #16]
 8006a5c:	693b      	ldr	r3, [r7, #16]
 8006a5e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006a62:	613b      	str	r3, [r7, #16]
 8006a64:	687b      	ldr	r3, [r7, #4]
 8006a66:	011b      	lsls	r3, r3, #4
 8006a68:	693a      	ldr	r2, [r7, #16]
 8006a6a:	4313      	orrs	r3, r2
 8006a6c:	613b      	str	r3, [r7, #16]
 8006a6e:	697b      	ldr	r3, [r7, #20]
 8006a70:	f023 030a 	bic.w	r3, r3, #10
 8006a74:	617b      	str	r3, [r7, #20]
 8006a76:	697a      	ldr	r2, [r7, #20]
 8006a78:	68bb      	ldr	r3, [r7, #8]
 8006a7a:	4313      	orrs	r3, r2
 8006a7c:	617b      	str	r3, [r7, #20]
 8006a7e:	68fb      	ldr	r3, [r7, #12]
 8006a80:	693a      	ldr	r2, [r7, #16]
 8006a82:	619a      	str	r2, [r3, #24]
 8006a84:	68fb      	ldr	r3, [r7, #12]
 8006a86:	697a      	ldr	r2, [r7, #20]
 8006a88:	621a      	str	r2, [r3, #32]
 8006a8a:	bf00      	nop
 8006a8c:	371c      	adds	r7, #28
 8006a8e:	46bd      	mov	sp, r7
 8006a90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a94:	4770      	bx	lr

08006a96 <TIM_TI2_ConfigInputStage>:
 8006a96:	b480      	push	{r7}
 8006a98:	b087      	sub	sp, #28
 8006a9a:	af00      	add	r7, sp, #0
 8006a9c:	60f8      	str	r0, [r7, #12]
 8006a9e:	60b9      	str	r1, [r7, #8]
 8006aa0:	607a      	str	r2, [r7, #4]
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	6a1b      	ldr	r3, [r3, #32]
 8006aa6:	617b      	str	r3, [r7, #20]
 8006aa8:	68fb      	ldr	r3, [r7, #12]
 8006aaa:	6a1b      	ldr	r3, [r3, #32]
 8006aac:	f023 0210 	bic.w	r2, r3, #16
 8006ab0:	68fb      	ldr	r3, [r7, #12]
 8006ab2:	621a      	str	r2, [r3, #32]
 8006ab4:	68fb      	ldr	r3, [r7, #12]
 8006ab6:	699b      	ldr	r3, [r3, #24]
 8006ab8:	613b      	str	r3, [r7, #16]
 8006aba:	693b      	ldr	r3, [r7, #16]
 8006abc:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006ac0:	613b      	str	r3, [r7, #16]
 8006ac2:	687b      	ldr	r3, [r7, #4]
 8006ac4:	031b      	lsls	r3, r3, #12
 8006ac6:	693a      	ldr	r2, [r7, #16]
 8006ac8:	4313      	orrs	r3, r2
 8006aca:	613b      	str	r3, [r7, #16]
 8006acc:	697b      	ldr	r3, [r7, #20]
 8006ace:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8006ad2:	617b      	str	r3, [r7, #20]
 8006ad4:	68bb      	ldr	r3, [r7, #8]
 8006ad6:	011b      	lsls	r3, r3, #4
 8006ad8:	697a      	ldr	r2, [r7, #20]
 8006ada:	4313      	orrs	r3, r2
 8006adc:	617b      	str	r3, [r7, #20]
 8006ade:	68fb      	ldr	r3, [r7, #12]
 8006ae0:	693a      	ldr	r2, [r7, #16]
 8006ae2:	619a      	str	r2, [r3, #24]
 8006ae4:	68fb      	ldr	r3, [r7, #12]
 8006ae6:	697a      	ldr	r2, [r7, #20]
 8006ae8:	621a      	str	r2, [r3, #32]
 8006aea:	bf00      	nop
 8006aec:	371c      	adds	r7, #28
 8006aee:	46bd      	mov	sp, r7
 8006af0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006af4:	4770      	bx	lr

08006af6 <TIM_ITRx_SetConfig>:
 8006af6:	b480      	push	{r7}
 8006af8:	b085      	sub	sp, #20
 8006afa:	af00      	add	r7, sp, #0
 8006afc:	6078      	str	r0, [r7, #4]
 8006afe:	6039      	str	r1, [r7, #0]
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	689b      	ldr	r3, [r3, #8]
 8006b04:	60fb      	str	r3, [r7, #12]
 8006b06:	68fb      	ldr	r3, [r7, #12]
 8006b08:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8006b0c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006b10:	60fb      	str	r3, [r7, #12]
 8006b12:	683a      	ldr	r2, [r7, #0]
 8006b14:	68fb      	ldr	r3, [r7, #12]
 8006b16:	4313      	orrs	r3, r2
 8006b18:	f043 0307 	orr.w	r3, r3, #7
 8006b1c:	60fb      	str	r3, [r7, #12]
 8006b1e:	687b      	ldr	r3, [r7, #4]
 8006b20:	68fa      	ldr	r2, [r7, #12]
 8006b22:	609a      	str	r2, [r3, #8]
 8006b24:	bf00      	nop
 8006b26:	3714      	adds	r7, #20
 8006b28:	46bd      	mov	sp, r7
 8006b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b2e:	4770      	bx	lr

08006b30 <TIM_ETR_SetConfig>:
 8006b30:	b480      	push	{r7}
 8006b32:	b087      	sub	sp, #28
 8006b34:	af00      	add	r7, sp, #0
 8006b36:	60f8      	str	r0, [r7, #12]
 8006b38:	60b9      	str	r1, [r7, #8]
 8006b3a:	607a      	str	r2, [r7, #4]
 8006b3c:	603b      	str	r3, [r7, #0]
 8006b3e:	68fb      	ldr	r3, [r7, #12]
 8006b40:	689b      	ldr	r3, [r3, #8]
 8006b42:	617b      	str	r3, [r7, #20]
 8006b44:	697b      	ldr	r3, [r7, #20]
 8006b46:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006b4a:	617b      	str	r3, [r7, #20]
 8006b4c:	683b      	ldr	r3, [r7, #0]
 8006b4e:	021a      	lsls	r2, r3, #8
 8006b50:	687b      	ldr	r3, [r7, #4]
 8006b52:	431a      	orrs	r2, r3
 8006b54:	68bb      	ldr	r3, [r7, #8]
 8006b56:	4313      	orrs	r3, r2
 8006b58:	697a      	ldr	r2, [r7, #20]
 8006b5a:	4313      	orrs	r3, r2
 8006b5c:	617b      	str	r3, [r7, #20]
 8006b5e:	68fb      	ldr	r3, [r7, #12]
 8006b60:	697a      	ldr	r2, [r7, #20]
 8006b62:	609a      	str	r2, [r3, #8]
 8006b64:	bf00      	nop
 8006b66:	371c      	adds	r7, #28
 8006b68:	46bd      	mov	sp, r7
 8006b6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b6e:	4770      	bx	lr

08006b70 <TIM_CCxChannelCmd>:
 8006b70:	b480      	push	{r7}
 8006b72:	b087      	sub	sp, #28
 8006b74:	af00      	add	r7, sp, #0
 8006b76:	60f8      	str	r0, [r7, #12]
 8006b78:	60b9      	str	r1, [r7, #8]
 8006b7a:	607a      	str	r2, [r7, #4]
 8006b7c:	68bb      	ldr	r3, [r7, #8]
 8006b7e:	f003 031f 	and.w	r3, r3, #31
 8006b82:	2201      	movs	r2, #1
 8006b84:	fa02 f303 	lsl.w	r3, r2, r3
 8006b88:	617b      	str	r3, [r7, #20]
 8006b8a:	68fb      	ldr	r3, [r7, #12]
 8006b8c:	6a1a      	ldr	r2, [r3, #32]
 8006b8e:	697b      	ldr	r3, [r7, #20]
 8006b90:	43db      	mvns	r3, r3
 8006b92:	401a      	ands	r2, r3
 8006b94:	68fb      	ldr	r3, [r7, #12]
 8006b96:	621a      	str	r2, [r3, #32]
 8006b98:	68fb      	ldr	r3, [r7, #12]
 8006b9a:	6a1a      	ldr	r2, [r3, #32]
 8006b9c:	68bb      	ldr	r3, [r7, #8]
 8006b9e:	f003 031f 	and.w	r3, r3, #31
 8006ba2:	6879      	ldr	r1, [r7, #4]
 8006ba4:	fa01 f303 	lsl.w	r3, r1, r3
 8006ba8:	431a      	orrs	r2, r3
 8006baa:	68fb      	ldr	r3, [r7, #12]
 8006bac:	621a      	str	r2, [r3, #32]
 8006bae:	bf00      	nop
 8006bb0:	371c      	adds	r7, #28
 8006bb2:	46bd      	mov	sp, r7
 8006bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bb8:	4770      	bx	lr
	...

08006bbc <HAL_TIMEx_MasterConfigSynchronization>:
 8006bbc:	b480      	push	{r7}
 8006bbe:	b085      	sub	sp, #20
 8006bc0:	af00      	add	r7, sp, #0
 8006bc2:	6078      	str	r0, [r7, #4]
 8006bc4:	6039      	str	r1, [r7, #0]
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006bcc:	2b01      	cmp	r3, #1
 8006bce:	d101      	bne.n	8006bd4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006bd0:	2302      	movs	r3, #2
 8006bd2:	e065      	b.n	8006ca0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	2201      	movs	r2, #1
 8006bd8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006bdc:	687b      	ldr	r3, [r7, #4]
 8006bde:	2202      	movs	r2, #2
 8006be0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006be4:	687b      	ldr	r3, [r7, #4]
 8006be6:	681b      	ldr	r3, [r3, #0]
 8006be8:	685b      	ldr	r3, [r3, #4]
 8006bea:	60fb      	str	r3, [r7, #12]
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	681b      	ldr	r3, [r3, #0]
 8006bf0:	689b      	ldr	r3, [r3, #8]
 8006bf2:	60bb      	str	r3, [r7, #8]
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	681b      	ldr	r3, [r3, #0]
 8006bf8:	4a2c      	ldr	r2, [pc, #176]	@ (8006cac <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006bfa:	4293      	cmp	r3, r2
 8006bfc:	d004      	beq.n	8006c08 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	681b      	ldr	r3, [r3, #0]
 8006c02:	4a2b      	ldr	r2, [pc, #172]	@ (8006cb0 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8006c04:	4293      	cmp	r3, r2
 8006c06:	d108      	bne.n	8006c1a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8006c08:	68fb      	ldr	r3, [r7, #12]
 8006c0a:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8006c0e:	60fb      	str	r3, [r7, #12]
 8006c10:	683b      	ldr	r3, [r7, #0]
 8006c12:	685b      	ldr	r3, [r3, #4]
 8006c14:	68fa      	ldr	r2, [r7, #12]
 8006c16:	4313      	orrs	r3, r2
 8006c18:	60fb      	str	r3, [r7, #12]
 8006c1a:	68fb      	ldr	r3, [r7, #12]
 8006c1c:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8006c20:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006c24:	60fb      	str	r3, [r7, #12]
 8006c26:	683b      	ldr	r3, [r7, #0]
 8006c28:	681b      	ldr	r3, [r3, #0]
 8006c2a:	68fa      	ldr	r2, [r7, #12]
 8006c2c:	4313      	orrs	r3, r2
 8006c2e:	60fb      	str	r3, [r7, #12]
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	681b      	ldr	r3, [r3, #0]
 8006c34:	68fa      	ldr	r2, [r7, #12]
 8006c36:	605a      	str	r2, [r3, #4]
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	681b      	ldr	r3, [r3, #0]
 8006c3c:	4a1b      	ldr	r2, [pc, #108]	@ (8006cac <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006c3e:	4293      	cmp	r3, r2
 8006c40:	d018      	beq.n	8006c74 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	681b      	ldr	r3, [r3, #0]
 8006c46:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006c4a:	d013      	beq.n	8006c74 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	681b      	ldr	r3, [r3, #0]
 8006c50:	4a18      	ldr	r2, [pc, #96]	@ (8006cb4 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 8006c52:	4293      	cmp	r3, r2
 8006c54:	d00e      	beq.n	8006c74 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006c56:	687b      	ldr	r3, [r7, #4]
 8006c58:	681b      	ldr	r3, [r3, #0]
 8006c5a:	4a17      	ldr	r2, [pc, #92]	@ (8006cb8 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 8006c5c:	4293      	cmp	r3, r2
 8006c5e:	d009      	beq.n	8006c74 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006c60:	687b      	ldr	r3, [r7, #4]
 8006c62:	681b      	ldr	r3, [r3, #0]
 8006c64:	4a12      	ldr	r2, [pc, #72]	@ (8006cb0 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8006c66:	4293      	cmp	r3, r2
 8006c68:	d004      	beq.n	8006c74 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	681b      	ldr	r3, [r3, #0]
 8006c6e:	4a13      	ldr	r2, [pc, #76]	@ (8006cbc <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8006c70:	4293      	cmp	r3, r2
 8006c72:	d10c      	bne.n	8006c8e <HAL_TIMEx_MasterConfigSynchronization+0xd2>
 8006c74:	68bb      	ldr	r3, [r7, #8]
 8006c76:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006c7a:	60bb      	str	r3, [r7, #8]
 8006c7c:	683b      	ldr	r3, [r7, #0]
 8006c7e:	689b      	ldr	r3, [r3, #8]
 8006c80:	68ba      	ldr	r2, [r7, #8]
 8006c82:	4313      	orrs	r3, r2
 8006c84:	60bb      	str	r3, [r7, #8]
 8006c86:	687b      	ldr	r3, [r7, #4]
 8006c88:	681b      	ldr	r3, [r3, #0]
 8006c8a:	68ba      	ldr	r2, [r7, #8]
 8006c8c:	609a      	str	r2, [r3, #8]
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	2201      	movs	r2, #1
 8006c92:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006c96:	687b      	ldr	r3, [r7, #4]
 8006c98:	2200      	movs	r2, #0
 8006c9a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006c9e:	2300      	movs	r3, #0
 8006ca0:	4618      	mov	r0, r3
 8006ca2:	3714      	adds	r7, #20
 8006ca4:	46bd      	mov	sp, r7
 8006ca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006caa:	4770      	bx	lr
 8006cac:	40012c00 	.word	0x40012c00
 8006cb0:	40013400 	.word	0x40013400
 8006cb4:	40000400 	.word	0x40000400
 8006cb8:	40000800 	.word	0x40000800
 8006cbc:	40014000 	.word	0x40014000

08006cc0 <HAL_TIMEx_ConfigBreakDeadTime>:
 8006cc0:	b480      	push	{r7}
 8006cc2:	b085      	sub	sp, #20
 8006cc4:	af00      	add	r7, sp, #0
 8006cc6:	6078      	str	r0, [r7, #4]
 8006cc8:	6039      	str	r1, [r7, #0]
 8006cca:	2300      	movs	r3, #0
 8006ccc:	60fb      	str	r3, [r7, #12]
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006cd4:	2b01      	cmp	r3, #1
 8006cd6:	d101      	bne.n	8006cdc <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8006cd8:	2302      	movs	r3, #2
 8006cda:	e073      	b.n	8006dc4 <HAL_TIMEx_ConfigBreakDeadTime+0x104>
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	2201      	movs	r2, #1
 8006ce0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006ce4:	68fb      	ldr	r3, [r7, #12]
 8006ce6:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8006cea:	683b      	ldr	r3, [r7, #0]
 8006cec:	68db      	ldr	r3, [r3, #12]
 8006cee:	4313      	orrs	r3, r2
 8006cf0:	60fb      	str	r3, [r7, #12]
 8006cf2:	68fb      	ldr	r3, [r7, #12]
 8006cf4:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8006cf8:	683b      	ldr	r3, [r7, #0]
 8006cfa:	689b      	ldr	r3, [r3, #8]
 8006cfc:	4313      	orrs	r3, r2
 8006cfe:	60fb      	str	r3, [r7, #12]
 8006d00:	68fb      	ldr	r3, [r7, #12]
 8006d02:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8006d06:	683b      	ldr	r3, [r7, #0]
 8006d08:	685b      	ldr	r3, [r3, #4]
 8006d0a:	4313      	orrs	r3, r2
 8006d0c:	60fb      	str	r3, [r7, #12]
 8006d0e:	68fb      	ldr	r3, [r7, #12]
 8006d10:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8006d14:	683b      	ldr	r3, [r7, #0]
 8006d16:	681b      	ldr	r3, [r3, #0]
 8006d18:	4313      	orrs	r3, r2
 8006d1a:	60fb      	str	r3, [r7, #12]
 8006d1c:	68fb      	ldr	r3, [r7, #12]
 8006d1e:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006d22:	683b      	ldr	r3, [r7, #0]
 8006d24:	691b      	ldr	r3, [r3, #16]
 8006d26:	4313      	orrs	r3, r2
 8006d28:	60fb      	str	r3, [r7, #12]
 8006d2a:	68fb      	ldr	r3, [r7, #12]
 8006d2c:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8006d30:	683b      	ldr	r3, [r7, #0]
 8006d32:	695b      	ldr	r3, [r3, #20]
 8006d34:	4313      	orrs	r3, r2
 8006d36:	60fb      	str	r3, [r7, #12]
 8006d38:	68fb      	ldr	r3, [r7, #12]
 8006d3a:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8006d3e:	683b      	ldr	r3, [r7, #0]
 8006d40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006d42:	4313      	orrs	r3, r2
 8006d44:	60fb      	str	r3, [r7, #12]
 8006d46:	68fb      	ldr	r3, [r7, #12]
 8006d48:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 8006d4c:	683b      	ldr	r3, [r7, #0]
 8006d4e:	699b      	ldr	r3, [r3, #24]
 8006d50:	041b      	lsls	r3, r3, #16
 8006d52:	4313      	orrs	r3, r2
 8006d54:	60fb      	str	r3, [r7, #12]
 8006d56:	68fb      	ldr	r3, [r7, #12]
 8006d58:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 8006d5c:	683b      	ldr	r3, [r7, #0]
 8006d5e:	69db      	ldr	r3, [r3, #28]
 8006d60:	4313      	orrs	r3, r2
 8006d62:	60fb      	str	r3, [r7, #12]
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	681b      	ldr	r3, [r3, #0]
 8006d68:	4a19      	ldr	r2, [pc, #100]	@ (8006dd0 <HAL_TIMEx_ConfigBreakDeadTime+0x110>)
 8006d6a:	4293      	cmp	r3, r2
 8006d6c:	d004      	beq.n	8006d78 <HAL_TIMEx_ConfigBreakDeadTime+0xb8>
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	681b      	ldr	r3, [r3, #0]
 8006d72:	4a18      	ldr	r2, [pc, #96]	@ (8006dd4 <HAL_TIMEx_ConfigBreakDeadTime+0x114>)
 8006d74:	4293      	cmp	r3, r2
 8006d76:	d11c      	bne.n	8006db2 <HAL_TIMEx_ConfigBreakDeadTime+0xf2>
 8006d78:	68fb      	ldr	r3, [r7, #12]
 8006d7a:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 8006d7e:	683b      	ldr	r3, [r7, #0]
 8006d80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006d82:	051b      	lsls	r3, r3, #20
 8006d84:	4313      	orrs	r3, r2
 8006d86:	60fb      	str	r3, [r7, #12]
 8006d88:	68fb      	ldr	r3, [r7, #12]
 8006d8a:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8006d8e:	683b      	ldr	r3, [r7, #0]
 8006d90:	6a1b      	ldr	r3, [r3, #32]
 8006d92:	4313      	orrs	r3, r2
 8006d94:	60fb      	str	r3, [r7, #12]
 8006d96:	68fb      	ldr	r3, [r7, #12]
 8006d98:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8006d9c:	683b      	ldr	r3, [r7, #0]
 8006d9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006da0:	4313      	orrs	r3, r2
 8006da2:	60fb      	str	r3, [r7, #12]
 8006da4:	68fb      	ldr	r3, [r7, #12]
 8006da6:	f023 5200 	bic.w	r2, r3, #536870912	@ 0x20000000
 8006daa:	683b      	ldr	r3, [r7, #0]
 8006dac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006dae:	4313      	orrs	r3, r2
 8006db0:	60fb      	str	r3, [r7, #12]
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	681b      	ldr	r3, [r3, #0]
 8006db6:	68fa      	ldr	r2, [r7, #12]
 8006db8:	645a      	str	r2, [r3, #68]	@ 0x44
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	2200      	movs	r2, #0
 8006dbe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006dc2:	2300      	movs	r3, #0
 8006dc4:	4618      	mov	r0, r3
 8006dc6:	3714      	adds	r7, #20
 8006dc8:	46bd      	mov	sp, r7
 8006dca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dce:	4770      	bx	lr
 8006dd0:	40012c00 	.word	0x40012c00
 8006dd4:	40013400 	.word	0x40013400

08006dd8 <HAL_TIMEx_CommutCallback>:
 8006dd8:	b480      	push	{r7}
 8006dda:	b083      	sub	sp, #12
 8006ddc:	af00      	add	r7, sp, #0
 8006dde:	6078      	str	r0, [r7, #4]
 8006de0:	bf00      	nop
 8006de2:	370c      	adds	r7, #12
 8006de4:	46bd      	mov	sp, r7
 8006de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dea:	4770      	bx	lr

08006dec <HAL_TIMEx_BreakCallback>:
 8006dec:	b480      	push	{r7}
 8006dee:	b083      	sub	sp, #12
 8006df0:	af00      	add	r7, sp, #0
 8006df2:	6078      	str	r0, [r7, #4]
 8006df4:	bf00      	nop
 8006df6:	370c      	adds	r7, #12
 8006df8:	46bd      	mov	sp, r7
 8006dfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dfe:	4770      	bx	lr

08006e00 <HAL_TIMEx_Break2Callback>:
 8006e00:	b480      	push	{r7}
 8006e02:	b083      	sub	sp, #12
 8006e04:	af00      	add	r7, sp, #0
 8006e06:	6078      	str	r0, [r7, #4]
 8006e08:	bf00      	nop
 8006e0a:	370c      	adds	r7, #12
 8006e0c:	46bd      	mov	sp, r7
 8006e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e12:	4770      	bx	lr

08006e14 <HAL_TIMEx_EncoderIndexCallback>:
 8006e14:	b480      	push	{r7}
 8006e16:	b083      	sub	sp, #12
 8006e18:	af00      	add	r7, sp, #0
 8006e1a:	6078      	str	r0, [r7, #4]
 8006e1c:	bf00      	nop
 8006e1e:	370c      	adds	r7, #12
 8006e20:	46bd      	mov	sp, r7
 8006e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e26:	4770      	bx	lr

08006e28 <HAL_TIMEx_DirectionChangeCallback>:
 8006e28:	b480      	push	{r7}
 8006e2a:	b083      	sub	sp, #12
 8006e2c:	af00      	add	r7, sp, #0
 8006e2e:	6078      	str	r0, [r7, #4]
 8006e30:	bf00      	nop
 8006e32:	370c      	adds	r7, #12
 8006e34:	46bd      	mov	sp, r7
 8006e36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e3a:	4770      	bx	lr

08006e3c <HAL_TIMEx_IndexErrorCallback>:
 8006e3c:	b480      	push	{r7}
 8006e3e:	b083      	sub	sp, #12
 8006e40:	af00      	add	r7, sp, #0
 8006e42:	6078      	str	r0, [r7, #4]
 8006e44:	bf00      	nop
 8006e46:	370c      	adds	r7, #12
 8006e48:	46bd      	mov	sp, r7
 8006e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e4e:	4770      	bx	lr

08006e50 <HAL_TIMEx_TransitionErrorCallback>:
 8006e50:	b480      	push	{r7}
 8006e52:	b083      	sub	sp, #12
 8006e54:	af00      	add	r7, sp, #0
 8006e56:	6078      	str	r0, [r7, #4]
 8006e58:	bf00      	nop
 8006e5a:	370c      	adds	r7, #12
 8006e5c:	46bd      	mov	sp, r7
 8006e5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e62:	4770      	bx	lr

08006e64 <memset>:
 8006e64:	4402      	add	r2, r0
 8006e66:	4603      	mov	r3, r0
 8006e68:	4293      	cmp	r3, r2
 8006e6a:	d100      	bne.n	8006e6e <memset+0xa>
 8006e6c:	4770      	bx	lr
 8006e6e:	f803 1b01 	strb.w	r1, [r3], #1
 8006e72:	e7f9      	b.n	8006e68 <memset+0x4>

08006e74 <__libc_init_array>:
 8006e74:	b570      	push	{r4, r5, r6, lr}
 8006e76:	4d0d      	ldr	r5, [pc, #52]	@ (8006eac <__libc_init_array+0x38>)
 8006e78:	4c0d      	ldr	r4, [pc, #52]	@ (8006eb0 <__libc_init_array+0x3c>)
 8006e7a:	1b64      	subs	r4, r4, r5
 8006e7c:	10a4      	asrs	r4, r4, #2
 8006e7e:	2600      	movs	r6, #0
 8006e80:	42a6      	cmp	r6, r4
 8006e82:	d109      	bne.n	8006e98 <__libc_init_array+0x24>
 8006e84:	4d0b      	ldr	r5, [pc, #44]	@ (8006eb4 <__libc_init_array+0x40>)
 8006e86:	4c0c      	ldr	r4, [pc, #48]	@ (8006eb8 <__libc_init_array+0x44>)
 8006e88:	f000 f826 	bl	8006ed8 <_init>
 8006e8c:	1b64      	subs	r4, r4, r5
 8006e8e:	10a4      	asrs	r4, r4, #2
 8006e90:	2600      	movs	r6, #0
 8006e92:	42a6      	cmp	r6, r4
 8006e94:	d105      	bne.n	8006ea2 <__libc_init_array+0x2e>
 8006e96:	bd70      	pop	{r4, r5, r6, pc}
 8006e98:	f855 3b04 	ldr.w	r3, [r5], #4
 8006e9c:	4798      	blx	r3
 8006e9e:	3601      	adds	r6, #1
 8006ea0:	e7ee      	b.n	8006e80 <__libc_init_array+0xc>
 8006ea2:	f855 3b04 	ldr.w	r3, [r5], #4
 8006ea6:	4798      	blx	r3
 8006ea8:	3601      	adds	r6, #1
 8006eaa:	e7f2      	b.n	8006e92 <__libc_init_array+0x1e>
 8006eac:	08006f10 	.word	0x08006f10
 8006eb0:	08006f10 	.word	0x08006f10
 8006eb4:	08006f10 	.word	0x08006f10
 8006eb8:	08006f14 	.word	0x08006f14

08006ebc <memcpy>:
 8006ebc:	440a      	add	r2, r1
 8006ebe:	4291      	cmp	r1, r2
 8006ec0:	f100 33ff 	add.w	r3, r0, #4294967295
 8006ec4:	d100      	bne.n	8006ec8 <memcpy+0xc>
 8006ec6:	4770      	bx	lr
 8006ec8:	b510      	push	{r4, lr}
 8006eca:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006ece:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006ed2:	4291      	cmp	r1, r2
 8006ed4:	d1f9      	bne.n	8006eca <memcpy+0xe>
 8006ed6:	bd10      	pop	{r4, pc}

08006ed8 <_init>:
 8006ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006eda:	bf00      	nop
 8006edc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006ede:	bc08      	pop	{r3}
 8006ee0:	469e      	mov	lr, r3
 8006ee2:	4770      	bx	lr

08006ee4 <_fini>:
 8006ee4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006ee6:	bf00      	nop
 8006ee8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006eea:	bc08      	pop	{r3}
 8006eec:	469e      	mov	lr, r3
 8006eee:	4770      	bx	lr
