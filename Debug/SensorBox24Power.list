
SensorBox24Power.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006f4c  080001d8  080001d8  000011d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  08007124  08007124  00008124  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007144  08007144  0000900c  2**0
                  CONTENTS
  4 .ARM          00000000  08007144  08007144  0000900c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08007144  08007144  0000900c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007144  08007144  00008144  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007148  08007148  00008148  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  0800714c  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000006a4  2000000c  08007158  0000900c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200006b0  08007158  000096b0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000900c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001596d  00000000  00000000  0000903c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002a78  00000000  00000000  0001e9a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001420  00000000  00000000  00021428  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000f7d  00000000  00000000  00022848  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000207c0  00000000  00000000  000237c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00014fe1  00000000  00000000  00043f85  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000da730  00000000  00000000  00058f66  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00133696  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000056b4  00000000  00000000  001336dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  00138d90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c05      	ldr	r4, [pc, #20]	@ (80001f0 <__do_global_dtors_aux+0x18>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b933      	cbnz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e0:	4b04      	ldr	r3, [pc, #16]	@ (80001f4 <__do_global_dtors_aux+0x1c>)
 80001e2:	b113      	cbz	r3, 80001ea <__do_global_dtors_aux+0x12>
 80001e4:	4804      	ldr	r0, [pc, #16]	@ (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	f3af 8000 	nop.w
 80001ea:	2301      	movs	r3, #1
 80001ec:	7023      	strb	r3, [r4, #0]
 80001ee:	bd10      	pop	{r4, pc}
 80001f0:	2000000c 	.word	0x2000000c
 80001f4:	00000000 	.word	0x00000000
 80001f8:	0800710c 	.word	0x0800710c

080001fc <frame_dummy>:
 80001fc:	b508      	push	{r3, lr}
 80001fe:	4b03      	ldr	r3, [pc, #12]	@ (800020c <frame_dummy+0x10>)
 8000200:	b11b      	cbz	r3, 800020a <frame_dummy+0xe>
 8000202:	4903      	ldr	r1, [pc, #12]	@ (8000210 <frame_dummy+0x14>)
 8000204:	4803      	ldr	r0, [pc, #12]	@ (8000214 <frame_dummy+0x18>)
 8000206:	f3af 8000 	nop.w
 800020a:	bd08      	pop	{r3, pc}
 800020c:	00000000 	.word	0x00000000
 8000210:	20000010 	.word	0x20000010
 8000214:	0800710c 	.word	0x0800710c

08000218 <set_pwm_duty_cycle>:
#include "main.h"
#include "functions.h"
#include "string.h"


void set_pwm_duty_cycle(TIM_HandleTypeDef *htim){
 8000218:	b580      	push	{r7, lr}
 800021a:	b082      	sub	sp, #8
 800021c:	af00      	add	r7, sp, #0
 800021e:	6078      	str	r0, [r7, #4]
	if(check_bit(PWM_out_enable,1) != 0){
 8000220:	4b1e      	ldr	r3, [pc, #120]	@ (800029c <set_pwm_duty_cycle+0x84>)
 8000222:	781b      	ldrb	r3, [r3, #0]
 8000224:	2101      	movs	r1, #1
 8000226:	4618      	mov	r0, r3
 8000228:	f000 fe50 	bl	8000ecc <check_bit>
 800022c:	4603      	mov	r3, r0
 800022e:	2b00      	cmp	r3, #0
 8000230:	d010      	beq.n	8000254 <set_pwm_duty_cycle+0x3c>
		PWM_speed[0] = (PWM_width[0] * 40)/100;
 8000232:	4b1b      	ldr	r3, [pc, #108]	@ (80002a0 <set_pwm_duty_cycle+0x88>)
 8000234:	881b      	ldrh	r3, [r3, #0]
 8000236:	461a      	mov	r2, r3
 8000238:	4613      	mov	r3, r2
 800023a:	009b      	lsls	r3, r3, #2
 800023c:	4413      	add	r3, r2
 800023e:	00db      	lsls	r3, r3, #3
 8000240:	4a18      	ldr	r2, [pc, #96]	@ (80002a4 <set_pwm_duty_cycle+0x8c>)
 8000242:	fb82 1203 	smull	r1, r2, r2, r3
 8000246:	1152      	asrs	r2, r2, #5
 8000248:	17db      	asrs	r3, r3, #31
 800024a:	1ad3      	subs	r3, r2, r3
 800024c:	b29a      	uxth	r2, r3
 800024e:	4b16      	ldr	r3, [pc, #88]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000250:	801a      	strh	r2, [r3, #0]
 8000252:	e002      	b.n	800025a <set_pwm_duty_cycle+0x42>
	}else{
		PWM_speed[0] = 0;
 8000254:	4b14      	ldr	r3, [pc, #80]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000256:	2200      	movs	r2, #0
 8000258:	801a      	strh	r2, [r3, #0]
	}
	if(check_bit(PWM_out_enable,0) != 0){
 800025a:	4b10      	ldr	r3, [pc, #64]	@ (800029c <set_pwm_duty_cycle+0x84>)
 800025c:	781b      	ldrb	r3, [r3, #0]
 800025e:	2100      	movs	r1, #0
 8000260:	4618      	mov	r0, r3
 8000262:	f000 fe33 	bl	8000ecc <check_bit>
 8000266:	4603      	mov	r3, r0
 8000268:	2b00      	cmp	r3, #0
 800026a:	d010      	beq.n	800028e <set_pwm_duty_cycle+0x76>
		PWM_speed[1] = (PWM_width[1] * 40)/100;
 800026c:	4b0c      	ldr	r3, [pc, #48]	@ (80002a0 <set_pwm_duty_cycle+0x88>)
 800026e:	885b      	ldrh	r3, [r3, #2]
 8000270:	461a      	mov	r2, r3
 8000272:	4613      	mov	r3, r2
 8000274:	009b      	lsls	r3, r3, #2
 8000276:	4413      	add	r3, r2
 8000278:	00db      	lsls	r3, r3, #3
 800027a:	4a0a      	ldr	r2, [pc, #40]	@ (80002a4 <set_pwm_duty_cycle+0x8c>)
 800027c:	fb82 1203 	smull	r1, r2, r2, r3
 8000280:	1152      	asrs	r2, r2, #5
 8000282:	17db      	asrs	r3, r3, #31
 8000284:	1ad3      	subs	r3, r2, r3
 8000286:	b29a      	uxth	r2, r3
 8000288:	4b07      	ldr	r3, [pc, #28]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 800028a:	805a      	strh	r2, [r3, #2]
	}else{
		PWM_speed[1] = 0;
	}
}
 800028c:	e002      	b.n	8000294 <set_pwm_duty_cycle+0x7c>
		PWM_speed[1] = 0;
 800028e:	4b06      	ldr	r3, [pc, #24]	@ (80002a8 <set_pwm_duty_cycle+0x90>)
 8000290:	2200      	movs	r2, #0
 8000292:	805a      	strh	r2, [r3, #2]
}
 8000294:	bf00      	nop
 8000296:	3708      	adds	r7, #8
 8000298:	46bd      	mov	sp, r7
 800029a:	bd80      	pop	{r7, pc}
 800029c:	20000643 	.word	0x20000643
 80002a0:	20000644 	.word	0x20000644
 80002a4:	51eb851f 	.word	0x51eb851f
 80002a8:	20000648 	.word	0x20000648

080002ac <Config_Setup>:
#include "functions.h"
#include "commands.h"
#include "config.h"

void Config_Setup(void)
{
 80002ac:	b580      	push	{r7, lr}
 80002ae:	af00      	add	r7, sp, #0

		Config_1();

#elif ID == 2

		Config_2();
 80002b0:	f000 f802 	bl	80002b8 <Config_2>
#else //catch everything that is not a proper ID, give it settings that the debug board would get

		Config_3();

#endif
}
 80002b4:	bf00      	nop
 80002b6:	bd80      	pop	{r7, pc}

080002b8 <Config_2>:

	switch_output();

}

void Config_2(void){
 80002b8:	b580      	push	{r7, lr}
 80002ba:	f5ad 7d30 	sub.w	sp, sp, #704	@ 0x2c0
 80002be:	af00      	add	r7, sp, #0

	CAN_ID = 22;
 80002c0:	4be7      	ldr	r3, [pc, #924]	@ (8000660 <Config_2+0x3a8>)
 80002c2:	2216      	movs	r2, #22
 80002c4:	701a      	strb	r2, [r3, #0]
	CAN_interval = 1000; //in ms
 80002c6:	4be7      	ldr	r3, [pc, #924]	@ (8000664 <Config_2+0x3ac>)
 80002c8:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80002cc:	801a      	strh	r2, [r3, #0]

	//definition of Outputs
	Outputs OUT0_1 = {TSAL, 2050, 1900, 0, GPIOB, IN0_Pin, OUT0_1_pin};
 80002ce:	f507 731a 	add.w	r3, r7, #616	@ 0x268
 80002d2:	2258      	movs	r2, #88	@ 0x58
 80002d4:	2100      	movs	r1, #0
 80002d6:	4618      	mov	r0, r3
 80002d8:	f006 fede 	bl	8007098 <memset>
 80002dc:	2306      	movs	r3, #6
 80002de:	f8a7 3268 	strh.w	r3, [r7, #616]	@ 0x268
 80002e2:	f640 0302 	movw	r3, #2050	@ 0x802
 80002e6:	f8a7 326a 	strh.w	r3, [r7, #618]	@ 0x26a
 80002ea:	f240 736c 	movw	r3, #1900	@ 0x76c
 80002ee:	f8a7 326c 	strh.w	r3, [r7, #620]	@ 0x26c
 80002f2:	4bdd      	ldr	r3, [pc, #884]	@ (8000668 <Config_2+0x3b0>)
 80002f4:	f8c7 3270 	str.w	r3, [r7, #624]	@ 0x270
 80002f8:	2308      	movs	r3, #8
 80002fa:	f8a7 3274 	strh.w	r3, [r7, #628]	@ 0x274
	Outputs OUT1_1 = {TSAL_RED, 2050, 1900, 0, GPIOA, IN1_Pin, OUT1_1_pin};
 80002fe:	f507 7304 	add.w	r3, r7, #528	@ 0x210
 8000302:	2258      	movs	r2, #88	@ 0x58
 8000304:	2100      	movs	r1, #0
 8000306:	4618      	mov	r0, r3
 8000308:	f006 fec6 	bl	8007098 <memset>
 800030c:	2307      	movs	r3, #7
 800030e:	f8a7 3210 	strh.w	r3, [r7, #528]	@ 0x210
 8000312:	f640 0302 	movw	r3, #2050	@ 0x802
 8000316:	f8a7 3212 	strh.w	r3, [r7, #530]	@ 0x212
 800031a:	f240 736c 	movw	r3, #1900	@ 0x76c
 800031e:	f8a7 3214 	strh.w	r3, [r7, #532]	@ 0x214
 8000322:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000326:	f8c7 3218 	str.w	r3, [r7, #536]	@ 0x218
 800032a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800032e:	f8a7 321c 	strh.w	r3, [r7, #540]	@ 0x21c
 8000332:	2301      	movs	r3, #1
 8000334:	f887 321e 	strb.w	r3, [r7, #542]	@ 0x21e
	Outputs OUT2_1 = {TSAL_GREEN, 2050, 1900, 0, GPIOA, IN2_Pin, OUT2_1_pin};
 8000338:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800033c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000340:	4618      	mov	r0, r3
 8000342:	2358      	movs	r3, #88	@ 0x58
 8000344:	461a      	mov	r2, r3
 8000346:	2100      	movs	r1, #0
 8000348:	f006 fea6 	bl	8007098 <memset>
 800034c:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000350:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000354:	2208      	movs	r2, #8
 8000356:	801a      	strh	r2, [r3, #0]
 8000358:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800035c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000360:	f640 0202 	movw	r2, #2050	@ 0x802
 8000364:	805a      	strh	r2, [r3, #2]
 8000366:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800036a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800036e:	f240 726c 	movw	r2, #1900	@ 0x76c
 8000372:	809a      	strh	r2, [r3, #4]
 8000374:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000378:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800037c:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 8000380:	609a      	str	r2, [r3, #8]
 8000382:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000386:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800038a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800038e:	819a      	strh	r2, [r3, #12]
 8000390:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000394:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000398:	2202      	movs	r2, #2
 800039a:	739a      	strb	r2, [r3, #14]
	Outputs OUT3_1 = {BRAKE_LIGHT, 2050, 1900, 0, GPIOA, IN3_Pin, OUT3_1_pin};
 800039c:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003a0:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003a4:	4618      	mov	r0, r3
 80003a6:	2358      	movs	r3, #88	@ 0x58
 80003a8:	461a      	mov	r2, r3
 80003aa:	2100      	movs	r1, #0
 80003ac:	f006 fe74 	bl	8007098 <memset>
 80003b0:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003b4:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003b8:	2201      	movs	r2, #1
 80003ba:	801a      	strh	r2, [r3, #0]
 80003bc:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003c0:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003c4:	f640 0202 	movw	r2, #2050	@ 0x802
 80003c8:	805a      	strh	r2, [r3, #2]
 80003ca:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003ce:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003d2:	f240 726c 	movw	r2, #1900	@ 0x76c
 80003d6:	809a      	strh	r2, [r3, #4]
 80003d8:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003dc:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003e0:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80003e4:	609a      	str	r2, [r3, #8]
 80003e6:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003ea:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003ee:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80003f2:	819a      	strh	r2, [r3, #12]
 80003f4:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80003f8:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80003fc:	2203      	movs	r2, #3
 80003fe:	739a      	strb	r2, [r3, #14]
	Outputs OUT0_2 = {BUZZER, 2050, 1900, 0, GPIOA, IN0_2_Pin, OUT0_2_pin};
 8000400:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000404:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000408:	4618      	mov	r0, r3
 800040a:	2358      	movs	r3, #88	@ 0x58
 800040c:	461a      	mov	r2, r3
 800040e:	2100      	movs	r1, #0
 8000410:	f006 fe42 	bl	8007098 <memset>
 8000414:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000418:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 800041c:	2205      	movs	r2, #5
 800041e:	801a      	strh	r2, [r3, #0]
 8000420:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000424:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000428:	f640 0202 	movw	r2, #2050	@ 0x802
 800042c:	805a      	strh	r2, [r3, #2]
 800042e:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000432:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000436:	f240 726c 	movw	r2, #1900	@ 0x76c
 800043a:	809a      	strh	r2, [r3, #4]
 800043c:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000440:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000444:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 8000448:	609a      	str	r2, [r3, #8]
 800044a:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800044e:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000452:	2210      	movs	r2, #16
 8000454:	819a      	strh	r2, [r3, #12]
 8000456:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800045a:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 800045e:	2204      	movs	r2, #4
 8000460:	739a      	strb	r2, [r3, #14]
	Outputs OUT1_2 = {IMU, 2050, 1900, 0, GPIOA, IN1_2_Pin, OUT1_2_pin};
 8000462:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000466:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 800046a:	4618      	mov	r0, r3
 800046c:	2358      	movs	r3, #88	@ 0x58
 800046e:	461a      	mov	r2, r3
 8000470:	2100      	movs	r1, #0
 8000472:	f006 fe11 	bl	8007098 <memset>
 8000476:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800047a:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 800047e:	2209      	movs	r2, #9
 8000480:	801a      	strh	r2, [r3, #0]
 8000482:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000486:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 800048a:	f640 0202 	movw	r2, #2050	@ 0x802
 800048e:	805a      	strh	r2, [r3, #2]
 8000490:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000494:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 8000498:	f240 726c 	movw	r2, #1900	@ 0x76c
 800049c:	809a      	strh	r2, [r3, #4]
 800049e:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004a2:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 80004a6:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80004aa:	609a      	str	r2, [r3, #8]
 80004ac:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004b0:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 80004b4:	2202      	movs	r2, #2
 80004b6:	819a      	strh	r2, [r3, #12]
 80004b8:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004bc:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 80004c0:	2205      	movs	r2, #5
 80004c2:	739a      	strb	r2, [r3, #14]
	Outputs OUT2_2 = {PUMP, 2050, 1900, 0, GPIOB, IN2_2_Pin, OUT2_2_pin};
 80004c4:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004c8:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 80004cc:	4618      	mov	r0, r3
 80004ce:	2358      	movs	r3, #88	@ 0x58
 80004d0:	461a      	mov	r2, r3
 80004d2:	2100      	movs	r1, #0
 80004d4:	f006 fde0 	bl	8007098 <memset>
 80004d8:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004dc:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 80004e0:	2204      	movs	r2, #4
 80004e2:	801a      	strh	r2, [r3, #0]
 80004e4:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004e8:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 80004ec:	f640 0202 	movw	r2, #2050	@ 0x802
 80004f0:	805a      	strh	r2, [r3, #2]
 80004f2:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80004f6:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 80004fa:	f240 726c 	movw	r2, #1900	@ 0x76c
 80004fe:	809a      	strh	r2, [r3, #4]
 8000500:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000504:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 8000508:	4a57      	ldr	r2, [pc, #348]	@ (8000668 <Config_2+0x3b0>)
 800050a:	609a      	str	r2, [r3, #8]
 800050c:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000510:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 8000514:	2280      	movs	r2, #128	@ 0x80
 8000516:	819a      	strh	r2, [r3, #12]
 8000518:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800051c:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 8000520:	2206      	movs	r2, #6
 8000522:	739a      	strb	r2, [r3, #14]
	Outputs OUT3_2 = {NC, 2050, 1900, 0, GPIOB, IN3_2_Pin, OUT3_2_pin};
 8000524:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000528:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 800052c:	4618      	mov	r0, r3
 800052e:	2358      	movs	r3, #88	@ 0x58
 8000530:	461a      	mov	r2, r3
 8000532:	2100      	movs	r1, #0
 8000534:	f006 fdb0 	bl	8007098 <memset>
 8000538:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800053c:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 8000540:	f640 0202 	movw	r2, #2050	@ 0x802
 8000544:	805a      	strh	r2, [r3, #2]
 8000546:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800054a:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 800054e:	f240 726c 	movw	r2, #1900	@ 0x76c
 8000552:	809a      	strh	r2, [r3, #4]
 8000554:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000558:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 800055c:	4a42      	ldr	r2, [pc, #264]	@ (8000668 <Config_2+0x3b0>)
 800055e:	609a      	str	r2, [r3, #8]
 8000560:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000564:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 8000568:	2210      	movs	r2, #16
 800056a:	819a      	strh	r2, [r3, #12]
 800056c:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000570:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 8000574:	2207      	movs	r2, #7
 8000576:	739a      	strb	r2, [r3, #14]

	outputs[OUT0_1.pin] = OUT0_1;
 8000578:	f897 3276 	ldrb.w	r3, [r7, #630]	@ 0x276
 800057c:	4619      	mov	r1, r3
 800057e:	4a3b      	ldr	r2, [pc, #236]	@ (800066c <Config_2+0x3b4>)
 8000580:	2358      	movs	r3, #88	@ 0x58
 8000582:	fb01 f303 	mul.w	r3, r1, r3
 8000586:	4413      	add	r3, r2
 8000588:	4618      	mov	r0, r3
 800058a:	f507 731a 	add.w	r3, r7, #616	@ 0x268
 800058e:	2258      	movs	r2, #88	@ 0x58
 8000590:	4619      	mov	r1, r3
 8000592:	f006 fdad 	bl	80070f0 <memcpy>
	outputs[OUT1_1.pin] = OUT1_1;
 8000596:	f897 321e 	ldrb.w	r3, [r7, #542]	@ 0x21e
 800059a:	4619      	mov	r1, r3
 800059c:	4a33      	ldr	r2, [pc, #204]	@ (800066c <Config_2+0x3b4>)
 800059e:	2358      	movs	r3, #88	@ 0x58
 80005a0:	fb01 f303 	mul.w	r3, r1, r3
 80005a4:	4413      	add	r3, r2
 80005a6:	4618      	mov	r0, r3
 80005a8:	f507 7304 	add.w	r3, r7, #528	@ 0x210
 80005ac:	2258      	movs	r2, #88	@ 0x58
 80005ae:	4619      	mov	r1, r3
 80005b0:	f006 fd9e 	bl	80070f0 <memcpy>
	outputs[OUT2_1.pin] = OUT2_1;
 80005b4:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80005b8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80005bc:	7b9b      	ldrb	r3, [r3, #14]
 80005be:	4619      	mov	r1, r3
 80005c0:	4a2a      	ldr	r2, [pc, #168]	@ (800066c <Config_2+0x3b4>)
 80005c2:	2358      	movs	r3, #88	@ 0x58
 80005c4:	fb01 f303 	mul.w	r3, r1, r3
 80005c8:	441a      	add	r2, r3
 80005ca:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80005ce:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80005d2:	4610      	mov	r0, r2
 80005d4:	4619      	mov	r1, r3
 80005d6:	2358      	movs	r3, #88	@ 0x58
 80005d8:	461a      	mov	r2, r3
 80005da:	f006 fd89 	bl	80070f0 <memcpy>
	outputs[OUT3_1.pin] = OUT3_1;
 80005de:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80005e2:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80005e6:	7b9b      	ldrb	r3, [r3, #14]
 80005e8:	4619      	mov	r1, r3
 80005ea:	4a20      	ldr	r2, [pc, #128]	@ (800066c <Config_2+0x3b4>)
 80005ec:	2358      	movs	r3, #88	@ 0x58
 80005ee:	fb01 f303 	mul.w	r3, r1, r3
 80005f2:	441a      	add	r2, r3
 80005f4:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80005f8:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 80005fc:	4610      	mov	r0, r2
 80005fe:	4619      	mov	r1, r3
 8000600:	2358      	movs	r3, #88	@ 0x58
 8000602:	461a      	mov	r2, r3
 8000604:	f006 fd74 	bl	80070f0 <memcpy>
	outputs[OUT0_2.pin] = OUT0_2;
 8000608:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800060c:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000610:	7b9b      	ldrb	r3, [r3, #14]
 8000612:	4619      	mov	r1, r3
 8000614:	4a15      	ldr	r2, [pc, #84]	@ (800066c <Config_2+0x3b4>)
 8000616:	2358      	movs	r3, #88	@ 0x58
 8000618:	fb01 f303 	mul.w	r3, r1, r3
 800061c:	441a      	add	r2, r3
 800061e:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000622:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8000626:	4610      	mov	r0, r2
 8000628:	4619      	mov	r1, r3
 800062a:	2358      	movs	r3, #88	@ 0x58
 800062c:	461a      	mov	r2, r3
 800062e:	f006 fd5f 	bl	80070f0 <memcpy>
	outputs[OUT1_2.pin] = OUT1_2;
 8000632:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000636:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 800063a:	7b9b      	ldrb	r3, [r3, #14]
 800063c:	4619      	mov	r1, r3
 800063e:	4a0b      	ldr	r2, [pc, #44]	@ (800066c <Config_2+0x3b4>)
 8000640:	2358      	movs	r3, #88	@ 0x58
 8000642:	fb01 f303 	mul.w	r3, r1, r3
 8000646:	441a      	add	r2, r3
 8000648:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800064c:	f5a3 7304 	sub.w	r3, r3, #528	@ 0x210
 8000650:	4610      	mov	r0, r2
 8000652:	4619      	mov	r1, r3
 8000654:	2358      	movs	r3, #88	@ 0x58
 8000656:	461a      	mov	r2, r3
 8000658:	f006 fd4a 	bl	80070f0 <memcpy>
 800065c:	e008      	b.n	8000670 <Config_2+0x3b8>
 800065e:	bf00      	nop
 8000660:	2000064c 	.word	0x2000064c
 8000664:	2000064e 	.word	0x2000064e
 8000668:	48000400 	.word	0x48000400
 800066c:	20000380 	.word	0x20000380
	outputs[OUT2_2.pin] = OUT2_2;
 8000670:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 8000674:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 8000678:	7b9b      	ldrb	r3, [r3, #14]
 800067a:	4619      	mov	r1, r3
 800067c:	4a1b      	ldr	r2, [pc, #108]	@ (80006ec <Config_2+0x434>)
 800067e:	2358      	movs	r3, #88	@ 0x58
 8000680:	fb01 f303 	mul.w	r3, r1, r3
 8000684:	441a      	add	r2, r3
 8000686:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800068a:	f5a3 731a 	sub.w	r3, r3, #616	@ 0x268
 800068e:	4610      	mov	r0, r2
 8000690:	4619      	mov	r1, r3
 8000692:	2358      	movs	r3, #88	@ 0x58
 8000694:	461a      	mov	r2, r3
 8000696:	f006 fd2b 	bl	80070f0 <memcpy>
	outputs[OUT3_2.pin] = OUT3_2;
 800069a:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 800069e:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 80006a2:	7b9b      	ldrb	r3, [r3, #14]
 80006a4:	4619      	mov	r1, r3
 80006a6:	4a11      	ldr	r2, [pc, #68]	@ (80006ec <Config_2+0x434>)
 80006a8:	2358      	movs	r3, #88	@ 0x58
 80006aa:	fb01 f303 	mul.w	r3, r1, r3
 80006ae:	441a      	add	r2, r3
 80006b0:	f507 7330 	add.w	r3, r7, #704	@ 0x2c0
 80006b4:	f5a3 7330 	sub.w	r3, r3, #704	@ 0x2c0
 80006b8:	4610      	mov	r0, r2
 80006ba:	4619      	mov	r1, r3
 80006bc:	2358      	movs	r3, #88	@ 0x58
 80006be:	461a      	mov	r2, r3
 80006c0:	f006 fd16 	bl	80070f0 <memcpy>

	Default_Switch_State = 0b01100011; //each bit represent one output [8,7,6,5,4,3,2,1]
 80006c4:	4b0a      	ldr	r3, [pc, #40]	@ (80006f0 <Config_2+0x438>)
 80006c6:	2263      	movs	r2, #99	@ 0x63
 80006c8:	701a      	strb	r2, [r3, #0]

	PWM_out_enable = 0b11;
 80006ca:	4b0a      	ldr	r3, [pc, #40]	@ (80006f4 <Config_2+0x43c>)
 80006cc:	2203      	movs	r2, #3
 80006ce:	701a      	strb	r2, [r3, #0]

	//Duty cycle 0-100%
	PWM_width[0] = 10;
 80006d0:	4b09      	ldr	r3, [pc, #36]	@ (80006f8 <Config_2+0x440>)
 80006d2:	220a      	movs	r2, #10
 80006d4:	801a      	strh	r2, [r3, #0]
	PWM_width[1] = 10;
 80006d6:	4b08      	ldr	r3, [pc, #32]	@ (80006f8 <Config_2+0x440>)
 80006d8:	220a      	movs	r2, #10
 80006da:	805a      	strh	r2, [r3, #2]

	switch_output();
 80006dc:	f000 f87e 	bl	80007dc <switch_output>

}
 80006e0:	bf00      	nop
 80006e2:	f507 7730 	add.w	r7, r7, #704	@ 0x2c0
 80006e6:	46bd      	mov	sp, r7
 80006e8:	bd80      	pop	{r7, pc}
 80006ea:	bf00      	nop
 80006ec:	20000380 	.word	0x20000380
 80006f0:	20000642 	.word	0x20000642
 80006f4:	20000643 	.word	0x20000643
 80006f8:	20000644 	.word	0x20000644

080006fc <HAL_FDCAN_RxFifo0Callback>:
uint8_t TxData[8];
uint8_t toggle = 0;


void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo0ITs)
{
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b082      	sub	sp, #8
 8000700:	af00      	add	r7, sp, #0
 8000702:	6078      	str	r0, [r7, #4]
 8000704:	6039      	str	r1, [r7, #0]
	if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 8000706:	683b      	ldr	r3, [r7, #0]
 8000708:	f003 0301 	and.w	r3, r3, #1
 800070c:	2b00      	cmp	r3, #0
 800070e:	d022      	beq.n	8000756 <HAL_FDCAN_RxFifo0Callback+0x5a>
	{
		/* Retreive Rx messages from RX FIFO0 */
		if (HAL_FDCAN_GetRxMessage(hfdcan, FDCAN_RX_FIFO0, &RxHeader, RxMessage.Bytes) != HAL_OK)
 8000710:	4b13      	ldr	r3, [pc, #76]	@ (8000760 <HAL_FDCAN_RxFifo0Callback+0x64>)
 8000712:	4a14      	ldr	r2, [pc, #80]	@ (8000764 <HAL_FDCAN_RxFifo0Callback+0x68>)
 8000714:	2140      	movs	r1, #64	@ 0x40
 8000716:	6878      	ldr	r0, [r7, #4]
 8000718:	f003 fbce 	bl	8003eb8 <HAL_FDCAN_GetRxMessage>
 800071c:	4603      	mov	r3, r0
 800071e:	2b00      	cmp	r3, #0
 8000720:	d002      	beq.n	8000728 <HAL_FDCAN_RxFifo0Callback+0x2c>
		{
			/* Reception Error */
			Error_Handler();
 8000722:	f001 f94d 	bl	80019c0 <Error_Handler>
 8000726:	e00c      	b.n	8000742 <HAL_FDCAN_RxFifo0Callback+0x46>
		}else{
			if(RxHeader.Identifier == CAN_ID){
 8000728:	4b0e      	ldr	r3, [pc, #56]	@ (8000764 <HAL_FDCAN_RxFifo0Callback+0x68>)
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	4a0e      	ldr	r2, [pc, #56]	@ (8000768 <HAL_FDCAN_RxFifo0Callback+0x6c>)
 800072e:	7812      	ldrb	r2, [r2, #0]
 8000730:	4293      	cmp	r3, r2
 8000732:	d106      	bne.n	8000742 <HAL_FDCAN_RxFifo0Callback+0x46>
				RxMessage.DLC = RxHeader.DataLength;
 8000734:	4b0b      	ldr	r3, [pc, #44]	@ (8000764 <HAL_FDCAN_RxFifo0Callback+0x68>)
 8000736:	68db      	ldr	r3, [r3, #12]
 8000738:	b2da      	uxtb	r2, r3
 800073a:	4b0c      	ldr	r3, [pc, #48]	@ (800076c <HAL_FDCAN_RxFifo0Callback+0x70>)
 800073c:	701a      	strb	r2, [r3, #0]
				decode();
 800073e:	f000 f8cd 	bl	80008dc <decode>
			}
		}

		if (HAL_FDCAN_ActivateNotification(hfdcan, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK)
 8000742:	2200      	movs	r2, #0
 8000744:	2101      	movs	r1, #1
 8000746:	6878      	ldr	r0, [r7, #4]
 8000748:	f003 fcd0 	bl	80040ec <HAL_FDCAN_ActivateNotification>
 800074c:	4603      	mov	r3, r0
 800074e:	2b00      	cmp	r3, #0
 8000750:	d001      	beq.n	8000756 <HAL_FDCAN_RxFifo0Callback+0x5a>
		{
			/* Notification Error */
			Error_Handler();
 8000752:	f001 f935 	bl	80019c0 <Error_Handler>
		}
	}
}
 8000756:	bf00      	nop
 8000758:	3708      	adds	r7, #8
 800075a:	46bd      	mov	sp, r7
 800075c:	bd80      	pop	{r7, pc}
 800075e:	bf00      	nop
 8000760:	2000069d 	.word	0x2000069d
 8000764:	20000674 	.word	0x20000674
 8000768:	2000064c 	.word	0x2000064c
 800076c:	2000069c 	.word	0x2000069c

08000770 <CanSend>:

void CanSend(uint8_t *TxData){
 8000770:	b580      	push	{r7, lr}
 8000772:	b082      	sub	sp, #8
 8000774:	af00      	add	r7, sp, #0
 8000776:	6078      	str	r0, [r7, #4]
	while(HAL_FDCAN_GetTxFifoFreeLevel(&hfdcan1) != 0 && HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK){
 8000778:	e006      	b.n	8000788 <CanSend+0x18>
		Error_Handler();
 800077a:	f001 f921 	bl	80019c0 <Error_Handler>
		HAL_GPIO_WritePin(GPIOB,LED1_Pin,0);
 800077e:	2200      	movs	r2, #0
 8000780:	2101      	movs	r1, #1
 8000782:	480a      	ldr	r0, [pc, #40]	@ (80007ac <CanSend+0x3c>)
 8000784:	f004 f97a 	bl	8004a7c <HAL_GPIO_WritePin>
	while(HAL_FDCAN_GetTxFifoFreeLevel(&hfdcan1) != 0 && HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK){
 8000788:	4809      	ldr	r0, [pc, #36]	@ (80007b0 <CanSend+0x40>)
 800078a:	f003 fc9d 	bl	80040c8 <HAL_FDCAN_GetTxFifoFreeLevel>
 800078e:	4603      	mov	r3, r0
 8000790:	2b00      	cmp	r3, #0
 8000792:	d007      	beq.n	80007a4 <CanSend+0x34>
 8000794:	687a      	ldr	r2, [r7, #4]
 8000796:	4907      	ldr	r1, [pc, #28]	@ (80007b4 <CanSend+0x44>)
 8000798:	4805      	ldr	r0, [pc, #20]	@ (80007b0 <CanSend+0x40>)
 800079a:	f003 fb49 	bl	8003e30 <HAL_FDCAN_AddMessageToTxFifoQ>
 800079e:	4603      	mov	r3, r0
 80007a0:	2b00      	cmp	r3, #0
 80007a2:	d1ea      	bne.n	800077a <CanSend+0xa>
	}
}
 80007a4:	bf00      	nop
 80007a6:	3708      	adds	r7, #8
 80007a8:	46bd      	mov	sp, r7
 80007aa:	bd80      	pop	{r7, pc}
 80007ac:	48000400 	.word	0x48000400
 80007b0:	20000108 	.word	0x20000108
 80007b4:	20000650 	.word	0x20000650

080007b8 <switch_on_off>:
		}
		CanSend(TxData2);
	}
}

void switch_on_off(GPIO_TypeDef *port, uint16_t pin, uint8_t state){
 80007b8:	b580      	push	{r7, lr}
 80007ba:	b082      	sub	sp, #8
 80007bc:	af00      	add	r7, sp, #0
 80007be:	6078      	str	r0, [r7, #4]
 80007c0:	460b      	mov	r3, r1
 80007c2:	807b      	strh	r3, [r7, #2]
 80007c4:	4613      	mov	r3, r2
 80007c6:	707b      	strb	r3, [r7, #1]
	HAL_GPIO_WritePin(port, pin, state);
 80007c8:	787a      	ldrb	r2, [r7, #1]
 80007ca:	887b      	ldrh	r3, [r7, #2]
 80007cc:	4619      	mov	r1, r3
 80007ce:	6878      	ldr	r0, [r7, #4]
 80007d0:	f004 f954 	bl	8004a7c <HAL_GPIO_WritePin>
}
 80007d4:	bf00      	nop
 80007d6:	3708      	adds	r7, #8
 80007d8:	46bd      	mov	sp, r7
 80007da:	bd80      	pop	{r7, pc}

080007dc <switch_output>:

void switch_output(){
 80007dc:	b590      	push	{r4, r7, lr}
 80007de:	b083      	sub	sp, #12
 80007e0:	af00      	add	r7, sp, #0
	uint8_t i = 0;
 80007e2:	2300      	movs	r3, #0
 80007e4:	71fb      	strb	r3, [r7, #7]
	for(i = 0; i < 8;i++){
 80007e6:	2300      	movs	r3, #0
 80007e8:	71fb      	strb	r3, [r7, #7]
 80007ea:	e02f      	b.n	800084c <switch_output+0x70>
		outputs[i].state = check_bit(Default_Switch_State, i);
 80007ec:	4b1b      	ldr	r3, [pc, #108]	@ (800085c <switch_output+0x80>)
 80007ee:	781b      	ldrb	r3, [r3, #0]
 80007f0:	79fc      	ldrb	r4, [r7, #7]
 80007f2:	79fa      	ldrb	r2, [r7, #7]
 80007f4:	4611      	mov	r1, r2
 80007f6:	4618      	mov	r0, r3
 80007f8:	f000 fb68 	bl	8000ecc <check_bit>
 80007fc:	4603      	mov	r3, r0
 80007fe:	4619      	mov	r1, r3
 8000800:	4a17      	ldr	r2, [pc, #92]	@ (8000860 <switch_output+0x84>)
 8000802:	2358      	movs	r3, #88	@ 0x58
 8000804:	fb04 f303 	mul.w	r3, r4, r3
 8000808:	4413      	add	r3, r2
 800080a:	3354      	adds	r3, #84	@ 0x54
 800080c:	460a      	mov	r2, r1
 800080e:	701a      	strb	r2, [r3, #0]
		switch_on_off(outputs[i].port, outputs[i].physical_pin, outputs[i].state);
 8000810:	79fb      	ldrb	r3, [r7, #7]
 8000812:	4a13      	ldr	r2, [pc, #76]	@ (8000860 <switch_output+0x84>)
 8000814:	2158      	movs	r1, #88	@ 0x58
 8000816:	fb01 f303 	mul.w	r3, r1, r3
 800081a:	4413      	add	r3, r2
 800081c:	3308      	adds	r3, #8
 800081e:	6818      	ldr	r0, [r3, #0]
 8000820:	79fb      	ldrb	r3, [r7, #7]
 8000822:	4a0f      	ldr	r2, [pc, #60]	@ (8000860 <switch_output+0x84>)
 8000824:	2158      	movs	r1, #88	@ 0x58
 8000826:	fb01 f303 	mul.w	r3, r1, r3
 800082a:	4413      	add	r3, r2
 800082c:	330c      	adds	r3, #12
 800082e:	8819      	ldrh	r1, [r3, #0]
 8000830:	79fb      	ldrb	r3, [r7, #7]
 8000832:	4a0b      	ldr	r2, [pc, #44]	@ (8000860 <switch_output+0x84>)
 8000834:	2458      	movs	r4, #88	@ 0x58
 8000836:	fb04 f303 	mul.w	r3, r4, r3
 800083a:	4413      	add	r3, r2
 800083c:	3354      	adds	r3, #84	@ 0x54
 800083e:	781b      	ldrb	r3, [r3, #0]
 8000840:	461a      	mov	r2, r3
 8000842:	f7ff ffb9 	bl	80007b8 <switch_on_off>
	for(i = 0; i < 8;i++){
 8000846:	79fb      	ldrb	r3, [r7, #7]
 8000848:	3301      	adds	r3, #1
 800084a:	71fb      	strb	r3, [r7, #7]
 800084c:	79fb      	ldrb	r3, [r7, #7]
 800084e:	2b07      	cmp	r3, #7
 8000850:	d9cc      	bls.n	80007ec <switch_output+0x10>
	}
}
 8000852:	bf00      	nop
 8000854:	bf00      	nop
 8000856:	370c      	adds	r7, #12
 8000858:	46bd      	mov	sp, r7
 800085a:	bd90      	pop	{r4, r7, pc}
 800085c:	20000642 	.word	0x20000642
 8000860:	20000380 	.word	0x20000380

08000864 <Over_current>:

void Over_current(uint8_t output_pin){
 8000864:	b580      	push	{r7, lr}
 8000866:	b082      	sub	sp, #8
 8000868:	af00      	add	r7, sp, #0
 800086a:	4603      	mov	r3, r0
 800086c:	71fb      	strb	r3, [r7, #7]
	TxData[0] = 15;
 800086e:	4b06      	ldr	r3, [pc, #24]	@ (8000888 <Over_current+0x24>)
 8000870:	220f      	movs	r2, #15
 8000872:	701a      	strb	r2, [r3, #0]
	TxData[1] = output_pin;
 8000874:	4a04      	ldr	r2, [pc, #16]	@ (8000888 <Over_current+0x24>)
 8000876:	79fb      	ldrb	r3, [r7, #7]
 8000878:	7053      	strb	r3, [r2, #1]
	CanSend(TxData);
 800087a:	4803      	ldr	r0, [pc, #12]	@ (8000888 <Over_current+0x24>)
 800087c:	f7ff ff78 	bl	8000770 <CanSend>
}
 8000880:	bf00      	nop
 8000882:	3708      	adds	r7, #8
 8000884:	46bd      	mov	sp, r7
 8000886:	bd80      	pop	{r7, pc}
 8000888:	20000028 	.word	0x20000028

0800088c <Warning_current>:

void Warning_current(uint8_t output_pin){
 800088c:	b580      	push	{r7, lr}
 800088e:	b082      	sub	sp, #8
 8000890:	af00      	add	r7, sp, #0
 8000892:	4603      	mov	r3, r0
 8000894:	71fb      	strb	r3, [r7, #7]
	TxData[0] = 14;
 8000896:	4b06      	ldr	r3, [pc, #24]	@ (80008b0 <Warning_current+0x24>)
 8000898:	220e      	movs	r2, #14
 800089a:	701a      	strb	r2, [r3, #0]
	TxData[1] = output_pin;
 800089c:	4a04      	ldr	r2, [pc, #16]	@ (80008b0 <Warning_current+0x24>)
 800089e:	79fb      	ldrb	r3, [r7, #7]
 80008a0:	7053      	strb	r3, [r2, #1]
	CanSend(TxData);
 80008a2:	4803      	ldr	r0, [pc, #12]	@ (80008b0 <Warning_current+0x24>)
 80008a4:	f7ff ff64 	bl	8000770 <CanSend>
}
 80008a8:	bf00      	nop
 80008aa:	3708      	adds	r7, #8
 80008ac:	46bd      	mov	sp, r7
 80008ae:	bd80      	pop	{r7, pc}
 80008b0:	20000028 	.word	0x20000028

080008b4 <Under_current>:

void Under_current(uint8_t output_pin){
 80008b4:	b580      	push	{r7, lr}
 80008b6:	b082      	sub	sp, #8
 80008b8:	af00      	add	r7, sp, #0
 80008ba:	4603      	mov	r3, r0
 80008bc:	71fb      	strb	r3, [r7, #7]
	TxData[0] = 13;
 80008be:	4b06      	ldr	r3, [pc, #24]	@ (80008d8 <Under_current+0x24>)
 80008c0:	220d      	movs	r2, #13
 80008c2:	701a      	strb	r2, [r3, #0]
	TxData[1] = output_pin;
 80008c4:	4a04      	ldr	r2, [pc, #16]	@ (80008d8 <Under_current+0x24>)
 80008c6:	79fb      	ldrb	r3, [r7, #7]
 80008c8:	7053      	strb	r3, [r2, #1]
	CanSend(TxData);
 80008ca:	4803      	ldr	r0, [pc, #12]	@ (80008d8 <Under_current+0x24>)
 80008cc:	f7ff ff50 	bl	8000770 <CanSend>
}
 80008d0:	bf00      	nop
 80008d2:	3708      	adds	r7, #8
 80008d4:	46bd      	mov	sp, r7
 80008d6:	bd80      	pop	{r7, pc}
 80008d8:	20000028 	.word	0x20000028

080008dc <decode>:

void decode(){
 80008dc:	b580      	push	{r7, lr}
 80008de:	b086      	sub	sp, #24
 80008e0:	af00      	add	r7, sp, #0
	switch(RxMessage.Bytes[0]){
 80008e2:	4ba2      	ldr	r3, [pc, #648]	@ (8000b6c <decode+0x290>)
 80008e4:	785b      	ldrb	r3, [r3, #1]
 80008e6:	3b01      	subs	r3, #1
 80008e8:	2b05      	cmp	r3, #5
 80008ea:	f200 8138 	bhi.w	8000b5e <decode+0x282>
 80008ee:	a201      	add	r2, pc, #4	@ (adr r2, 80008f4 <decode+0x18>)
 80008f0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80008f4:	0800090d 	.word	0x0800090d
 80008f8:	08000947 	.word	0x08000947
 80008fc:	08000967 	.word	0x08000967
 8000900:	08000979 	.word	0x08000979
 8000904:	080009bd 	.word	0x080009bd
 8000908:	08000a01 	.word	0x08000a01
	case 1:							//Set PWM RxData[1] -> which PWM, RxData[2] = 1 -> Duty Cycle || RxData[2] = 2 -> Frequency, RxData[3] -> value
		switch(RxMessage.Bytes[1]){
 800090c:	4b97      	ldr	r3, [pc, #604]	@ (8000b6c <decode+0x290>)
 800090e:	789b      	ldrb	r3, [r3, #2]
 8000910:	2b01      	cmp	r3, #1
 8000912:	d002      	beq.n	800091a <decode+0x3e>
 8000914:	2b02      	cmp	r3, #2
 8000916:	d009      	beq.n	800092c <decode+0x50>
 8000918:	e011      	b.n	800093e <decode+0x62>
		case 1:										//PUMPS
			PWM_width[0] = RxMessage.Bytes[2];
 800091a:	4b94      	ldr	r3, [pc, #592]	@ (8000b6c <decode+0x290>)
 800091c:	78db      	ldrb	r3, [r3, #3]
 800091e:	461a      	mov	r2, r3
 8000920:	4b93      	ldr	r3, [pc, #588]	@ (8000b70 <decode+0x294>)
 8000922:	801a      	strh	r2, [r3, #0]
			set_pwm_duty_cycle(&htim1);
 8000924:	4893      	ldr	r0, [pc, #588]	@ (8000b74 <decode+0x298>)
 8000926:	f7ff fc77 	bl	8000218 <set_pwm_duty_cycle>
			break;
 800092a:	e00b      	b.n	8000944 <decode+0x68>
		case 2:										//FANS
			PWM_width[1] = RxMessage.Bytes[2];
 800092c:	4b8f      	ldr	r3, [pc, #572]	@ (8000b6c <decode+0x290>)
 800092e:	78db      	ldrb	r3, [r3, #3]
 8000930:	461a      	mov	r2, r3
 8000932:	4b8f      	ldr	r3, [pc, #572]	@ (8000b70 <decode+0x294>)
 8000934:	805a      	strh	r2, [r3, #2]
			set_pwm_duty_cycle(&htim2);
 8000936:	4890      	ldr	r0, [pc, #576]	@ (8000b78 <decode+0x29c>)
 8000938:	f7ff fc6e 	bl	8000218 <set_pwm_duty_cycle>
			break;
 800093c:	e002      	b.n	8000944 <decode+0x68>
		default:
			Error_Handler();
 800093e:	f001 f83f 	bl	80019c0 <Error_Handler>
			break;
 8000942:	bf00      	nop
		}
		break;
 8000944:	e10e      	b.n	8000b64 <decode+0x288>
	case 2:							//Switch output on/off
		Default_Switch_State = set_bit(Default_Switch_State,RxMessage.Bytes[1],RxMessage.Bytes[2]); //if RxData[2] is 0 -> OFF, if RxData[2] is 1 -> ON
 8000946:	4b8d      	ldr	r3, [pc, #564]	@ (8000b7c <decode+0x2a0>)
 8000948:	781b      	ldrb	r3, [r3, #0]
 800094a:	4a88      	ldr	r2, [pc, #544]	@ (8000b6c <decode+0x290>)
 800094c:	7891      	ldrb	r1, [r2, #2]
 800094e:	4a87      	ldr	r2, [pc, #540]	@ (8000b6c <decode+0x290>)
 8000950:	78d2      	ldrb	r2, [r2, #3]
 8000952:	4618      	mov	r0, r3
 8000954:	f000 fad6 	bl	8000f04 <set_bit>
 8000958:	4603      	mov	r3, r0
 800095a:	461a      	mov	r2, r3
 800095c:	4b87      	ldr	r3, [pc, #540]	@ (8000b7c <decode+0x2a0>)
 800095e:	701a      	strb	r2, [r3, #0]
		switch_output();
 8000960:	f7ff ff3c 	bl	80007dc <switch_output>
		break;
 8000964:	e0fe      	b.n	8000b64 <decode+0x288>
	case 3:							// turning analog node on and off, RxData[1] -> 0 is off 1 is on
		HAL_GPIO_WritePin(GPIOA,LED2_Pin,RxMessage.Bytes[1]);
 8000966:	4b81      	ldr	r3, [pc, #516]	@ (8000b6c <decode+0x290>)
 8000968:	789b      	ldrb	r3, [r3, #2]
 800096a:	461a      	mov	r2, r3
 800096c:	2180      	movs	r1, #128	@ 0x80
 800096e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000972:	f004 f883 	bl	8004a7c <HAL_GPIO_WritePin>
		break;
 8000976:	e0f5      	b.n	8000b64 <decode+0x288>
	case 4:							//switch BRAKE_LIGHT	RxData[1] --> 0 for off and 1 for on
		for(int i = 0; i < 8; i++){
 8000978:	2300      	movs	r3, #0
 800097a:	617b      	str	r3, [r7, #20]
 800097c:	e01a      	b.n	80009b4 <decode+0xd8>
			if(outputs[i].device == BRAKE_LIGHT){
 800097e:	4a80      	ldr	r2, [pc, #512]	@ (8000b80 <decode+0x2a4>)
 8000980:	697b      	ldr	r3, [r7, #20]
 8000982:	2158      	movs	r1, #88	@ 0x58
 8000984:	fb01 f303 	mul.w	r3, r1, r3
 8000988:	4413      	add	r3, r2
 800098a:	881b      	ldrh	r3, [r3, #0]
 800098c:	2b01      	cmp	r3, #1
 800098e:	d10e      	bne.n	80009ae <decode+0xd2>
				Default_Switch_State = set_bit(Default_Switch_State,i,RxMessage.Bytes[1]);
 8000990:	4b7a      	ldr	r3, [pc, #488]	@ (8000b7c <decode+0x2a0>)
 8000992:	781b      	ldrb	r3, [r3, #0]
 8000994:	697a      	ldr	r2, [r7, #20]
 8000996:	b2d1      	uxtb	r1, r2
 8000998:	4a74      	ldr	r2, [pc, #464]	@ (8000b6c <decode+0x290>)
 800099a:	7892      	ldrb	r2, [r2, #2]
 800099c:	4618      	mov	r0, r3
 800099e:	f000 fab1 	bl	8000f04 <set_bit>
 80009a2:	4603      	mov	r3, r0
 80009a4:	461a      	mov	r2, r3
 80009a6:	4b75      	ldr	r3, [pc, #468]	@ (8000b7c <decode+0x2a0>)
 80009a8:	701a      	strb	r2, [r3, #0]
				switch_output();
 80009aa:	f7ff ff17 	bl	80007dc <switch_output>
		for(int i = 0; i < 8; i++){
 80009ae:	697b      	ldr	r3, [r7, #20]
 80009b0:	3301      	adds	r3, #1
 80009b2:	617b      	str	r3, [r7, #20]
 80009b4:	697b      	ldr	r3, [r7, #20]
 80009b6:	2b07      	cmp	r3, #7
 80009b8:	dde1      	ble.n	800097e <decode+0xa2>
			}
		}
		break;
 80009ba:	e0d3      	b.n	8000b64 <decode+0x288>
	case 5:							//switch BUZZER on off
		for(int i = 0; i < 8; i++){
 80009bc:	2300      	movs	r3, #0
 80009be:	613b      	str	r3, [r7, #16]
 80009c0:	e01a      	b.n	80009f8 <decode+0x11c>
			if(outputs[i].device == BUZZER){
 80009c2:	4a6f      	ldr	r2, [pc, #444]	@ (8000b80 <decode+0x2a4>)
 80009c4:	693b      	ldr	r3, [r7, #16]
 80009c6:	2158      	movs	r1, #88	@ 0x58
 80009c8:	fb01 f303 	mul.w	r3, r1, r3
 80009cc:	4413      	add	r3, r2
 80009ce:	881b      	ldrh	r3, [r3, #0]
 80009d0:	2b05      	cmp	r3, #5
 80009d2:	d10e      	bne.n	80009f2 <decode+0x116>
				Default_Switch_State = set_bit(Default_Switch_State,i,RxMessage.Bytes[1]);
 80009d4:	4b69      	ldr	r3, [pc, #420]	@ (8000b7c <decode+0x2a0>)
 80009d6:	781b      	ldrb	r3, [r3, #0]
 80009d8:	693a      	ldr	r2, [r7, #16]
 80009da:	b2d1      	uxtb	r1, r2
 80009dc:	4a63      	ldr	r2, [pc, #396]	@ (8000b6c <decode+0x290>)
 80009de:	7892      	ldrb	r2, [r2, #2]
 80009e0:	4618      	mov	r0, r3
 80009e2:	f000 fa8f 	bl	8000f04 <set_bit>
 80009e6:	4603      	mov	r3, r0
 80009e8:	461a      	mov	r2, r3
 80009ea:	4b64      	ldr	r3, [pc, #400]	@ (8000b7c <decode+0x2a0>)
 80009ec:	701a      	strb	r2, [r3, #0]
				switch_output();
 80009ee:	f7ff fef5 	bl	80007dc <switch_output>
		for(int i = 0; i < 8; i++){
 80009f2:	693b      	ldr	r3, [r7, #16]
 80009f4:	3301      	adds	r3, #1
 80009f6:	613b      	str	r3, [r7, #16]
 80009f8:	693b      	ldr	r3, [r7, #16]
 80009fa:	2b07      	cmp	r3, #7
 80009fc:	dde1      	ble.n	80009c2 <decode+0xe6>
			}
		}
		break;
 80009fe:	e0b1      	b.n	8000b64 <decode+0x288>
	case 6:	//TSAL
		switch(RxMessage.Bytes[0]){
 8000a00:	4b5a      	ldr	r3, [pc, #360]	@ (8000b6c <decode+0x290>)
 8000a02:	785b      	ldrb	r3, [r3, #1]
 8000a04:	2b00      	cmp	r3, #0
 8000a06:	d002      	beq.n	8000a0e <decode+0x132>
 8000a08:	2b01      	cmp	r3, #1
 8000a0a:	d022      	beq.n	8000a52 <decode+0x176>
						}
					}
					break;
			}
		}
		break;
 8000a0c:	e0aa      	b.n	8000b64 <decode+0x288>
			for(int i = 0; i < 8; i++){
 8000a0e:	2300      	movs	r3, #0
 8000a10:	60fb      	str	r3, [r7, #12]
 8000a12:	e01a      	b.n	8000a4a <decode+0x16e>
				if(outputs[i].device == TSAL){
 8000a14:	4a5a      	ldr	r2, [pc, #360]	@ (8000b80 <decode+0x2a4>)
 8000a16:	68fb      	ldr	r3, [r7, #12]
 8000a18:	2158      	movs	r1, #88	@ 0x58
 8000a1a:	fb01 f303 	mul.w	r3, r1, r3
 8000a1e:	4413      	add	r3, r2
 8000a20:	881b      	ldrh	r3, [r3, #0]
 8000a22:	2b06      	cmp	r3, #6
 8000a24:	d10e      	bne.n	8000a44 <decode+0x168>
					Default_Switch_State = set_bit(Default_Switch_State,i,RxMessage.Bytes[1]);
 8000a26:	4b55      	ldr	r3, [pc, #340]	@ (8000b7c <decode+0x2a0>)
 8000a28:	781b      	ldrb	r3, [r3, #0]
 8000a2a:	68fa      	ldr	r2, [r7, #12]
 8000a2c:	b2d1      	uxtb	r1, r2
 8000a2e:	4a4f      	ldr	r2, [pc, #316]	@ (8000b6c <decode+0x290>)
 8000a30:	7892      	ldrb	r2, [r2, #2]
 8000a32:	4618      	mov	r0, r3
 8000a34:	f000 fa66 	bl	8000f04 <set_bit>
 8000a38:	4603      	mov	r3, r0
 8000a3a:	461a      	mov	r2, r3
 8000a3c:	4b4f      	ldr	r3, [pc, #316]	@ (8000b7c <decode+0x2a0>)
 8000a3e:	701a      	strb	r2, [r3, #0]
					switch_output();
 8000a40:	f7ff fecc 	bl	80007dc <switch_output>
			for(int i = 0; i < 8; i++){
 8000a44:	68fb      	ldr	r3, [r7, #12]
 8000a46:	3301      	adds	r3, #1
 8000a48:	60fb      	str	r3, [r7, #12]
 8000a4a:	68fb      	ldr	r3, [r7, #12]
 8000a4c:	2b07      	cmp	r3, #7
 8000a4e:	dde1      	ble.n	8000a14 <decode+0x138>
			break;
 8000a50:	e084      	b.n	8000b5c <decode+0x280>
			switch(RxMessage.Bytes[1]){
 8000a52:	4b46      	ldr	r3, [pc, #280]	@ (8000b6c <decode+0x290>)
 8000a54:	789b      	ldrb	r3, [r3, #2]
 8000a56:	2b00      	cmp	r3, #0
 8000a58:	d002      	beq.n	8000a60 <decode+0x184>
 8000a5a:	2b01      	cmp	r3, #1
 8000a5c:	d03f      	beq.n	8000ade <decode+0x202>
		break;
 8000a5e:	e081      	b.n	8000b64 <decode+0x288>
					for(int i = 0; i < 8; i++){
 8000a60:	2300      	movs	r3, #0
 8000a62:	60bb      	str	r3, [r7, #8]
 8000a64:	e037      	b.n	8000ad6 <decode+0x1fa>
						if(outputs[i].device == TSAL_RED){
 8000a66:	4a46      	ldr	r2, [pc, #280]	@ (8000b80 <decode+0x2a4>)
 8000a68:	68bb      	ldr	r3, [r7, #8]
 8000a6a:	2158      	movs	r1, #88	@ 0x58
 8000a6c:	fb01 f303 	mul.w	r3, r1, r3
 8000a70:	4413      	add	r3, r2
 8000a72:	881b      	ldrh	r3, [r3, #0]
 8000a74:	2b07      	cmp	r3, #7
 8000a76:	d10e      	bne.n	8000a96 <decode+0x1ba>
							Default_Switch_State = set_bit(Default_Switch_State,i,RxMessage.Bytes[2]);
 8000a78:	4b40      	ldr	r3, [pc, #256]	@ (8000b7c <decode+0x2a0>)
 8000a7a:	781b      	ldrb	r3, [r3, #0]
 8000a7c:	68ba      	ldr	r2, [r7, #8]
 8000a7e:	b2d1      	uxtb	r1, r2
 8000a80:	4a3a      	ldr	r2, [pc, #232]	@ (8000b6c <decode+0x290>)
 8000a82:	78d2      	ldrb	r2, [r2, #3]
 8000a84:	4618      	mov	r0, r3
 8000a86:	f000 fa3d 	bl	8000f04 <set_bit>
 8000a8a:	4603      	mov	r3, r0
 8000a8c:	461a      	mov	r2, r3
 8000a8e:	4b3b      	ldr	r3, [pc, #236]	@ (8000b7c <decode+0x2a0>)
 8000a90:	701a      	strb	r2, [r3, #0]
							switch_output();
 8000a92:	f7ff fea3 	bl	80007dc <switch_output>
						if(outputs[i].device == TSAL_GREEN){
 8000a96:	4a3a      	ldr	r2, [pc, #232]	@ (8000b80 <decode+0x2a4>)
 8000a98:	68bb      	ldr	r3, [r7, #8]
 8000a9a:	2158      	movs	r1, #88	@ 0x58
 8000a9c:	fb01 f303 	mul.w	r3, r1, r3
 8000aa0:	4413      	add	r3, r2
 8000aa2:	881b      	ldrh	r3, [r3, #0]
 8000aa4:	2b08      	cmp	r3, #8
 8000aa6:	d113      	bne.n	8000ad0 <decode+0x1f4>
							Default_Switch_State = set_bit(Default_Switch_State,i,!RxMessage.Bytes[2]);
 8000aa8:	4b34      	ldr	r3, [pc, #208]	@ (8000b7c <decode+0x2a0>)
 8000aaa:	7818      	ldrb	r0, [r3, #0]
 8000aac:	68bb      	ldr	r3, [r7, #8]
 8000aae:	b2d9      	uxtb	r1, r3
 8000ab0:	4b2e      	ldr	r3, [pc, #184]	@ (8000b6c <decode+0x290>)
 8000ab2:	78db      	ldrb	r3, [r3, #3]
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	bf0c      	ite	eq
 8000ab8:	2301      	moveq	r3, #1
 8000aba:	2300      	movne	r3, #0
 8000abc:	b2db      	uxtb	r3, r3
 8000abe:	461a      	mov	r2, r3
 8000ac0:	f000 fa20 	bl	8000f04 <set_bit>
 8000ac4:	4603      	mov	r3, r0
 8000ac6:	461a      	mov	r2, r3
 8000ac8:	4b2c      	ldr	r3, [pc, #176]	@ (8000b7c <decode+0x2a0>)
 8000aca:	701a      	strb	r2, [r3, #0]
							switch_output();
 8000acc:	f7ff fe86 	bl	80007dc <switch_output>
					for(int i = 0; i < 8; i++){
 8000ad0:	68bb      	ldr	r3, [r7, #8]
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	60bb      	str	r3, [r7, #8]
 8000ad6:	68bb      	ldr	r3, [r7, #8]
 8000ad8:	2b07      	cmp	r3, #7
 8000ada:	ddc4      	ble.n	8000a66 <decode+0x18a>
					break;
 8000adc:	e03e      	b.n	8000b5c <decode+0x280>
					for(int i = 0; i < 8; i++){
 8000ade:	2300      	movs	r3, #0
 8000ae0:	607b      	str	r3, [r7, #4]
 8000ae2:	e037      	b.n	8000b54 <decode+0x278>
						if(outputs[i].device == TSAL_GREEN){
 8000ae4:	4a26      	ldr	r2, [pc, #152]	@ (8000b80 <decode+0x2a4>)
 8000ae6:	687b      	ldr	r3, [r7, #4]
 8000ae8:	2158      	movs	r1, #88	@ 0x58
 8000aea:	fb01 f303 	mul.w	r3, r1, r3
 8000aee:	4413      	add	r3, r2
 8000af0:	881b      	ldrh	r3, [r3, #0]
 8000af2:	2b08      	cmp	r3, #8
 8000af4:	d10e      	bne.n	8000b14 <decode+0x238>
							Default_Switch_State = set_bit(Default_Switch_State,i,RxMessage.Bytes[2]);
 8000af6:	4b21      	ldr	r3, [pc, #132]	@ (8000b7c <decode+0x2a0>)
 8000af8:	781b      	ldrb	r3, [r3, #0]
 8000afa:	687a      	ldr	r2, [r7, #4]
 8000afc:	b2d1      	uxtb	r1, r2
 8000afe:	4a1b      	ldr	r2, [pc, #108]	@ (8000b6c <decode+0x290>)
 8000b00:	78d2      	ldrb	r2, [r2, #3]
 8000b02:	4618      	mov	r0, r3
 8000b04:	f000 f9fe 	bl	8000f04 <set_bit>
 8000b08:	4603      	mov	r3, r0
 8000b0a:	461a      	mov	r2, r3
 8000b0c:	4b1b      	ldr	r3, [pc, #108]	@ (8000b7c <decode+0x2a0>)
 8000b0e:	701a      	strb	r2, [r3, #0]
							switch_output();
 8000b10:	f7ff fe64 	bl	80007dc <switch_output>
						if(outputs[i].device == TSAL_RED){
 8000b14:	4a1a      	ldr	r2, [pc, #104]	@ (8000b80 <decode+0x2a4>)
 8000b16:	687b      	ldr	r3, [r7, #4]
 8000b18:	2158      	movs	r1, #88	@ 0x58
 8000b1a:	fb01 f303 	mul.w	r3, r1, r3
 8000b1e:	4413      	add	r3, r2
 8000b20:	881b      	ldrh	r3, [r3, #0]
 8000b22:	2b07      	cmp	r3, #7
 8000b24:	d113      	bne.n	8000b4e <decode+0x272>
							Default_Switch_State = set_bit(Default_Switch_State,i,!RxMessage.Bytes[2]);
 8000b26:	4b15      	ldr	r3, [pc, #84]	@ (8000b7c <decode+0x2a0>)
 8000b28:	7818      	ldrb	r0, [r3, #0]
 8000b2a:	687b      	ldr	r3, [r7, #4]
 8000b2c:	b2d9      	uxtb	r1, r3
 8000b2e:	4b0f      	ldr	r3, [pc, #60]	@ (8000b6c <decode+0x290>)
 8000b30:	78db      	ldrb	r3, [r3, #3]
 8000b32:	2b00      	cmp	r3, #0
 8000b34:	bf0c      	ite	eq
 8000b36:	2301      	moveq	r3, #1
 8000b38:	2300      	movne	r3, #0
 8000b3a:	b2db      	uxtb	r3, r3
 8000b3c:	461a      	mov	r2, r3
 8000b3e:	f000 f9e1 	bl	8000f04 <set_bit>
 8000b42:	4603      	mov	r3, r0
 8000b44:	461a      	mov	r2, r3
 8000b46:	4b0d      	ldr	r3, [pc, #52]	@ (8000b7c <decode+0x2a0>)
 8000b48:	701a      	strb	r2, [r3, #0]
							switch_output();
 8000b4a:	f7ff fe47 	bl	80007dc <switch_output>
					for(int i = 0; i < 8; i++){
 8000b4e:	687b      	ldr	r3, [r7, #4]
 8000b50:	3301      	adds	r3, #1
 8000b52:	607b      	str	r3, [r7, #4]
 8000b54:	687b      	ldr	r3, [r7, #4]
 8000b56:	2b07      	cmp	r3, #7
 8000b58:	ddc4      	ble.n	8000ae4 <decode+0x208>
					break;
 8000b5a:	bf00      	nop
		break;
 8000b5c:	e002      	b.n	8000b64 <decode+0x288>
	default:
		//decode_error(); //TODO: IMPLEMENT
		Error_Handler();
 8000b5e:	f000 ff2f 	bl	80019c0 <Error_Handler>
		break;
 8000b62:	bf00      	nop
	}
}
 8000b64:	bf00      	nop
 8000b66:	3718      	adds	r7, #24
 8000b68:	46bd      	mov	sp, r7
 8000b6a:	bd80      	pop	{r7, pc}
 8000b6c:	2000069c 	.word	0x2000069c
 8000b70:	20000644 	.word	0x20000644
 8000b74:	2000016c 	.word	0x2000016c
 8000b78:	200001b8 	.word	0x200001b8
 8000b7c:	20000642 	.word	0x20000642
 8000b80:	20000380 	.word	0x20000380

08000b84 <Current_Sense_process>:



void Current_Sense_process(){
 8000b84:	b580      	push	{r7, lr}
 8000b86:	b082      	sub	sp, #8
 8000b88:	af00      	add	r7, sp, #0
	//4031 == 3.3V since 12bit, have to pick shunt resistor according to this
	for(int i = 0; i < 8; i++){
 8000b8a:	2300      	movs	r3, #0
 8000b8c:	607b      	str	r3, [r7, #4]
 8000b8e:	e051      	b.n	8000c34 <Current_Sense_process+0xb0>
		outputs[i].raw_current = outputs[i].Current_Sense[0];
 8000b90:	4a2d      	ldr	r2, [pc, #180]	@ (8000c48 <Current_Sense_process+0xc4>)
 8000b92:	687b      	ldr	r3, [r7, #4]
 8000b94:	2158      	movs	r1, #88	@ 0x58
 8000b96:	fb01 f303 	mul.w	r3, r1, r3
 8000b9a:	4413      	add	r3, r2
 8000b9c:	3314      	adds	r3, #20
 8000b9e:	8818      	ldrh	r0, [r3, #0]
 8000ba0:	4a29      	ldr	r2, [pc, #164]	@ (8000c48 <Current_Sense_process+0xc4>)
 8000ba2:	687b      	ldr	r3, [r7, #4]
 8000ba4:	2158      	movs	r1, #88	@ 0x58
 8000ba6:	fb01 f303 	mul.w	r3, r1, r3
 8000baa:	4413      	add	r3, r2
 8000bac:	3312      	adds	r3, #18
 8000bae:	4602      	mov	r2, r0
 8000bb0:	801a      	strh	r2, [r3, #0]
		for(int z = 1; z < I_AVERAGE; z++){
 8000bb2:	2301      	movs	r3, #1
 8000bb4:	603b      	str	r3, [r7, #0]
 8000bb6:	e021      	b.n	8000bfc <Current_Sense_process+0x78>
			outputs[i].raw_current = (outputs[i].raw_current + outputs[i].Current_Sense[0])/2;
 8000bb8:	4a23      	ldr	r2, [pc, #140]	@ (8000c48 <Current_Sense_process+0xc4>)
 8000bba:	687b      	ldr	r3, [r7, #4]
 8000bbc:	2158      	movs	r1, #88	@ 0x58
 8000bbe:	fb01 f303 	mul.w	r3, r1, r3
 8000bc2:	4413      	add	r3, r2
 8000bc4:	3312      	adds	r3, #18
 8000bc6:	881b      	ldrh	r3, [r3, #0]
 8000bc8:	4618      	mov	r0, r3
 8000bca:	4a1f      	ldr	r2, [pc, #124]	@ (8000c48 <Current_Sense_process+0xc4>)
 8000bcc:	687b      	ldr	r3, [r7, #4]
 8000bce:	2158      	movs	r1, #88	@ 0x58
 8000bd0:	fb01 f303 	mul.w	r3, r1, r3
 8000bd4:	4413      	add	r3, r2
 8000bd6:	3314      	adds	r3, #20
 8000bd8:	881b      	ldrh	r3, [r3, #0]
 8000bda:	4403      	add	r3, r0
 8000bdc:	0fda      	lsrs	r2, r3, #31
 8000bde:	4413      	add	r3, r2
 8000be0:	105b      	asrs	r3, r3, #1
 8000be2:	b298      	uxth	r0, r3
 8000be4:	4a18      	ldr	r2, [pc, #96]	@ (8000c48 <Current_Sense_process+0xc4>)
 8000be6:	687b      	ldr	r3, [r7, #4]
 8000be8:	2158      	movs	r1, #88	@ 0x58
 8000bea:	fb01 f303 	mul.w	r3, r1, r3
 8000bee:	4413      	add	r3, r2
 8000bf0:	3312      	adds	r3, #18
 8000bf2:	4602      	mov	r2, r0
 8000bf4:	801a      	strh	r2, [r3, #0]
		for(int z = 1; z < I_AVERAGE; z++){
 8000bf6:	683b      	ldr	r3, [r7, #0]
 8000bf8:	3301      	adds	r3, #1
 8000bfa:	603b      	str	r3, [r7, #0]
 8000bfc:	683b      	ldr	r3, [r7, #0]
 8000bfe:	2b1f      	cmp	r3, #31
 8000c00:	ddda      	ble.n	8000bb8 <Current_Sense_process+0x34>

		}
		outputs[i].actual_current = Current_Sense_Raw_to_mA(outputs[i].raw_current);
 8000c02:	4a11      	ldr	r2, [pc, #68]	@ (8000c48 <Current_Sense_process+0xc4>)
 8000c04:	687b      	ldr	r3, [r7, #4]
 8000c06:	2158      	movs	r1, #88	@ 0x58
 8000c08:	fb01 f303 	mul.w	r3, r1, r3
 8000c0c:	4413      	add	r3, r2
 8000c0e:	3312      	adds	r3, #18
 8000c10:	881b      	ldrh	r3, [r3, #0]
 8000c12:	4618      	mov	r0, r3
 8000c14:	f000 f99c 	bl	8000f50 <Current_Sense_Raw_to_mA>
 8000c18:	4603      	mov	r3, r0
 8000c1a:	4618      	mov	r0, r3
 8000c1c:	4a0a      	ldr	r2, [pc, #40]	@ (8000c48 <Current_Sense_process+0xc4>)
 8000c1e:	687b      	ldr	r3, [r7, #4]
 8000c20:	2158      	movs	r1, #88	@ 0x58
 8000c22:	fb01 f303 	mul.w	r3, r1, r3
 8000c26:	4413      	add	r3, r2
 8000c28:	3310      	adds	r3, #16
 8000c2a:	4602      	mov	r2, r0
 8000c2c:	801a      	strh	r2, [r3, #0]
	for(int i = 0; i < 8; i++){
 8000c2e:	687b      	ldr	r3, [r7, #4]
 8000c30:	3301      	adds	r3, #1
 8000c32:	607b      	str	r3, [r7, #4]
 8000c34:	687b      	ldr	r3, [r7, #4]
 8000c36:	2b07      	cmp	r3, #7
 8000c38:	ddaa      	ble.n	8000b90 <Current_Sense_process+0xc>
	}
	check_warnings();
 8000c3a:	f000 f807 	bl	8000c4c <check_warnings>
}
 8000c3e:	bf00      	nop
 8000c40:	3708      	adds	r7, #8
 8000c42:	46bd      	mov	sp, r7
 8000c44:	bd80      	pop	{r7, pc}
 8000c46:	bf00      	nop
 8000c48:	20000380 	.word	0x20000380

08000c4c <check_warnings>:

void check_warnings(){
 8000c4c:	b580      	push	{r7, lr}
 8000c4e:	b082      	sub	sp, #8
 8000c50:	af00      	add	r7, sp, #0
	for(uint8_t x = 0; x < 7; x++){
 8000c52:	2300      	movs	r3, #0
 8000c54:	71fb      	strb	r3, [r7, #7]
 8000c56:	e060      	b.n	8000d1a <check_warnings+0xce>
		if(outputs[x].device != NC){
 8000c58:	79fb      	ldrb	r3, [r7, #7]
 8000c5a:	4a34      	ldr	r2, [pc, #208]	@ (8000d2c <check_warnings+0xe0>)
 8000c5c:	2158      	movs	r1, #88	@ 0x58
 8000c5e:	fb01 f303 	mul.w	r3, r1, r3
 8000c62:	4413      	add	r3, r2
 8000c64:	881b      	ldrh	r3, [r3, #0]
 8000c66:	2b00      	cmp	r3, #0
 8000c68:	d03e      	beq.n	8000ce8 <check_warnings+0x9c>
			if(outputs[x].actual_current >= outputs[x].Warning_Current){
 8000c6a:	79fb      	ldrb	r3, [r7, #7]
 8000c6c:	4a2f      	ldr	r2, [pc, #188]	@ (8000d2c <check_warnings+0xe0>)
 8000c6e:	2158      	movs	r1, #88	@ 0x58
 8000c70:	fb01 f303 	mul.w	r3, r1, r3
 8000c74:	4413      	add	r3, r2
 8000c76:	3310      	adds	r3, #16
 8000c78:	881a      	ldrh	r2, [r3, #0]
 8000c7a:	79fb      	ldrb	r3, [r7, #7]
 8000c7c:	492b      	ldr	r1, [pc, #172]	@ (8000d2c <check_warnings+0xe0>)
 8000c7e:	2058      	movs	r0, #88	@ 0x58
 8000c80:	fb00 f303 	mul.w	r3, r0, r3
 8000c84:	440b      	add	r3, r1
 8000c86:	3304      	adds	r3, #4
 8000c88:	881b      	ldrh	r3, [r3, #0]
 8000c8a:	429a      	cmp	r2, r3
 8000c8c:	d32c      	bcc.n	8000ce8 <check_warnings+0x9c>
				if(outputs[x].actual_current >= outputs[x].Over_Current){
 8000c8e:	79fb      	ldrb	r3, [r7, #7]
 8000c90:	4a26      	ldr	r2, [pc, #152]	@ (8000d2c <check_warnings+0xe0>)
 8000c92:	2158      	movs	r1, #88	@ 0x58
 8000c94:	fb01 f303 	mul.w	r3, r1, r3
 8000c98:	4413      	add	r3, r2
 8000c9a:	3310      	adds	r3, #16
 8000c9c:	881a      	ldrh	r2, [r3, #0]
 8000c9e:	79fb      	ldrb	r3, [r7, #7]
 8000ca0:	4922      	ldr	r1, [pc, #136]	@ (8000d2c <check_warnings+0xe0>)
 8000ca2:	2058      	movs	r0, #88	@ 0x58
 8000ca4:	fb00 f303 	mul.w	r3, r0, r3
 8000ca8:	440b      	add	r3, r1
 8000caa:	3302      	adds	r3, #2
 8000cac:	881b      	ldrh	r3, [r3, #0]
 8000cae:	429a      	cmp	r2, r3
 8000cb0:	d316      	bcc.n	8000ce0 <check_warnings+0x94>
					Default_Switch_State = set_bit(Default_Switch_State, outputs[x].pin, 0);
 8000cb2:	4b1f      	ldr	r3, [pc, #124]	@ (8000d30 <check_warnings+0xe4>)
 8000cb4:	7818      	ldrb	r0, [r3, #0]
 8000cb6:	79fb      	ldrb	r3, [r7, #7]
 8000cb8:	4a1c      	ldr	r2, [pc, #112]	@ (8000d2c <check_warnings+0xe0>)
 8000cba:	2158      	movs	r1, #88	@ 0x58
 8000cbc:	fb01 f303 	mul.w	r3, r1, r3
 8000cc0:	4413      	add	r3, r2
 8000cc2:	330e      	adds	r3, #14
 8000cc4:	781b      	ldrb	r3, [r3, #0]
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	4619      	mov	r1, r3
 8000cca:	f000 f91b 	bl	8000f04 <set_bit>
 8000cce:	4603      	mov	r3, r0
 8000cd0:	461a      	mov	r2, r3
 8000cd2:	4b17      	ldr	r3, [pc, #92]	@ (8000d30 <check_warnings+0xe4>)
 8000cd4:	701a      	strb	r2, [r3, #0]
					Over_current(x);
 8000cd6:	79fb      	ldrb	r3, [r7, #7]
 8000cd8:	4618      	mov	r0, r3
 8000cda:	f7ff fdc3 	bl	8000864 <Over_current>
 8000cde:	e003      	b.n	8000ce8 <check_warnings+0x9c>
				}else{
					Warning_current(x);
 8000ce0:	79fb      	ldrb	r3, [r7, #7]
 8000ce2:	4618      	mov	r0, r3
 8000ce4:	f7ff fdd2 	bl	800088c <Warning_current>
				}
			}
		}
		if(outputs[x].actual_current < outputs[x].Under_Current){
 8000ce8:	79fb      	ldrb	r3, [r7, #7]
 8000cea:	4a10      	ldr	r2, [pc, #64]	@ (8000d2c <check_warnings+0xe0>)
 8000cec:	2158      	movs	r1, #88	@ 0x58
 8000cee:	fb01 f303 	mul.w	r3, r1, r3
 8000cf2:	4413      	add	r3, r2
 8000cf4:	3310      	adds	r3, #16
 8000cf6:	881a      	ldrh	r2, [r3, #0]
 8000cf8:	79fb      	ldrb	r3, [r7, #7]
 8000cfa:	490c      	ldr	r1, [pc, #48]	@ (8000d2c <check_warnings+0xe0>)
 8000cfc:	2058      	movs	r0, #88	@ 0x58
 8000cfe:	fb00 f303 	mul.w	r3, r0, r3
 8000d02:	440b      	add	r3, r1
 8000d04:	3306      	adds	r3, #6
 8000d06:	881b      	ldrh	r3, [r3, #0]
 8000d08:	429a      	cmp	r2, r3
 8000d0a:	d203      	bcs.n	8000d14 <check_warnings+0xc8>
			Under_current(x);
 8000d0c:	79fb      	ldrb	r3, [r7, #7]
 8000d0e:	4618      	mov	r0, r3
 8000d10:	f7ff fdd0 	bl	80008b4 <Under_current>
	for(uint8_t x = 0; x < 7; x++){
 8000d14:	79fb      	ldrb	r3, [r7, #7]
 8000d16:	3301      	adds	r3, #1
 8000d18:	71fb      	strb	r3, [r7, #7]
 8000d1a:	79fb      	ldrb	r3, [r7, #7]
 8000d1c:	2b06      	cmp	r3, #6
 8000d1e:	d99b      	bls.n	8000c58 <check_warnings+0xc>
		}
	}
	switch_output();
 8000d20:	f7ff fd5c 	bl	80007dc <switch_output>
}
 8000d24:	bf00      	nop
 8000d26:	3708      	adds	r7, #8
 8000d28:	46bd      	mov	sp, r7
 8000d2a:	bd80      	pop	{r7, pc}
 8000d2c:	20000380 	.word	0x20000380
 8000d30:	20000642 	.word	0x20000642

08000d34 <ConfigureCurrentSense>:


void ConfigureCurrentSense(uint8_t SEL0, uint8_t SEL1){
 8000d34:	b580      	push	{r7, lr}
 8000d36:	b082      	sub	sp, #8
 8000d38:	af00      	add	r7, sp, #0
 8000d3a:	4603      	mov	r3, r0
 8000d3c:	460a      	mov	r2, r1
 8000d3e:	71fb      	strb	r3, [r7, #7]
 8000d40:	4613      	mov	r3, r2
 8000d42:	71bb      	strb	r3, [r7, #6]
	HAL_GPIO_WritePin(GPIOB,SEL0_Pin,SEL0);
 8000d44:	79fb      	ldrb	r3, [r7, #7]
 8000d46:	461a      	mov	r2, r3
 8000d48:	2140      	movs	r1, #64	@ 0x40
 8000d4a:	4806      	ldr	r0, [pc, #24]	@ (8000d64 <ConfigureCurrentSense+0x30>)
 8000d4c:	f003 fe96 	bl	8004a7c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB,SEL1_Pin,SEL1);
 8000d50:	79bb      	ldrb	r3, [r7, #6]
 8000d52:	461a      	mov	r2, r3
 8000d54:	2120      	movs	r1, #32
 8000d56:	4803      	ldr	r0, [pc, #12]	@ (8000d64 <ConfigureCurrentSense+0x30>)
 8000d58:	f003 fe90 	bl	8004a7c <HAL_GPIO_WritePin>
}
 8000d5c:	bf00      	nop
 8000d5e:	3708      	adds	r7, #8
 8000d60:	46bd      	mov	sp, r7
 8000d62:	bd80      	pop	{r7, pc}
 8000d64:	48000400 	.word	0x48000400

08000d68 <ReadADCValues>:

void ReadADCValues(uint16_t *adc1_values, uint16_t *adc2_values){
 8000d68:	b580      	push	{r7, lr}
 8000d6a:	b084      	sub	sp, #16
 8000d6c:	af00      	add	r7, sp, #0
 8000d6e:	6078      	str	r0, [r7, #4]
 8000d70:	6039      	str	r1, [r7, #0]
	for(int i = 0; i < I_AVERAGE; i++){
 8000d72:	2300      	movs	r3, #0
 8000d74:	60fb      	str	r3, [r7, #12]
 8000d76:	e048      	b.n	8000e0a <ReadADCValues+0xa2>
		if(HAL_ADC_Start(&hadc1)!=HAL_OK){Error_Handler();}
 8000d78:	4828      	ldr	r0, [pc, #160]	@ (8000e1c <ReadADCValues+0xb4>)
 8000d7a:	f001 fd95 	bl	80028a8 <HAL_ADC_Start>
 8000d7e:	4603      	mov	r3, r0
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d001      	beq.n	8000d88 <ReadADCValues+0x20>
 8000d84:	f000 fe1c 	bl	80019c0 <Error_Handler>
		if(HAL_ADC_Start(&hadc2)!=HAL_OK){Error_Handler();}
 8000d88:	4825      	ldr	r0, [pc, #148]	@ (8000e20 <ReadADCValues+0xb8>)
 8000d8a:	f001 fd8d 	bl	80028a8 <HAL_ADC_Start>
 8000d8e:	4603      	mov	r3, r0
 8000d90:	2b00      	cmp	r3, #0
 8000d92:	d001      	beq.n	8000d98 <ReadADCValues+0x30>
 8000d94:	f000 fe14 	bl	80019c0 <Error_Handler>
		if(HAL_ADC_PollForConversion(&hadc1,100)!=HAL_OK){Error_Handler();}
 8000d98:	2164      	movs	r1, #100	@ 0x64
 8000d9a:	4820      	ldr	r0, [pc, #128]	@ (8000e1c <ReadADCValues+0xb4>)
 8000d9c:	f001 fe74 	bl	8002a88 <HAL_ADC_PollForConversion>
 8000da0:	4603      	mov	r3, r0
 8000da2:	2b00      	cmp	r3, #0
 8000da4:	d001      	beq.n	8000daa <ReadADCValues+0x42>
 8000da6:	f000 fe0b 	bl	80019c0 <Error_Handler>
		if(HAL_ADC_PollForConversion(&hadc2,100)!=HAL_OK){Error_Handler();}
 8000daa:	2164      	movs	r1, #100	@ 0x64
 8000dac:	481c      	ldr	r0, [pc, #112]	@ (8000e20 <ReadADCValues+0xb8>)
 8000dae:	f001 fe6b 	bl	8002a88 <HAL_ADC_PollForConversion>
 8000db2:	4603      	mov	r3, r0
 8000db4:	2b00      	cmp	r3, #0
 8000db6:	d001      	beq.n	8000dbc <ReadADCValues+0x54>
 8000db8:	f000 fe02 	bl	80019c0 <Error_Handler>
        adc1_values[i] = (uint16_t)HAL_ADC_GetValue(&hadc1);
 8000dbc:	4817      	ldr	r0, [pc, #92]	@ (8000e1c <ReadADCValues+0xb4>)
 8000dbe:	f001 ff3b 	bl	8002c38 <HAL_ADC_GetValue>
 8000dc2:	4601      	mov	r1, r0
 8000dc4:	68fb      	ldr	r3, [r7, #12]
 8000dc6:	005b      	lsls	r3, r3, #1
 8000dc8:	687a      	ldr	r2, [r7, #4]
 8000dca:	4413      	add	r3, r2
 8000dcc:	b28a      	uxth	r2, r1
 8000dce:	801a      	strh	r2, [r3, #0]
        adc2_values[i] = (uint16_t)HAL_ADC_GetValue(&hadc2);
 8000dd0:	4813      	ldr	r0, [pc, #76]	@ (8000e20 <ReadADCValues+0xb8>)
 8000dd2:	f001 ff31 	bl	8002c38 <HAL_ADC_GetValue>
 8000dd6:	4601      	mov	r1, r0
 8000dd8:	68fb      	ldr	r3, [r7, #12]
 8000dda:	005b      	lsls	r3, r3, #1
 8000ddc:	683a      	ldr	r2, [r7, #0]
 8000dde:	4413      	add	r3, r2
 8000de0:	b28a      	uxth	r2, r1
 8000de2:	801a      	strh	r2, [r3, #0]
		if(HAL_ADC_Stop(&hadc1)!=HAL_OK){Error_Handler();}
 8000de4:	480d      	ldr	r0, [pc, #52]	@ (8000e1c <ReadADCValues+0xb4>)
 8000de6:	f001 fe1b 	bl	8002a20 <HAL_ADC_Stop>
 8000dea:	4603      	mov	r3, r0
 8000dec:	2b00      	cmp	r3, #0
 8000dee:	d001      	beq.n	8000df4 <ReadADCValues+0x8c>
 8000df0:	f000 fde6 	bl	80019c0 <Error_Handler>
		if(HAL_ADC_Stop(&hadc2)!=HAL_OK){Error_Handler();}
 8000df4:	480a      	ldr	r0, [pc, #40]	@ (8000e20 <ReadADCValues+0xb8>)
 8000df6:	f001 fe13 	bl	8002a20 <HAL_ADC_Stop>
 8000dfa:	4603      	mov	r3, r0
 8000dfc:	2b00      	cmp	r3, #0
 8000dfe:	d001      	beq.n	8000e04 <ReadADCValues+0x9c>
 8000e00:	f000 fdde 	bl	80019c0 <Error_Handler>
	for(int i = 0; i < I_AVERAGE; i++){
 8000e04:	68fb      	ldr	r3, [r7, #12]
 8000e06:	3301      	adds	r3, #1
 8000e08:	60fb      	str	r3, [r7, #12]
 8000e0a:	68fb      	ldr	r3, [r7, #12]
 8000e0c:	2b1f      	cmp	r3, #31
 8000e0e:	ddb3      	ble.n	8000d78 <ReadADCValues+0x10>
	}
}
 8000e10:	bf00      	nop
 8000e12:	bf00      	nop
 8000e14:	3710      	adds	r7, #16
 8000e16:	46bd      	mov	sp, r7
 8000e18:	bd80      	pop	{r7, pc}
 8000e1a:	bf00      	nop
 8000e1c:	20000030 	.word	0x20000030
 8000e20:	2000009c 	.word	0x2000009c

08000e24 <Current_Sense_read>:

void Current_Sense_read(){
 8000e24:	b580      	push	{r7, lr}
 8000e26:	b082      	sub	sp, #8
 8000e28:	af00      	add	r7, sp, #0
	for(int x = 0;x < 5; x++){
 8000e2a:	2300      	movs	r3, #0
 8000e2c:	607b      	str	r3, [r7, #4]
 8000e2e:	e034      	b.n	8000e9a <Current_Sense_read+0x76>
		switch(x){
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	2b03      	cmp	r3, #3
 8000e34:	d82e      	bhi.n	8000e94 <Current_Sense_read+0x70>
 8000e36:	a201      	add	r2, pc, #4	@ (adr r2, 8000e3c <Current_Sense_read+0x18>)
 8000e38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e3c:	08000e4d 	.word	0x08000e4d
 8000e40:	08000e5f 	.word	0x08000e5f
 8000e44:	08000e71 	.word	0x08000e71
 8000e48:	08000e83 	.word	0x08000e83
		case 0:
			ConfigureCurrentSense(0, 0);
 8000e4c:	2100      	movs	r1, #0
 8000e4e:	2000      	movs	r0, #0
 8000e50:	f7ff ff70 	bl	8000d34 <ConfigureCurrentSense>
			ReadADCValues(outputs[0].Current_Sense, outputs[4].Current_Sense);
 8000e54:	4915      	ldr	r1, [pc, #84]	@ (8000eac <Current_Sense_read+0x88>)
 8000e56:	4816      	ldr	r0, [pc, #88]	@ (8000eb0 <Current_Sense_read+0x8c>)
 8000e58:	f7ff ff86 	bl	8000d68 <ReadADCValues>
			break;
 8000e5c:	e01a      	b.n	8000e94 <Current_Sense_read+0x70>
		case 1:
			ConfigureCurrentSense(0, 1);
 8000e5e:	2101      	movs	r1, #1
 8000e60:	2000      	movs	r0, #0
 8000e62:	f7ff ff67 	bl	8000d34 <ConfigureCurrentSense>
			ReadADCValues(outputs[1].Current_Sense, outputs[5].Current_Sense);
 8000e66:	4913      	ldr	r1, [pc, #76]	@ (8000eb4 <Current_Sense_read+0x90>)
 8000e68:	4813      	ldr	r0, [pc, #76]	@ (8000eb8 <Current_Sense_read+0x94>)
 8000e6a:	f7ff ff7d 	bl	8000d68 <ReadADCValues>
			break;
 8000e6e:	e011      	b.n	8000e94 <Current_Sense_read+0x70>
		case 2:
			ConfigureCurrentSense(1, 0);
 8000e70:	2100      	movs	r1, #0
 8000e72:	2001      	movs	r0, #1
 8000e74:	f7ff ff5e 	bl	8000d34 <ConfigureCurrentSense>
			ReadADCValues(outputs[2].Current_Sense, outputs[6].Current_Sense);
 8000e78:	4910      	ldr	r1, [pc, #64]	@ (8000ebc <Current_Sense_read+0x98>)
 8000e7a:	4811      	ldr	r0, [pc, #68]	@ (8000ec0 <Current_Sense_read+0x9c>)
 8000e7c:	f7ff ff74 	bl	8000d68 <ReadADCValues>
			break;
 8000e80:	e008      	b.n	8000e94 <Current_Sense_read+0x70>
		case 3:
			ConfigureCurrentSense(1, 1);
 8000e82:	2101      	movs	r1, #1
 8000e84:	2001      	movs	r0, #1
 8000e86:	f7ff ff55 	bl	8000d34 <ConfigureCurrentSense>
			ReadADCValues(outputs[3].Current_Sense, outputs[7].Current_Sense);
 8000e8a:	490e      	ldr	r1, [pc, #56]	@ (8000ec4 <Current_Sense_read+0xa0>)
 8000e8c:	480e      	ldr	r0, [pc, #56]	@ (8000ec8 <Current_Sense_read+0xa4>)
 8000e8e:	f7ff ff6b 	bl	8000d68 <ReadADCValues>
			break;
 8000e92:	bf00      	nop
	for(int x = 0;x < 5; x++){
 8000e94:	687b      	ldr	r3, [r7, #4]
 8000e96:	3301      	adds	r3, #1
 8000e98:	607b      	str	r3, [r7, #4]
 8000e9a:	687b      	ldr	r3, [r7, #4]
 8000e9c:	2b04      	cmp	r3, #4
 8000e9e:	ddc7      	ble.n	8000e30 <Current_Sense_read+0xc>
		}
	}
	Current_Sense_process();
 8000ea0:	f7ff fe70 	bl	8000b84 <Current_Sense_process>
}
 8000ea4:	bf00      	nop
 8000ea6:	3708      	adds	r7, #8
 8000ea8:	46bd      	mov	sp, r7
 8000eaa:	bd80      	pop	{r7, pc}
 8000eac:	200004f4 	.word	0x200004f4
 8000eb0:	20000394 	.word	0x20000394
 8000eb4:	2000054c 	.word	0x2000054c
 8000eb8:	200003ec 	.word	0x200003ec
 8000ebc:	200005a4 	.word	0x200005a4
 8000ec0:	20000444 	.word	0x20000444
 8000ec4:	200005fc 	.word	0x200005fc
 8000ec8:	2000049c 	.word	0x2000049c

08000ecc <check_bit>:

uint8_t check_bit(uint8_t byte, uint8_t bitn){
 8000ecc:	b480      	push	{r7}
 8000ece:	b085      	sub	sp, #20
 8000ed0:	af00      	add	r7, sp, #0
 8000ed2:	4603      	mov	r3, r0
 8000ed4:	460a      	mov	r2, r1
 8000ed6:	71fb      	strb	r3, [r7, #7]
 8000ed8:	4613      	mov	r3, r2
 8000eda:	71bb      	strb	r3, [r7, #6]
	uint8_t buffer = 1<<bitn;
 8000edc:	79bb      	ldrb	r3, [r7, #6]
 8000ede:	2201      	movs	r2, #1
 8000ee0:	fa02 f303 	lsl.w	r3, r2, r3
 8000ee4:	73fb      	strb	r3, [r7, #15]
	if (byte & buffer){
 8000ee6:	79fa      	ldrb	r2, [r7, #7]
 8000ee8:	7bfb      	ldrb	r3, [r7, #15]
 8000eea:	4013      	ands	r3, r2
 8000eec:	b2db      	uxtb	r3, r3
 8000eee:	2b00      	cmp	r3, #0
 8000ef0:	d001      	beq.n	8000ef6 <check_bit+0x2a>
		return 1;
 8000ef2:	2301      	movs	r3, #1
 8000ef4:	e000      	b.n	8000ef8 <check_bit+0x2c>
	}else{
		return 0;
 8000ef6:	2300      	movs	r3, #0
	}
}
 8000ef8:	4618      	mov	r0, r3
 8000efa:	3714      	adds	r7, #20
 8000efc:	46bd      	mov	sp, r7
 8000efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f02:	4770      	bx	lr

08000f04 <set_bit>:

uint8_t set_bit(uint8_t byte, uint8_t pos, uint8_t new_bit){
 8000f04:	b480      	push	{r7}
 8000f06:	b085      	sub	sp, #20
 8000f08:	af00      	add	r7, sp, #0
 8000f0a:	4603      	mov	r3, r0
 8000f0c:	71fb      	strb	r3, [r7, #7]
 8000f0e:	460b      	mov	r3, r1
 8000f10:	71bb      	strb	r3, [r7, #6]
 8000f12:	4613      	mov	r3, r2
 8000f14:	717b      	strb	r3, [r7, #5]
	uint8_t mask = 1 << pos;
 8000f16:	79bb      	ldrb	r3, [r7, #6]
 8000f18:	2201      	movs	r2, #1
 8000f1a:	fa02 f303 	lsl.w	r3, r2, r3
 8000f1e:	73fb      	strb	r3, [r7, #15]
	if(new_bit == 1){
 8000f20:	797b      	ldrb	r3, [r7, #5]
 8000f22:	2b01      	cmp	r3, #1
 8000f24:	d104      	bne.n	8000f30 <set_bit+0x2c>
		byte |= mask;
 8000f26:	79fa      	ldrb	r2, [r7, #7]
 8000f28:	7bfb      	ldrb	r3, [r7, #15]
 8000f2a:	4313      	orrs	r3, r2
 8000f2c:	71fb      	strb	r3, [r7, #7]
 8000f2e:	e008      	b.n	8000f42 <set_bit+0x3e>
	}else{
		byte &= ~mask;
 8000f30:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000f34:	43db      	mvns	r3, r3
 8000f36:	b25a      	sxtb	r2, r3
 8000f38:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f3c:	4013      	ands	r3, r2
 8000f3e:	b25b      	sxtb	r3, r3
 8000f40:	71fb      	strb	r3, [r7, #7]
	}
	return byte;
 8000f42:	79fb      	ldrb	r3, [r7, #7]
}
 8000f44:	4618      	mov	r0, r3
 8000f46:	3714      	adds	r7, #20
 8000f48:	46bd      	mov	sp, r7
 8000f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f4e:	4770      	bx	lr

08000f50 <Current_Sense_Raw_to_mA>:

uint16_t Current_Sense_Raw_to_mA(uint16_t raw){
 8000f50:	b480      	push	{r7}
 8000f52:	b085      	sub	sp, #20
 8000f54:	af00      	add	r7, sp, #0
 8000f56:	4603      	mov	r3, r0
 8000f58:	80fb      	strh	r3, [r7, #6]
	//4095 is the max, depending on resistors we will find the current values		3.3 V == 4,95 A
	uint32_t max_mA = 4950;
 8000f5a:	f241 3356 	movw	r3, #4950	@ 0x1356
 8000f5e:	60fb      	str	r3, [r7, #12]
	uint16_t current = 0;
 8000f60:	2300      	movs	r3, #0
 8000f62:	817b      	strh	r3, [r7, #10]

	current = raw*max_mA / 4095;
 8000f64:	88fb      	ldrh	r3, [r7, #6]
 8000f66:	68fa      	ldr	r2, [r7, #12]
 8000f68:	fb03 f202 	mul.w	r2, r3, r2
 8000f6c:	4b07      	ldr	r3, [pc, #28]	@ (8000f8c <Current_Sense_Raw_to_mA+0x3c>)
 8000f6e:	fba3 1302 	umull	r1, r3, r3, r2
 8000f72:	1ad2      	subs	r2, r2, r3
 8000f74:	0852      	lsrs	r2, r2, #1
 8000f76:	4413      	add	r3, r2
 8000f78:	0adb      	lsrs	r3, r3, #11
 8000f7a:	817b      	strh	r3, [r7, #10]
	//current = raw*3300 / 4095;

	return current;
 8000f7c:	897b      	ldrh	r3, [r7, #10]
}
 8000f7e:	4618      	mov	r0, r3
 8000f80:	3714      	adds	r7, #20
 8000f82:	46bd      	mov	sp, r7
 8000f84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f88:	4770      	bx	lr
 8000f8a:	bf00      	nop
 8000f8c:	00100101 	.word	0x00100101

08000f90 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000f90:	b580      	push	{r7, lr}
 8000f92:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000f94:	f000 fff7 	bl	8001f86 <HAL_Init>

  /* USER CODE BEGIN Init */
  Config_Setup();
 8000f98:	f7ff f988 	bl	80002ac <Config_Setup>
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000f9c:	f000 f880 	bl	80010a0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000fa0:	f000 fcac 	bl	80018fc <MX_GPIO_Init>
  MX_ADC1_Init();
 8000fa4:	f000 f8c6 	bl	8001134 <MX_ADC1_Init>
  MX_FDCAN1_Init();
 8000fa8:	f000 f9c6 	bl	8001338 <MX_FDCAN1_Init>
  MX_TIM1_Init();
 8000fac:	f000 fa2c 	bl	8001408 <MX_TIM1_Init>
  MX_TIM2_Init();
 8000fb0:	f000 fada 	bl	8001568 <MX_TIM2_Init>
  MX_TIM3_Init();
 8000fb4:	f000 fb4e 	bl	8001654 <MX_TIM3_Init>
  MX_TIM4_Init();
 8000fb8:	f000 fb9a 	bl	80016f0 <MX_TIM4_Init>
  MX_TIM6_Init();
 8000fbc:	f000 fc0c 	bl	80017d8 <MX_TIM6_Init>
  MX_TIM7_Init();
 8000fc0:	f000 fc40 	bl	8001844 <MX_TIM7_Init>
  MX_TIM16_Init();
 8000fc4:	f000 fc74 	bl	80018b0 <MX_TIM16_Init>
  MX_ADC2_Init();
 8000fc8:	f000 f950 	bl	800126c <MX_ADC2_Init>
  /* USER CODE BEGIN 2 */
  HAL_GPIO_WritePin(GPIOA,LED2_Pin,0);
 8000fcc:	2200      	movs	r2, #0
 8000fce:	2180      	movs	r1, #128	@ 0x80
 8000fd0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000fd4:	f003 fd52 	bl	8004a7c <HAL_GPIO_WritePin>

  HAL_TIM_PWM_Init(&htim1);
 8000fd8:	4829      	ldr	r0, [pc, #164]	@ (8001080 <main+0xf0>)
 8000fda:	f004 fdc3 	bl	8005b64 <HAL_TIM_PWM_Init>
  HAL_TIM_PWM_Init(&htim2);
 8000fde:	4829      	ldr	r0, [pc, #164]	@ (8001084 <main+0xf4>)
 8000fe0:	f004 fdc0 	bl	8005b64 <HAL_TIM_PWM_Init>
  HAL_TIM_Base_Start_IT(&htim3);
 8000fe4:	4828      	ldr	r0, [pc, #160]	@ (8001088 <main+0xf8>)
 8000fe6:	f004 fd53 	bl	8005a90 <HAL_TIM_Base_Start_IT>

  HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 8000fea:	2100      	movs	r1, #0
 8000fec:	4824      	ldr	r0, [pc, #144]	@ (8001080 <main+0xf0>)
 8000fee:	f004 fe1b 	bl	8005c28 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 8000ff2:	2100      	movs	r1, #0
 8000ff4:	4823      	ldr	r0, [pc, #140]	@ (8001084 <main+0xf4>)
 8000ff6:	f004 fe17 	bl	8005c28 <HAL_TIM_PWM_Start>

  set_pwm_duty_cycle(&htim1);
 8000ffa:	4821      	ldr	r0, [pc, #132]	@ (8001080 <main+0xf0>)
 8000ffc:	f7ff f90c 	bl	8000218 <set_pwm_duty_cycle>
  set_pwm_duty_cycle(&htim2);
 8001000:	4820      	ldr	r0, [pc, #128]	@ (8001084 <main+0xf4>)
 8001002:	f7ff f909 	bl	8000218 <set_pwm_duty_cycle>

  if(HAL_FDCAN_Start(&hfdcan1)!= HAL_OK){ Error_Handler(); }else{HAL_GPIO_WritePin(GPIOB,LED1_Pin,1); }
 8001006:	4821      	ldr	r0, [pc, #132]	@ (800108c <main+0xfc>)
 8001008:	f002 feea 	bl	8003de0 <HAL_FDCAN_Start>
 800100c:	4603      	mov	r3, r0
 800100e:	2b00      	cmp	r3, #0
 8001010:	d002      	beq.n	8001018 <main+0x88>
 8001012:	f000 fcd5 	bl	80019c0 <Error_Handler>
 8001016:	e004      	b.n	8001022 <main+0x92>
 8001018:	2201      	movs	r2, #1
 800101a:	2101      	movs	r1, #1
 800101c:	481c      	ldr	r0, [pc, #112]	@ (8001090 <main+0x100>)
 800101e:	f003 fd2d 	bl	8004a7c <HAL_GPIO_WritePin>
  if(HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE,0) != HAL_OK) { Error_Handler(); }
 8001022:	2200      	movs	r2, #0
 8001024:	2101      	movs	r1, #1
 8001026:	4819      	ldr	r0, [pc, #100]	@ (800108c <main+0xfc>)
 8001028:	f003 f860 	bl	80040ec <HAL_FDCAN_ActivateNotification>
 800102c:	4603      	mov	r3, r0
 800102e:	2b00      	cmp	r3, #0
 8001030:	d001      	beq.n	8001036 <main+0xa6>
 8001032:	f000 fcc5 	bl	80019c0 <Error_Handler>

  HAL_Delay(2000);
 8001036:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 800103a:	f001 f815 	bl	8002068 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOA,LED2_Pin,1);
 800103e:	2201      	movs	r2, #1
 8001040:	2180      	movs	r1, #128	@ 0x80
 8001042:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001046:	f003 fd19 	bl	8004a7c <HAL_GPIO_WritePin>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
		 __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1,PWM_speed[0]);
 800104a:	4b12      	ldr	r3, [pc, #72]	@ (8001094 <main+0x104>)
 800104c:	881a      	ldrh	r2, [r3, #0]
 800104e:	4b0c      	ldr	r3, [pc, #48]	@ (8001080 <main+0xf0>)
 8001050:	681b      	ldr	r3, [r3, #0]
 8001052:	635a      	str	r2, [r3, #52]	@ 0x34

		 __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1,PWM_speed[1]);
 8001054:	4b0f      	ldr	r3, [pc, #60]	@ (8001094 <main+0x104>)
 8001056:	885a      	ldrh	r2, [r3, #2]
 8001058:	4b0a      	ldr	r3, [pc, #40]	@ (8001084 <main+0xf4>)
 800105a:	681b      	ldr	r3, [r3, #0]
 800105c:	635a      	str	r2, [r3, #52]	@ 0x34
	  if(millis % 10 == 0){
 800105e:	4b0e      	ldr	r3, [pc, #56]	@ (8001098 <main+0x108>)
 8001060:	881a      	ldrh	r2, [r3, #0]
 8001062:	4b0e      	ldr	r3, [pc, #56]	@ (800109c <main+0x10c>)
 8001064:	fba3 1302 	umull	r1, r3, r3, r2
 8001068:	08d9      	lsrs	r1, r3, #3
 800106a:	460b      	mov	r3, r1
 800106c:	009b      	lsls	r3, r3, #2
 800106e:	440b      	add	r3, r1
 8001070:	005b      	lsls	r3, r3, #1
 8001072:	1ad3      	subs	r3, r2, r3
 8001074:	b29b      	uxth	r3, r3
 8001076:	2b00      	cmp	r3, #0
 8001078:	d1e7      	bne.n	800104a <main+0xba>

		  Current_Sense_read();
 800107a:	f7ff fed3 	bl	8000e24 <Current_Sense_read>
		 __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1,PWM_speed[0]);
 800107e:	e7e4      	b.n	800104a <main+0xba>
 8001080:	2000016c 	.word	0x2000016c
 8001084:	200001b8 	.word	0x200001b8
 8001088:	20000204 	.word	0x20000204
 800108c:	20000108 	.word	0x20000108
 8001090:	48000400 	.word	0x48000400
 8001094:	20000648 	.word	0x20000648
 8001098:	20000640 	.word	0x20000640
 800109c:	cccccccd 	.word	0xcccccccd

080010a0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80010a0:	b580      	push	{r7, lr}
 80010a2:	b094      	sub	sp, #80	@ 0x50
 80010a4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80010a6:	f107 0318 	add.w	r3, r7, #24
 80010aa:	2238      	movs	r2, #56	@ 0x38
 80010ac:	2100      	movs	r1, #0
 80010ae:	4618      	mov	r0, r3
 80010b0:	f005 fff2 	bl	8007098 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80010b4:	1d3b      	adds	r3, r7, #4
 80010b6:	2200      	movs	r2, #0
 80010b8:	601a      	str	r2, [r3, #0]
 80010ba:	605a      	str	r2, [r3, #4]
 80010bc:	609a      	str	r2, [r3, #8]
 80010be:	60da      	str	r2, [r3, #12]
 80010c0:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 80010c2:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80010c6:	f003 fcf1 	bl	8004aac <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80010ca:	2301      	movs	r3, #1
 80010cc:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80010ce:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80010d2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80010d4:	2302      	movs	r3, #2
 80010d6:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80010d8:	2303      	movs	r3, #3
 80010da:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 80010dc:	2301      	movs	r3, #1
 80010de:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 12;
 80010e0:	230c      	movs	r3, #12
 80010e2:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80010e4:	2302      	movs	r3, #2
 80010e6:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV6;
 80010e8:	2306      	movs	r3, #6
 80010ea:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 80010ec:	2302      	movs	r3, #2
 80010ee:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80010f0:	f107 0318 	add.w	r3, r7, #24
 80010f4:	4618      	mov	r0, r3
 80010f6:	f003 fd8d 	bl	8004c14 <HAL_RCC_OscConfig>
 80010fa:	4603      	mov	r3, r0
 80010fc:	2b00      	cmp	r3, #0
 80010fe:	d001      	beq.n	8001104 <SystemClock_Config+0x64>
  {
    Error_Handler();
 8001100:	f000 fc5e 	bl	80019c0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001104:	230f      	movs	r3, #15
 8001106:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001108:	2303      	movs	r3, #3
 800110a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800110c:	2300      	movs	r3, #0
 800110e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001110:	2300      	movs	r3, #0
 8001112:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001114:	2300      	movs	r3, #0
 8001116:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001118:	1d3b      	adds	r3, r7, #4
 800111a:	2101      	movs	r1, #1
 800111c:	4618      	mov	r0, r3
 800111e:	f004 f88b 	bl	8005238 <HAL_RCC_ClockConfig>
 8001122:	4603      	mov	r3, r0
 8001124:	2b00      	cmp	r3, #0
 8001126:	d001      	beq.n	800112c <SystemClock_Config+0x8c>
  {
    Error_Handler();
 8001128:	f000 fc4a 	bl	80019c0 <Error_Handler>
  }
}
 800112c:	bf00      	nop
 800112e:	3750      	adds	r7, #80	@ 0x50
 8001130:	46bd      	mov	sp, r7
 8001132:	bd80      	pop	{r7, pc}

08001134 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001134:	b580      	push	{r7, lr}
 8001136:	b08c      	sub	sp, #48	@ 0x30
 8001138:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 800113a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800113e:	2200      	movs	r2, #0
 8001140:	601a      	str	r2, [r3, #0]
 8001142:	605a      	str	r2, [r3, #4]
 8001144:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 8001146:	1d3b      	adds	r3, r7, #4
 8001148:	2220      	movs	r2, #32
 800114a:	2100      	movs	r1, #0
 800114c:	4618      	mov	r0, r3
 800114e:	f005 ffa3 	bl	8007098 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8001152:	4b42      	ldr	r3, [pc, #264]	@ (800125c <MX_ADC1_Init+0x128>)
 8001154:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 8001158:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800115a:	4b40      	ldr	r3, [pc, #256]	@ (800125c <MX_ADC1_Init+0x128>)
 800115c:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001160:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001162:	4b3e      	ldr	r3, [pc, #248]	@ (800125c <MX_ADC1_Init+0x128>)
 8001164:	2200      	movs	r2, #0
 8001166:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001168:	4b3c      	ldr	r3, [pc, #240]	@ (800125c <MX_ADC1_Init+0x128>)
 800116a:	2200      	movs	r2, #0
 800116c:	60da      	str	r2, [r3, #12]
  hadc1.Init.GainCompensation = 0;
 800116e:	4b3b      	ldr	r3, [pc, #236]	@ (800125c <MX_ADC1_Init+0x128>)
 8001170:	2200      	movs	r2, #0
 8001172:	611a      	str	r2, [r3, #16]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8001174:	4b39      	ldr	r3, [pc, #228]	@ (800125c <MX_ADC1_Init+0x128>)
 8001176:	2201      	movs	r2, #1
 8001178:	615a      	str	r2, [r3, #20]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800117a:	4b38      	ldr	r3, [pc, #224]	@ (800125c <MX_ADC1_Init+0x128>)
 800117c:	2204      	movs	r2, #4
 800117e:	619a      	str	r2, [r3, #24]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8001180:	4b36      	ldr	r3, [pc, #216]	@ (800125c <MX_ADC1_Init+0x128>)
 8001182:	2200      	movs	r2, #0
 8001184:	771a      	strb	r2, [r3, #28]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001186:	4b35      	ldr	r3, [pc, #212]	@ (800125c <MX_ADC1_Init+0x128>)
 8001188:	2200      	movs	r2, #0
 800118a:	775a      	strb	r2, [r3, #29]
  hadc1.Init.NbrOfConversion = 3;
 800118c:	4b33      	ldr	r3, [pc, #204]	@ (800125c <MX_ADC1_Init+0x128>)
 800118e:	2203      	movs	r2, #3
 8001190:	621a      	str	r2, [r3, #32]
  hadc1.Init.DiscontinuousConvMode = ENABLE;
 8001192:	4b32      	ldr	r3, [pc, #200]	@ (800125c <MX_ADC1_Init+0x128>)
 8001194:	2201      	movs	r2, #1
 8001196:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc1.Init.NbrOfDiscConversion = 1;
 800119a:	4b30      	ldr	r3, [pc, #192]	@ (800125c <MX_ADC1_Init+0x128>)
 800119c:	2201      	movs	r2, #1
 800119e:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80011a0:	4b2e      	ldr	r3, [pc, #184]	@ (800125c <MX_ADC1_Init+0x128>)
 80011a2:	2200      	movs	r2, #0
 80011a4:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80011a6:	4b2d      	ldr	r3, [pc, #180]	@ (800125c <MX_ADC1_Init+0x128>)
 80011a8:	2200      	movs	r2, #0
 80011aa:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80011ac:	4b2b      	ldr	r3, [pc, #172]	@ (800125c <MX_ADC1_Init+0x128>)
 80011ae:	2200      	movs	r2, #0
 80011b0:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80011b4:	4b29      	ldr	r3, [pc, #164]	@ (800125c <MX_ADC1_Init+0x128>)
 80011b6:	2200      	movs	r2, #0
 80011b8:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc1.Init.OversamplingMode = DISABLE;
 80011ba:	4b28      	ldr	r3, [pc, #160]	@ (800125c <MX_ADC1_Init+0x128>)
 80011bc:	2200      	movs	r2, #0
 80011be:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80011c2:	4826      	ldr	r0, [pc, #152]	@ (800125c <MX_ADC1_Init+0x128>)
 80011c4:	f001 f9ec 	bl	80025a0 <HAL_ADC_Init>
 80011c8:	4603      	mov	r3, r0
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d001      	beq.n	80011d2 <MX_ADC1_Init+0x9e>
  {
    Error_Handler();
 80011ce:	f000 fbf7 	bl	80019c0 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 80011d2:	2300      	movs	r3, #0
 80011d4:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 80011d6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80011da:	4619      	mov	r1, r3
 80011dc:	481f      	ldr	r0, [pc, #124]	@ (800125c <MX_ADC1_Init+0x128>)
 80011de:	f002 faf1 	bl	80037c4 <HAL_ADCEx_MultiModeConfigChannel>
 80011e2:	4603      	mov	r3, r0
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d001      	beq.n	80011ec <MX_ADC1_Init+0xb8>
  {
    Error_Handler();
 80011e8:	f000 fbea 	bl	80019c0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 80011ec:	4b1c      	ldr	r3, [pc, #112]	@ (8001260 <MX_ADC1_Init+0x12c>)
 80011ee:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80011f0:	2306      	movs	r3, #6
 80011f2:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 80011f4:	2302      	movs	r3, #2
 80011f6:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80011f8:	237f      	movs	r3, #127	@ 0x7f
 80011fa:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80011fc:	2304      	movs	r3, #4
 80011fe:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 8001200:	2300      	movs	r3, #0
 8001202:	61bb      	str	r3, [r7, #24]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001204:	1d3b      	adds	r3, r7, #4
 8001206:	4619      	mov	r1, r3
 8001208:	4814      	ldr	r0, [pc, #80]	@ (800125c <MX_ADC1_Init+0x128>)
 800120a:	f001 fd23 	bl	8002c54 <HAL_ADC_ConfigChannel>
 800120e:	4603      	mov	r3, r0
 8001210:	2b00      	cmp	r3, #0
 8001212:	d001      	beq.n	8001218 <MX_ADC1_Init+0xe4>
  {
    Error_Handler();
 8001214:	f000 fbd4 	bl	80019c0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8001218:	4b12      	ldr	r3, [pc, #72]	@ (8001264 <MX_ADC1_Init+0x130>)
 800121a:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 800121c:	230c      	movs	r3, #12
 800121e:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001220:	1d3b      	adds	r3, r7, #4
 8001222:	4619      	mov	r1, r3
 8001224:	480d      	ldr	r0, [pc, #52]	@ (800125c <MX_ADC1_Init+0x128>)
 8001226:	f001 fd15 	bl	8002c54 <HAL_ADC_ConfigChannel>
 800122a:	4603      	mov	r3, r0
 800122c:	2b00      	cmp	r3, #0
 800122e:	d001      	beq.n	8001234 <MX_ADC1_Init+0x100>
  {
    Error_Handler();
 8001230:	f000 fbc6 	bl	80019c0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_4;
 8001234:	4b0c      	ldr	r3, [pc, #48]	@ (8001268 <MX_ADC1_Init+0x134>)
 8001236:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 8001238:	2312      	movs	r3, #18
 800123a:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 800123c:	2300      	movs	r3, #0
 800123e:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001240:	1d3b      	adds	r3, r7, #4
 8001242:	4619      	mov	r1, r3
 8001244:	4805      	ldr	r0, [pc, #20]	@ (800125c <MX_ADC1_Init+0x128>)
 8001246:	f001 fd05 	bl	8002c54 <HAL_ADC_ConfigChannel>
 800124a:	4603      	mov	r3, r0
 800124c:	2b00      	cmp	r3, #0
 800124e:	d001      	beq.n	8001254 <MX_ADC1_Init+0x120>
  {
    Error_Handler();
 8001250:	f000 fbb6 	bl	80019c0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */
  //if (HAL_ADCEx_Calibration_Start(&hadc1, ADC_DIFFERENTIAL_ENDED)!= HAL_OK){ Error_Handler(); }
  /* USER CODE END ADC1_Init 2 */

}
 8001254:	bf00      	nop
 8001256:	3730      	adds	r7, #48	@ 0x30
 8001258:	46bd      	mov	sp, r7
 800125a:	bd80      	pop	{r7, pc}
 800125c:	20000030 	.word	0x20000030
 8001260:	04300002 	.word	0x04300002
 8001264:	0c900008 	.word	0x0c900008
 8001268:	10c00010 	.word	0x10c00010

0800126c <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 800126c:	b580      	push	{r7, lr}
 800126e:	b088      	sub	sp, #32
 8001270:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001272:	463b      	mov	r3, r7
 8001274:	2220      	movs	r2, #32
 8001276:	2100      	movs	r1, #0
 8001278:	4618      	mov	r0, r3
 800127a:	f005 ff0d 	bl	8007098 <memset>

  /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 800127e:	4b2b      	ldr	r3, [pc, #172]	@ (800132c <MX_ADC2_Init+0xc0>)
 8001280:	4a2b      	ldr	r2, [pc, #172]	@ (8001330 <MX_ADC2_Init+0xc4>)
 8001282:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001284:	4b29      	ldr	r3, [pc, #164]	@ (800132c <MX_ADC2_Init+0xc0>)
 8001286:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 800128a:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 800128c:	4b27      	ldr	r3, [pc, #156]	@ (800132c <MX_ADC2_Init+0xc0>)
 800128e:	2200      	movs	r2, #0
 8001290:	609a      	str	r2, [r3, #8]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001292:	4b26      	ldr	r3, [pc, #152]	@ (800132c <MX_ADC2_Init+0xc0>)
 8001294:	2200      	movs	r2, #0
 8001296:	60da      	str	r2, [r3, #12]
  hadc2.Init.GainCompensation = 0;
 8001298:	4b24      	ldr	r3, [pc, #144]	@ (800132c <MX_ADC2_Init+0xc0>)
 800129a:	2200      	movs	r2, #0
 800129c:	611a      	str	r2, [r3, #16]
  hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 800129e:	4b23      	ldr	r3, [pc, #140]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012a0:	2200      	movs	r2, #0
 80012a2:	615a      	str	r2, [r3, #20]
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80012a4:	4b21      	ldr	r3, [pc, #132]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012a6:	2204      	movs	r2, #4
 80012a8:	619a      	str	r2, [r3, #24]
  hadc2.Init.LowPowerAutoWait = DISABLE;
 80012aa:	4b20      	ldr	r3, [pc, #128]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012ac:	2200      	movs	r2, #0
 80012ae:	771a      	strb	r2, [r3, #28]
  hadc2.Init.ContinuousConvMode = DISABLE;
 80012b0:	4b1e      	ldr	r3, [pc, #120]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012b2:	2200      	movs	r2, #0
 80012b4:	775a      	strb	r2, [r3, #29]
  hadc2.Init.NbrOfConversion = 1;
 80012b6:	4b1d      	ldr	r3, [pc, #116]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012b8:	2201      	movs	r2, #1
 80012ba:	621a      	str	r2, [r3, #32]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80012bc:	4b1b      	ldr	r3, [pc, #108]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012be:	2200      	movs	r2, #0
 80012c0:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80012c4:	4b19      	ldr	r3, [pc, #100]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012c6:	2200      	movs	r2, #0
 80012c8:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80012ca:	4b18      	ldr	r3, [pc, #96]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012cc:	2200      	movs	r2, #0
 80012ce:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc2.Init.DMAContinuousRequests = DISABLE;
 80012d0:	4b16      	ldr	r3, [pc, #88]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80012d8:	4b14      	ldr	r3, [pc, #80]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012da:	2200      	movs	r2, #0
 80012dc:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc2.Init.OversamplingMode = DISABLE;
 80012de:	4b13      	ldr	r3, [pc, #76]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012e0:	2200      	movs	r2, #0
 80012e2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80012e6:	4811      	ldr	r0, [pc, #68]	@ (800132c <MX_ADC2_Init+0xc0>)
 80012e8:	f001 f95a 	bl	80025a0 <HAL_ADC_Init>
 80012ec:	4603      	mov	r3, r0
 80012ee:	2b00      	cmp	r3, #0
 80012f0:	d001      	beq.n	80012f6 <MX_ADC2_Init+0x8a>
  {
    Error_Handler();
 80012f2:	f000 fb65 	bl	80019c0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 80012f6:	4b0f      	ldr	r3, [pc, #60]	@ (8001334 <MX_ADC2_Init+0xc8>)
 80012f8:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80012fa:	2306      	movs	r3, #6
 80012fc:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 80012fe:	2302      	movs	r3, #2
 8001300:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8001302:	237f      	movs	r3, #127	@ 0x7f
 8001304:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8001306:	2304      	movs	r3, #4
 8001308:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 800130a:	2300      	movs	r3, #0
 800130c:	617b      	str	r3, [r7, #20]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800130e:	463b      	mov	r3, r7
 8001310:	4619      	mov	r1, r3
 8001312:	4806      	ldr	r0, [pc, #24]	@ (800132c <MX_ADC2_Init+0xc0>)
 8001314:	f001 fc9e 	bl	8002c54 <HAL_ADC_ConfigChannel>
 8001318:	4603      	mov	r3, r0
 800131a:	2b00      	cmp	r3, #0
 800131c:	d001      	beq.n	8001322 <MX_ADC2_Init+0xb6>
  {
    Error_Handler();
 800131e:	f000 fb4f 	bl	80019c0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */
  //if (HAL_ADCEx_Calibration_Start(&hadc2, ADC_DIFFERENTIAL_ENDED)!= HAL_OK){ Error_Handler(); }
  /* USER CODE END ADC2_Init 2 */

}
 8001322:	bf00      	nop
 8001324:	3720      	adds	r7, #32
 8001326:	46bd      	mov	sp, r7
 8001328:	bd80      	pop	{r7, pc}
 800132a:	bf00      	nop
 800132c:	2000009c 	.word	0x2000009c
 8001330:	50000100 	.word	0x50000100
 8001334:	0c900008 	.word	0x0c900008

08001338 <MX_FDCAN1_Init>:
  * @brief FDCAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_FDCAN1_Init(void)
{
 8001338:	b580      	push	{r7, lr}
 800133a:	af00      	add	r7, sp, #0
  /* USER CODE END FDCAN1_Init 0 */

  /* USER CODE BEGIN FDCAN1_Init 1 */

  /* USER CODE END FDCAN1_Init 1 */
  hfdcan1.Instance = FDCAN1;
 800133c:	4b2e      	ldr	r3, [pc, #184]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 800133e:	4a2f      	ldr	r2, [pc, #188]	@ (80013fc <MX_FDCAN1_Init+0xc4>)
 8001340:	601a      	str	r2, [r3, #0]
  hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 8001342:	4b2d      	ldr	r3, [pc, #180]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 8001344:	2200      	movs	r2, #0
 8001346:	605a      	str	r2, [r3, #4]
  hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 8001348:	4b2b      	ldr	r3, [pc, #172]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 800134a:	2200      	movs	r2, #0
 800134c:	609a      	str	r2, [r3, #8]
  hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 800134e:	4b2a      	ldr	r3, [pc, #168]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 8001350:	2200      	movs	r2, #0
 8001352:	60da      	str	r2, [r3, #12]
  hfdcan1.Init.AutoRetransmission = DISABLE;
 8001354:	4b28      	ldr	r3, [pc, #160]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 8001356:	2200      	movs	r2, #0
 8001358:	741a      	strb	r2, [r3, #16]
  hfdcan1.Init.TransmitPause = DISABLE;
 800135a:	4b27      	ldr	r3, [pc, #156]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 800135c:	2200      	movs	r2, #0
 800135e:	745a      	strb	r2, [r3, #17]
  hfdcan1.Init.ProtocolException = DISABLE;
 8001360:	4b25      	ldr	r3, [pc, #148]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 8001362:	2200      	movs	r2, #0
 8001364:	749a      	strb	r2, [r3, #18]
  hfdcan1.Init.NominalPrescaler = 1;
 8001366:	4b24      	ldr	r3, [pc, #144]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 8001368:	2201      	movs	r2, #1
 800136a:	615a      	str	r2, [r3, #20]
  hfdcan1.Init.NominalSyncJumpWidth = 1;
 800136c:	4b22      	ldr	r3, [pc, #136]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 800136e:	2201      	movs	r2, #1
 8001370:	619a      	str	r2, [r3, #24]
  hfdcan1.Init.NominalTimeSeg1 = 13;
 8001372:	4b21      	ldr	r3, [pc, #132]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 8001374:	220d      	movs	r2, #13
 8001376:	61da      	str	r2, [r3, #28]
  hfdcan1.Init.NominalTimeSeg2 = 2;
 8001378:	4b1f      	ldr	r3, [pc, #124]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 800137a:	2202      	movs	r2, #2
 800137c:	621a      	str	r2, [r3, #32]
  hfdcan1.Init.DataPrescaler = 1;
 800137e:	4b1e      	ldr	r3, [pc, #120]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 8001380:	2201      	movs	r2, #1
 8001382:	625a      	str	r2, [r3, #36]	@ 0x24
  hfdcan1.Init.DataSyncJumpWidth = 1;
 8001384:	4b1c      	ldr	r3, [pc, #112]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 8001386:	2201      	movs	r2, #1
 8001388:	629a      	str	r2, [r3, #40]	@ 0x28
  hfdcan1.Init.DataTimeSeg1 = 1;
 800138a:	4b1b      	ldr	r3, [pc, #108]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 800138c:	2201      	movs	r2, #1
 800138e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hfdcan1.Init.DataTimeSeg2 = 1;
 8001390:	4b19      	ldr	r3, [pc, #100]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 8001392:	2201      	movs	r2, #1
 8001394:	631a      	str	r2, [r3, #48]	@ 0x30
  hfdcan1.Init.StdFiltersNbr = 28;
 8001396:	4b18      	ldr	r3, [pc, #96]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 8001398:	221c      	movs	r2, #28
 800139a:	635a      	str	r2, [r3, #52]	@ 0x34
  hfdcan1.Init.ExtFiltersNbr = 0;
 800139c:	4b16      	ldr	r3, [pc, #88]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 800139e:	2200      	movs	r2, #0
 80013a0:	639a      	str	r2, [r3, #56]	@ 0x38
  hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 80013a2:	4b15      	ldr	r3, [pc, #84]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 80013a4:	2200      	movs	r2, #0
 80013a6:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 80013a8:	4813      	ldr	r0, [pc, #76]	@ (80013f8 <MX_FDCAN1_Init+0xc0>)
 80013aa:	f002 fbbf 	bl	8003b2c <HAL_FDCAN_Init>
 80013ae:	4603      	mov	r3, r0
 80013b0:	2b00      	cmp	r3, #0
 80013b2:	d001      	beq.n	80013b8 <MX_FDCAN1_Init+0x80>
  {
    Error_Handler();
 80013b4:	f000 fb04 	bl	80019c0 <Error_Handler>
  }
  /* USER CODE BEGIN FDCAN1_Init 2 */
  TxHeader.Identifier = CAN_ID; // Modify this with your identifier
 80013b8:	4b11      	ldr	r3, [pc, #68]	@ (8001400 <MX_FDCAN1_Init+0xc8>)
 80013ba:	781b      	ldrb	r3, [r3, #0]
 80013bc:	461a      	mov	r2, r3
 80013be:	4b11      	ldr	r3, [pc, #68]	@ (8001404 <MX_FDCAN1_Init+0xcc>)
 80013c0:	601a      	str	r2, [r3, #0]
  TxHeader.IdType = FDCAN_STANDARD_ID;
 80013c2:	4b10      	ldr	r3, [pc, #64]	@ (8001404 <MX_FDCAN1_Init+0xcc>)
 80013c4:	2200      	movs	r2, #0
 80013c6:	605a      	str	r2, [r3, #4]
  TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 80013c8:	4b0e      	ldr	r3, [pc, #56]	@ (8001404 <MX_FDCAN1_Init+0xcc>)
 80013ca:	2200      	movs	r2, #0
 80013cc:	609a      	str	r2, [r3, #8]
  TxHeader.DataLength = 5;
 80013ce:	4b0d      	ldr	r3, [pc, #52]	@ (8001404 <MX_FDCAN1_Init+0xcc>)
 80013d0:	2205      	movs	r2, #5
 80013d2:	60da      	str	r2, [r3, #12]
  TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 80013d4:	4b0b      	ldr	r3, [pc, #44]	@ (8001404 <MX_FDCAN1_Init+0xcc>)
 80013d6:	2200      	movs	r2, #0
 80013d8:	611a      	str	r2, [r3, #16]
  TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 80013da:	4b0a      	ldr	r3, [pc, #40]	@ (8001404 <MX_FDCAN1_Init+0xcc>)
 80013dc:	2200      	movs	r2, #0
 80013de:	615a      	str	r2, [r3, #20]
  TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
 80013e0:	4b08      	ldr	r3, [pc, #32]	@ (8001404 <MX_FDCAN1_Init+0xcc>)
 80013e2:	2200      	movs	r2, #0
 80013e4:	619a      	str	r2, [r3, #24]
  TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 80013e6:	4b07      	ldr	r3, [pc, #28]	@ (8001404 <MX_FDCAN1_Init+0xcc>)
 80013e8:	2200      	movs	r2, #0
 80013ea:	61da      	str	r2, [r3, #28]
  TxHeader.MessageMarker = 0;
 80013ec:	4b05      	ldr	r3, [pc, #20]	@ (8001404 <MX_FDCAN1_Init+0xcc>)
 80013ee:	2200      	movs	r2, #0
 80013f0:	621a      	str	r2, [r3, #32]
  /* USER CODE END FDCAN1_Init 2 */

}
 80013f2:	bf00      	nop
 80013f4:	bd80      	pop	{r7, pc}
 80013f6:	bf00      	nop
 80013f8:	20000108 	.word	0x20000108
 80013fc:	40006400 	.word	0x40006400
 8001400:	2000064c 	.word	0x2000064c
 8001404:	20000650 	.word	0x20000650

08001408 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001408:	b580      	push	{r7, lr}
 800140a:	b09c      	sub	sp, #112	@ 0x70
 800140c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800140e:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8001412:	2200      	movs	r2, #0
 8001414:	601a      	str	r2, [r3, #0]
 8001416:	605a      	str	r2, [r3, #4]
 8001418:	609a      	str	r2, [r3, #8]
 800141a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800141c:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001420:	2200      	movs	r2, #0
 8001422:	601a      	str	r2, [r3, #0]
 8001424:	605a      	str	r2, [r3, #4]
 8001426:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001428:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 800142c:	2200      	movs	r2, #0
 800142e:	601a      	str	r2, [r3, #0]
 8001430:	605a      	str	r2, [r3, #4]
 8001432:	609a      	str	r2, [r3, #8]
 8001434:	60da      	str	r2, [r3, #12]
 8001436:	611a      	str	r2, [r3, #16]
 8001438:	615a      	str	r2, [r3, #20]
 800143a:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800143c:	1d3b      	adds	r3, r7, #4
 800143e:	2234      	movs	r2, #52	@ 0x34
 8001440:	2100      	movs	r1, #0
 8001442:	4618      	mov	r0, r3
 8001444:	f005 fe28 	bl	8007098 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001448:	4b45      	ldr	r3, [pc, #276]	@ (8001560 <MX_TIM1_Init+0x158>)
 800144a:	4a46      	ldr	r2, [pc, #280]	@ (8001564 <MX_TIM1_Init+0x15c>)
 800144c:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 15;
 800144e:	4b44      	ldr	r3, [pc, #272]	@ (8001560 <MX_TIM1_Init+0x158>)
 8001450:	220f      	movs	r2, #15
 8001452:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001454:	4b42      	ldr	r3, [pc, #264]	@ (8001560 <MX_TIM1_Init+0x158>)
 8001456:	2200      	movs	r2, #0
 8001458:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 39;
 800145a:	4b41      	ldr	r3, [pc, #260]	@ (8001560 <MX_TIM1_Init+0x158>)
 800145c:	2227      	movs	r2, #39	@ 0x27
 800145e:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001460:	4b3f      	ldr	r3, [pc, #252]	@ (8001560 <MX_TIM1_Init+0x158>)
 8001462:	2200      	movs	r2, #0
 8001464:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001466:	4b3e      	ldr	r3, [pc, #248]	@ (8001560 <MX_TIM1_Init+0x158>)
 8001468:	2200      	movs	r2, #0
 800146a:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800146c:	4b3c      	ldr	r3, [pc, #240]	@ (8001560 <MX_TIM1_Init+0x158>)
 800146e:	2200      	movs	r2, #0
 8001470:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001472:	483b      	ldr	r0, [pc, #236]	@ (8001560 <MX_TIM1_Init+0x158>)
 8001474:	f004 fab4 	bl	80059e0 <HAL_TIM_Base_Init>
 8001478:	4603      	mov	r3, r0
 800147a:	2b00      	cmp	r3, #0
 800147c:	d001      	beq.n	8001482 <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 800147e:	f000 fa9f 	bl	80019c0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001482:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001486:	663b      	str	r3, [r7, #96]	@ 0x60
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001488:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800148c:	4619      	mov	r1, r3
 800148e:	4834      	ldr	r0, [pc, #208]	@ (8001560 <MX_TIM1_Init+0x158>)
 8001490:	f004 ff2e 	bl	80062f0 <HAL_TIM_ConfigClockSource>
 8001494:	4603      	mov	r3, r0
 8001496:	2b00      	cmp	r3, #0
 8001498:	d001      	beq.n	800149e <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 800149a:	f000 fa91 	bl	80019c0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 800149e:	4830      	ldr	r0, [pc, #192]	@ (8001560 <MX_TIM1_Init+0x158>)
 80014a0:	f004 fb60 	bl	8005b64 <HAL_TIM_PWM_Init>
 80014a4:	4603      	mov	r3, r0
 80014a6:	2b00      	cmp	r3, #0
 80014a8:	d001      	beq.n	80014ae <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 80014aa:	f000 fa89 	bl	80019c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014ae:	2300      	movs	r3, #0
 80014b0:	657b      	str	r3, [r7, #84]	@ 0x54
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 80014b2:	2300      	movs	r3, #0
 80014b4:	65bb      	str	r3, [r7, #88]	@ 0x58
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80014b6:	2300      	movs	r3, #0
 80014b8:	65fb      	str	r3, [r7, #92]	@ 0x5c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80014ba:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80014be:	4619      	mov	r1, r3
 80014c0:	4827      	ldr	r0, [pc, #156]	@ (8001560 <MX_TIM1_Init+0x158>)
 80014c2:	f005 fc95 	bl	8006df0 <HAL_TIMEx_MasterConfigSynchronization>
 80014c6:	4603      	mov	r3, r0
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d001      	beq.n	80014d0 <MX_TIM1_Init+0xc8>
  {
    Error_Handler();
 80014cc:	f000 fa78 	bl	80019c0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80014d0:	2360      	movs	r3, #96	@ 0x60
 80014d2:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.Pulse = 0;
 80014d4:	2300      	movs	r3, #0
 80014d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80014d8:	2300      	movs	r3, #0
 80014da:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80014dc:	2300      	movs	r3, #0
 80014de:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80014e0:	2300      	movs	r3, #0
 80014e2:	64bb      	str	r3, [r7, #72]	@ 0x48
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80014e4:	2300      	movs	r3, #0
 80014e6:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80014e8:	2300      	movs	r3, #0
 80014ea:	653b      	str	r3, [r7, #80]	@ 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80014ec:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80014f0:	2200      	movs	r2, #0
 80014f2:	4619      	mov	r1, r3
 80014f4:	481a      	ldr	r0, [pc, #104]	@ (8001560 <MX_TIM1_Init+0x158>)
 80014f6:	f004 fde7 	bl	80060c8 <HAL_TIM_PWM_ConfigChannel>
 80014fa:	4603      	mov	r3, r0
 80014fc:	2b00      	cmp	r3, #0
 80014fe:	d001      	beq.n	8001504 <MX_TIM1_Init+0xfc>
  {
    Error_Handler();
 8001500:	f000 fa5e 	bl	80019c0 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001504:	2300      	movs	r3, #0
 8001506:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001508:	2300      	movs	r3, #0
 800150a:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800150c:	2300      	movs	r3, #0
 800150e:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8001510:	2300      	movs	r3, #0
 8001512:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001514:	2300      	movs	r3, #0
 8001516:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001518:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800151c:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 800151e:	2300      	movs	r3, #0
 8001520:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 8001522:	2300      	movs	r3, #0
 8001524:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8001526:	2300      	movs	r3, #0
 8001528:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 800152a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800152e:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.Break2Filter = 0;
 8001530:	2300      	movs	r3, #0
 8001532:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 8001534:	2300      	movs	r3, #0
 8001536:	633b      	str	r3, [r7, #48]	@ 0x30
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001538:	2300      	movs	r3, #0
 800153a:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800153c:	1d3b      	adds	r3, r7, #4
 800153e:	4619      	mov	r1, r3
 8001540:	4807      	ldr	r0, [pc, #28]	@ (8001560 <MX_TIM1_Init+0x158>)
 8001542:	f005 fcd7 	bl	8006ef4 <HAL_TIMEx_ConfigBreakDeadTime>
 8001546:	4603      	mov	r3, r0
 8001548:	2b00      	cmp	r3, #0
 800154a:	d001      	beq.n	8001550 <MX_TIM1_Init+0x148>
  {
    Error_Handler();
 800154c:	f000 fa38 	bl	80019c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8001550:	4803      	ldr	r0, [pc, #12]	@ (8001560 <MX_TIM1_Init+0x158>)
 8001552:	f000 fc19 	bl	8001d88 <HAL_TIM_MspPostInit>

}
 8001556:	bf00      	nop
 8001558:	3770      	adds	r7, #112	@ 0x70
 800155a:	46bd      	mov	sp, r7
 800155c:	bd80      	pop	{r7, pc}
 800155e:	bf00      	nop
 8001560:	2000016c 	.word	0x2000016c
 8001564:	40012c00 	.word	0x40012c00

08001568 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001568:	b580      	push	{r7, lr}
 800156a:	b08e      	sub	sp, #56	@ 0x38
 800156c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800156e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001572:	2200      	movs	r2, #0
 8001574:	601a      	str	r2, [r3, #0]
 8001576:	605a      	str	r2, [r3, #4]
 8001578:	609a      	str	r2, [r3, #8]
 800157a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800157c:	f107 031c 	add.w	r3, r7, #28
 8001580:	2200      	movs	r2, #0
 8001582:	601a      	str	r2, [r3, #0]
 8001584:	605a      	str	r2, [r3, #4]
 8001586:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001588:	463b      	mov	r3, r7
 800158a:	2200      	movs	r2, #0
 800158c:	601a      	str	r2, [r3, #0]
 800158e:	605a      	str	r2, [r3, #4]
 8001590:	609a      	str	r2, [r3, #8]
 8001592:	60da      	str	r2, [r3, #12]
 8001594:	611a      	str	r2, [r3, #16]
 8001596:	615a      	str	r2, [r3, #20]
 8001598:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800159a:	4b2d      	ldr	r3, [pc, #180]	@ (8001650 <MX_TIM2_Init+0xe8>)
 800159c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80015a0:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 15;
 80015a2:	4b2b      	ldr	r3, [pc, #172]	@ (8001650 <MX_TIM2_Init+0xe8>)
 80015a4:	220f      	movs	r2, #15
 80015a6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80015a8:	4b29      	ldr	r3, [pc, #164]	@ (8001650 <MX_TIM2_Init+0xe8>)
 80015aa:	2200      	movs	r2, #0
 80015ac:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 39;
 80015ae:	4b28      	ldr	r3, [pc, #160]	@ (8001650 <MX_TIM2_Init+0xe8>)
 80015b0:	2227      	movs	r2, #39	@ 0x27
 80015b2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80015b4:	4b26      	ldr	r3, [pc, #152]	@ (8001650 <MX_TIM2_Init+0xe8>)
 80015b6:	2200      	movs	r2, #0
 80015b8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80015ba:	4b25      	ldr	r3, [pc, #148]	@ (8001650 <MX_TIM2_Init+0xe8>)
 80015bc:	2200      	movs	r2, #0
 80015be:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80015c0:	4823      	ldr	r0, [pc, #140]	@ (8001650 <MX_TIM2_Init+0xe8>)
 80015c2:	f004 fa0d 	bl	80059e0 <HAL_TIM_Base_Init>
 80015c6:	4603      	mov	r3, r0
 80015c8:	2b00      	cmp	r3, #0
 80015ca:	d001      	beq.n	80015d0 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 80015cc:	f000 f9f8 	bl	80019c0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80015d0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80015d4:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80015d6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80015da:	4619      	mov	r1, r3
 80015dc:	481c      	ldr	r0, [pc, #112]	@ (8001650 <MX_TIM2_Init+0xe8>)
 80015de:	f004 fe87 	bl	80062f0 <HAL_TIM_ConfigClockSource>
 80015e2:	4603      	mov	r3, r0
 80015e4:	2b00      	cmp	r3, #0
 80015e6:	d001      	beq.n	80015ec <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 80015e8:	f000 f9ea 	bl	80019c0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80015ec:	4818      	ldr	r0, [pc, #96]	@ (8001650 <MX_TIM2_Init+0xe8>)
 80015ee:	f004 fab9 	bl	8005b64 <HAL_TIM_PWM_Init>
 80015f2:	4603      	mov	r3, r0
 80015f4:	2b00      	cmp	r3, #0
 80015f6:	d001      	beq.n	80015fc <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 80015f8:	f000 f9e2 	bl	80019c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015fc:	2300      	movs	r3, #0
 80015fe:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001600:	2300      	movs	r3, #0
 8001602:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001604:	f107 031c 	add.w	r3, r7, #28
 8001608:	4619      	mov	r1, r3
 800160a:	4811      	ldr	r0, [pc, #68]	@ (8001650 <MX_TIM2_Init+0xe8>)
 800160c:	f005 fbf0 	bl	8006df0 <HAL_TIMEx_MasterConfigSynchronization>
 8001610:	4603      	mov	r3, r0
 8001612:	2b00      	cmp	r3, #0
 8001614:	d001      	beq.n	800161a <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 8001616:	f000 f9d3 	bl	80019c0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800161a:	2360      	movs	r3, #96	@ 0x60
 800161c:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 800161e:	2300      	movs	r3, #0
 8001620:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001622:	2300      	movs	r3, #0
 8001624:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001626:	2300      	movs	r3, #0
 8001628:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800162a:	463b      	mov	r3, r7
 800162c:	2200      	movs	r2, #0
 800162e:	4619      	mov	r1, r3
 8001630:	4807      	ldr	r0, [pc, #28]	@ (8001650 <MX_TIM2_Init+0xe8>)
 8001632:	f004 fd49 	bl	80060c8 <HAL_TIM_PWM_ConfigChannel>
 8001636:	4603      	mov	r3, r0
 8001638:	2b00      	cmp	r3, #0
 800163a:	d001      	beq.n	8001640 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 800163c:	f000 f9c0 	bl	80019c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001640:	4803      	ldr	r0, [pc, #12]	@ (8001650 <MX_TIM2_Init+0xe8>)
 8001642:	f000 fba1 	bl	8001d88 <HAL_TIM_MspPostInit>

}
 8001646:	bf00      	nop
 8001648:	3738      	adds	r7, #56	@ 0x38
 800164a:	46bd      	mov	sp, r7
 800164c:	bd80      	pop	{r7, pc}
 800164e:	bf00      	nop
 8001650:	200001b8 	.word	0x200001b8

08001654 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001654:	b580      	push	{r7, lr}
 8001656:	b088      	sub	sp, #32
 8001658:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800165a:	f107 0310 	add.w	r3, r7, #16
 800165e:	2200      	movs	r2, #0
 8001660:	601a      	str	r2, [r3, #0]
 8001662:	605a      	str	r2, [r3, #4]
 8001664:	609a      	str	r2, [r3, #8]
 8001666:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001668:	1d3b      	adds	r3, r7, #4
 800166a:	2200      	movs	r2, #0
 800166c:	601a      	str	r2, [r3, #0]
 800166e:	605a      	str	r2, [r3, #4]
 8001670:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001672:	4b1d      	ldr	r3, [pc, #116]	@ (80016e8 <MX_TIM3_Init+0x94>)
 8001674:	4a1d      	ldr	r2, [pc, #116]	@ (80016ec <MX_TIM3_Init+0x98>)
 8001676:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 8001678:	4b1b      	ldr	r3, [pc, #108]	@ (80016e8 <MX_TIM3_Init+0x94>)
 800167a:	223f      	movs	r2, #63	@ 0x3f
 800167c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800167e:	4b1a      	ldr	r3, [pc, #104]	@ (80016e8 <MX_TIM3_Init+0x94>)
 8001680:	2200      	movs	r2, #0
 8001682:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 8001684:	4b18      	ldr	r3, [pc, #96]	@ (80016e8 <MX_TIM3_Init+0x94>)
 8001686:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800168a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800168c:	4b16      	ldr	r3, [pc, #88]	@ (80016e8 <MX_TIM3_Init+0x94>)
 800168e:	2200      	movs	r2, #0
 8001690:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001692:	4b15      	ldr	r3, [pc, #84]	@ (80016e8 <MX_TIM3_Init+0x94>)
 8001694:	2200      	movs	r2, #0
 8001696:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001698:	4813      	ldr	r0, [pc, #76]	@ (80016e8 <MX_TIM3_Init+0x94>)
 800169a:	f004 f9a1 	bl	80059e0 <HAL_TIM_Base_Init>
 800169e:	4603      	mov	r3, r0
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d001      	beq.n	80016a8 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 80016a4:	f000 f98c 	bl	80019c0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80016a8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80016ac:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80016ae:	f107 0310 	add.w	r3, r7, #16
 80016b2:	4619      	mov	r1, r3
 80016b4:	480c      	ldr	r0, [pc, #48]	@ (80016e8 <MX_TIM3_Init+0x94>)
 80016b6:	f004 fe1b 	bl	80062f0 <HAL_TIM_ConfigClockSource>
 80016ba:	4603      	mov	r3, r0
 80016bc:	2b00      	cmp	r3, #0
 80016be:	d001      	beq.n	80016c4 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 80016c0:	f000 f97e 	bl	80019c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80016c4:	2300      	movs	r3, #0
 80016c6:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80016c8:	2300      	movs	r3, #0
 80016ca:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80016cc:	1d3b      	adds	r3, r7, #4
 80016ce:	4619      	mov	r1, r3
 80016d0:	4805      	ldr	r0, [pc, #20]	@ (80016e8 <MX_TIM3_Init+0x94>)
 80016d2:	f005 fb8d 	bl	8006df0 <HAL_TIMEx_MasterConfigSynchronization>
 80016d6:	4603      	mov	r3, r0
 80016d8:	2b00      	cmp	r3, #0
 80016da:	d001      	beq.n	80016e0 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80016dc:	f000 f970 	bl	80019c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80016e0:	bf00      	nop
 80016e2:	3720      	adds	r7, #32
 80016e4:	46bd      	mov	sp, r7
 80016e6:	bd80      	pop	{r7, pc}
 80016e8:	20000204 	.word	0x20000204
 80016ec:	40000400 	.word	0x40000400

080016f0 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80016f0:	b580      	push	{r7, lr}
 80016f2:	b08e      	sub	sp, #56	@ 0x38
 80016f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80016f6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80016fa:	2200      	movs	r2, #0
 80016fc:	601a      	str	r2, [r3, #0]
 80016fe:	605a      	str	r2, [r3, #4]
 8001700:	609a      	str	r2, [r3, #8]
 8001702:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001704:	f107 031c 	add.w	r3, r7, #28
 8001708:	2200      	movs	r2, #0
 800170a:	601a      	str	r2, [r3, #0]
 800170c:	605a      	str	r2, [r3, #4]
 800170e:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001710:	463b      	mov	r3, r7
 8001712:	2200      	movs	r2, #0
 8001714:	601a      	str	r2, [r3, #0]
 8001716:	605a      	str	r2, [r3, #4]
 8001718:	609a      	str	r2, [r3, #8]
 800171a:	60da      	str	r2, [r3, #12]
 800171c:	611a      	str	r2, [r3, #16]
 800171e:	615a      	str	r2, [r3, #20]
 8001720:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001722:	4b2b      	ldr	r3, [pc, #172]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 8001724:	4a2b      	ldr	r2, [pc, #172]	@ (80017d4 <MX_TIM4_Init+0xe4>)
 8001726:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8001728:	4b29      	ldr	r3, [pc, #164]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 800172a:	2200      	movs	r2, #0
 800172c:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800172e:	4b28      	ldr	r3, [pc, #160]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 8001730:	2200      	movs	r2, #0
 8001732:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8001734:	4b26      	ldr	r3, [pc, #152]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 8001736:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800173a:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800173c:	4b24      	ldr	r3, [pc, #144]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 800173e:	2200      	movs	r2, #0
 8001740:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001742:	4b23      	ldr	r3, [pc, #140]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 8001744:	2200      	movs	r2, #0
 8001746:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001748:	4821      	ldr	r0, [pc, #132]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 800174a:	f004 f949 	bl	80059e0 <HAL_TIM_Base_Init>
 800174e:	4603      	mov	r3, r0
 8001750:	2b00      	cmp	r3, #0
 8001752:	d001      	beq.n	8001758 <MX_TIM4_Init+0x68>
  {
    Error_Handler();
 8001754:	f000 f934 	bl	80019c0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001758:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800175c:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800175e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001762:	4619      	mov	r1, r3
 8001764:	481a      	ldr	r0, [pc, #104]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 8001766:	f004 fdc3 	bl	80062f0 <HAL_TIM_ConfigClockSource>
 800176a:	4603      	mov	r3, r0
 800176c:	2b00      	cmp	r3, #0
 800176e:	d001      	beq.n	8001774 <MX_TIM4_Init+0x84>
  {
    Error_Handler();
 8001770:	f000 f926 	bl	80019c0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001774:	4816      	ldr	r0, [pc, #88]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 8001776:	f004 f9f5 	bl	8005b64 <HAL_TIM_PWM_Init>
 800177a:	4603      	mov	r3, r0
 800177c:	2b00      	cmp	r3, #0
 800177e:	d001      	beq.n	8001784 <MX_TIM4_Init+0x94>
  {
    Error_Handler();
 8001780:	f000 f91e 	bl	80019c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001784:	2300      	movs	r3, #0
 8001786:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001788:	2300      	movs	r3, #0
 800178a:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800178c:	f107 031c 	add.w	r3, r7, #28
 8001790:	4619      	mov	r1, r3
 8001792:	480f      	ldr	r0, [pc, #60]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 8001794:	f005 fb2c 	bl	8006df0 <HAL_TIMEx_MasterConfigSynchronization>
 8001798:	4603      	mov	r3, r0
 800179a:	2b00      	cmp	r3, #0
 800179c:	d001      	beq.n	80017a2 <MX_TIM4_Init+0xb2>
  {
    Error_Handler();
 800179e:	f000 f90f 	bl	80019c0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80017a2:	2360      	movs	r3, #96	@ 0x60
 80017a4:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80017a6:	2300      	movs	r3, #0
 80017a8:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80017aa:	2300      	movs	r3, #0
 80017ac:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80017ae:	2300      	movs	r3, #0
 80017b0:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80017b2:	463b      	mov	r3, r7
 80017b4:	2200      	movs	r2, #0
 80017b6:	4619      	mov	r1, r3
 80017b8:	4805      	ldr	r0, [pc, #20]	@ (80017d0 <MX_TIM4_Init+0xe0>)
 80017ba:	f004 fc85 	bl	80060c8 <HAL_TIM_PWM_ConfigChannel>
 80017be:	4603      	mov	r3, r0
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	d001      	beq.n	80017c8 <MX_TIM4_Init+0xd8>
  {
    Error_Handler();
 80017c4:	f000 f8fc 	bl	80019c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80017c8:	bf00      	nop
 80017ca:	3738      	adds	r7, #56	@ 0x38
 80017cc:	46bd      	mov	sp, r7
 80017ce:	bd80      	pop	{r7, pc}
 80017d0:	20000250 	.word	0x20000250
 80017d4:	40000800 	.word	0x40000800

080017d8 <MX_TIM6_Init>:
  * @brief TIM6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM6_Init(void)
{
 80017d8:	b580      	push	{r7, lr}
 80017da:	b084      	sub	sp, #16
 80017dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017de:	1d3b      	adds	r3, r7, #4
 80017e0:	2200      	movs	r2, #0
 80017e2:	601a      	str	r2, [r3, #0]
 80017e4:	605a      	str	r2, [r3, #4]
 80017e6:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 80017e8:	4b14      	ldr	r3, [pc, #80]	@ (800183c <MX_TIM6_Init+0x64>)
 80017ea:	4a15      	ldr	r2, [pc, #84]	@ (8001840 <MX_TIM6_Init+0x68>)
 80017ec:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 0;
 80017ee:	4b13      	ldr	r3, [pc, #76]	@ (800183c <MX_TIM6_Init+0x64>)
 80017f0:	2200      	movs	r2, #0
 80017f2:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017f4:	4b11      	ldr	r3, [pc, #68]	@ (800183c <MX_TIM6_Init+0x64>)
 80017f6:	2200      	movs	r2, #0
 80017f8:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65535;
 80017fa:	4b10      	ldr	r3, [pc, #64]	@ (800183c <MX_TIM6_Init+0x64>)
 80017fc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001800:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001802:	4b0e      	ldr	r3, [pc, #56]	@ (800183c <MX_TIM6_Init+0x64>)
 8001804:	2200      	movs	r2, #0
 8001806:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 8001808:	480c      	ldr	r0, [pc, #48]	@ (800183c <MX_TIM6_Init+0x64>)
 800180a:	f004 f8e9 	bl	80059e0 <HAL_TIM_Base_Init>
 800180e:	4603      	mov	r3, r0
 8001810:	2b00      	cmp	r3, #0
 8001812:	d001      	beq.n	8001818 <MX_TIM6_Init+0x40>
  {
    Error_Handler();
 8001814:	f000 f8d4 	bl	80019c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001818:	2300      	movs	r3, #0
 800181a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800181c:	2300      	movs	r3, #0
 800181e:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 8001820:	1d3b      	adds	r3, r7, #4
 8001822:	4619      	mov	r1, r3
 8001824:	4805      	ldr	r0, [pc, #20]	@ (800183c <MX_TIM6_Init+0x64>)
 8001826:	f005 fae3 	bl	8006df0 <HAL_TIMEx_MasterConfigSynchronization>
 800182a:	4603      	mov	r3, r0
 800182c:	2b00      	cmp	r3, #0
 800182e:	d001      	beq.n	8001834 <MX_TIM6_Init+0x5c>
  {
    Error_Handler();
 8001830:	f000 f8c6 	bl	80019c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 8001834:	bf00      	nop
 8001836:	3710      	adds	r7, #16
 8001838:	46bd      	mov	sp, r7
 800183a:	bd80      	pop	{r7, pc}
 800183c:	2000029c 	.word	0x2000029c
 8001840:	40001000 	.word	0x40001000

08001844 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 8001844:	b580      	push	{r7, lr}
 8001846:	b084      	sub	sp, #16
 8001848:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800184a:	1d3b      	adds	r3, r7, #4
 800184c:	2200      	movs	r2, #0
 800184e:	601a      	str	r2, [r3, #0]
 8001850:	605a      	str	r2, [r3, #4]
 8001852:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 8001854:	4b14      	ldr	r3, [pc, #80]	@ (80018a8 <MX_TIM7_Init+0x64>)
 8001856:	4a15      	ldr	r2, [pc, #84]	@ (80018ac <MX_TIM7_Init+0x68>)
 8001858:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 0;
 800185a:	4b13      	ldr	r3, [pc, #76]	@ (80018a8 <MX_TIM7_Init+0x64>)
 800185c:	2200      	movs	r2, #0
 800185e:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001860:	4b11      	ldr	r3, [pc, #68]	@ (80018a8 <MX_TIM7_Init+0x64>)
 8001862:	2200      	movs	r2, #0
 8001864:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 65535;
 8001866:	4b10      	ldr	r3, [pc, #64]	@ (80018a8 <MX_TIM7_Init+0x64>)
 8001868:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800186c:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800186e:	4b0e      	ldr	r3, [pc, #56]	@ (80018a8 <MX_TIM7_Init+0x64>)
 8001870:	2200      	movs	r2, #0
 8001872:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001874:	480c      	ldr	r0, [pc, #48]	@ (80018a8 <MX_TIM7_Init+0x64>)
 8001876:	f004 f8b3 	bl	80059e0 <HAL_TIM_Base_Init>
 800187a:	4603      	mov	r3, r0
 800187c:	2b00      	cmp	r3, #0
 800187e:	d001      	beq.n	8001884 <MX_TIM7_Init+0x40>
  {
    Error_Handler();
 8001880:	f000 f89e 	bl	80019c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001884:	2300      	movs	r3, #0
 8001886:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001888:	2300      	movs	r3, #0
 800188a:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800188c:	1d3b      	adds	r3, r7, #4
 800188e:	4619      	mov	r1, r3
 8001890:	4805      	ldr	r0, [pc, #20]	@ (80018a8 <MX_TIM7_Init+0x64>)
 8001892:	f005 faad 	bl	8006df0 <HAL_TIMEx_MasterConfigSynchronization>
 8001896:	4603      	mov	r3, r0
 8001898:	2b00      	cmp	r3, #0
 800189a:	d001      	beq.n	80018a0 <MX_TIM7_Init+0x5c>
  {
    Error_Handler();
 800189c:	f000 f890 	bl	80019c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 80018a0:	bf00      	nop
 80018a2:	3710      	adds	r7, #16
 80018a4:	46bd      	mov	sp, r7
 80018a6:	bd80      	pop	{r7, pc}
 80018a8:	200002e8 	.word	0x200002e8
 80018ac:	40001400 	.word	0x40001400

080018b0 <MX_TIM16_Init>:
  * @brief TIM16 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM16_Init(void)
{
 80018b0:	b580      	push	{r7, lr}
 80018b2:	af00      	add	r7, sp, #0
  /* USER CODE END TIM16_Init 0 */

  /* USER CODE BEGIN TIM16_Init 1 */

  /* USER CODE END TIM16_Init 1 */
  htim16.Instance = TIM16;
 80018b4:	4b0f      	ldr	r3, [pc, #60]	@ (80018f4 <MX_TIM16_Init+0x44>)
 80018b6:	4a10      	ldr	r2, [pc, #64]	@ (80018f8 <MX_TIM16_Init+0x48>)
 80018b8:	601a      	str	r2, [r3, #0]
  htim16.Init.Prescaler = 0;
 80018ba:	4b0e      	ldr	r3, [pc, #56]	@ (80018f4 <MX_TIM16_Init+0x44>)
 80018bc:	2200      	movs	r2, #0
 80018be:	605a      	str	r2, [r3, #4]
  htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018c0:	4b0c      	ldr	r3, [pc, #48]	@ (80018f4 <MX_TIM16_Init+0x44>)
 80018c2:	2200      	movs	r2, #0
 80018c4:	609a      	str	r2, [r3, #8]
  htim16.Init.Period = 65535;
 80018c6:	4b0b      	ldr	r3, [pc, #44]	@ (80018f4 <MX_TIM16_Init+0x44>)
 80018c8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80018cc:	60da      	str	r2, [r3, #12]
  htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80018ce:	4b09      	ldr	r3, [pc, #36]	@ (80018f4 <MX_TIM16_Init+0x44>)
 80018d0:	2200      	movs	r2, #0
 80018d2:	611a      	str	r2, [r3, #16]
  htim16.Init.RepetitionCounter = 0;
 80018d4:	4b07      	ldr	r3, [pc, #28]	@ (80018f4 <MX_TIM16_Init+0x44>)
 80018d6:	2200      	movs	r2, #0
 80018d8:	615a      	str	r2, [r3, #20]
  htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018da:	4b06      	ldr	r3, [pc, #24]	@ (80018f4 <MX_TIM16_Init+0x44>)
 80018dc:	2200      	movs	r2, #0
 80018de:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 80018e0:	4804      	ldr	r0, [pc, #16]	@ (80018f4 <MX_TIM16_Init+0x44>)
 80018e2:	f004 f87d 	bl	80059e0 <HAL_TIM_Base_Init>
 80018e6:	4603      	mov	r3, r0
 80018e8:	2b00      	cmp	r3, #0
 80018ea:	d001      	beq.n	80018f0 <MX_TIM16_Init+0x40>
  {
    Error_Handler();
 80018ec:	f000 f868 	bl	80019c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM16_Init 2 */

  /* USER CODE END TIM16_Init 2 */

}
 80018f0:	bf00      	nop
 80018f2:	bd80      	pop	{r7, pc}
 80018f4:	20000334 	.word	0x20000334
 80018f8:	40014400 	.word	0x40014400

080018fc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80018fc:	b580      	push	{r7, lr}
 80018fe:	b088      	sub	sp, #32
 8001900:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001902:	f107 030c 	add.w	r3, r7, #12
 8001906:	2200      	movs	r2, #0
 8001908:	601a      	str	r2, [r3, #0]
 800190a:	605a      	str	r2, [r3, #4]
 800190c:	609a      	str	r2, [r3, #8]
 800190e:	60da      	str	r2, [r3, #12]
 8001910:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001912:	4b29      	ldr	r3, [pc, #164]	@ (80019b8 <MX_GPIO_Init+0xbc>)
 8001914:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001916:	4a28      	ldr	r2, [pc, #160]	@ (80019b8 <MX_GPIO_Init+0xbc>)
 8001918:	f043 0320 	orr.w	r3, r3, #32
 800191c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800191e:	4b26      	ldr	r3, [pc, #152]	@ (80019b8 <MX_GPIO_Init+0xbc>)
 8001920:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001922:	f003 0320 	and.w	r3, r3, #32
 8001926:	60bb      	str	r3, [r7, #8]
 8001928:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800192a:	4b23      	ldr	r3, [pc, #140]	@ (80019b8 <MX_GPIO_Init+0xbc>)
 800192c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800192e:	4a22      	ldr	r2, [pc, #136]	@ (80019b8 <MX_GPIO_Init+0xbc>)
 8001930:	f043 0301 	orr.w	r3, r3, #1
 8001934:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001936:	4b20      	ldr	r3, [pc, #128]	@ (80019b8 <MX_GPIO_Init+0xbc>)
 8001938:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800193a:	f003 0301 	and.w	r3, r3, #1
 800193e:	607b      	str	r3, [r7, #4]
 8001940:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001942:	4b1d      	ldr	r3, [pc, #116]	@ (80019b8 <MX_GPIO_Init+0xbc>)
 8001944:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001946:	4a1c      	ldr	r2, [pc, #112]	@ (80019b8 <MX_GPIO_Init+0xbc>)
 8001948:	f043 0302 	orr.w	r3, r3, #2
 800194c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800194e:	4b1a      	ldr	r3, [pc, #104]	@ (80019b8 <MX_GPIO_Init+0xbc>)
 8001950:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001952:	f003 0302 	and.w	r3, r3, #2
 8001956:	603b      	str	r3, [r7, #0]
 8001958:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, IN1_2_Pin|IN0_2_Pin|LED2_Pin|IN3_Pin
 800195a:	2200      	movs	r2, #0
 800195c:	f248 6192 	movw	r1, #34450	@ 0x8692
 8001960:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001964:	f003 f88a 	bl	8004a7c <HAL_GPIO_WritePin>
                          |IN2_Pin|IN1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED1_Pin|IN0_Pin|IN3_2_Pin|SEL1_Pin
 8001968:	2200      	movs	r2, #0
 800196a:	21f9      	movs	r1, #249	@ 0xf9
 800196c:	4813      	ldr	r0, [pc, #76]	@ (80019bc <MX_GPIO_Init+0xc0>)
 800196e:	f003 f885 	bl	8004a7c <HAL_GPIO_WritePin>
                          |SEL0_Pin|IN2_2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : IN1_2_Pin IN0_2_Pin LED2_Pin IN3_Pin
                           IN2_Pin IN1_Pin */
  GPIO_InitStruct.Pin = IN1_2_Pin|IN0_2_Pin|LED2_Pin|IN3_Pin
 8001972:	f248 6392 	movw	r3, #34450	@ 0x8692
 8001976:	60fb      	str	r3, [r7, #12]
                          |IN2_Pin|IN1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001978:	2301      	movs	r3, #1
 800197a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800197c:	2300      	movs	r3, #0
 800197e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001980:	2300      	movs	r3, #0
 8001982:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001984:	f107 030c 	add.w	r3, r7, #12
 8001988:	4619      	mov	r1, r3
 800198a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800198e:	f002 fef3 	bl	8004778 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED1_Pin IN0_Pin IN3_2_Pin SEL1_Pin
                           SEL0_Pin IN2_2_Pin */
  GPIO_InitStruct.Pin = LED1_Pin|IN0_Pin|IN3_2_Pin|SEL1_Pin
 8001992:	23f9      	movs	r3, #249	@ 0xf9
 8001994:	60fb      	str	r3, [r7, #12]
                          |SEL0_Pin|IN2_2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001996:	2301      	movs	r3, #1
 8001998:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800199a:	2300      	movs	r3, #0
 800199c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800199e:	2300      	movs	r3, #0
 80019a0:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019a2:	f107 030c 	add.w	r3, r7, #12
 80019a6:	4619      	mov	r1, r3
 80019a8:	4804      	ldr	r0, [pc, #16]	@ (80019bc <MX_GPIO_Init+0xc0>)
 80019aa:	f002 fee5 	bl	8004778 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80019ae:	bf00      	nop
 80019b0:	3720      	adds	r7, #32
 80019b2:	46bd      	mov	sp, r7
 80019b4:	bd80      	pop	{r7, pc}
 80019b6:	bf00      	nop
 80019b8:	40021000 	.word	0x40021000
 80019bc:	48000400 	.word	0x48000400

080019c0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80019c0:	b480      	push	{r7}
 80019c2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80019c4:	b672      	cpsid	i
}
 80019c6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80019c8:	bf00      	nop
 80019ca:	e7fd      	b.n	80019c8 <Error_Handler+0x8>

080019cc <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019cc:	b580      	push	{r7, lr}
 80019ce:	b082      	sub	sp, #8
 80019d0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019d2:	4b0f      	ldr	r3, [pc, #60]	@ (8001a10 <HAL_MspInit+0x44>)
 80019d4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80019d6:	4a0e      	ldr	r2, [pc, #56]	@ (8001a10 <HAL_MspInit+0x44>)
 80019d8:	f043 0301 	orr.w	r3, r3, #1
 80019dc:	6613      	str	r3, [r2, #96]	@ 0x60
 80019de:	4b0c      	ldr	r3, [pc, #48]	@ (8001a10 <HAL_MspInit+0x44>)
 80019e0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80019e2:	f003 0301 	and.w	r3, r3, #1
 80019e6:	607b      	str	r3, [r7, #4]
 80019e8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019ea:	4b09      	ldr	r3, [pc, #36]	@ (8001a10 <HAL_MspInit+0x44>)
 80019ec:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80019ee:	4a08      	ldr	r2, [pc, #32]	@ (8001a10 <HAL_MspInit+0x44>)
 80019f0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80019f4:	6593      	str	r3, [r2, #88]	@ 0x58
 80019f6:	4b06      	ldr	r3, [pc, #24]	@ (8001a10 <HAL_MspInit+0x44>)
 80019f8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80019fa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80019fe:	603b      	str	r3, [r7, #0]
 8001a00:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_PWREx_DisableUCPDDeadBattery();
 8001a02:	f003 f8f7 	bl	8004bf4 <HAL_PWREx_DisableUCPDDeadBattery>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a06:	bf00      	nop
 8001a08:	3708      	adds	r7, #8
 8001a0a:	46bd      	mov	sp, r7
 8001a0c:	bd80      	pop	{r7, pc}
 8001a0e:	bf00      	nop
 8001a10:	40021000 	.word	0x40021000

08001a14 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001a14:	b580      	push	{r7, lr}
 8001a16:	b09c      	sub	sp, #112	@ 0x70
 8001a18:	af00      	add	r7, sp, #0
 8001a1a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a1c:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001a20:	2200      	movs	r2, #0
 8001a22:	601a      	str	r2, [r3, #0]
 8001a24:	605a      	str	r2, [r3, #4]
 8001a26:	609a      	str	r2, [r3, #8]
 8001a28:	60da      	str	r2, [r3, #12]
 8001a2a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001a2c:	f107 0318 	add.w	r3, r7, #24
 8001a30:	2244      	movs	r2, #68	@ 0x44
 8001a32:	2100      	movs	r1, #0
 8001a34:	4618      	mov	r0, r3
 8001a36:	f005 fb2f 	bl	8007098 <memset>
  if(hadc->Instance==ADC1)
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	681b      	ldr	r3, [r3, #0]
 8001a3e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8001a42:	d13e      	bne.n	8001ac2 <HAL_ADC_MspInit+0xae>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 8001a44:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8001a48:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 8001a4a:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 8001a4e:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001a50:	f107 0318 	add.w	r3, r7, #24
 8001a54:	4618      	mov	r0, r3
 8001a56:	f003 fdd3 	bl	8005600 <HAL_RCCEx_PeriphCLKConfig>
 8001a5a:	4603      	mov	r3, r0
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	d001      	beq.n	8001a64 <HAL_ADC_MspInit+0x50>
    {
      Error_Handler();
 8001a60:	f7ff ffae 	bl	80019c0 <Error_Handler>
    }

    /* Peripheral clock enable */
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001a64:	4b3a      	ldr	r3, [pc, #232]	@ (8001b50 <HAL_ADC_MspInit+0x13c>)
 8001a66:	681b      	ldr	r3, [r3, #0]
 8001a68:	3301      	adds	r3, #1
 8001a6a:	4a39      	ldr	r2, [pc, #228]	@ (8001b50 <HAL_ADC_MspInit+0x13c>)
 8001a6c:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 8001a6e:	4b38      	ldr	r3, [pc, #224]	@ (8001b50 <HAL_ADC_MspInit+0x13c>)
 8001a70:	681b      	ldr	r3, [r3, #0]
 8001a72:	2b01      	cmp	r3, #1
 8001a74:	d10b      	bne.n	8001a8e <HAL_ADC_MspInit+0x7a>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001a76:	4b37      	ldr	r3, [pc, #220]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001a78:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001a7a:	4a36      	ldr	r2, [pc, #216]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001a7c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001a80:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001a82:	4b34      	ldr	r3, [pc, #208]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001a84:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001a86:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001a8a:	617b      	str	r3, [r7, #20]
 8001a8c:	697b      	ldr	r3, [r7, #20]
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a8e:	4b31      	ldr	r3, [pc, #196]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001a90:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001a92:	4a30      	ldr	r2, [pc, #192]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001a94:	f043 0301 	orr.w	r3, r3, #1
 8001a98:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001a9a:	4b2e      	ldr	r3, [pc, #184]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001a9c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001a9e:	f003 0301 	and.w	r3, r3, #1
 8001aa2:	613b      	str	r3, [r7, #16]
 8001aa4:	693b      	ldr	r3, [r7, #16]
    /**ADC1 GPIO Configuration
    PA0     ------> ADC1_IN1
    PA2     ------> ADC1_IN3
    PA3     ------> ADC1_IN4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;
 8001aa6:	230d      	movs	r3, #13
 8001aa8:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001aaa:	2303      	movs	r3, #3
 8001aac:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aae:	2300      	movs	r3, #0
 8001ab0:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ab2:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001ab6:	4619      	mov	r1, r3
 8001ab8:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001abc:	f002 fe5c 	bl	8004778 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8001ac0:	e042      	b.n	8001b48 <HAL_ADC_MspInit+0x134>
  else if(hadc->Instance==ADC2)
 8001ac2:	687b      	ldr	r3, [r7, #4]
 8001ac4:	681b      	ldr	r3, [r3, #0]
 8001ac6:	4a24      	ldr	r2, [pc, #144]	@ (8001b58 <HAL_ADC_MspInit+0x144>)
 8001ac8:	4293      	cmp	r3, r2
 8001aca:	d13d      	bne.n	8001b48 <HAL_ADC_MspInit+0x134>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 8001acc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8001ad0:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 8001ad2:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 8001ad6:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001ad8:	f107 0318 	add.w	r3, r7, #24
 8001adc:	4618      	mov	r0, r3
 8001ade:	f003 fd8f 	bl	8005600 <HAL_RCCEx_PeriphCLKConfig>
 8001ae2:	4603      	mov	r3, r0
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d001      	beq.n	8001aec <HAL_ADC_MspInit+0xd8>
      Error_Handler();
 8001ae8:	f7ff ff6a 	bl	80019c0 <Error_Handler>
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001aec:	4b18      	ldr	r3, [pc, #96]	@ (8001b50 <HAL_ADC_MspInit+0x13c>)
 8001aee:	681b      	ldr	r3, [r3, #0]
 8001af0:	3301      	adds	r3, #1
 8001af2:	4a17      	ldr	r2, [pc, #92]	@ (8001b50 <HAL_ADC_MspInit+0x13c>)
 8001af4:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 8001af6:	4b16      	ldr	r3, [pc, #88]	@ (8001b50 <HAL_ADC_MspInit+0x13c>)
 8001af8:	681b      	ldr	r3, [r3, #0]
 8001afa:	2b01      	cmp	r3, #1
 8001afc:	d10b      	bne.n	8001b16 <HAL_ADC_MspInit+0x102>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001afe:	4b15      	ldr	r3, [pc, #84]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001b00:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b02:	4a14      	ldr	r2, [pc, #80]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001b04:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001b08:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001b0a:	4b12      	ldr	r3, [pc, #72]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001b0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b0e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001b12:	60fb      	str	r3, [r7, #12]
 8001b14:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b16:	4b0f      	ldr	r3, [pc, #60]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001b18:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b1a:	4a0e      	ldr	r2, [pc, #56]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001b1c:	f043 0301 	orr.w	r3, r3, #1
 8001b20:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001b22:	4b0c      	ldr	r3, [pc, #48]	@ (8001b54 <HAL_ADC_MspInit+0x140>)
 8001b24:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b26:	f003 0301 	and.w	r3, r3, #1
 8001b2a:	60bb      	str	r3, [r7, #8]
 8001b2c:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001b2e:	2340      	movs	r3, #64	@ 0x40
 8001b30:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b32:	2303      	movs	r3, #3
 8001b34:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b36:	2300      	movs	r3, #0
 8001b38:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b3a:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001b3e:	4619      	mov	r1, r3
 8001b40:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001b44:	f002 fe18 	bl	8004778 <HAL_GPIO_Init>
}
 8001b48:	bf00      	nop
 8001b4a:	3770      	adds	r7, #112	@ 0x70
 8001b4c:	46bd      	mov	sp, r7
 8001b4e:	bd80      	pop	{r7, pc}
 8001b50:	200006a8 	.word	0x200006a8
 8001b54:	40021000 	.word	0x40021000
 8001b58:	50000100 	.word	0x50000100

08001b5c <HAL_FDCAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hfdcan: FDCAN handle pointer
* @retval None
*/
void HAL_FDCAN_MspInit(FDCAN_HandleTypeDef* hfdcan)
{
 8001b5c:	b580      	push	{r7, lr}
 8001b5e:	b09a      	sub	sp, #104	@ 0x68
 8001b60:	af00      	add	r7, sp, #0
 8001b62:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b64:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001b68:	2200      	movs	r2, #0
 8001b6a:	601a      	str	r2, [r3, #0]
 8001b6c:	605a      	str	r2, [r3, #4]
 8001b6e:	609a      	str	r2, [r3, #8]
 8001b70:	60da      	str	r2, [r3, #12]
 8001b72:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001b74:	f107 0310 	add.w	r3, r7, #16
 8001b78:	2244      	movs	r2, #68	@ 0x44
 8001b7a:	2100      	movs	r1, #0
 8001b7c:	4618      	mov	r0, r3
 8001b7e:	f005 fa8b 	bl	8007098 <memset>
  if(hfdcan->Instance==FDCAN1)
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	681b      	ldr	r3, [r3, #0]
 8001b86:	4a24      	ldr	r2, [pc, #144]	@ (8001c18 <HAL_FDCAN_MspInit+0xbc>)
 8001b88:	4293      	cmp	r3, r2
 8001b8a:	d141      	bne.n	8001c10 <HAL_FDCAN_MspInit+0xb4>

  /* USER CODE END FDCAN1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_FDCAN;
 8001b8c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001b90:	613b      	str	r3, [r7, #16]
    PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PLL;
 8001b92:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8001b96:	643b      	str	r3, [r7, #64]	@ 0x40
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001b98:	f107 0310 	add.w	r3, r7, #16
 8001b9c:	4618      	mov	r0, r3
 8001b9e:	f003 fd2f 	bl	8005600 <HAL_RCCEx_PeriphCLKConfig>
 8001ba2:	4603      	mov	r3, r0
 8001ba4:	2b00      	cmp	r3, #0
 8001ba6:	d001      	beq.n	8001bac <HAL_FDCAN_MspInit+0x50>
    {
      Error_Handler();
 8001ba8:	f7ff ff0a 	bl	80019c0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_FDCAN_CLK_ENABLE();
 8001bac:	4b1b      	ldr	r3, [pc, #108]	@ (8001c1c <HAL_FDCAN_MspInit+0xc0>)
 8001bae:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001bb0:	4a1a      	ldr	r2, [pc, #104]	@ (8001c1c <HAL_FDCAN_MspInit+0xc0>)
 8001bb2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001bb6:	6593      	str	r3, [r2, #88]	@ 0x58
 8001bb8:	4b18      	ldr	r3, [pc, #96]	@ (8001c1c <HAL_FDCAN_MspInit+0xc0>)
 8001bba:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001bbc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001bc0:	60fb      	str	r3, [r7, #12]
 8001bc2:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bc4:	4b15      	ldr	r3, [pc, #84]	@ (8001c1c <HAL_FDCAN_MspInit+0xc0>)
 8001bc6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bc8:	4a14      	ldr	r2, [pc, #80]	@ (8001c1c <HAL_FDCAN_MspInit+0xc0>)
 8001bca:	f043 0301 	orr.w	r3, r3, #1
 8001bce:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001bd0:	4b12      	ldr	r3, [pc, #72]	@ (8001c1c <HAL_FDCAN_MspInit+0xc0>)
 8001bd2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bd4:	f003 0301 	and.w	r3, r3, #1
 8001bd8:	60bb      	str	r3, [r7, #8]
 8001bda:	68bb      	ldr	r3, [r7, #8]
    /**FDCAN1 GPIO Configuration
    PA11     ------> FDCAN1_RX
    PA12     ------> FDCAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 8001bdc:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 8001be0:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001be2:	2302      	movs	r3, #2
 8001be4:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001be6:	2300      	movs	r3, #0
 8001be8:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001bea:	2300      	movs	r3, #0
 8001bec:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF9_FDCAN1;
 8001bee:	2309      	movs	r3, #9
 8001bf0:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bf2:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001bf6:	4619      	mov	r1, r3
 8001bf8:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001bfc:	f002 fdbc 	bl	8004778 <HAL_GPIO_Init>

    /* FDCAN1 interrupt Init */
    HAL_NVIC_SetPriority(FDCAN1_IT0_IRQn, 0, 0);
 8001c00:	2200      	movs	r2, #0
 8001c02:	2100      	movs	r1, #0
 8001c04:	2015      	movs	r0, #21
 8001c06:	f001 ff5c 	bl	8003ac2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(FDCAN1_IT0_IRQn);
 8001c0a:	2015      	movs	r0, #21
 8001c0c:	f001 ff73 	bl	8003af6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN FDCAN1_MspInit 1 */

  /* USER CODE END FDCAN1_MspInit 1 */
  }

}
 8001c10:	bf00      	nop
 8001c12:	3768      	adds	r7, #104	@ 0x68
 8001c14:	46bd      	mov	sp, r7
 8001c16:	bd80      	pop	{r7, pc}
 8001c18:	40006400 	.word	0x40006400
 8001c1c:	40021000 	.word	0x40021000

08001c20 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001c20:	b580      	push	{r7, lr}
 8001c22:	b08a      	sub	sp, #40	@ 0x28
 8001c24:	af00      	add	r7, sp, #0
 8001c26:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	681b      	ldr	r3, [r3, #0]
 8001c2c:	4a4f      	ldr	r2, [pc, #316]	@ (8001d6c <HAL_TIM_Base_MspInit+0x14c>)
 8001c2e:	4293      	cmp	r3, r2
 8001c30:	d10c      	bne.n	8001c4c <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001c32:	4b4f      	ldr	r3, [pc, #316]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001c34:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001c36:	4a4e      	ldr	r2, [pc, #312]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001c38:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001c3c:	6613      	str	r3, [r2, #96]	@ 0x60
 8001c3e:	4b4c      	ldr	r3, [pc, #304]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001c40:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001c42:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001c46:	627b      	str	r3, [r7, #36]	@ 0x24
 8001c48:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
  /* USER CODE BEGIN TIM16_MspInit 1 */

  /* USER CODE END TIM16_MspInit 1 */
  }

}
 8001c4a:	e08a      	b.n	8001d62 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM2)
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001c54:	d114      	bne.n	8001c80 <HAL_TIM_Base_MspInit+0x60>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001c56:	4b46      	ldr	r3, [pc, #280]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001c58:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c5a:	4a45      	ldr	r2, [pc, #276]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001c5c:	f043 0301 	orr.w	r3, r3, #1
 8001c60:	6593      	str	r3, [r2, #88]	@ 0x58
 8001c62:	4b43      	ldr	r3, [pc, #268]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001c64:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c66:	f003 0301 	and.w	r3, r3, #1
 8001c6a:	623b      	str	r3, [r7, #32]
 8001c6c:	6a3b      	ldr	r3, [r7, #32]
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001c6e:	2200      	movs	r2, #0
 8001c70:	2100      	movs	r1, #0
 8001c72:	201c      	movs	r0, #28
 8001c74:	f001 ff25 	bl	8003ac2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001c78:	201c      	movs	r0, #28
 8001c7a:	f001 ff3c 	bl	8003af6 <HAL_NVIC_EnableIRQ>
}
 8001c7e:	e070      	b.n	8001d62 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM3)
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	4a3b      	ldr	r2, [pc, #236]	@ (8001d74 <HAL_TIM_Base_MspInit+0x154>)
 8001c86:	4293      	cmp	r3, r2
 8001c88:	d114      	bne.n	8001cb4 <HAL_TIM_Base_MspInit+0x94>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001c8a:	4b39      	ldr	r3, [pc, #228]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001c8c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c8e:	4a38      	ldr	r2, [pc, #224]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001c90:	f043 0302 	orr.w	r3, r3, #2
 8001c94:	6593      	str	r3, [r2, #88]	@ 0x58
 8001c96:	4b36      	ldr	r3, [pc, #216]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001c98:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c9a:	f003 0302 	and.w	r3, r3, #2
 8001c9e:	61fb      	str	r3, [r7, #28]
 8001ca0:	69fb      	ldr	r3, [r7, #28]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001ca2:	2200      	movs	r2, #0
 8001ca4:	2100      	movs	r1, #0
 8001ca6:	201d      	movs	r0, #29
 8001ca8:	f001 ff0b 	bl	8003ac2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001cac:	201d      	movs	r0, #29
 8001cae:	f001 ff22 	bl	8003af6 <HAL_NVIC_EnableIRQ>
}
 8001cb2:	e056      	b.n	8001d62 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM4)
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	681b      	ldr	r3, [r3, #0]
 8001cb8:	4a2f      	ldr	r2, [pc, #188]	@ (8001d78 <HAL_TIM_Base_MspInit+0x158>)
 8001cba:	4293      	cmp	r3, r2
 8001cbc:	d114      	bne.n	8001ce8 <HAL_TIM_Base_MspInit+0xc8>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001cbe:	4b2c      	ldr	r3, [pc, #176]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001cc0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001cc2:	4a2b      	ldr	r2, [pc, #172]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001cc4:	f043 0304 	orr.w	r3, r3, #4
 8001cc8:	6593      	str	r3, [r2, #88]	@ 0x58
 8001cca:	4b29      	ldr	r3, [pc, #164]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001ccc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001cce:	f003 0304 	and.w	r3, r3, #4
 8001cd2:	61bb      	str	r3, [r7, #24]
 8001cd4:	69bb      	ldr	r3, [r7, #24]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001cd6:	2200      	movs	r2, #0
 8001cd8:	2100      	movs	r1, #0
 8001cda:	201e      	movs	r0, #30
 8001cdc:	f001 fef1 	bl	8003ac2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001ce0:	201e      	movs	r0, #30
 8001ce2:	f001 ff08 	bl	8003af6 <HAL_NVIC_EnableIRQ>
}
 8001ce6:	e03c      	b.n	8001d62 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM6)
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	4a23      	ldr	r2, [pc, #140]	@ (8001d7c <HAL_TIM_Base_MspInit+0x15c>)
 8001cee:	4293      	cmp	r3, r2
 8001cf0:	d10c      	bne.n	8001d0c <HAL_TIM_Base_MspInit+0xec>
    __HAL_RCC_TIM6_CLK_ENABLE();
 8001cf2:	4b1f      	ldr	r3, [pc, #124]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001cf4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001cf6:	4a1e      	ldr	r2, [pc, #120]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001cf8:	f043 0310 	orr.w	r3, r3, #16
 8001cfc:	6593      	str	r3, [r2, #88]	@ 0x58
 8001cfe:	4b1c      	ldr	r3, [pc, #112]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001d00:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d02:	f003 0310 	and.w	r3, r3, #16
 8001d06:	617b      	str	r3, [r7, #20]
 8001d08:	697b      	ldr	r3, [r7, #20]
}
 8001d0a:	e02a      	b.n	8001d62 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM7)
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	681b      	ldr	r3, [r3, #0]
 8001d10:	4a1b      	ldr	r2, [pc, #108]	@ (8001d80 <HAL_TIM_Base_MspInit+0x160>)
 8001d12:	4293      	cmp	r3, r2
 8001d14:	d114      	bne.n	8001d40 <HAL_TIM_Base_MspInit+0x120>
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001d16:	4b16      	ldr	r3, [pc, #88]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001d18:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d1a:	4a15      	ldr	r2, [pc, #84]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001d1c:	f043 0320 	orr.w	r3, r3, #32
 8001d20:	6593      	str	r3, [r2, #88]	@ 0x58
 8001d22:	4b13      	ldr	r3, [pc, #76]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001d24:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d26:	f003 0320 	and.w	r3, r3, #32
 8001d2a:	613b      	str	r3, [r7, #16]
 8001d2c:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
 8001d2e:	2200      	movs	r2, #0
 8001d30:	2100      	movs	r1, #0
 8001d32:	2037      	movs	r0, #55	@ 0x37
 8001d34:	f001 fec5 	bl	8003ac2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001d38:	2037      	movs	r0, #55	@ 0x37
 8001d3a:	f001 fedc 	bl	8003af6 <HAL_NVIC_EnableIRQ>
}
 8001d3e:	e010      	b.n	8001d62 <HAL_TIM_Base_MspInit+0x142>
  else if(htim_base->Instance==TIM16)
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	4a0f      	ldr	r2, [pc, #60]	@ (8001d84 <HAL_TIM_Base_MspInit+0x164>)
 8001d46:	4293      	cmp	r3, r2
 8001d48:	d10b      	bne.n	8001d62 <HAL_TIM_Base_MspInit+0x142>
    __HAL_RCC_TIM16_CLK_ENABLE();
 8001d4a:	4b09      	ldr	r3, [pc, #36]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001d4c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001d4e:	4a08      	ldr	r2, [pc, #32]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001d50:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001d54:	6613      	str	r3, [r2, #96]	@ 0x60
 8001d56:	4b06      	ldr	r3, [pc, #24]	@ (8001d70 <HAL_TIM_Base_MspInit+0x150>)
 8001d58:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001d5a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d5e:	60fb      	str	r3, [r7, #12]
 8001d60:	68fb      	ldr	r3, [r7, #12]
}
 8001d62:	bf00      	nop
 8001d64:	3728      	adds	r7, #40	@ 0x28
 8001d66:	46bd      	mov	sp, r7
 8001d68:	bd80      	pop	{r7, pc}
 8001d6a:	bf00      	nop
 8001d6c:	40012c00 	.word	0x40012c00
 8001d70:	40021000 	.word	0x40021000
 8001d74:	40000400 	.word	0x40000400
 8001d78:	40000800 	.word	0x40000800
 8001d7c:	40001000 	.word	0x40001000
 8001d80:	40001400 	.word	0x40001400
 8001d84:	40014400 	.word	0x40014400

08001d88 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001d88:	b580      	push	{r7, lr}
 8001d8a:	b08a      	sub	sp, #40	@ 0x28
 8001d8c:	af00      	add	r7, sp, #0
 8001d8e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d90:	f107 0314 	add.w	r3, r7, #20
 8001d94:	2200      	movs	r2, #0
 8001d96:	601a      	str	r2, [r3, #0]
 8001d98:	605a      	str	r2, [r3, #4]
 8001d9a:	609a      	str	r2, [r3, #8]
 8001d9c:	60da      	str	r2, [r3, #12]
 8001d9e:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	4a23      	ldr	r2, [pc, #140]	@ (8001e34 <HAL_TIM_MspPostInit+0xac>)
 8001da6:	4293      	cmp	r3, r2
 8001da8:	d11e      	bne.n	8001de8 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001daa:	4b23      	ldr	r3, [pc, #140]	@ (8001e38 <HAL_TIM_MspPostInit+0xb0>)
 8001dac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001dae:	4a22      	ldr	r2, [pc, #136]	@ (8001e38 <HAL_TIM_MspPostInit+0xb0>)
 8001db0:	f043 0301 	orr.w	r3, r3, #1
 8001db4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001db6:	4b20      	ldr	r3, [pc, #128]	@ (8001e38 <HAL_TIM_MspPostInit+0xb0>)
 8001db8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001dba:	f003 0301 	and.w	r3, r3, #1
 8001dbe:	613b      	str	r3, [r7, #16]
 8001dc0:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001dc2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001dc6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc8:	2302      	movs	r3, #2
 8001dca:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dcc:	2300      	movs	r3, #0
 8001dce:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001dd0:	2300      	movs	r3, #0
 8001dd2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 8001dd4:	2306      	movs	r3, #6
 8001dd6:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dd8:	f107 0314 	add.w	r3, r7, #20
 8001ddc:	4619      	mov	r1, r3
 8001dde:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001de2:	f002 fcc9 	bl	8004778 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8001de6:	e021      	b.n	8001e2c <HAL_TIM_MspPostInit+0xa4>
  else if(htim->Instance==TIM2)
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001df0:	d11c      	bne.n	8001e2c <HAL_TIM_MspPostInit+0xa4>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001df2:	4b11      	ldr	r3, [pc, #68]	@ (8001e38 <HAL_TIM_MspPostInit+0xb0>)
 8001df4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001df6:	4a10      	ldr	r2, [pc, #64]	@ (8001e38 <HAL_TIM_MspPostInit+0xb0>)
 8001df8:	f043 0301 	orr.w	r3, r3, #1
 8001dfc:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001dfe:	4b0e      	ldr	r3, [pc, #56]	@ (8001e38 <HAL_TIM_MspPostInit+0xb0>)
 8001e00:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001e02:	f003 0301 	and.w	r3, r3, #1
 8001e06:	60fb      	str	r3, [r7, #12]
 8001e08:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8001e0a:	2320      	movs	r3, #32
 8001e0c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e0e:	2302      	movs	r3, #2
 8001e10:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e12:	2300      	movs	r3, #0
 8001e14:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e16:	2300      	movs	r3, #0
 8001e18:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001e1a:	2301      	movs	r3, #1
 8001e1c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e1e:	f107 0314 	add.w	r3, r7, #20
 8001e22:	4619      	mov	r1, r3
 8001e24:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001e28:	f002 fca6 	bl	8004778 <HAL_GPIO_Init>
}
 8001e2c:	bf00      	nop
 8001e2e:	3728      	adds	r7, #40	@ 0x28
 8001e30:	46bd      	mov	sp, r7
 8001e32:	bd80      	pop	{r7, pc}
 8001e34:	40012c00 	.word	0x40012c00
 8001e38:	40021000 	.word	0x40021000

08001e3c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001e3c:	b480      	push	{r7}
 8001e3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001e40:	bf00      	nop
 8001e42:	e7fd      	b.n	8001e40 <NMI_Handler+0x4>

08001e44 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001e44:	b480      	push	{r7}
 8001e46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e48:	bf00      	nop
 8001e4a:	e7fd      	b.n	8001e48 <HardFault_Handler+0x4>

08001e4c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001e4c:	b480      	push	{r7}
 8001e4e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001e50:	bf00      	nop
 8001e52:	e7fd      	b.n	8001e50 <MemManage_Handler+0x4>

08001e54 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001e54:	b480      	push	{r7}
 8001e56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001e58:	bf00      	nop
 8001e5a:	e7fd      	b.n	8001e58 <BusFault_Handler+0x4>

08001e5c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001e5c:	b480      	push	{r7}
 8001e5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001e60:	bf00      	nop
 8001e62:	e7fd      	b.n	8001e60 <UsageFault_Handler+0x4>

08001e64 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001e64:	b480      	push	{r7}
 8001e66:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001e68:	bf00      	nop
 8001e6a:	46bd      	mov	sp, r7
 8001e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e70:	4770      	bx	lr

08001e72 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001e72:	b480      	push	{r7}
 8001e74:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001e76:	bf00      	nop
 8001e78:	46bd      	mov	sp, r7
 8001e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e7e:	4770      	bx	lr

08001e80 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001e80:	b480      	push	{r7}
 8001e82:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001e84:	bf00      	nop
 8001e86:	46bd      	mov	sp, r7
 8001e88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e8c:	4770      	bx	lr

08001e8e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001e8e:	b580      	push	{r7, lr}
 8001e90:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001e92:	f000 f8cb 	bl	800202c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001e96:	bf00      	nop
 8001e98:	bd80      	pop	{r7, pc}
	...

08001e9c <FDCAN1_IT0_IRQHandler>:

/**
  * @brief This function handles FDCAN1 interrupt 0.
  */
void FDCAN1_IT0_IRQHandler(void)
{
 8001e9c:	b580      	push	{r7, lr}
 8001e9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FDCAN1_IT0_IRQn 0 */

  /* USER CODE END FDCAN1_IT0_IRQn 0 */
  HAL_FDCAN_IRQHandler(&hfdcan1);
 8001ea0:	4802      	ldr	r0, [pc, #8]	@ (8001eac <FDCAN1_IT0_IRQHandler+0x10>)
 8001ea2:	f002 fa09 	bl	80042b8 <HAL_FDCAN_IRQHandler>
  /* USER CODE BEGIN FDCAN1_IT0_IRQn 1 */

  /* USER CODE END FDCAN1_IT0_IRQn 1 */
}
 8001ea6:	bf00      	nop
 8001ea8:	bd80      	pop	{r7, pc}
 8001eaa:	bf00      	nop
 8001eac:	20000108 	.word	0x20000108

08001eb0 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001eb0:	b580      	push	{r7, lr}
 8001eb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001eb4:	4802      	ldr	r0, [pc, #8]	@ (8001ec0 <TIM2_IRQHandler+0x10>)
 8001eb6:	f003 ffb7 	bl	8005e28 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001eba:	bf00      	nop
 8001ebc:	bd80      	pop	{r7, pc}
 8001ebe:	bf00      	nop
 8001ec0:	200001b8 	.word	0x200001b8

08001ec4 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001ec4:	b580      	push	{r7, lr}
 8001ec6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */
	millis++;
 8001ec8:	4b05      	ldr	r3, [pc, #20]	@ (8001ee0 <TIM3_IRQHandler+0x1c>)
 8001eca:	881b      	ldrh	r3, [r3, #0]
 8001ecc:	3301      	adds	r3, #1
 8001ece:	b29a      	uxth	r2, r3
 8001ed0:	4b03      	ldr	r3, [pc, #12]	@ (8001ee0 <TIM3_IRQHandler+0x1c>)
 8001ed2:	801a      	strh	r2, [r3, #0]
		  }else{
			  can_select = 0;
		  }
	}*/
  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001ed4:	4803      	ldr	r0, [pc, #12]	@ (8001ee4 <TIM3_IRQHandler+0x20>)
 8001ed6:	f003 ffa7 	bl	8005e28 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001eda:	bf00      	nop
 8001edc:	bd80      	pop	{r7, pc}
 8001ede:	bf00      	nop
 8001ee0:	20000640 	.word	0x20000640
 8001ee4:	20000204 	.word	0x20000204

08001ee8 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001eec:	4802      	ldr	r0, [pc, #8]	@ (8001ef8 <TIM4_IRQHandler+0x10>)
 8001eee:	f003 ff9b 	bl	8005e28 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001ef2:	bf00      	nop
 8001ef4:	bd80      	pop	{r7, pc}
 8001ef6:	bf00      	nop
 8001ef8:	20000250 	.word	0x20000250

08001efc <TIM7_IRQHandler>:

/**
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
 8001efc:	b580      	push	{r7, lr}
 8001efe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001f00:	4802      	ldr	r0, [pc, #8]	@ (8001f0c <TIM7_IRQHandler+0x10>)
 8001f02:	f003 ff91 	bl	8005e28 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_IRQn 1 */

  /* USER CODE END TIM7_IRQn 1 */
}
 8001f06:	bf00      	nop
 8001f08:	bd80      	pop	{r7, pc}
 8001f0a:	bf00      	nop
 8001f0c:	200002e8 	.word	0x200002e8

08001f10 <SystemInit>:
 8001f10:	b480      	push	{r7}
 8001f12:	af00      	add	r7, sp, #0
 8001f14:	4b06      	ldr	r3, [pc, #24]	@ (8001f30 <SystemInit+0x20>)
 8001f16:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001f1a:	4a05      	ldr	r2, [pc, #20]	@ (8001f30 <SystemInit+0x20>)
 8001f1c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001f20:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001f24:	bf00      	nop
 8001f26:	46bd      	mov	sp, r7
 8001f28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f2c:	4770      	bx	lr
 8001f2e:	bf00      	nop
 8001f30:	e000ed00 	.word	0xe000ed00

08001f34 <Reset_Handler>:
 8001f34:	480d      	ldr	r0, [pc, #52]	@ (8001f6c <LoopForever+0x2>)
 8001f36:	4685      	mov	sp, r0
 8001f38:	480d      	ldr	r0, [pc, #52]	@ (8001f70 <LoopForever+0x6>)
 8001f3a:	490e      	ldr	r1, [pc, #56]	@ (8001f74 <LoopForever+0xa>)
 8001f3c:	4a0e      	ldr	r2, [pc, #56]	@ (8001f78 <LoopForever+0xe>)
 8001f3e:	2300      	movs	r3, #0
 8001f40:	e002      	b.n	8001f48 <LoopCopyDataInit>

08001f42 <CopyDataInit>:
 8001f42:	58d4      	ldr	r4, [r2, r3]
 8001f44:	50c4      	str	r4, [r0, r3]
 8001f46:	3304      	adds	r3, #4

08001f48 <LoopCopyDataInit>:
 8001f48:	18c4      	adds	r4, r0, r3
 8001f4a:	428c      	cmp	r4, r1
 8001f4c:	d3f9      	bcc.n	8001f42 <CopyDataInit>
 8001f4e:	4a0b      	ldr	r2, [pc, #44]	@ (8001f7c <LoopForever+0x12>)
 8001f50:	4c0b      	ldr	r4, [pc, #44]	@ (8001f80 <LoopForever+0x16>)
 8001f52:	2300      	movs	r3, #0
 8001f54:	e001      	b.n	8001f5a <LoopFillZerobss>

08001f56 <FillZerobss>:
 8001f56:	6013      	str	r3, [r2, #0]
 8001f58:	3204      	adds	r2, #4

08001f5a <LoopFillZerobss>:
 8001f5a:	42a2      	cmp	r2, r4
 8001f5c:	d3fb      	bcc.n	8001f56 <FillZerobss>
 8001f5e:	f7ff ffd7 	bl	8001f10 <SystemInit>
 8001f62:	f005 f8a1 	bl	80070a8 <__libc_init_array>
 8001f66:	f7ff f813 	bl	8000f90 <main>

08001f6a <LoopForever>:
 8001f6a:	e7fe      	b.n	8001f6a <LoopForever>
 8001f6c:	20008000 	.word	0x20008000
 8001f70:	20000000 	.word	0x20000000
 8001f74:	2000000c 	.word	0x2000000c
 8001f78:	0800714c 	.word	0x0800714c
 8001f7c:	2000000c 	.word	0x2000000c
 8001f80:	200006b0 	.word	0x200006b0

08001f84 <ADC1_2_IRQHandler>:
 8001f84:	e7fe      	b.n	8001f84 <ADC1_2_IRQHandler>

08001f86 <HAL_Init>:
 8001f86:	b580      	push	{r7, lr}
 8001f88:	b082      	sub	sp, #8
 8001f8a:	af00      	add	r7, sp, #0
 8001f8c:	2300      	movs	r3, #0
 8001f8e:	71fb      	strb	r3, [r7, #7]
 8001f90:	2003      	movs	r0, #3
 8001f92:	f001 fd8b 	bl	8003aac <HAL_NVIC_SetPriorityGrouping>
 8001f96:	200f      	movs	r0, #15
 8001f98:	f000 f80e 	bl	8001fb8 <HAL_InitTick>
 8001f9c:	4603      	mov	r3, r0
 8001f9e:	2b00      	cmp	r3, #0
 8001fa0:	d002      	beq.n	8001fa8 <HAL_Init+0x22>
 8001fa2:	2301      	movs	r3, #1
 8001fa4:	71fb      	strb	r3, [r7, #7]
 8001fa6:	e001      	b.n	8001fac <HAL_Init+0x26>
 8001fa8:	f7ff fd10 	bl	80019cc <HAL_MspInit>
 8001fac:	79fb      	ldrb	r3, [r7, #7]
 8001fae:	4618      	mov	r0, r3
 8001fb0:	3708      	adds	r7, #8
 8001fb2:	46bd      	mov	sp, r7
 8001fb4:	bd80      	pop	{r7, pc}
	...

08001fb8 <HAL_InitTick>:
 8001fb8:	b580      	push	{r7, lr}
 8001fba:	b084      	sub	sp, #16
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	6078      	str	r0, [r7, #4]
 8001fc0:	2300      	movs	r3, #0
 8001fc2:	73fb      	strb	r3, [r7, #15]
 8001fc4:	4b16      	ldr	r3, [pc, #88]	@ (8002020 <HAL_InitTick+0x68>)
 8001fc6:	681b      	ldr	r3, [r3, #0]
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	d022      	beq.n	8002012 <HAL_InitTick+0x5a>
 8001fcc:	4b15      	ldr	r3, [pc, #84]	@ (8002024 <HAL_InitTick+0x6c>)
 8001fce:	681a      	ldr	r2, [r3, #0]
 8001fd0:	4b13      	ldr	r3, [pc, #76]	@ (8002020 <HAL_InitTick+0x68>)
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001fd8:	fbb1 f3f3 	udiv	r3, r1, r3
 8001fdc:	fbb2 f3f3 	udiv	r3, r2, r3
 8001fe0:	4618      	mov	r0, r3
 8001fe2:	f001 fd96 	bl	8003b12 <HAL_SYSTICK_Config>
 8001fe6:	4603      	mov	r3, r0
 8001fe8:	2b00      	cmp	r3, #0
 8001fea:	d10f      	bne.n	800200c <HAL_InitTick+0x54>
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	2b0f      	cmp	r3, #15
 8001ff0:	d809      	bhi.n	8002006 <HAL_InitTick+0x4e>
 8001ff2:	2200      	movs	r2, #0
 8001ff4:	6879      	ldr	r1, [r7, #4]
 8001ff6:	f04f 30ff 	mov.w	r0, #4294967295
 8001ffa:	f001 fd62 	bl	8003ac2 <HAL_NVIC_SetPriority>
 8001ffe:	4a0a      	ldr	r2, [pc, #40]	@ (8002028 <HAL_InitTick+0x70>)
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	6013      	str	r3, [r2, #0]
 8002004:	e007      	b.n	8002016 <HAL_InitTick+0x5e>
 8002006:	2301      	movs	r3, #1
 8002008:	73fb      	strb	r3, [r7, #15]
 800200a:	e004      	b.n	8002016 <HAL_InitTick+0x5e>
 800200c:	2301      	movs	r3, #1
 800200e:	73fb      	strb	r3, [r7, #15]
 8002010:	e001      	b.n	8002016 <HAL_InitTick+0x5e>
 8002012:	2301      	movs	r3, #1
 8002014:	73fb      	strb	r3, [r7, #15]
 8002016:	7bfb      	ldrb	r3, [r7, #15]
 8002018:	4618      	mov	r0, r3
 800201a:	3710      	adds	r7, #16
 800201c:	46bd      	mov	sp, r7
 800201e:	bd80      	pop	{r7, pc}
 8002020:	20000008 	.word	0x20000008
 8002024:	20000000 	.word	0x20000000
 8002028:	20000004 	.word	0x20000004

0800202c <HAL_IncTick>:
 800202c:	b480      	push	{r7}
 800202e:	af00      	add	r7, sp, #0
 8002030:	4b05      	ldr	r3, [pc, #20]	@ (8002048 <HAL_IncTick+0x1c>)
 8002032:	681a      	ldr	r2, [r3, #0]
 8002034:	4b05      	ldr	r3, [pc, #20]	@ (800204c <HAL_IncTick+0x20>)
 8002036:	681b      	ldr	r3, [r3, #0]
 8002038:	4413      	add	r3, r2
 800203a:	4a03      	ldr	r2, [pc, #12]	@ (8002048 <HAL_IncTick+0x1c>)
 800203c:	6013      	str	r3, [r2, #0]
 800203e:	bf00      	nop
 8002040:	46bd      	mov	sp, r7
 8002042:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002046:	4770      	bx	lr
 8002048:	200006ac 	.word	0x200006ac
 800204c:	20000008 	.word	0x20000008

08002050 <HAL_GetTick>:
 8002050:	b480      	push	{r7}
 8002052:	af00      	add	r7, sp, #0
 8002054:	4b03      	ldr	r3, [pc, #12]	@ (8002064 <HAL_GetTick+0x14>)
 8002056:	681b      	ldr	r3, [r3, #0]
 8002058:	4618      	mov	r0, r3
 800205a:	46bd      	mov	sp, r7
 800205c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002060:	4770      	bx	lr
 8002062:	bf00      	nop
 8002064:	200006ac 	.word	0x200006ac

08002068 <HAL_Delay>:
 8002068:	b580      	push	{r7, lr}
 800206a:	b084      	sub	sp, #16
 800206c:	af00      	add	r7, sp, #0
 800206e:	6078      	str	r0, [r7, #4]
 8002070:	f7ff ffee 	bl	8002050 <HAL_GetTick>
 8002074:	60b8      	str	r0, [r7, #8]
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	60fb      	str	r3, [r7, #12]
 800207a:	68fb      	ldr	r3, [r7, #12]
 800207c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002080:	d004      	beq.n	800208c <HAL_Delay+0x24>
 8002082:	4b09      	ldr	r3, [pc, #36]	@ (80020a8 <HAL_Delay+0x40>)
 8002084:	681b      	ldr	r3, [r3, #0]
 8002086:	68fa      	ldr	r2, [r7, #12]
 8002088:	4413      	add	r3, r2
 800208a:	60fb      	str	r3, [r7, #12]
 800208c:	bf00      	nop
 800208e:	f7ff ffdf 	bl	8002050 <HAL_GetTick>
 8002092:	4602      	mov	r2, r0
 8002094:	68bb      	ldr	r3, [r7, #8]
 8002096:	1ad3      	subs	r3, r2, r3
 8002098:	68fa      	ldr	r2, [r7, #12]
 800209a:	429a      	cmp	r2, r3
 800209c:	d8f7      	bhi.n	800208e <HAL_Delay+0x26>
 800209e:	bf00      	nop
 80020a0:	bf00      	nop
 80020a2:	3710      	adds	r7, #16
 80020a4:	46bd      	mov	sp, r7
 80020a6:	bd80      	pop	{r7, pc}
 80020a8:	20000008 	.word	0x20000008

080020ac <LL_ADC_SetCommonClock>:
 80020ac:	b480      	push	{r7}
 80020ae:	b083      	sub	sp, #12
 80020b0:	af00      	add	r7, sp, #0
 80020b2:	6078      	str	r0, [r7, #4]
 80020b4:	6039      	str	r1, [r7, #0]
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	689b      	ldr	r3, [r3, #8]
 80020ba:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 80020be:	683b      	ldr	r3, [r7, #0]
 80020c0:	431a      	orrs	r2, r3
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	609a      	str	r2, [r3, #8]
 80020c6:	bf00      	nop
 80020c8:	370c      	adds	r7, #12
 80020ca:	46bd      	mov	sp, r7
 80020cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020d0:	4770      	bx	lr

080020d2 <LL_ADC_SetCommonPathInternalCh>:
 80020d2:	b480      	push	{r7}
 80020d4:	b083      	sub	sp, #12
 80020d6:	af00      	add	r7, sp, #0
 80020d8:	6078      	str	r0, [r7, #4]
 80020da:	6039      	str	r1, [r7, #0]
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	689b      	ldr	r3, [r3, #8]
 80020e0:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 80020e4:	683b      	ldr	r3, [r7, #0]
 80020e6:	431a      	orrs	r2, r3
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	609a      	str	r2, [r3, #8]
 80020ec:	bf00      	nop
 80020ee:	370c      	adds	r7, #12
 80020f0:	46bd      	mov	sp, r7
 80020f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020f6:	4770      	bx	lr

080020f8 <LL_ADC_GetCommonPathInternalCh>:
 80020f8:	b480      	push	{r7}
 80020fa:	b083      	sub	sp, #12
 80020fc:	af00      	add	r7, sp, #0
 80020fe:	6078      	str	r0, [r7, #4]
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	689b      	ldr	r3, [r3, #8]
 8002104:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 8002108:	4618      	mov	r0, r3
 800210a:	370c      	adds	r7, #12
 800210c:	46bd      	mov	sp, r7
 800210e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002112:	4770      	bx	lr

08002114 <LL_ADC_SetOffset>:
 8002114:	b480      	push	{r7}
 8002116:	b087      	sub	sp, #28
 8002118:	af00      	add	r7, sp, #0
 800211a:	60f8      	str	r0, [r7, #12]
 800211c:	60b9      	str	r1, [r7, #8]
 800211e:	607a      	str	r2, [r7, #4]
 8002120:	603b      	str	r3, [r7, #0]
 8002122:	68fb      	ldr	r3, [r7, #12]
 8002124:	3360      	adds	r3, #96	@ 0x60
 8002126:	461a      	mov	r2, r3
 8002128:	68bb      	ldr	r3, [r7, #8]
 800212a:	009b      	lsls	r3, r3, #2
 800212c:	4413      	add	r3, r2
 800212e:	617b      	str	r3, [r7, #20]
 8002130:	697b      	ldr	r3, [r7, #20]
 8002132:	681a      	ldr	r2, [r3, #0]
 8002134:	4b08      	ldr	r3, [pc, #32]	@ (8002158 <LL_ADC_SetOffset+0x44>)
 8002136:	4013      	ands	r3, r2
 8002138:	687a      	ldr	r2, [r7, #4]
 800213a:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 800213e:	683a      	ldr	r2, [r7, #0]
 8002140:	430a      	orrs	r2, r1
 8002142:	4313      	orrs	r3, r2
 8002144:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8002148:	697b      	ldr	r3, [r7, #20]
 800214a:	601a      	str	r2, [r3, #0]
 800214c:	bf00      	nop
 800214e:	371c      	adds	r7, #28
 8002150:	46bd      	mov	sp, r7
 8002152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002156:	4770      	bx	lr
 8002158:	03fff000 	.word	0x03fff000

0800215c <LL_ADC_GetOffsetChannel>:
 800215c:	b480      	push	{r7}
 800215e:	b085      	sub	sp, #20
 8002160:	af00      	add	r7, sp, #0
 8002162:	6078      	str	r0, [r7, #4]
 8002164:	6039      	str	r1, [r7, #0]
 8002166:	687b      	ldr	r3, [r7, #4]
 8002168:	3360      	adds	r3, #96	@ 0x60
 800216a:	461a      	mov	r2, r3
 800216c:	683b      	ldr	r3, [r7, #0]
 800216e:	009b      	lsls	r3, r3, #2
 8002170:	4413      	add	r3, r2
 8002172:	60fb      	str	r3, [r7, #12]
 8002174:	68fb      	ldr	r3, [r7, #12]
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 800217c:	4618      	mov	r0, r3
 800217e:	3714      	adds	r7, #20
 8002180:	46bd      	mov	sp, r7
 8002182:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002186:	4770      	bx	lr

08002188 <LL_ADC_SetOffsetState>:
 8002188:	b480      	push	{r7}
 800218a:	b087      	sub	sp, #28
 800218c:	af00      	add	r7, sp, #0
 800218e:	60f8      	str	r0, [r7, #12]
 8002190:	60b9      	str	r1, [r7, #8]
 8002192:	607a      	str	r2, [r7, #4]
 8002194:	68fb      	ldr	r3, [r7, #12]
 8002196:	3360      	adds	r3, #96	@ 0x60
 8002198:	461a      	mov	r2, r3
 800219a:	68bb      	ldr	r3, [r7, #8]
 800219c:	009b      	lsls	r3, r3, #2
 800219e:	4413      	add	r3, r2
 80021a0:	617b      	str	r3, [r7, #20]
 80021a2:	697b      	ldr	r3, [r7, #20]
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80021aa:	687b      	ldr	r3, [r7, #4]
 80021ac:	431a      	orrs	r2, r3
 80021ae:	697b      	ldr	r3, [r7, #20]
 80021b0:	601a      	str	r2, [r3, #0]
 80021b2:	bf00      	nop
 80021b4:	371c      	adds	r7, #28
 80021b6:	46bd      	mov	sp, r7
 80021b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021bc:	4770      	bx	lr

080021be <LL_ADC_SetOffsetSign>:
 80021be:	b480      	push	{r7}
 80021c0:	b087      	sub	sp, #28
 80021c2:	af00      	add	r7, sp, #0
 80021c4:	60f8      	str	r0, [r7, #12]
 80021c6:	60b9      	str	r1, [r7, #8]
 80021c8:	607a      	str	r2, [r7, #4]
 80021ca:	68fb      	ldr	r3, [r7, #12]
 80021cc:	3360      	adds	r3, #96	@ 0x60
 80021ce:	461a      	mov	r2, r3
 80021d0:	68bb      	ldr	r3, [r7, #8]
 80021d2:	009b      	lsls	r3, r3, #2
 80021d4:	4413      	add	r3, r2
 80021d6:	617b      	str	r3, [r7, #20]
 80021d8:	697b      	ldr	r3, [r7, #20]
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	431a      	orrs	r2, r3
 80021e4:	697b      	ldr	r3, [r7, #20]
 80021e6:	601a      	str	r2, [r3, #0]
 80021e8:	bf00      	nop
 80021ea:	371c      	adds	r7, #28
 80021ec:	46bd      	mov	sp, r7
 80021ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021f2:	4770      	bx	lr

080021f4 <LL_ADC_SetOffsetSaturation>:
 80021f4:	b480      	push	{r7}
 80021f6:	b087      	sub	sp, #28
 80021f8:	af00      	add	r7, sp, #0
 80021fa:	60f8      	str	r0, [r7, #12]
 80021fc:	60b9      	str	r1, [r7, #8]
 80021fe:	607a      	str	r2, [r7, #4]
 8002200:	68fb      	ldr	r3, [r7, #12]
 8002202:	3360      	adds	r3, #96	@ 0x60
 8002204:	461a      	mov	r2, r3
 8002206:	68bb      	ldr	r3, [r7, #8]
 8002208:	009b      	lsls	r3, r3, #2
 800220a:	4413      	add	r3, r2
 800220c:	617b      	str	r3, [r7, #20]
 800220e:	697b      	ldr	r3, [r7, #20]
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	431a      	orrs	r2, r3
 800221a:	697b      	ldr	r3, [r7, #20]
 800221c:	601a      	str	r2, [r3, #0]
 800221e:	bf00      	nop
 8002220:	371c      	adds	r7, #28
 8002222:	46bd      	mov	sp, r7
 8002224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002228:	4770      	bx	lr

0800222a <LL_ADC_SetSamplingTimeCommonConfig>:
 800222a:	b480      	push	{r7}
 800222c:	b083      	sub	sp, #12
 800222e:	af00      	add	r7, sp, #0
 8002230:	6078      	str	r0, [r7, #4]
 8002232:	6039      	str	r1, [r7, #0]
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	695b      	ldr	r3, [r3, #20]
 8002238:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 800223c:	683b      	ldr	r3, [r7, #0]
 800223e:	431a      	orrs	r2, r3
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	615a      	str	r2, [r3, #20]
 8002244:	bf00      	nop
 8002246:	370c      	adds	r7, #12
 8002248:	46bd      	mov	sp, r7
 800224a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800224e:	4770      	bx	lr

08002250 <LL_ADC_REG_IsTriggerSourceSWStart>:
 8002250:	b480      	push	{r7}
 8002252:	b083      	sub	sp, #12
 8002254:	af00      	add	r7, sp, #0
 8002256:	6078      	str	r0, [r7, #4]
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	68db      	ldr	r3, [r3, #12]
 800225c:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8002260:	2b00      	cmp	r3, #0
 8002262:	d101      	bne.n	8002268 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8002264:	2301      	movs	r3, #1
 8002266:	e000      	b.n	800226a <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8002268:	2300      	movs	r3, #0
 800226a:	4618      	mov	r0, r3
 800226c:	370c      	adds	r7, #12
 800226e:	46bd      	mov	sp, r7
 8002270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002274:	4770      	bx	lr

08002276 <LL_ADC_REG_SetSequencerRanks>:
 8002276:	b480      	push	{r7}
 8002278:	b087      	sub	sp, #28
 800227a:	af00      	add	r7, sp, #0
 800227c:	60f8      	str	r0, [r7, #12]
 800227e:	60b9      	str	r1, [r7, #8]
 8002280:	607a      	str	r2, [r7, #4]
 8002282:	68fb      	ldr	r3, [r7, #12]
 8002284:	3330      	adds	r3, #48	@ 0x30
 8002286:	461a      	mov	r2, r3
 8002288:	68bb      	ldr	r3, [r7, #8]
 800228a:	0a1b      	lsrs	r3, r3, #8
 800228c:	009b      	lsls	r3, r3, #2
 800228e:	f003 030c 	and.w	r3, r3, #12
 8002292:	4413      	add	r3, r2
 8002294:	617b      	str	r3, [r7, #20]
 8002296:	697b      	ldr	r3, [r7, #20]
 8002298:	681a      	ldr	r2, [r3, #0]
 800229a:	68bb      	ldr	r3, [r7, #8]
 800229c:	f003 031f 	and.w	r3, r3, #31
 80022a0:	211f      	movs	r1, #31
 80022a2:	fa01 f303 	lsl.w	r3, r1, r3
 80022a6:	43db      	mvns	r3, r3
 80022a8:	401a      	ands	r2, r3
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	0e9b      	lsrs	r3, r3, #26
 80022ae:	f003 011f 	and.w	r1, r3, #31
 80022b2:	68bb      	ldr	r3, [r7, #8]
 80022b4:	f003 031f 	and.w	r3, r3, #31
 80022b8:	fa01 f303 	lsl.w	r3, r1, r3
 80022bc:	431a      	orrs	r2, r3
 80022be:	697b      	ldr	r3, [r7, #20]
 80022c0:	601a      	str	r2, [r3, #0]
 80022c2:	bf00      	nop
 80022c4:	371c      	adds	r7, #28
 80022c6:	46bd      	mov	sp, r7
 80022c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022cc:	4770      	bx	lr

080022ce <LL_ADC_SetChannelSamplingTime>:
 80022ce:	b480      	push	{r7}
 80022d0:	b087      	sub	sp, #28
 80022d2:	af00      	add	r7, sp, #0
 80022d4:	60f8      	str	r0, [r7, #12]
 80022d6:	60b9      	str	r1, [r7, #8]
 80022d8:	607a      	str	r2, [r7, #4]
 80022da:	68fb      	ldr	r3, [r7, #12]
 80022dc:	3314      	adds	r3, #20
 80022de:	461a      	mov	r2, r3
 80022e0:	68bb      	ldr	r3, [r7, #8]
 80022e2:	0e5b      	lsrs	r3, r3, #25
 80022e4:	009b      	lsls	r3, r3, #2
 80022e6:	f003 0304 	and.w	r3, r3, #4
 80022ea:	4413      	add	r3, r2
 80022ec:	617b      	str	r3, [r7, #20]
 80022ee:	697b      	ldr	r3, [r7, #20]
 80022f0:	681a      	ldr	r2, [r3, #0]
 80022f2:	68bb      	ldr	r3, [r7, #8]
 80022f4:	0d1b      	lsrs	r3, r3, #20
 80022f6:	f003 031f 	and.w	r3, r3, #31
 80022fa:	2107      	movs	r1, #7
 80022fc:	fa01 f303 	lsl.w	r3, r1, r3
 8002300:	43db      	mvns	r3, r3
 8002302:	401a      	ands	r2, r3
 8002304:	68bb      	ldr	r3, [r7, #8]
 8002306:	0d1b      	lsrs	r3, r3, #20
 8002308:	f003 031f 	and.w	r3, r3, #31
 800230c:	6879      	ldr	r1, [r7, #4]
 800230e:	fa01 f303 	lsl.w	r3, r1, r3
 8002312:	431a      	orrs	r2, r3
 8002314:	697b      	ldr	r3, [r7, #20]
 8002316:	601a      	str	r2, [r3, #0]
 8002318:	bf00      	nop
 800231a:	371c      	adds	r7, #28
 800231c:	46bd      	mov	sp, r7
 800231e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002322:	4770      	bx	lr

08002324 <LL_ADC_SetChannelSingleDiff>:
 8002324:	b480      	push	{r7}
 8002326:	b085      	sub	sp, #20
 8002328:	af00      	add	r7, sp, #0
 800232a:	60f8      	str	r0, [r7, #12]
 800232c:	60b9      	str	r1, [r7, #8]
 800232e:	607a      	str	r2, [r7, #4]
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8002336:	68bb      	ldr	r3, [r7, #8]
 8002338:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800233c:	43db      	mvns	r3, r3
 800233e:	401a      	ands	r2, r3
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	f003 0318 	and.w	r3, r3, #24
 8002346:	4908      	ldr	r1, [pc, #32]	@ (8002368 <LL_ADC_SetChannelSingleDiff+0x44>)
 8002348:	40d9      	lsrs	r1, r3
 800234a:	68bb      	ldr	r3, [r7, #8]
 800234c:	400b      	ands	r3, r1
 800234e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002352:	431a      	orrs	r2, r3
 8002354:	68fb      	ldr	r3, [r7, #12]
 8002356:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 800235a:	bf00      	nop
 800235c:	3714      	adds	r7, #20
 800235e:	46bd      	mov	sp, r7
 8002360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002364:	4770      	bx	lr
 8002366:	bf00      	nop
 8002368:	0007ffff 	.word	0x0007ffff

0800236c <LL_ADC_GetMultimode>:
 800236c:	b480      	push	{r7}
 800236e:	b083      	sub	sp, #12
 8002370:	af00      	add	r7, sp, #0
 8002372:	6078      	str	r0, [r7, #4]
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	689b      	ldr	r3, [r3, #8]
 8002378:	f003 031f 	and.w	r3, r3, #31
 800237c:	4618      	mov	r0, r3
 800237e:	370c      	adds	r7, #12
 8002380:	46bd      	mov	sp, r7
 8002382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002386:	4770      	bx	lr

08002388 <LL_ADC_GetMultiDMATransfer>:
 8002388:	b480      	push	{r7}
 800238a:	b083      	sub	sp, #12
 800238c:	af00      	add	r7, sp, #0
 800238e:	6078      	str	r0, [r7, #4]
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	689b      	ldr	r3, [r3, #8]
 8002394:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8002398:	4618      	mov	r0, r3
 800239a:	370c      	adds	r7, #12
 800239c:	46bd      	mov	sp, r7
 800239e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023a2:	4770      	bx	lr

080023a4 <LL_ADC_DisableDeepPowerDown>:
 80023a4:	b480      	push	{r7}
 80023a6:	b083      	sub	sp, #12
 80023a8:	af00      	add	r7, sp, #0
 80023aa:	6078      	str	r0, [r7, #4]
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	689b      	ldr	r3, [r3, #8]
 80023b0:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 80023b4:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80023b8:	687a      	ldr	r2, [r7, #4]
 80023ba:	6093      	str	r3, [r2, #8]
 80023bc:	bf00      	nop
 80023be:	370c      	adds	r7, #12
 80023c0:	46bd      	mov	sp, r7
 80023c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023c6:	4770      	bx	lr

080023c8 <LL_ADC_IsDeepPowerDownEnabled>:
 80023c8:	b480      	push	{r7}
 80023ca:	b083      	sub	sp, #12
 80023cc:	af00      	add	r7, sp, #0
 80023ce:	6078      	str	r0, [r7, #4]
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	689b      	ldr	r3, [r3, #8]
 80023d4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80023d8:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80023dc:	d101      	bne.n	80023e2 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 80023de:	2301      	movs	r3, #1
 80023e0:	e000      	b.n	80023e4 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 80023e2:	2300      	movs	r3, #0
 80023e4:	4618      	mov	r0, r3
 80023e6:	370c      	adds	r7, #12
 80023e8:	46bd      	mov	sp, r7
 80023ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ee:	4770      	bx	lr

080023f0 <LL_ADC_EnableInternalRegulator>:
 80023f0:	b480      	push	{r7}
 80023f2:	b083      	sub	sp, #12
 80023f4:	af00      	add	r7, sp, #0
 80023f6:	6078      	str	r0, [r7, #4]
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	689b      	ldr	r3, [r3, #8]
 80023fc:	f023 4310 	bic.w	r3, r3, #2415919104	@ 0x90000000
 8002400:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002404:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	609a      	str	r2, [r3, #8]
 800240c:	bf00      	nop
 800240e:	370c      	adds	r7, #12
 8002410:	46bd      	mov	sp, r7
 8002412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002416:	4770      	bx	lr

08002418 <LL_ADC_IsInternalRegulatorEnabled>:
 8002418:	b480      	push	{r7}
 800241a:	b083      	sub	sp, #12
 800241c:	af00      	add	r7, sp, #0
 800241e:	6078      	str	r0, [r7, #4]
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	689b      	ldr	r3, [r3, #8]
 8002424:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002428:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800242c:	d101      	bne.n	8002432 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 800242e:	2301      	movs	r3, #1
 8002430:	e000      	b.n	8002434 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8002432:	2300      	movs	r3, #0
 8002434:	4618      	mov	r0, r3
 8002436:	370c      	adds	r7, #12
 8002438:	46bd      	mov	sp, r7
 800243a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800243e:	4770      	bx	lr

08002440 <LL_ADC_Enable>:
 8002440:	b480      	push	{r7}
 8002442:	b083      	sub	sp, #12
 8002444:	af00      	add	r7, sp, #0
 8002446:	6078      	str	r0, [r7, #4]
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	689b      	ldr	r3, [r3, #8]
 800244c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002450:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002454:	f043 0201 	orr.w	r2, r3, #1
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	609a      	str	r2, [r3, #8]
 800245c:	bf00      	nop
 800245e:	370c      	adds	r7, #12
 8002460:	46bd      	mov	sp, r7
 8002462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002466:	4770      	bx	lr

08002468 <LL_ADC_Disable>:
 8002468:	b480      	push	{r7}
 800246a:	b083      	sub	sp, #12
 800246c:	af00      	add	r7, sp, #0
 800246e:	6078      	str	r0, [r7, #4]
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	689b      	ldr	r3, [r3, #8]
 8002474:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002478:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 800247c:	f043 0202 	orr.w	r2, r3, #2
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	609a      	str	r2, [r3, #8]
 8002484:	bf00      	nop
 8002486:	370c      	adds	r7, #12
 8002488:	46bd      	mov	sp, r7
 800248a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800248e:	4770      	bx	lr

08002490 <LL_ADC_IsEnabled>:
 8002490:	b480      	push	{r7}
 8002492:	b083      	sub	sp, #12
 8002494:	af00      	add	r7, sp, #0
 8002496:	6078      	str	r0, [r7, #4]
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	689b      	ldr	r3, [r3, #8]
 800249c:	f003 0301 	and.w	r3, r3, #1
 80024a0:	2b01      	cmp	r3, #1
 80024a2:	d101      	bne.n	80024a8 <LL_ADC_IsEnabled+0x18>
 80024a4:	2301      	movs	r3, #1
 80024a6:	e000      	b.n	80024aa <LL_ADC_IsEnabled+0x1a>
 80024a8:	2300      	movs	r3, #0
 80024aa:	4618      	mov	r0, r3
 80024ac:	370c      	adds	r7, #12
 80024ae:	46bd      	mov	sp, r7
 80024b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024b4:	4770      	bx	lr

080024b6 <LL_ADC_IsDisableOngoing>:
 80024b6:	b480      	push	{r7}
 80024b8:	b083      	sub	sp, #12
 80024ba:	af00      	add	r7, sp, #0
 80024bc:	6078      	str	r0, [r7, #4]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	689b      	ldr	r3, [r3, #8]
 80024c2:	f003 0302 	and.w	r3, r3, #2
 80024c6:	2b02      	cmp	r3, #2
 80024c8:	d101      	bne.n	80024ce <LL_ADC_IsDisableOngoing+0x18>
 80024ca:	2301      	movs	r3, #1
 80024cc:	e000      	b.n	80024d0 <LL_ADC_IsDisableOngoing+0x1a>
 80024ce:	2300      	movs	r3, #0
 80024d0:	4618      	mov	r0, r3
 80024d2:	370c      	adds	r7, #12
 80024d4:	46bd      	mov	sp, r7
 80024d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024da:	4770      	bx	lr

080024dc <LL_ADC_REG_StartConversion>:
 80024dc:	b480      	push	{r7}
 80024de:	b083      	sub	sp, #12
 80024e0:	af00      	add	r7, sp, #0
 80024e2:	6078      	str	r0, [r7, #4]
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	689b      	ldr	r3, [r3, #8]
 80024e8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80024ec:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80024f0:	f043 0204 	orr.w	r2, r3, #4
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	609a      	str	r2, [r3, #8]
 80024f8:	bf00      	nop
 80024fa:	370c      	adds	r7, #12
 80024fc:	46bd      	mov	sp, r7
 80024fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002502:	4770      	bx	lr

08002504 <LL_ADC_REG_StopConversion>:
 8002504:	b480      	push	{r7}
 8002506:	b083      	sub	sp, #12
 8002508:	af00      	add	r7, sp, #0
 800250a:	6078      	str	r0, [r7, #4]
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	689b      	ldr	r3, [r3, #8]
 8002510:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002514:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002518:	f043 0210 	orr.w	r2, r3, #16
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	609a      	str	r2, [r3, #8]
 8002520:	bf00      	nop
 8002522:	370c      	adds	r7, #12
 8002524:	46bd      	mov	sp, r7
 8002526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800252a:	4770      	bx	lr

0800252c <LL_ADC_REG_IsConversionOngoing>:
 800252c:	b480      	push	{r7}
 800252e:	b083      	sub	sp, #12
 8002530:	af00      	add	r7, sp, #0
 8002532:	6078      	str	r0, [r7, #4]
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	689b      	ldr	r3, [r3, #8]
 8002538:	f003 0304 	and.w	r3, r3, #4
 800253c:	2b04      	cmp	r3, #4
 800253e:	d101      	bne.n	8002544 <LL_ADC_REG_IsConversionOngoing+0x18>
 8002540:	2301      	movs	r3, #1
 8002542:	e000      	b.n	8002546 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8002544:	2300      	movs	r3, #0
 8002546:	4618      	mov	r0, r3
 8002548:	370c      	adds	r7, #12
 800254a:	46bd      	mov	sp, r7
 800254c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002550:	4770      	bx	lr

08002552 <LL_ADC_INJ_StopConversion>:
 8002552:	b480      	push	{r7}
 8002554:	b083      	sub	sp, #12
 8002556:	af00      	add	r7, sp, #0
 8002558:	6078      	str	r0, [r7, #4]
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	689b      	ldr	r3, [r3, #8]
 800255e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002562:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002566:	f043 0220 	orr.w	r2, r3, #32
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	609a      	str	r2, [r3, #8]
 800256e:	bf00      	nop
 8002570:	370c      	adds	r7, #12
 8002572:	46bd      	mov	sp, r7
 8002574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002578:	4770      	bx	lr

0800257a <LL_ADC_INJ_IsConversionOngoing>:
 800257a:	b480      	push	{r7}
 800257c:	b083      	sub	sp, #12
 800257e:	af00      	add	r7, sp, #0
 8002580:	6078      	str	r0, [r7, #4]
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	689b      	ldr	r3, [r3, #8]
 8002586:	f003 0308 	and.w	r3, r3, #8
 800258a:	2b08      	cmp	r3, #8
 800258c:	d101      	bne.n	8002592 <LL_ADC_INJ_IsConversionOngoing+0x18>
 800258e:	2301      	movs	r3, #1
 8002590:	e000      	b.n	8002594 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8002592:	2300      	movs	r3, #0
 8002594:	4618      	mov	r0, r3
 8002596:	370c      	adds	r7, #12
 8002598:	46bd      	mov	sp, r7
 800259a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800259e:	4770      	bx	lr

080025a0 <HAL_ADC_Init>:
 80025a0:	b590      	push	{r4, r7, lr}
 80025a2:	b089      	sub	sp, #36	@ 0x24
 80025a4:	af00      	add	r7, sp, #0
 80025a6:	6078      	str	r0, [r7, #4]
 80025a8:	2300      	movs	r3, #0
 80025aa:	77fb      	strb	r3, [r7, #31]
 80025ac:	2300      	movs	r3, #0
 80025ae:	60fb      	str	r3, [r7, #12]
 80025b0:	687b      	ldr	r3, [r7, #4]
 80025b2:	2b00      	cmp	r3, #0
 80025b4:	d101      	bne.n	80025ba <HAL_ADC_Init+0x1a>
 80025b6:	2301      	movs	r3, #1
 80025b8:	e167      	b.n	800288a <HAL_ADC_Init+0x2ea>
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	695b      	ldr	r3, [r3, #20]
 80025be:	2b00      	cmp	r3, #0
 80025c0:	687b      	ldr	r3, [r7, #4]
 80025c2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80025c4:	2b00      	cmp	r3, #0
 80025c6:	d109      	bne.n	80025dc <HAL_ADC_Init+0x3c>
 80025c8:	6878      	ldr	r0, [r7, #4]
 80025ca:	f7ff fa23 	bl	8001a14 <HAL_ADC_MspInit>
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	2200      	movs	r2, #0
 80025d2:	661a      	str	r2, [r3, #96]	@ 0x60
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	2200      	movs	r2, #0
 80025d8:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	4618      	mov	r0, r3
 80025e2:	f7ff fef1 	bl	80023c8 <LL_ADC_IsDeepPowerDownEnabled>
 80025e6:	4603      	mov	r3, r0
 80025e8:	2b00      	cmp	r3, #0
 80025ea:	d004      	beq.n	80025f6 <HAL_ADC_Init+0x56>
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	4618      	mov	r0, r3
 80025f2:	f7ff fed7 	bl	80023a4 <LL_ADC_DisableDeepPowerDown>
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	4618      	mov	r0, r3
 80025fc:	f7ff ff0c 	bl	8002418 <LL_ADC_IsInternalRegulatorEnabled>
 8002600:	4603      	mov	r3, r0
 8002602:	2b00      	cmp	r3, #0
 8002604:	d115      	bne.n	8002632 <HAL_ADC_Init+0x92>
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	681b      	ldr	r3, [r3, #0]
 800260a:	4618      	mov	r0, r3
 800260c:	f7ff fef0 	bl	80023f0 <LL_ADC_EnableInternalRegulator>
 8002610:	4ba0      	ldr	r3, [pc, #640]	@ (8002894 <HAL_ADC_Init+0x2f4>)
 8002612:	681b      	ldr	r3, [r3, #0]
 8002614:	099b      	lsrs	r3, r3, #6
 8002616:	4aa0      	ldr	r2, [pc, #640]	@ (8002898 <HAL_ADC_Init+0x2f8>)
 8002618:	fba2 2303 	umull	r2, r3, r2, r3
 800261c:	099b      	lsrs	r3, r3, #6
 800261e:	3301      	adds	r3, #1
 8002620:	005b      	lsls	r3, r3, #1
 8002622:	60fb      	str	r3, [r7, #12]
 8002624:	e002      	b.n	800262c <HAL_ADC_Init+0x8c>
 8002626:	68fb      	ldr	r3, [r7, #12]
 8002628:	3b01      	subs	r3, #1
 800262a:	60fb      	str	r3, [r7, #12]
 800262c:	68fb      	ldr	r3, [r7, #12]
 800262e:	2b00      	cmp	r3, #0
 8002630:	d1f9      	bne.n	8002626 <HAL_ADC_Init+0x86>
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	4618      	mov	r0, r3
 8002638:	f7ff feee 	bl	8002418 <LL_ADC_IsInternalRegulatorEnabled>
 800263c:	4603      	mov	r3, r0
 800263e:	2b00      	cmp	r3, #0
 8002640:	d10d      	bne.n	800265e <HAL_ADC_Init+0xbe>
 8002642:	687b      	ldr	r3, [r7, #4]
 8002644:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002646:	f043 0210 	orr.w	r2, r3, #16
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002652:	f043 0201 	orr.w	r2, r3, #1
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	661a      	str	r2, [r3, #96]	@ 0x60
 800265a:	2301      	movs	r3, #1
 800265c:	77fb      	strb	r3, [r7, #31]
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	681b      	ldr	r3, [r3, #0]
 8002662:	4618      	mov	r0, r3
 8002664:	f7ff ff62 	bl	800252c <LL_ADC_REG_IsConversionOngoing>
 8002668:	6178      	str	r0, [r7, #20]
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800266e:	f003 0310 	and.w	r3, r3, #16
 8002672:	2b00      	cmp	r3, #0
 8002674:	f040 8100 	bne.w	8002878 <HAL_ADC_Init+0x2d8>
 8002678:	697b      	ldr	r3, [r7, #20]
 800267a:	2b00      	cmp	r3, #0
 800267c:	f040 80fc 	bne.w	8002878 <HAL_ADC_Init+0x2d8>
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002684:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 8002688:	f043 0202 	orr.w	r2, r3, #2
 800268c:	687b      	ldr	r3, [r7, #4]
 800268e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002690:	687b      	ldr	r3, [r7, #4]
 8002692:	681b      	ldr	r3, [r3, #0]
 8002694:	4618      	mov	r0, r3
 8002696:	f7ff fefb 	bl	8002490 <LL_ADC_IsEnabled>
 800269a:	4603      	mov	r3, r0
 800269c:	2b00      	cmp	r3, #0
 800269e:	d111      	bne.n	80026c4 <HAL_ADC_Init+0x124>
 80026a0:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 80026a4:	f7ff fef4 	bl	8002490 <LL_ADC_IsEnabled>
 80026a8:	4604      	mov	r4, r0
 80026aa:	487c      	ldr	r0, [pc, #496]	@ (800289c <HAL_ADC_Init+0x2fc>)
 80026ac:	f7ff fef0 	bl	8002490 <LL_ADC_IsEnabled>
 80026b0:	4603      	mov	r3, r0
 80026b2:	4323      	orrs	r3, r4
 80026b4:	2b00      	cmp	r3, #0
 80026b6:	d105      	bne.n	80026c4 <HAL_ADC_Init+0x124>
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	685b      	ldr	r3, [r3, #4]
 80026bc:	4619      	mov	r1, r3
 80026be:	4878      	ldr	r0, [pc, #480]	@ (80028a0 <HAL_ADC_Init+0x300>)
 80026c0:	f7ff fcf4 	bl	80020ac <LL_ADC_SetCommonClock>
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	7f5b      	ldrb	r3, [r3, #29]
 80026c8:	035a      	lsls	r2, r3, #13
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80026ce:	431a      	orrs	r2, r3
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	68db      	ldr	r3, [r3, #12]
 80026d4:	431a      	orrs	r2, r3
 80026d6:	687b      	ldr	r3, [r7, #4]
 80026d8:	689b      	ldr	r3, [r3, #8]
 80026da:	431a      	orrs	r2, r3
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80026e2:	041b      	lsls	r3, r3, #16
 80026e4:	4313      	orrs	r3, r2
 80026e6:	61bb      	str	r3, [r7, #24]
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80026ee:	2b01      	cmp	r3, #1
 80026f0:	d106      	bne.n	8002700 <HAL_ADC_Init+0x160>
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80026f6:	3b01      	subs	r3, #1
 80026f8:	045b      	lsls	r3, r3, #17
 80026fa:	69ba      	ldr	r2, [r7, #24]
 80026fc:	4313      	orrs	r3, r2
 80026fe:	61bb      	str	r3, [r7, #24]
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002704:	2b00      	cmp	r3, #0
 8002706:	d009      	beq.n	800271c <HAL_ADC_Init+0x17c>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800270c:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002714:	4313      	orrs	r3, r2
 8002716:	69ba      	ldr	r2, [r7, #24]
 8002718:	4313      	orrs	r3, r2
 800271a:	61bb      	str	r3, [r7, #24]
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	681b      	ldr	r3, [r3, #0]
 8002720:	68da      	ldr	r2, [r3, #12]
 8002722:	4b60      	ldr	r3, [pc, #384]	@ (80028a4 <HAL_ADC_Init+0x304>)
 8002724:	4013      	ands	r3, r2
 8002726:	687a      	ldr	r2, [r7, #4]
 8002728:	6812      	ldr	r2, [r2, #0]
 800272a:	69b9      	ldr	r1, [r7, #24]
 800272c:	430b      	orrs	r3, r1
 800272e:	60d3      	str	r3, [r2, #12]
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	681b      	ldr	r3, [r3, #0]
 8002734:	691b      	ldr	r3, [r3, #16]
 8002736:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	681b      	ldr	r3, [r3, #0]
 8002742:	430a      	orrs	r2, r1
 8002744:	611a      	str	r2, [r3, #16]
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	681b      	ldr	r3, [r3, #0]
 800274a:	4618      	mov	r0, r3
 800274c:	f7ff ff15 	bl	800257a <LL_ADC_INJ_IsConversionOngoing>
 8002750:	6138      	str	r0, [r7, #16]
 8002752:	697b      	ldr	r3, [r7, #20]
 8002754:	2b00      	cmp	r3, #0
 8002756:	d16d      	bne.n	8002834 <HAL_ADC_Init+0x294>
 8002758:	693b      	ldr	r3, [r7, #16]
 800275a:	2b00      	cmp	r3, #0
 800275c:	d16a      	bne.n	8002834 <HAL_ADC_Init+0x294>
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	7f1b      	ldrb	r3, [r3, #28]
 8002762:	039a      	lsls	r2, r3, #14
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 800276a:	005b      	lsls	r3, r3, #1
 800276c:	4313      	orrs	r3, r2
 800276e:	61bb      	str	r3, [r7, #24]
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	681b      	ldr	r3, [r3, #0]
 8002774:	68db      	ldr	r3, [r3, #12]
 8002776:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800277a:	f023 0302 	bic.w	r3, r3, #2
 800277e:	687a      	ldr	r2, [r7, #4]
 8002780:	6812      	ldr	r2, [r2, #0]
 8002782:	69b9      	ldr	r1, [r7, #24]
 8002784:	430b      	orrs	r3, r1
 8002786:	60d3      	str	r3, [r2, #12]
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	691b      	ldr	r3, [r3, #16]
 800278c:	2b00      	cmp	r3, #0
 800278e:	d017      	beq.n	80027c0 <HAL_ADC_Init+0x220>
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	691a      	ldr	r2, [r3, #16]
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800279e:	611a      	str	r2, [r3, #16]
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80027a8:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 80027ac:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80027b0:	687a      	ldr	r2, [r7, #4]
 80027b2:	6911      	ldr	r1, [r2, #16]
 80027b4:	687a      	ldr	r2, [r7, #4]
 80027b6:	6812      	ldr	r2, [r2, #0]
 80027b8:	430b      	orrs	r3, r1
 80027ba:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 80027be:	e013      	b.n	80027e8 <HAL_ADC_Init+0x248>
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	691a      	ldr	r2, [r3, #16]
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80027ce:	611a      	str	r2, [r3, #16]
 80027d0:	687b      	ldr	r3, [r7, #4]
 80027d2:	681b      	ldr	r3, [r3, #0]
 80027d4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80027d8:	687a      	ldr	r2, [r7, #4]
 80027da:	6812      	ldr	r2, [r2, #0]
 80027dc:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 80027e0:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80027e4:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80027ee:	2b01      	cmp	r3, #1
 80027f0:	d118      	bne.n	8002824 <HAL_ADC_Init+0x284>
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	691b      	ldr	r3, [r3, #16]
 80027f8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80027fc:	f023 0304 	bic.w	r3, r3, #4
 8002800:	687a      	ldr	r2, [r7, #4]
 8002802:	6c51      	ldr	r1, [r2, #68]	@ 0x44
 8002804:	687a      	ldr	r2, [r7, #4]
 8002806:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8002808:	4311      	orrs	r1, r2
 800280a:	687a      	ldr	r2, [r7, #4]
 800280c:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 800280e:	4311      	orrs	r1, r2
 8002810:	687a      	ldr	r2, [r7, #4]
 8002812:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8002814:	430a      	orrs	r2, r1
 8002816:	431a      	orrs	r2, r3
 8002818:	687b      	ldr	r3, [r7, #4]
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	f042 0201 	orr.w	r2, r2, #1
 8002820:	611a      	str	r2, [r3, #16]
 8002822:	e007      	b.n	8002834 <HAL_ADC_Init+0x294>
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	691a      	ldr	r2, [r3, #16]
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	f022 0201 	bic.w	r2, r2, #1
 8002832:	611a      	str	r2, [r3, #16]
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	695b      	ldr	r3, [r3, #20]
 8002838:	2b01      	cmp	r3, #1
 800283a:	d10c      	bne.n	8002856 <HAL_ADC_Init+0x2b6>
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002842:	f023 010f 	bic.w	r1, r3, #15
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	6a1b      	ldr	r3, [r3, #32]
 800284a:	1e5a      	subs	r2, r3, #1
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	681b      	ldr	r3, [r3, #0]
 8002850:	430a      	orrs	r2, r1
 8002852:	631a      	str	r2, [r3, #48]	@ 0x30
 8002854:	e007      	b.n	8002866 <HAL_ADC_Init+0x2c6>
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	681b      	ldr	r3, [r3, #0]
 800285a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	f022 020f 	bic.w	r2, r2, #15
 8002864:	631a      	str	r2, [r3, #48]	@ 0x30
 8002866:	687b      	ldr	r3, [r7, #4]
 8002868:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800286a:	f023 0303 	bic.w	r3, r3, #3
 800286e:	f043 0201 	orr.w	r2, r3, #1
 8002872:	687b      	ldr	r3, [r7, #4]
 8002874:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002876:	e007      	b.n	8002888 <HAL_ADC_Init+0x2e8>
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800287c:	f043 0210 	orr.w	r2, r3, #16
 8002880:	687b      	ldr	r3, [r7, #4]
 8002882:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002884:	2301      	movs	r3, #1
 8002886:	77fb      	strb	r3, [r7, #31]
 8002888:	7ffb      	ldrb	r3, [r7, #31]
 800288a:	4618      	mov	r0, r3
 800288c:	3724      	adds	r7, #36	@ 0x24
 800288e:	46bd      	mov	sp, r7
 8002890:	bd90      	pop	{r4, r7, pc}
 8002892:	bf00      	nop
 8002894:	20000000 	.word	0x20000000
 8002898:	053e2d63 	.word	0x053e2d63
 800289c:	50000100 	.word	0x50000100
 80028a0:	50000300 	.word	0x50000300
 80028a4:	fff04007 	.word	0xfff04007

080028a8 <HAL_ADC_Start>:
 80028a8:	b580      	push	{r7, lr}
 80028aa:	b086      	sub	sp, #24
 80028ac:	af00      	add	r7, sp, #0
 80028ae:	6078      	str	r0, [r7, #4]
 80028b0:	4859      	ldr	r0, [pc, #356]	@ (8002a18 <HAL_ADC_Start+0x170>)
 80028b2:	f7ff fd5b 	bl	800236c <LL_ADC_GetMultimode>
 80028b6:	6138      	str	r0, [r7, #16]
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	681b      	ldr	r3, [r3, #0]
 80028bc:	4618      	mov	r0, r3
 80028be:	f7ff fe35 	bl	800252c <LL_ADC_REG_IsConversionOngoing>
 80028c2:	4603      	mov	r3, r0
 80028c4:	2b00      	cmp	r3, #0
 80028c6:	f040 809f 	bne.w	8002a08 <HAL_ADC_Start+0x160>
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80028d0:	2b01      	cmp	r3, #1
 80028d2:	d101      	bne.n	80028d8 <HAL_ADC_Start+0x30>
 80028d4:	2302      	movs	r3, #2
 80028d6:	e09a      	b.n	8002a0e <HAL_ADC_Start+0x166>
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	2201      	movs	r2, #1
 80028dc:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80028e0:	6878      	ldr	r0, [r7, #4]
 80028e2:	f000 fe63 	bl	80035ac <ADC_Enable>
 80028e6:	4603      	mov	r3, r0
 80028e8:	75fb      	strb	r3, [r7, #23]
 80028ea:	7dfb      	ldrb	r3, [r7, #23]
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	f040 8086 	bne.w	80029fe <HAL_ADC_Start+0x156>
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80028f6:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80028fa:	f023 0301 	bic.w	r3, r3, #1
 80028fe:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	4a44      	ldr	r2, [pc, #272]	@ (8002a1c <HAL_ADC_Start+0x174>)
 800290c:	4293      	cmp	r3, r2
 800290e:	d002      	beq.n	8002916 <HAL_ADC_Start+0x6e>
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	e001      	b.n	800291a <HAL_ADC_Start+0x72>
 8002916:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 800291a:	687a      	ldr	r2, [r7, #4]
 800291c:	6812      	ldr	r2, [r2, #0]
 800291e:	4293      	cmp	r3, r2
 8002920:	d002      	beq.n	8002928 <HAL_ADC_Start+0x80>
 8002922:	693b      	ldr	r3, [r7, #16]
 8002924:	2b00      	cmp	r3, #0
 8002926:	d105      	bne.n	8002934 <HAL_ADC_Start+0x8c>
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800292c:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002934:	687b      	ldr	r3, [r7, #4]
 8002936:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002938:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800293c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002940:	d106      	bne.n	8002950 <HAL_ADC_Start+0xa8>
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002946:	f023 0206 	bic.w	r2, r3, #6
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	661a      	str	r2, [r3, #96]	@ 0x60
 800294e:	e002      	b.n	8002956 <HAL_ADC_Start+0xae>
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	2200      	movs	r2, #0
 8002954:	661a      	str	r2, [r3, #96]	@ 0x60
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	681b      	ldr	r3, [r3, #0]
 800295a:	221c      	movs	r2, #28
 800295c:	601a      	str	r2, [r3, #0]
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	2200      	movs	r2, #0
 8002962:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	4a2c      	ldr	r2, [pc, #176]	@ (8002a1c <HAL_ADC_Start+0x174>)
 800296c:	4293      	cmp	r3, r2
 800296e:	d002      	beq.n	8002976 <HAL_ADC_Start+0xce>
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	681b      	ldr	r3, [r3, #0]
 8002974:	e001      	b.n	800297a <HAL_ADC_Start+0xd2>
 8002976:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 800297a:	687a      	ldr	r2, [r7, #4]
 800297c:	6812      	ldr	r2, [r2, #0]
 800297e:	4293      	cmp	r3, r2
 8002980:	d008      	beq.n	8002994 <HAL_ADC_Start+0xec>
 8002982:	693b      	ldr	r3, [r7, #16]
 8002984:	2b00      	cmp	r3, #0
 8002986:	d005      	beq.n	8002994 <HAL_ADC_Start+0xec>
 8002988:	693b      	ldr	r3, [r7, #16]
 800298a:	2b05      	cmp	r3, #5
 800298c:	d002      	beq.n	8002994 <HAL_ADC_Start+0xec>
 800298e:	693b      	ldr	r3, [r7, #16]
 8002990:	2b09      	cmp	r3, #9
 8002992:	d114      	bne.n	80029be <HAL_ADC_Start+0x116>
 8002994:	687b      	ldr	r3, [r7, #4]
 8002996:	681b      	ldr	r3, [r3, #0]
 8002998:	68db      	ldr	r3, [r3, #12]
 800299a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800299e:	2b00      	cmp	r3, #0
 80029a0:	d007      	beq.n	80029b2 <HAL_ADC_Start+0x10a>
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80029a6:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80029aa:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	681b      	ldr	r3, [r3, #0]
 80029b6:	4618      	mov	r0, r3
 80029b8:	f7ff fd90 	bl	80024dc <LL_ADC_REG_StartConversion>
 80029bc:	e026      	b.n	8002a0c <HAL_ADC_Start+0x164>
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80029c2:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	65da      	str	r2, [r3, #92]	@ 0x5c
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	681b      	ldr	r3, [r3, #0]
 80029ce:	4a13      	ldr	r2, [pc, #76]	@ (8002a1c <HAL_ADC_Start+0x174>)
 80029d0:	4293      	cmp	r3, r2
 80029d2:	d002      	beq.n	80029da <HAL_ADC_Start+0x132>
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	e001      	b.n	80029de <HAL_ADC_Start+0x136>
 80029da:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80029de:	60fb      	str	r3, [r7, #12]
 80029e0:	68fb      	ldr	r3, [r7, #12]
 80029e2:	68db      	ldr	r3, [r3, #12]
 80029e4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80029e8:	2b00      	cmp	r3, #0
 80029ea:	d00f      	beq.n	8002a0c <HAL_ADC_Start+0x164>
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80029f0:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80029f4:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	65da      	str	r2, [r3, #92]	@ 0x5c
 80029fc:	e006      	b.n	8002a0c <HAL_ADC_Start+0x164>
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	2200      	movs	r2, #0
 8002a02:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002a06:	e001      	b.n	8002a0c <HAL_ADC_Start+0x164>
 8002a08:	2302      	movs	r3, #2
 8002a0a:	75fb      	strb	r3, [r7, #23]
 8002a0c:	7dfb      	ldrb	r3, [r7, #23]
 8002a0e:	4618      	mov	r0, r3
 8002a10:	3718      	adds	r7, #24
 8002a12:	46bd      	mov	sp, r7
 8002a14:	bd80      	pop	{r7, pc}
 8002a16:	bf00      	nop
 8002a18:	50000300 	.word	0x50000300
 8002a1c:	50000100 	.word	0x50000100

08002a20 <HAL_ADC_Stop>:
 8002a20:	b580      	push	{r7, lr}
 8002a22:	b084      	sub	sp, #16
 8002a24:	af00      	add	r7, sp, #0
 8002a26:	6078      	str	r0, [r7, #4]
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002a2e:	2b01      	cmp	r3, #1
 8002a30:	d101      	bne.n	8002a36 <HAL_ADC_Stop+0x16>
 8002a32:	2302      	movs	r3, #2
 8002a34:	e023      	b.n	8002a7e <HAL_ADC_Stop+0x5e>
 8002a36:	687b      	ldr	r3, [r7, #4]
 8002a38:	2201      	movs	r2, #1
 8002a3a:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002a3e:	2103      	movs	r1, #3
 8002a40:	6878      	ldr	r0, [r7, #4]
 8002a42:	f000 fcf7 	bl	8003434 <ADC_ConversionStop>
 8002a46:	4603      	mov	r3, r0
 8002a48:	73fb      	strb	r3, [r7, #15]
 8002a4a:	7bfb      	ldrb	r3, [r7, #15]
 8002a4c:	2b00      	cmp	r3, #0
 8002a4e:	d111      	bne.n	8002a74 <HAL_ADC_Stop+0x54>
 8002a50:	6878      	ldr	r0, [r7, #4]
 8002a52:	f000 fe31 	bl	80036b8 <ADC_Disable>
 8002a56:	4603      	mov	r3, r0
 8002a58:	73fb      	strb	r3, [r7, #15]
 8002a5a:	7bfb      	ldrb	r3, [r7, #15]
 8002a5c:	2b00      	cmp	r3, #0
 8002a5e:	d109      	bne.n	8002a74 <HAL_ADC_Stop+0x54>
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a64:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002a68:	f023 0301 	bic.w	r3, r3, #1
 8002a6c:	f043 0201 	orr.w	r2, r3, #1
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	2200      	movs	r2, #0
 8002a78:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002a7c:	7bfb      	ldrb	r3, [r7, #15]
 8002a7e:	4618      	mov	r0, r3
 8002a80:	3710      	adds	r7, #16
 8002a82:	46bd      	mov	sp, r7
 8002a84:	bd80      	pop	{r7, pc}
	...

08002a88 <HAL_ADC_PollForConversion>:
 8002a88:	b580      	push	{r7, lr}
 8002a8a:	b088      	sub	sp, #32
 8002a8c:	af00      	add	r7, sp, #0
 8002a8e:	6078      	str	r0, [r7, #4]
 8002a90:	6039      	str	r1, [r7, #0]
 8002a92:	4867      	ldr	r0, [pc, #412]	@ (8002c30 <HAL_ADC_PollForConversion+0x1a8>)
 8002a94:	f7ff fc6a 	bl	800236c <LL_ADC_GetMultimode>
 8002a98:	6178      	str	r0, [r7, #20]
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	699b      	ldr	r3, [r3, #24]
 8002a9e:	2b08      	cmp	r3, #8
 8002aa0:	d102      	bne.n	8002aa8 <HAL_ADC_PollForConversion+0x20>
 8002aa2:	2308      	movs	r3, #8
 8002aa4:	61fb      	str	r3, [r7, #28]
 8002aa6:	e02a      	b.n	8002afe <HAL_ADC_PollForConversion+0x76>
 8002aa8:	697b      	ldr	r3, [r7, #20]
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d005      	beq.n	8002aba <HAL_ADC_PollForConversion+0x32>
 8002aae:	697b      	ldr	r3, [r7, #20]
 8002ab0:	2b05      	cmp	r3, #5
 8002ab2:	d002      	beq.n	8002aba <HAL_ADC_PollForConversion+0x32>
 8002ab4:	697b      	ldr	r3, [r7, #20]
 8002ab6:	2b09      	cmp	r3, #9
 8002ab8:	d111      	bne.n	8002ade <HAL_ADC_PollForConversion+0x56>
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	68db      	ldr	r3, [r3, #12]
 8002ac0:	f003 0301 	and.w	r3, r3, #1
 8002ac4:	2b00      	cmp	r3, #0
 8002ac6:	d007      	beq.n	8002ad8 <HAL_ADC_PollForConversion+0x50>
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002acc:	f043 0220 	orr.w	r2, r3, #32
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002ad4:	2301      	movs	r3, #1
 8002ad6:	e0a6      	b.n	8002c26 <HAL_ADC_PollForConversion+0x19e>
 8002ad8:	2304      	movs	r3, #4
 8002ada:	61fb      	str	r3, [r7, #28]
 8002adc:	e00f      	b.n	8002afe <HAL_ADC_PollForConversion+0x76>
 8002ade:	4854      	ldr	r0, [pc, #336]	@ (8002c30 <HAL_ADC_PollForConversion+0x1a8>)
 8002ae0:	f7ff fc52 	bl	8002388 <LL_ADC_GetMultiDMATransfer>
 8002ae4:	4603      	mov	r3, r0
 8002ae6:	2b00      	cmp	r3, #0
 8002ae8:	d007      	beq.n	8002afa <HAL_ADC_PollForConversion+0x72>
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002aee:	f043 0220 	orr.w	r2, r3, #32
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002af6:	2301      	movs	r3, #1
 8002af8:	e095      	b.n	8002c26 <HAL_ADC_PollForConversion+0x19e>
 8002afa:	2304      	movs	r3, #4
 8002afc:	61fb      	str	r3, [r7, #28]
 8002afe:	f7ff faa7 	bl	8002050 <HAL_GetTick>
 8002b02:	6138      	str	r0, [r7, #16]
 8002b04:	e021      	b.n	8002b4a <HAL_ADC_PollForConversion+0xc2>
 8002b06:	683b      	ldr	r3, [r7, #0]
 8002b08:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b0c:	d01d      	beq.n	8002b4a <HAL_ADC_PollForConversion+0xc2>
 8002b0e:	f7ff fa9f 	bl	8002050 <HAL_GetTick>
 8002b12:	4602      	mov	r2, r0
 8002b14:	693b      	ldr	r3, [r7, #16]
 8002b16:	1ad3      	subs	r3, r2, r3
 8002b18:	683a      	ldr	r2, [r7, #0]
 8002b1a:	429a      	cmp	r2, r3
 8002b1c:	d302      	bcc.n	8002b24 <HAL_ADC_PollForConversion+0x9c>
 8002b1e:	683b      	ldr	r3, [r7, #0]
 8002b20:	2b00      	cmp	r3, #0
 8002b22:	d112      	bne.n	8002b4a <HAL_ADC_PollForConversion+0xc2>
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	681a      	ldr	r2, [r3, #0]
 8002b2a:	69fb      	ldr	r3, [r7, #28]
 8002b2c:	4013      	ands	r3, r2
 8002b2e:	2b00      	cmp	r3, #0
 8002b30:	d10b      	bne.n	8002b4a <HAL_ADC_PollForConversion+0xc2>
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b36:	f043 0204 	orr.w	r2, r3, #4
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	2200      	movs	r2, #0
 8002b42:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002b46:	2303      	movs	r3, #3
 8002b48:	e06d      	b.n	8002c26 <HAL_ADC_PollForConversion+0x19e>
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	681a      	ldr	r2, [r3, #0]
 8002b50:	69fb      	ldr	r3, [r7, #28]
 8002b52:	4013      	ands	r3, r2
 8002b54:	2b00      	cmp	r3, #0
 8002b56:	d0d6      	beq.n	8002b06 <HAL_ADC_PollForConversion+0x7e>
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b5c:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	4618      	mov	r0, r3
 8002b6a:	f7ff fb71 	bl	8002250 <LL_ADC_REG_IsTriggerSourceSWStart>
 8002b6e:	4603      	mov	r3, r0
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	d01c      	beq.n	8002bae <HAL_ADC_PollForConversion+0x126>
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	7f5b      	ldrb	r3, [r3, #29]
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d118      	bne.n	8002bae <HAL_ADC_PollForConversion+0x126>
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	681b      	ldr	r3, [r3, #0]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	f003 0308 	and.w	r3, r3, #8
 8002b86:	2b08      	cmp	r3, #8
 8002b88:	d111      	bne.n	8002bae <HAL_ADC_PollForConversion+0x126>
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b8e:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b9a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d105      	bne.n	8002bae <HAL_ADC_PollForConversion+0x126>
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ba6:	f043 0201 	orr.w	r2, r3, #1
 8002baa:	687b      	ldr	r3, [r7, #4]
 8002bac:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	681b      	ldr	r3, [r3, #0]
 8002bb2:	4a20      	ldr	r2, [pc, #128]	@ (8002c34 <HAL_ADC_PollForConversion+0x1ac>)
 8002bb4:	4293      	cmp	r3, r2
 8002bb6:	d002      	beq.n	8002bbe <HAL_ADC_PollForConversion+0x136>
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	e001      	b.n	8002bc2 <HAL_ADC_PollForConversion+0x13a>
 8002bbe:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002bc2:	687a      	ldr	r2, [r7, #4]
 8002bc4:	6812      	ldr	r2, [r2, #0]
 8002bc6:	4293      	cmp	r3, r2
 8002bc8:	d008      	beq.n	8002bdc <HAL_ADC_PollForConversion+0x154>
 8002bca:	697b      	ldr	r3, [r7, #20]
 8002bcc:	2b00      	cmp	r3, #0
 8002bce:	d005      	beq.n	8002bdc <HAL_ADC_PollForConversion+0x154>
 8002bd0:	697b      	ldr	r3, [r7, #20]
 8002bd2:	2b05      	cmp	r3, #5
 8002bd4:	d002      	beq.n	8002bdc <HAL_ADC_PollForConversion+0x154>
 8002bd6:	697b      	ldr	r3, [r7, #20]
 8002bd8:	2b09      	cmp	r3, #9
 8002bda:	d104      	bne.n	8002be6 <HAL_ADC_PollForConversion+0x15e>
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	68db      	ldr	r3, [r3, #12]
 8002be2:	61bb      	str	r3, [r7, #24]
 8002be4:	e00d      	b.n	8002c02 <HAL_ADC_PollForConversion+0x17a>
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	4a12      	ldr	r2, [pc, #72]	@ (8002c34 <HAL_ADC_PollForConversion+0x1ac>)
 8002bec:	4293      	cmp	r3, r2
 8002bee:	d002      	beq.n	8002bf6 <HAL_ADC_PollForConversion+0x16e>
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	e001      	b.n	8002bfa <HAL_ADC_PollForConversion+0x172>
 8002bf6:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002bfa:	60fb      	str	r3, [r7, #12]
 8002bfc:	68fb      	ldr	r3, [r7, #12]
 8002bfe:	68db      	ldr	r3, [r3, #12]
 8002c00:	61bb      	str	r3, [r7, #24]
 8002c02:	69fb      	ldr	r3, [r7, #28]
 8002c04:	2b08      	cmp	r3, #8
 8002c06:	d104      	bne.n	8002c12 <HAL_ADC_PollForConversion+0x18a>
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	2208      	movs	r2, #8
 8002c0e:	601a      	str	r2, [r3, #0]
 8002c10:	e008      	b.n	8002c24 <HAL_ADC_PollForConversion+0x19c>
 8002c12:	69bb      	ldr	r3, [r7, #24]
 8002c14:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d103      	bne.n	8002c24 <HAL_ADC_PollForConversion+0x19c>
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	681b      	ldr	r3, [r3, #0]
 8002c20:	220c      	movs	r2, #12
 8002c22:	601a      	str	r2, [r3, #0]
 8002c24:	2300      	movs	r3, #0
 8002c26:	4618      	mov	r0, r3
 8002c28:	3720      	adds	r7, #32
 8002c2a:	46bd      	mov	sp, r7
 8002c2c:	bd80      	pop	{r7, pc}
 8002c2e:	bf00      	nop
 8002c30:	50000300 	.word	0x50000300
 8002c34:	50000100 	.word	0x50000100

08002c38 <HAL_ADC_GetValue>:
 8002c38:	b480      	push	{r7}
 8002c3a:	b083      	sub	sp, #12
 8002c3c:	af00      	add	r7, sp, #0
 8002c3e:	6078      	str	r0, [r7, #4]
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c46:	4618      	mov	r0, r3
 8002c48:	370c      	adds	r7, #12
 8002c4a:	46bd      	mov	sp, r7
 8002c4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c50:	4770      	bx	lr
	...

08002c54 <HAL_ADC_ConfigChannel>:
 8002c54:	b580      	push	{r7, lr}
 8002c56:	b0b6      	sub	sp, #216	@ 0xd8
 8002c58:	af00      	add	r7, sp, #0
 8002c5a:	6078      	str	r0, [r7, #4]
 8002c5c:	6039      	str	r1, [r7, #0]
 8002c5e:	2300      	movs	r3, #0
 8002c60:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8002c64:	2300      	movs	r3, #0
 8002c66:	60fb      	str	r3, [r7, #12]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002c6e:	2b01      	cmp	r3, #1
 8002c70:	d101      	bne.n	8002c76 <HAL_ADC_ConfigChannel+0x22>
 8002c72:	2302      	movs	r3, #2
 8002c74:	e3c8      	b.n	8003408 <HAL_ADC_ConfigChannel+0x7b4>
 8002c76:	687b      	ldr	r3, [r7, #4]
 8002c78:	2201      	movs	r2, #1
 8002c7a:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	4618      	mov	r0, r3
 8002c84:	f7ff fc52 	bl	800252c <LL_ADC_REG_IsConversionOngoing>
 8002c88:	4603      	mov	r3, r0
 8002c8a:	2b00      	cmp	r3, #0
 8002c8c:	f040 83ad 	bne.w	80033ea <HAL_ADC_ConfigChannel+0x796>
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	6818      	ldr	r0, [r3, #0]
 8002c94:	683b      	ldr	r3, [r7, #0]
 8002c96:	6859      	ldr	r1, [r3, #4]
 8002c98:	683b      	ldr	r3, [r7, #0]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	461a      	mov	r2, r3
 8002c9e:	f7ff faea 	bl	8002276 <LL_ADC_REG_SetSequencerRanks>
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	4618      	mov	r0, r3
 8002ca8:	f7ff fc40 	bl	800252c <LL_ADC_REG_IsConversionOngoing>
 8002cac:	f8c7 00d0 	str.w	r0, [r7, #208]	@ 0xd0
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	4618      	mov	r0, r3
 8002cb6:	f7ff fc60 	bl	800257a <LL_ADC_INJ_IsConversionOngoing>
 8002cba:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8002cbe:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8002cc2:	2b00      	cmp	r3, #0
 8002cc4:	f040 81d9 	bne.w	800307a <HAL_ADC_ConfigChannel+0x426>
 8002cc8:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	f040 81d4 	bne.w	800307a <HAL_ADC_ConfigChannel+0x426>
 8002cd2:	683b      	ldr	r3, [r7, #0]
 8002cd4:	689b      	ldr	r3, [r3, #8]
 8002cd6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8002cda:	d10f      	bne.n	8002cfc <HAL_ADC_ConfigChannel+0xa8>
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	6818      	ldr	r0, [r3, #0]
 8002ce0:	683b      	ldr	r3, [r7, #0]
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	2200      	movs	r2, #0
 8002ce6:	4619      	mov	r1, r3
 8002ce8:	f7ff faf1 	bl	80022ce <LL_ADC_SetChannelSamplingTime>
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8002cf4:	4618      	mov	r0, r3
 8002cf6:	f7ff fa98 	bl	800222a <LL_ADC_SetSamplingTimeCommonConfig>
 8002cfa:	e00e      	b.n	8002d1a <HAL_ADC_ConfigChannel+0xc6>
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	6818      	ldr	r0, [r3, #0]
 8002d00:	683b      	ldr	r3, [r7, #0]
 8002d02:	6819      	ldr	r1, [r3, #0]
 8002d04:	683b      	ldr	r3, [r7, #0]
 8002d06:	689b      	ldr	r3, [r3, #8]
 8002d08:	461a      	mov	r2, r3
 8002d0a:	f7ff fae0 	bl	80022ce <LL_ADC_SetChannelSamplingTime>
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	681b      	ldr	r3, [r3, #0]
 8002d12:	2100      	movs	r1, #0
 8002d14:	4618      	mov	r0, r3
 8002d16:	f7ff fa88 	bl	800222a <LL_ADC_SetSamplingTimeCommonConfig>
 8002d1a:	683b      	ldr	r3, [r7, #0]
 8002d1c:	695a      	ldr	r2, [r3, #20]
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	68db      	ldr	r3, [r3, #12]
 8002d24:	08db      	lsrs	r3, r3, #3
 8002d26:	f003 0303 	and.w	r3, r3, #3
 8002d2a:	005b      	lsls	r3, r3, #1
 8002d2c:	fa02 f303 	lsl.w	r3, r2, r3
 8002d30:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8002d34:	683b      	ldr	r3, [r7, #0]
 8002d36:	691b      	ldr	r3, [r3, #16]
 8002d38:	2b04      	cmp	r3, #4
 8002d3a:	d022      	beq.n	8002d82 <HAL_ADC_ConfigChannel+0x12e>
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	6818      	ldr	r0, [r3, #0]
 8002d40:	683b      	ldr	r3, [r7, #0]
 8002d42:	6919      	ldr	r1, [r3, #16]
 8002d44:	683b      	ldr	r3, [r7, #0]
 8002d46:	681a      	ldr	r2, [r3, #0]
 8002d48:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8002d4c:	f7ff f9e2 	bl	8002114 <LL_ADC_SetOffset>
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	6818      	ldr	r0, [r3, #0]
 8002d54:	683b      	ldr	r3, [r7, #0]
 8002d56:	6919      	ldr	r1, [r3, #16]
 8002d58:	683b      	ldr	r3, [r7, #0]
 8002d5a:	699b      	ldr	r3, [r3, #24]
 8002d5c:	461a      	mov	r2, r3
 8002d5e:	f7ff fa2e 	bl	80021be <LL_ADC_SetOffsetSign>
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	6818      	ldr	r0, [r3, #0]
 8002d66:	683b      	ldr	r3, [r7, #0]
 8002d68:	6919      	ldr	r1, [r3, #16]
 8002d6a:	683b      	ldr	r3, [r7, #0]
 8002d6c:	7f1b      	ldrb	r3, [r3, #28]
 8002d6e:	2b01      	cmp	r3, #1
 8002d70:	d102      	bne.n	8002d78 <HAL_ADC_ConfigChannel+0x124>
 8002d72:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8002d76:	e000      	b.n	8002d7a <HAL_ADC_ConfigChannel+0x126>
 8002d78:	2300      	movs	r3, #0
 8002d7a:	461a      	mov	r2, r3
 8002d7c:	f7ff fa3a 	bl	80021f4 <LL_ADC_SetOffsetSaturation>
 8002d80:	e17b      	b.n	800307a <HAL_ADC_ConfigChannel+0x426>
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	681b      	ldr	r3, [r3, #0]
 8002d86:	2100      	movs	r1, #0
 8002d88:	4618      	mov	r0, r3
 8002d8a:	f7ff f9e7 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002d8e:	4603      	mov	r3, r0
 8002d90:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002d94:	2b00      	cmp	r3, #0
 8002d96:	d10a      	bne.n	8002dae <HAL_ADC_ConfigChannel+0x15a>
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	681b      	ldr	r3, [r3, #0]
 8002d9c:	2100      	movs	r1, #0
 8002d9e:	4618      	mov	r0, r3
 8002da0:	f7ff f9dc 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002da4:	4603      	mov	r3, r0
 8002da6:	0e9b      	lsrs	r3, r3, #26
 8002da8:	f003 021f 	and.w	r2, r3, #31
 8002dac:	e01e      	b.n	8002dec <HAL_ADC_ConfigChannel+0x198>
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	2100      	movs	r1, #0
 8002db4:	4618      	mov	r0, r3
 8002db6:	f7ff f9d1 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002dba:	4603      	mov	r3, r0
 8002dbc:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8002dc0:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8002dc4:	fa93 f3a3 	rbit	r3, r3
 8002dc8:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8002dcc:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8002dd0:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8002dd4:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8002dd8:	2b00      	cmp	r3, #0
 8002dda:	d101      	bne.n	8002de0 <HAL_ADC_ConfigChannel+0x18c>
 8002ddc:	2320      	movs	r3, #32
 8002dde:	e004      	b.n	8002dea <HAL_ADC_ConfigChannel+0x196>
 8002de0:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8002de4:	fab3 f383 	clz	r3, r3
 8002de8:	b2db      	uxtb	r3, r3
 8002dea:	461a      	mov	r2, r3
 8002dec:	683b      	ldr	r3, [r7, #0]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	d105      	bne.n	8002e04 <HAL_ADC_ConfigChannel+0x1b0>
 8002df8:	683b      	ldr	r3, [r7, #0]
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	0e9b      	lsrs	r3, r3, #26
 8002dfe:	f003 031f 	and.w	r3, r3, #31
 8002e02:	e018      	b.n	8002e36 <HAL_ADC_ConfigChannel+0x1e2>
 8002e04:	683b      	ldr	r3, [r7, #0]
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002e0c:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8002e10:	fa93 f3a3 	rbit	r3, r3
 8002e14:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002e18:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002e1c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002e20:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	d101      	bne.n	8002e2c <HAL_ADC_ConfigChannel+0x1d8>
 8002e28:	2320      	movs	r3, #32
 8002e2a:	e004      	b.n	8002e36 <HAL_ADC_ConfigChannel+0x1e2>
 8002e2c:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8002e30:	fab3 f383 	clz	r3, r3
 8002e34:	b2db      	uxtb	r3, r3
 8002e36:	429a      	cmp	r2, r3
 8002e38:	d106      	bne.n	8002e48 <HAL_ADC_ConfigChannel+0x1f4>
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	681b      	ldr	r3, [r3, #0]
 8002e3e:	2200      	movs	r2, #0
 8002e40:	2100      	movs	r1, #0
 8002e42:	4618      	mov	r0, r3
 8002e44:	f7ff f9a0 	bl	8002188 <LL_ADC_SetOffsetState>
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	2101      	movs	r1, #1
 8002e4e:	4618      	mov	r0, r3
 8002e50:	f7ff f984 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002e54:	4603      	mov	r3, r0
 8002e56:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d10a      	bne.n	8002e74 <HAL_ADC_ConfigChannel+0x220>
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	2101      	movs	r1, #1
 8002e64:	4618      	mov	r0, r3
 8002e66:	f7ff f979 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002e6a:	4603      	mov	r3, r0
 8002e6c:	0e9b      	lsrs	r3, r3, #26
 8002e6e:	f003 021f 	and.w	r2, r3, #31
 8002e72:	e01e      	b.n	8002eb2 <HAL_ADC_ConfigChannel+0x25e>
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	681b      	ldr	r3, [r3, #0]
 8002e78:	2101      	movs	r1, #1
 8002e7a:	4618      	mov	r0, r3
 8002e7c:	f7ff f96e 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002e80:	4603      	mov	r3, r0
 8002e82:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8002e86:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8002e8a:	fa93 f3a3 	rbit	r3, r3
 8002e8e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8002e92:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8002e96:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8002e9a:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8002e9e:	2b00      	cmp	r3, #0
 8002ea0:	d101      	bne.n	8002ea6 <HAL_ADC_ConfigChannel+0x252>
 8002ea2:	2320      	movs	r3, #32
 8002ea4:	e004      	b.n	8002eb0 <HAL_ADC_ConfigChannel+0x25c>
 8002ea6:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8002eaa:	fab3 f383 	clz	r3, r3
 8002eae:	b2db      	uxtb	r3, r3
 8002eb0:	461a      	mov	r2, r3
 8002eb2:	683b      	ldr	r3, [r7, #0]
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d105      	bne.n	8002eca <HAL_ADC_ConfigChannel+0x276>
 8002ebe:	683b      	ldr	r3, [r7, #0]
 8002ec0:	681b      	ldr	r3, [r3, #0]
 8002ec2:	0e9b      	lsrs	r3, r3, #26
 8002ec4:	f003 031f 	and.w	r3, r3, #31
 8002ec8:	e018      	b.n	8002efc <HAL_ADC_ConfigChannel+0x2a8>
 8002eca:	683b      	ldr	r3, [r7, #0]
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8002ed2:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8002ed6:	fa93 f3a3 	rbit	r3, r3
 8002eda:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002ede:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8002ee2:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8002ee6:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d101      	bne.n	8002ef2 <HAL_ADC_ConfigChannel+0x29e>
 8002eee:	2320      	movs	r3, #32
 8002ef0:	e004      	b.n	8002efc <HAL_ADC_ConfigChannel+0x2a8>
 8002ef2:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8002ef6:	fab3 f383 	clz	r3, r3
 8002efa:	b2db      	uxtb	r3, r3
 8002efc:	429a      	cmp	r2, r3
 8002efe:	d106      	bne.n	8002f0e <HAL_ADC_ConfigChannel+0x2ba>
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	2200      	movs	r2, #0
 8002f06:	2101      	movs	r1, #1
 8002f08:	4618      	mov	r0, r3
 8002f0a:	f7ff f93d 	bl	8002188 <LL_ADC_SetOffsetState>
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	2102      	movs	r1, #2
 8002f14:	4618      	mov	r0, r3
 8002f16:	f7ff f921 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002f1a:	4603      	mov	r3, r0
 8002f1c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002f20:	2b00      	cmp	r3, #0
 8002f22:	d10a      	bne.n	8002f3a <HAL_ADC_ConfigChannel+0x2e6>
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	2102      	movs	r1, #2
 8002f2a:	4618      	mov	r0, r3
 8002f2c:	f7ff f916 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002f30:	4603      	mov	r3, r0
 8002f32:	0e9b      	lsrs	r3, r3, #26
 8002f34:	f003 021f 	and.w	r2, r3, #31
 8002f38:	e01e      	b.n	8002f78 <HAL_ADC_ConfigChannel+0x324>
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	2102      	movs	r1, #2
 8002f40:	4618      	mov	r0, r3
 8002f42:	f7ff f90b 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002f46:	4603      	mov	r3, r0
 8002f48:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002f4c:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002f50:	fa93 f3a3 	rbit	r3, r3
 8002f54:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8002f58:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002f5c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002f60:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8002f64:	2b00      	cmp	r3, #0
 8002f66:	d101      	bne.n	8002f6c <HAL_ADC_ConfigChannel+0x318>
 8002f68:	2320      	movs	r3, #32
 8002f6a:	e004      	b.n	8002f76 <HAL_ADC_ConfigChannel+0x322>
 8002f6c:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8002f70:	fab3 f383 	clz	r3, r3
 8002f74:	b2db      	uxtb	r3, r3
 8002f76:	461a      	mov	r2, r3
 8002f78:	683b      	ldr	r3, [r7, #0]
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002f80:	2b00      	cmp	r3, #0
 8002f82:	d105      	bne.n	8002f90 <HAL_ADC_ConfigChannel+0x33c>
 8002f84:	683b      	ldr	r3, [r7, #0]
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	0e9b      	lsrs	r3, r3, #26
 8002f8a:	f003 031f 	and.w	r3, r3, #31
 8002f8e:	e016      	b.n	8002fbe <HAL_ADC_ConfigChannel+0x36a>
 8002f90:	683b      	ldr	r3, [r7, #0]
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8002f98:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8002f9c:	fa93 f3a3 	rbit	r3, r3
 8002fa0:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8002fa2:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8002fa4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8002fa8:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002fac:	2b00      	cmp	r3, #0
 8002fae:	d101      	bne.n	8002fb4 <HAL_ADC_ConfigChannel+0x360>
 8002fb0:	2320      	movs	r3, #32
 8002fb2:	e004      	b.n	8002fbe <HAL_ADC_ConfigChannel+0x36a>
 8002fb4:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002fb8:	fab3 f383 	clz	r3, r3
 8002fbc:	b2db      	uxtb	r3, r3
 8002fbe:	429a      	cmp	r2, r3
 8002fc0:	d106      	bne.n	8002fd0 <HAL_ADC_ConfigChannel+0x37c>
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	2200      	movs	r2, #0
 8002fc8:	2102      	movs	r1, #2
 8002fca:	4618      	mov	r0, r3
 8002fcc:	f7ff f8dc 	bl	8002188 <LL_ADC_SetOffsetState>
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	681b      	ldr	r3, [r3, #0]
 8002fd4:	2103      	movs	r1, #3
 8002fd6:	4618      	mov	r0, r3
 8002fd8:	f7ff f8c0 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002fdc:	4603      	mov	r3, r0
 8002fde:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002fe2:	2b00      	cmp	r3, #0
 8002fe4:	d10a      	bne.n	8002ffc <HAL_ADC_ConfigChannel+0x3a8>
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	2103      	movs	r1, #3
 8002fec:	4618      	mov	r0, r3
 8002fee:	f7ff f8b5 	bl	800215c <LL_ADC_GetOffsetChannel>
 8002ff2:	4603      	mov	r3, r0
 8002ff4:	0e9b      	lsrs	r3, r3, #26
 8002ff6:	f003 021f 	and.w	r2, r3, #31
 8002ffa:	e017      	b.n	800302c <HAL_ADC_ConfigChannel+0x3d8>
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	2103      	movs	r1, #3
 8003002:	4618      	mov	r0, r3
 8003004:	f7ff f8aa 	bl	800215c <LL_ADC_GetOffsetChannel>
 8003008:	4603      	mov	r3, r0
 800300a:	677b      	str	r3, [r7, #116]	@ 0x74
 800300c:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800300e:	fa93 f3a3 	rbit	r3, r3
 8003012:	673b      	str	r3, [r7, #112]	@ 0x70
 8003014:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003016:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003018:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800301a:	2b00      	cmp	r3, #0
 800301c:	d101      	bne.n	8003022 <HAL_ADC_ConfigChannel+0x3ce>
 800301e:	2320      	movs	r3, #32
 8003020:	e003      	b.n	800302a <HAL_ADC_ConfigChannel+0x3d6>
 8003022:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003024:	fab3 f383 	clz	r3, r3
 8003028:	b2db      	uxtb	r3, r3
 800302a:	461a      	mov	r2, r3
 800302c:	683b      	ldr	r3, [r7, #0]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003034:	2b00      	cmp	r3, #0
 8003036:	d105      	bne.n	8003044 <HAL_ADC_ConfigChannel+0x3f0>
 8003038:	683b      	ldr	r3, [r7, #0]
 800303a:	681b      	ldr	r3, [r3, #0]
 800303c:	0e9b      	lsrs	r3, r3, #26
 800303e:	f003 031f 	and.w	r3, r3, #31
 8003042:	e011      	b.n	8003068 <HAL_ADC_ConfigChannel+0x414>
 8003044:	683b      	ldr	r3, [r7, #0]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	66bb      	str	r3, [r7, #104]	@ 0x68
 800304a:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800304c:	fa93 f3a3 	rbit	r3, r3
 8003050:	667b      	str	r3, [r7, #100]	@ 0x64
 8003052:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003054:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003056:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003058:	2b00      	cmp	r3, #0
 800305a:	d101      	bne.n	8003060 <HAL_ADC_ConfigChannel+0x40c>
 800305c:	2320      	movs	r3, #32
 800305e:	e003      	b.n	8003068 <HAL_ADC_ConfigChannel+0x414>
 8003060:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003062:	fab3 f383 	clz	r3, r3
 8003066:	b2db      	uxtb	r3, r3
 8003068:	429a      	cmp	r2, r3
 800306a:	d106      	bne.n	800307a <HAL_ADC_ConfigChannel+0x426>
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	681b      	ldr	r3, [r3, #0]
 8003070:	2200      	movs	r2, #0
 8003072:	2103      	movs	r1, #3
 8003074:	4618      	mov	r0, r3
 8003076:	f7ff f887 	bl	8002188 <LL_ADC_SetOffsetState>
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	681b      	ldr	r3, [r3, #0]
 800307e:	4618      	mov	r0, r3
 8003080:	f7ff fa06 	bl	8002490 <LL_ADC_IsEnabled>
 8003084:	4603      	mov	r3, r0
 8003086:	2b00      	cmp	r3, #0
 8003088:	f040 8140 	bne.w	800330c <HAL_ADC_ConfigChannel+0x6b8>
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	6818      	ldr	r0, [r3, #0]
 8003090:	683b      	ldr	r3, [r7, #0]
 8003092:	6819      	ldr	r1, [r3, #0]
 8003094:	683b      	ldr	r3, [r7, #0]
 8003096:	68db      	ldr	r3, [r3, #12]
 8003098:	461a      	mov	r2, r3
 800309a:	f7ff f943 	bl	8002324 <LL_ADC_SetChannelSingleDiff>
 800309e:	683b      	ldr	r3, [r7, #0]
 80030a0:	68db      	ldr	r3, [r3, #12]
 80030a2:	4a8f      	ldr	r2, [pc, #572]	@ (80032e0 <HAL_ADC_ConfigChannel+0x68c>)
 80030a4:	4293      	cmp	r3, r2
 80030a6:	f040 8131 	bne.w	800330c <HAL_ADC_ConfigChannel+0x6b8>
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	6818      	ldr	r0, [r3, #0]
 80030ae:	683b      	ldr	r3, [r7, #0]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80030b6:	2b00      	cmp	r3, #0
 80030b8:	d10b      	bne.n	80030d2 <HAL_ADC_ConfigChannel+0x47e>
 80030ba:	683b      	ldr	r3, [r7, #0]
 80030bc:	681b      	ldr	r3, [r3, #0]
 80030be:	0e9b      	lsrs	r3, r3, #26
 80030c0:	3301      	adds	r3, #1
 80030c2:	f003 031f 	and.w	r3, r3, #31
 80030c6:	2b09      	cmp	r3, #9
 80030c8:	bf94      	ite	ls
 80030ca:	2301      	movls	r3, #1
 80030cc:	2300      	movhi	r3, #0
 80030ce:	b2db      	uxtb	r3, r3
 80030d0:	e019      	b.n	8003106 <HAL_ADC_ConfigChannel+0x4b2>
 80030d2:	683b      	ldr	r3, [r7, #0]
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80030d8:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80030da:	fa93 f3a3 	rbit	r3, r3
 80030de:	65bb      	str	r3, [r7, #88]	@ 0x58
 80030e0:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80030e2:	663b      	str	r3, [r7, #96]	@ 0x60
 80030e4:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	d101      	bne.n	80030ee <HAL_ADC_ConfigChannel+0x49a>
 80030ea:	2320      	movs	r3, #32
 80030ec:	e003      	b.n	80030f6 <HAL_ADC_ConfigChannel+0x4a2>
 80030ee:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80030f0:	fab3 f383 	clz	r3, r3
 80030f4:	b2db      	uxtb	r3, r3
 80030f6:	3301      	adds	r3, #1
 80030f8:	f003 031f 	and.w	r3, r3, #31
 80030fc:	2b09      	cmp	r3, #9
 80030fe:	bf94      	ite	ls
 8003100:	2301      	movls	r3, #1
 8003102:	2300      	movhi	r3, #0
 8003104:	b2db      	uxtb	r3, r3
 8003106:	2b00      	cmp	r3, #0
 8003108:	d079      	beq.n	80031fe <HAL_ADC_ConfigChannel+0x5aa>
 800310a:	683b      	ldr	r3, [r7, #0]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003112:	2b00      	cmp	r3, #0
 8003114:	d107      	bne.n	8003126 <HAL_ADC_ConfigChannel+0x4d2>
 8003116:	683b      	ldr	r3, [r7, #0]
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	0e9b      	lsrs	r3, r3, #26
 800311c:	3301      	adds	r3, #1
 800311e:	069b      	lsls	r3, r3, #26
 8003120:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003124:	e015      	b.n	8003152 <HAL_ADC_ConfigChannel+0x4fe>
 8003126:	683b      	ldr	r3, [r7, #0]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	653b      	str	r3, [r7, #80]	@ 0x50
 800312c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800312e:	fa93 f3a3 	rbit	r3, r3
 8003132:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003134:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003136:	657b      	str	r3, [r7, #84]	@ 0x54
 8003138:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800313a:	2b00      	cmp	r3, #0
 800313c:	d101      	bne.n	8003142 <HAL_ADC_ConfigChannel+0x4ee>
 800313e:	2320      	movs	r3, #32
 8003140:	e003      	b.n	800314a <HAL_ADC_ConfigChannel+0x4f6>
 8003142:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003144:	fab3 f383 	clz	r3, r3
 8003148:	b2db      	uxtb	r3, r3
 800314a:	3301      	adds	r3, #1
 800314c:	069b      	lsls	r3, r3, #26
 800314e:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003152:	683b      	ldr	r3, [r7, #0]
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800315a:	2b00      	cmp	r3, #0
 800315c:	d109      	bne.n	8003172 <HAL_ADC_ConfigChannel+0x51e>
 800315e:	683b      	ldr	r3, [r7, #0]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	0e9b      	lsrs	r3, r3, #26
 8003164:	3301      	adds	r3, #1
 8003166:	f003 031f 	and.w	r3, r3, #31
 800316a:	2101      	movs	r1, #1
 800316c:	fa01 f303 	lsl.w	r3, r1, r3
 8003170:	e017      	b.n	80031a2 <HAL_ADC_ConfigChannel+0x54e>
 8003172:	683b      	ldr	r3, [r7, #0]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	647b      	str	r3, [r7, #68]	@ 0x44
 8003178:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800317a:	fa93 f3a3 	rbit	r3, r3
 800317e:	643b      	str	r3, [r7, #64]	@ 0x40
 8003180:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8003182:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003184:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003186:	2b00      	cmp	r3, #0
 8003188:	d101      	bne.n	800318e <HAL_ADC_ConfigChannel+0x53a>
 800318a:	2320      	movs	r3, #32
 800318c:	e003      	b.n	8003196 <HAL_ADC_ConfigChannel+0x542>
 800318e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003190:	fab3 f383 	clz	r3, r3
 8003194:	b2db      	uxtb	r3, r3
 8003196:	3301      	adds	r3, #1
 8003198:	f003 031f 	and.w	r3, r3, #31
 800319c:	2101      	movs	r1, #1
 800319e:	fa01 f303 	lsl.w	r3, r1, r3
 80031a2:	ea42 0103 	orr.w	r1, r2, r3
 80031a6:	683b      	ldr	r3, [r7, #0]
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80031ae:	2b00      	cmp	r3, #0
 80031b0:	d10a      	bne.n	80031c8 <HAL_ADC_ConfigChannel+0x574>
 80031b2:	683b      	ldr	r3, [r7, #0]
 80031b4:	681b      	ldr	r3, [r3, #0]
 80031b6:	0e9b      	lsrs	r3, r3, #26
 80031b8:	3301      	adds	r3, #1
 80031ba:	f003 021f 	and.w	r2, r3, #31
 80031be:	4613      	mov	r3, r2
 80031c0:	005b      	lsls	r3, r3, #1
 80031c2:	4413      	add	r3, r2
 80031c4:	051b      	lsls	r3, r3, #20
 80031c6:	e018      	b.n	80031fa <HAL_ADC_ConfigChannel+0x5a6>
 80031c8:	683b      	ldr	r3, [r7, #0]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80031ce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80031d0:	fa93 f3a3 	rbit	r3, r3
 80031d4:	637b      	str	r3, [r7, #52]	@ 0x34
 80031d6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80031d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80031da:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80031dc:	2b00      	cmp	r3, #0
 80031de:	d101      	bne.n	80031e4 <HAL_ADC_ConfigChannel+0x590>
 80031e0:	2320      	movs	r3, #32
 80031e2:	e003      	b.n	80031ec <HAL_ADC_ConfigChannel+0x598>
 80031e4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80031e6:	fab3 f383 	clz	r3, r3
 80031ea:	b2db      	uxtb	r3, r3
 80031ec:	3301      	adds	r3, #1
 80031ee:	f003 021f 	and.w	r2, r3, #31
 80031f2:	4613      	mov	r3, r2
 80031f4:	005b      	lsls	r3, r3, #1
 80031f6:	4413      	add	r3, r2
 80031f8:	051b      	lsls	r3, r3, #20
 80031fa:	430b      	orrs	r3, r1
 80031fc:	e081      	b.n	8003302 <HAL_ADC_ConfigChannel+0x6ae>
 80031fe:	683b      	ldr	r3, [r7, #0]
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003206:	2b00      	cmp	r3, #0
 8003208:	d107      	bne.n	800321a <HAL_ADC_ConfigChannel+0x5c6>
 800320a:	683b      	ldr	r3, [r7, #0]
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	0e9b      	lsrs	r3, r3, #26
 8003210:	3301      	adds	r3, #1
 8003212:	069b      	lsls	r3, r3, #26
 8003214:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003218:	e015      	b.n	8003246 <HAL_ADC_ConfigChannel+0x5f2>
 800321a:	683b      	ldr	r3, [r7, #0]
 800321c:	681b      	ldr	r3, [r3, #0]
 800321e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003220:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003222:	fa93 f3a3 	rbit	r3, r3
 8003226:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003228:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800322a:	633b      	str	r3, [r7, #48]	@ 0x30
 800322c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800322e:	2b00      	cmp	r3, #0
 8003230:	d101      	bne.n	8003236 <HAL_ADC_ConfigChannel+0x5e2>
 8003232:	2320      	movs	r3, #32
 8003234:	e003      	b.n	800323e <HAL_ADC_ConfigChannel+0x5ea>
 8003236:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003238:	fab3 f383 	clz	r3, r3
 800323c:	b2db      	uxtb	r3, r3
 800323e:	3301      	adds	r3, #1
 8003240:	069b      	lsls	r3, r3, #26
 8003242:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003246:	683b      	ldr	r3, [r7, #0]
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800324e:	2b00      	cmp	r3, #0
 8003250:	d109      	bne.n	8003266 <HAL_ADC_ConfigChannel+0x612>
 8003252:	683b      	ldr	r3, [r7, #0]
 8003254:	681b      	ldr	r3, [r3, #0]
 8003256:	0e9b      	lsrs	r3, r3, #26
 8003258:	3301      	adds	r3, #1
 800325a:	f003 031f 	and.w	r3, r3, #31
 800325e:	2101      	movs	r1, #1
 8003260:	fa01 f303 	lsl.w	r3, r1, r3
 8003264:	e017      	b.n	8003296 <HAL_ADC_ConfigChannel+0x642>
 8003266:	683b      	ldr	r3, [r7, #0]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	623b      	str	r3, [r7, #32]
 800326c:	6a3b      	ldr	r3, [r7, #32]
 800326e:	fa93 f3a3 	rbit	r3, r3
 8003272:	61fb      	str	r3, [r7, #28]
 8003274:	69fb      	ldr	r3, [r7, #28]
 8003276:	627b      	str	r3, [r7, #36]	@ 0x24
 8003278:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800327a:	2b00      	cmp	r3, #0
 800327c:	d101      	bne.n	8003282 <HAL_ADC_ConfigChannel+0x62e>
 800327e:	2320      	movs	r3, #32
 8003280:	e003      	b.n	800328a <HAL_ADC_ConfigChannel+0x636>
 8003282:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003284:	fab3 f383 	clz	r3, r3
 8003288:	b2db      	uxtb	r3, r3
 800328a:	3301      	adds	r3, #1
 800328c:	f003 031f 	and.w	r3, r3, #31
 8003290:	2101      	movs	r1, #1
 8003292:	fa01 f303 	lsl.w	r3, r1, r3
 8003296:	ea42 0103 	orr.w	r1, r2, r3
 800329a:	683b      	ldr	r3, [r7, #0]
 800329c:	681b      	ldr	r3, [r3, #0]
 800329e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80032a2:	2b00      	cmp	r3, #0
 80032a4:	d10d      	bne.n	80032c2 <HAL_ADC_ConfigChannel+0x66e>
 80032a6:	683b      	ldr	r3, [r7, #0]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	0e9b      	lsrs	r3, r3, #26
 80032ac:	3301      	adds	r3, #1
 80032ae:	f003 021f 	and.w	r2, r3, #31
 80032b2:	4613      	mov	r3, r2
 80032b4:	005b      	lsls	r3, r3, #1
 80032b6:	4413      	add	r3, r2
 80032b8:	3b1e      	subs	r3, #30
 80032ba:	051b      	lsls	r3, r3, #20
 80032bc:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80032c0:	e01e      	b.n	8003300 <HAL_ADC_ConfigChannel+0x6ac>
 80032c2:	683b      	ldr	r3, [r7, #0]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	617b      	str	r3, [r7, #20]
 80032c8:	697b      	ldr	r3, [r7, #20]
 80032ca:	fa93 f3a3 	rbit	r3, r3
 80032ce:	613b      	str	r3, [r7, #16]
 80032d0:	693b      	ldr	r3, [r7, #16]
 80032d2:	61bb      	str	r3, [r7, #24]
 80032d4:	69bb      	ldr	r3, [r7, #24]
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	d104      	bne.n	80032e4 <HAL_ADC_ConfigChannel+0x690>
 80032da:	2320      	movs	r3, #32
 80032dc:	e006      	b.n	80032ec <HAL_ADC_ConfigChannel+0x698>
 80032de:	bf00      	nop
 80032e0:	407f0000 	.word	0x407f0000
 80032e4:	69bb      	ldr	r3, [r7, #24]
 80032e6:	fab3 f383 	clz	r3, r3
 80032ea:	b2db      	uxtb	r3, r3
 80032ec:	3301      	adds	r3, #1
 80032ee:	f003 021f 	and.w	r2, r3, #31
 80032f2:	4613      	mov	r3, r2
 80032f4:	005b      	lsls	r3, r3, #1
 80032f6:	4413      	add	r3, r2
 80032f8:	3b1e      	subs	r3, #30
 80032fa:	051b      	lsls	r3, r3, #20
 80032fc:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003300:	430b      	orrs	r3, r1
 8003302:	683a      	ldr	r2, [r7, #0]
 8003304:	6892      	ldr	r2, [r2, #8]
 8003306:	4619      	mov	r1, r3
 8003308:	f7fe ffe1 	bl	80022ce <LL_ADC_SetChannelSamplingTime>
 800330c:	683b      	ldr	r3, [r7, #0]
 800330e:	681a      	ldr	r2, [r3, #0]
 8003310:	4b3f      	ldr	r3, [pc, #252]	@ (8003410 <HAL_ADC_ConfigChannel+0x7bc>)
 8003312:	4013      	ands	r3, r2
 8003314:	2b00      	cmp	r3, #0
 8003316:	d071      	beq.n	80033fc <HAL_ADC_ConfigChannel+0x7a8>
 8003318:	483e      	ldr	r0, [pc, #248]	@ (8003414 <HAL_ADC_ConfigChannel+0x7c0>)
 800331a:	f7fe feed 	bl	80020f8 <LL_ADC_GetCommonPathInternalCh>
 800331e:	f8c7 00c4 	str.w	r0, [r7, #196]	@ 0xc4
 8003322:	683b      	ldr	r3, [r7, #0]
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	4a3c      	ldr	r2, [pc, #240]	@ (8003418 <HAL_ADC_ConfigChannel+0x7c4>)
 8003328:	4293      	cmp	r3, r2
 800332a:	d004      	beq.n	8003336 <HAL_ADC_ConfigChannel+0x6e2>
 800332c:	683b      	ldr	r3, [r7, #0]
 800332e:	681b      	ldr	r3, [r3, #0]
 8003330:	4a3a      	ldr	r2, [pc, #232]	@ (800341c <HAL_ADC_ConfigChannel+0x7c8>)
 8003332:	4293      	cmp	r3, r2
 8003334:	d127      	bne.n	8003386 <HAL_ADC_ConfigChannel+0x732>
 8003336:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800333a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800333e:	2b00      	cmp	r3, #0
 8003340:	d121      	bne.n	8003386 <HAL_ADC_ConfigChannel+0x732>
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800334a:	d157      	bne.n	80033fc <HAL_ADC_ConfigChannel+0x7a8>
 800334c:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003350:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003354:	4619      	mov	r1, r3
 8003356:	482f      	ldr	r0, [pc, #188]	@ (8003414 <HAL_ADC_ConfigChannel+0x7c0>)
 8003358:	f7fe febb 	bl	80020d2 <LL_ADC_SetCommonPathInternalCh>
 800335c:	4b30      	ldr	r3, [pc, #192]	@ (8003420 <HAL_ADC_ConfigChannel+0x7cc>)
 800335e:	681b      	ldr	r3, [r3, #0]
 8003360:	099b      	lsrs	r3, r3, #6
 8003362:	4a30      	ldr	r2, [pc, #192]	@ (8003424 <HAL_ADC_ConfigChannel+0x7d0>)
 8003364:	fba2 2303 	umull	r2, r3, r2, r3
 8003368:	099b      	lsrs	r3, r3, #6
 800336a:	1c5a      	adds	r2, r3, #1
 800336c:	4613      	mov	r3, r2
 800336e:	005b      	lsls	r3, r3, #1
 8003370:	4413      	add	r3, r2
 8003372:	009b      	lsls	r3, r3, #2
 8003374:	60fb      	str	r3, [r7, #12]
 8003376:	e002      	b.n	800337e <HAL_ADC_ConfigChannel+0x72a>
 8003378:	68fb      	ldr	r3, [r7, #12]
 800337a:	3b01      	subs	r3, #1
 800337c:	60fb      	str	r3, [r7, #12]
 800337e:	68fb      	ldr	r3, [r7, #12]
 8003380:	2b00      	cmp	r3, #0
 8003382:	d1f9      	bne.n	8003378 <HAL_ADC_ConfigChannel+0x724>
 8003384:	e03a      	b.n	80033fc <HAL_ADC_ConfigChannel+0x7a8>
 8003386:	683b      	ldr	r3, [r7, #0]
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	4a27      	ldr	r2, [pc, #156]	@ (8003428 <HAL_ADC_ConfigChannel+0x7d4>)
 800338c:	4293      	cmp	r3, r2
 800338e:	d113      	bne.n	80033b8 <HAL_ADC_ConfigChannel+0x764>
 8003390:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003394:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003398:	2b00      	cmp	r3, #0
 800339a:	d10d      	bne.n	80033b8 <HAL_ADC_ConfigChannel+0x764>
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	4a22      	ldr	r2, [pc, #136]	@ (800342c <HAL_ADC_ConfigChannel+0x7d8>)
 80033a2:	4293      	cmp	r3, r2
 80033a4:	d02a      	beq.n	80033fc <HAL_ADC_ConfigChannel+0x7a8>
 80033a6:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80033aa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80033ae:	4619      	mov	r1, r3
 80033b0:	4818      	ldr	r0, [pc, #96]	@ (8003414 <HAL_ADC_ConfigChannel+0x7c0>)
 80033b2:	f7fe fe8e 	bl	80020d2 <LL_ADC_SetCommonPathInternalCh>
 80033b6:	e021      	b.n	80033fc <HAL_ADC_ConfigChannel+0x7a8>
 80033b8:	683b      	ldr	r3, [r7, #0]
 80033ba:	681b      	ldr	r3, [r3, #0]
 80033bc:	4a1c      	ldr	r2, [pc, #112]	@ (8003430 <HAL_ADC_ConfigChannel+0x7dc>)
 80033be:	4293      	cmp	r3, r2
 80033c0:	d11c      	bne.n	80033fc <HAL_ADC_ConfigChannel+0x7a8>
 80033c2:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80033c6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80033ca:	2b00      	cmp	r3, #0
 80033cc:	d116      	bne.n	80033fc <HAL_ADC_ConfigChannel+0x7a8>
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	4a16      	ldr	r2, [pc, #88]	@ (800342c <HAL_ADC_ConfigChannel+0x7d8>)
 80033d4:	4293      	cmp	r3, r2
 80033d6:	d011      	beq.n	80033fc <HAL_ADC_ConfigChannel+0x7a8>
 80033d8:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80033dc:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80033e0:	4619      	mov	r1, r3
 80033e2:	480c      	ldr	r0, [pc, #48]	@ (8003414 <HAL_ADC_ConfigChannel+0x7c0>)
 80033e4:	f7fe fe75 	bl	80020d2 <LL_ADC_SetCommonPathInternalCh>
 80033e8:	e008      	b.n	80033fc <HAL_ADC_ConfigChannel+0x7a8>
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80033ee:	f043 0220 	orr.w	r2, r3, #32
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80033f6:	2301      	movs	r3, #1
 80033f8:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	2200      	movs	r2, #0
 8003400:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003404:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 8003408:	4618      	mov	r0, r3
 800340a:	37d8      	adds	r7, #216	@ 0xd8
 800340c:	46bd      	mov	sp, r7
 800340e:	bd80      	pop	{r7, pc}
 8003410:	80080000 	.word	0x80080000
 8003414:	50000300 	.word	0x50000300
 8003418:	c3210000 	.word	0xc3210000
 800341c:	90c00010 	.word	0x90c00010
 8003420:	20000000 	.word	0x20000000
 8003424:	053e2d63 	.word	0x053e2d63
 8003428:	c7520000 	.word	0xc7520000
 800342c:	50000100 	.word	0x50000100
 8003430:	cb840000 	.word	0xcb840000

08003434 <ADC_ConversionStop>:
 8003434:	b580      	push	{r7, lr}
 8003436:	b088      	sub	sp, #32
 8003438:	af00      	add	r7, sp, #0
 800343a:	6078      	str	r0, [r7, #4]
 800343c:	6039      	str	r1, [r7, #0]
 800343e:	2300      	movs	r3, #0
 8003440:	61fb      	str	r3, [r7, #28]
 8003442:	683b      	ldr	r3, [r7, #0]
 8003444:	61bb      	str	r3, [r7, #24]
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	4618      	mov	r0, r3
 800344c:	f7ff f86e 	bl	800252c <LL_ADC_REG_IsConversionOngoing>
 8003450:	6138      	str	r0, [r7, #16]
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	4618      	mov	r0, r3
 8003458:	f7ff f88f 	bl	800257a <LL_ADC_INJ_IsConversionOngoing>
 800345c:	60f8      	str	r0, [r7, #12]
 800345e:	693b      	ldr	r3, [r7, #16]
 8003460:	2b00      	cmp	r3, #0
 8003462:	d103      	bne.n	800346c <ADC_ConversionStop+0x38>
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	2b00      	cmp	r3, #0
 8003468:	f000 8098 	beq.w	800359c <ADC_ConversionStop+0x168>
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	681b      	ldr	r3, [r3, #0]
 8003470:	68db      	ldr	r3, [r3, #12]
 8003472:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003476:	2b00      	cmp	r3, #0
 8003478:	d02a      	beq.n	80034d0 <ADC_ConversionStop+0x9c>
 800347a:	687b      	ldr	r3, [r7, #4]
 800347c:	7f5b      	ldrb	r3, [r3, #29]
 800347e:	2b01      	cmp	r3, #1
 8003480:	d126      	bne.n	80034d0 <ADC_ConversionStop+0x9c>
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	7f1b      	ldrb	r3, [r3, #28]
 8003486:	2b01      	cmp	r3, #1
 8003488:	d122      	bne.n	80034d0 <ADC_ConversionStop+0x9c>
 800348a:	2301      	movs	r3, #1
 800348c:	61bb      	str	r3, [r7, #24]
 800348e:	e014      	b.n	80034ba <ADC_ConversionStop+0x86>
 8003490:	69fb      	ldr	r3, [r7, #28]
 8003492:	4a45      	ldr	r2, [pc, #276]	@ (80035a8 <ADC_ConversionStop+0x174>)
 8003494:	4293      	cmp	r3, r2
 8003496:	d90d      	bls.n	80034b4 <ADC_ConversionStop+0x80>
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800349c:	f043 0210 	orr.w	r2, r3, #16
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	65da      	str	r2, [r3, #92]	@ 0x5c
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80034a8:	f043 0201 	orr.w	r2, r3, #1
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	661a      	str	r2, [r3, #96]	@ 0x60
 80034b0:	2301      	movs	r3, #1
 80034b2:	e074      	b.n	800359e <ADC_ConversionStop+0x16a>
 80034b4:	69fb      	ldr	r3, [r7, #28]
 80034b6:	3301      	adds	r3, #1
 80034b8:	61fb      	str	r3, [r7, #28]
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80034c4:	2b40      	cmp	r3, #64	@ 0x40
 80034c6:	d1e3      	bne.n	8003490 <ADC_ConversionStop+0x5c>
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	2240      	movs	r2, #64	@ 0x40
 80034ce:	601a      	str	r2, [r3, #0]
 80034d0:	69bb      	ldr	r3, [r7, #24]
 80034d2:	2b02      	cmp	r3, #2
 80034d4:	d014      	beq.n	8003500 <ADC_ConversionStop+0xcc>
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	4618      	mov	r0, r3
 80034dc:	f7ff f826 	bl	800252c <LL_ADC_REG_IsConversionOngoing>
 80034e0:	4603      	mov	r3, r0
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d00c      	beq.n	8003500 <ADC_ConversionStop+0xcc>
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	681b      	ldr	r3, [r3, #0]
 80034ea:	4618      	mov	r0, r3
 80034ec:	f7fe ffe3 	bl	80024b6 <LL_ADC_IsDisableOngoing>
 80034f0:	4603      	mov	r3, r0
 80034f2:	2b00      	cmp	r3, #0
 80034f4:	d104      	bne.n	8003500 <ADC_ConversionStop+0xcc>
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	4618      	mov	r0, r3
 80034fc:	f7ff f802 	bl	8002504 <LL_ADC_REG_StopConversion>
 8003500:	69bb      	ldr	r3, [r7, #24]
 8003502:	2b01      	cmp	r3, #1
 8003504:	d014      	beq.n	8003530 <ADC_ConversionStop+0xfc>
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	681b      	ldr	r3, [r3, #0]
 800350a:	4618      	mov	r0, r3
 800350c:	f7ff f835 	bl	800257a <LL_ADC_INJ_IsConversionOngoing>
 8003510:	4603      	mov	r3, r0
 8003512:	2b00      	cmp	r3, #0
 8003514:	d00c      	beq.n	8003530 <ADC_ConversionStop+0xfc>
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	4618      	mov	r0, r3
 800351c:	f7fe ffcb 	bl	80024b6 <LL_ADC_IsDisableOngoing>
 8003520:	4603      	mov	r3, r0
 8003522:	2b00      	cmp	r3, #0
 8003524:	d104      	bne.n	8003530 <ADC_ConversionStop+0xfc>
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	4618      	mov	r0, r3
 800352c:	f7ff f811 	bl	8002552 <LL_ADC_INJ_StopConversion>
 8003530:	69bb      	ldr	r3, [r7, #24]
 8003532:	2b02      	cmp	r3, #2
 8003534:	d005      	beq.n	8003542 <ADC_ConversionStop+0x10e>
 8003536:	69bb      	ldr	r3, [r7, #24]
 8003538:	2b03      	cmp	r3, #3
 800353a:	d105      	bne.n	8003548 <ADC_ConversionStop+0x114>
 800353c:	230c      	movs	r3, #12
 800353e:	617b      	str	r3, [r7, #20]
 8003540:	e005      	b.n	800354e <ADC_ConversionStop+0x11a>
 8003542:	2308      	movs	r3, #8
 8003544:	617b      	str	r3, [r7, #20]
 8003546:	e002      	b.n	800354e <ADC_ConversionStop+0x11a>
 8003548:	2304      	movs	r3, #4
 800354a:	617b      	str	r3, [r7, #20]
 800354c:	bf00      	nop
 800354e:	f7fe fd7f 	bl	8002050 <HAL_GetTick>
 8003552:	60b8      	str	r0, [r7, #8]
 8003554:	e01b      	b.n	800358e <ADC_ConversionStop+0x15a>
 8003556:	f7fe fd7b 	bl	8002050 <HAL_GetTick>
 800355a:	4602      	mov	r2, r0
 800355c:	68bb      	ldr	r3, [r7, #8]
 800355e:	1ad3      	subs	r3, r2, r3
 8003560:	2b05      	cmp	r3, #5
 8003562:	d914      	bls.n	800358e <ADC_ConversionStop+0x15a>
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	689a      	ldr	r2, [r3, #8]
 800356a:	697b      	ldr	r3, [r7, #20]
 800356c:	4013      	ands	r3, r2
 800356e:	2b00      	cmp	r3, #0
 8003570:	d00d      	beq.n	800358e <ADC_ConversionStop+0x15a>
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003576:	f043 0210 	orr.w	r2, r3, #16
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003582:	f043 0201 	orr.w	r2, r3, #1
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	661a      	str	r2, [r3, #96]	@ 0x60
 800358a:	2301      	movs	r3, #1
 800358c:	e007      	b.n	800359e <ADC_ConversionStop+0x16a>
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	681b      	ldr	r3, [r3, #0]
 8003592:	689a      	ldr	r2, [r3, #8]
 8003594:	697b      	ldr	r3, [r7, #20]
 8003596:	4013      	ands	r3, r2
 8003598:	2b00      	cmp	r3, #0
 800359a:	d1dc      	bne.n	8003556 <ADC_ConversionStop+0x122>
 800359c:	2300      	movs	r3, #0
 800359e:	4618      	mov	r0, r3
 80035a0:	3720      	adds	r7, #32
 80035a2:	46bd      	mov	sp, r7
 80035a4:	bd80      	pop	{r7, pc}
 80035a6:	bf00      	nop
 80035a8:	a33fffff 	.word	0xa33fffff

080035ac <ADC_Enable>:
 80035ac:	b580      	push	{r7, lr}
 80035ae:	b084      	sub	sp, #16
 80035b0:	af00      	add	r7, sp, #0
 80035b2:	6078      	str	r0, [r7, #4]
 80035b4:	2300      	movs	r3, #0
 80035b6:	60bb      	str	r3, [r7, #8]
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	681b      	ldr	r3, [r3, #0]
 80035bc:	4618      	mov	r0, r3
 80035be:	f7fe ff67 	bl	8002490 <LL_ADC_IsEnabled>
 80035c2:	4603      	mov	r3, r0
 80035c4:	2b00      	cmp	r3, #0
 80035c6:	d169      	bne.n	800369c <ADC_Enable+0xf0>
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	681b      	ldr	r3, [r3, #0]
 80035cc:	689a      	ldr	r2, [r3, #8]
 80035ce:	4b36      	ldr	r3, [pc, #216]	@ (80036a8 <ADC_Enable+0xfc>)
 80035d0:	4013      	ands	r3, r2
 80035d2:	2b00      	cmp	r3, #0
 80035d4:	d00d      	beq.n	80035f2 <ADC_Enable+0x46>
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80035da:	f043 0210 	orr.w	r2, r3, #16
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80035e6:	f043 0201 	orr.w	r2, r3, #1
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	661a      	str	r2, [r3, #96]	@ 0x60
 80035ee:	2301      	movs	r3, #1
 80035f0:	e055      	b.n	800369e <ADC_Enable+0xf2>
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	681b      	ldr	r3, [r3, #0]
 80035f6:	4618      	mov	r0, r3
 80035f8:	f7fe ff22 	bl	8002440 <LL_ADC_Enable>
 80035fc:	482b      	ldr	r0, [pc, #172]	@ (80036ac <ADC_Enable+0x100>)
 80035fe:	f7fe fd7b 	bl	80020f8 <LL_ADC_GetCommonPathInternalCh>
 8003602:	4603      	mov	r3, r0
 8003604:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003608:	2b00      	cmp	r3, #0
 800360a:	d013      	beq.n	8003634 <ADC_Enable+0x88>
 800360c:	4b28      	ldr	r3, [pc, #160]	@ (80036b0 <ADC_Enable+0x104>)
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	099b      	lsrs	r3, r3, #6
 8003612:	4a28      	ldr	r2, [pc, #160]	@ (80036b4 <ADC_Enable+0x108>)
 8003614:	fba2 2303 	umull	r2, r3, r2, r3
 8003618:	099b      	lsrs	r3, r3, #6
 800361a:	1c5a      	adds	r2, r3, #1
 800361c:	4613      	mov	r3, r2
 800361e:	005b      	lsls	r3, r3, #1
 8003620:	4413      	add	r3, r2
 8003622:	009b      	lsls	r3, r3, #2
 8003624:	60bb      	str	r3, [r7, #8]
 8003626:	e002      	b.n	800362e <ADC_Enable+0x82>
 8003628:	68bb      	ldr	r3, [r7, #8]
 800362a:	3b01      	subs	r3, #1
 800362c:	60bb      	str	r3, [r7, #8]
 800362e:	68bb      	ldr	r3, [r7, #8]
 8003630:	2b00      	cmp	r3, #0
 8003632:	d1f9      	bne.n	8003628 <ADC_Enable+0x7c>
 8003634:	f7fe fd0c 	bl	8002050 <HAL_GetTick>
 8003638:	60f8      	str	r0, [r7, #12]
 800363a:	e028      	b.n	800368e <ADC_Enable+0xe2>
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	4618      	mov	r0, r3
 8003642:	f7fe ff25 	bl	8002490 <LL_ADC_IsEnabled>
 8003646:	4603      	mov	r3, r0
 8003648:	2b00      	cmp	r3, #0
 800364a:	d104      	bne.n	8003656 <ADC_Enable+0xaa>
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	4618      	mov	r0, r3
 8003652:	f7fe fef5 	bl	8002440 <LL_ADC_Enable>
 8003656:	f7fe fcfb 	bl	8002050 <HAL_GetTick>
 800365a:	4602      	mov	r2, r0
 800365c:	68fb      	ldr	r3, [r7, #12]
 800365e:	1ad3      	subs	r3, r2, r3
 8003660:	2b02      	cmp	r3, #2
 8003662:	d914      	bls.n	800368e <ADC_Enable+0xe2>
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	f003 0301 	and.w	r3, r3, #1
 800366e:	2b01      	cmp	r3, #1
 8003670:	d00d      	beq.n	800368e <ADC_Enable+0xe2>
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003676:	f043 0210 	orr.w	r2, r3, #16
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003682:	f043 0201 	orr.w	r2, r3, #1
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	661a      	str	r2, [r3, #96]	@ 0x60
 800368a:	2301      	movs	r3, #1
 800368c:	e007      	b.n	800369e <ADC_Enable+0xf2>
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	f003 0301 	and.w	r3, r3, #1
 8003698:	2b01      	cmp	r3, #1
 800369a:	d1cf      	bne.n	800363c <ADC_Enable+0x90>
 800369c:	2300      	movs	r3, #0
 800369e:	4618      	mov	r0, r3
 80036a0:	3710      	adds	r7, #16
 80036a2:	46bd      	mov	sp, r7
 80036a4:	bd80      	pop	{r7, pc}
 80036a6:	bf00      	nop
 80036a8:	8000003f 	.word	0x8000003f
 80036ac:	50000300 	.word	0x50000300
 80036b0:	20000000 	.word	0x20000000
 80036b4:	053e2d63 	.word	0x053e2d63

080036b8 <ADC_Disable>:
 80036b8:	b580      	push	{r7, lr}
 80036ba:	b084      	sub	sp, #16
 80036bc:	af00      	add	r7, sp, #0
 80036be:	6078      	str	r0, [r7, #4]
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	4618      	mov	r0, r3
 80036c6:	f7fe fef6 	bl	80024b6 <LL_ADC_IsDisableOngoing>
 80036ca:	60f8      	str	r0, [r7, #12]
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	4618      	mov	r0, r3
 80036d2:	f7fe fedd 	bl	8002490 <LL_ADC_IsEnabled>
 80036d6:	4603      	mov	r3, r0
 80036d8:	2b00      	cmp	r3, #0
 80036da:	d047      	beq.n	800376c <ADC_Disable+0xb4>
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	2b00      	cmp	r3, #0
 80036e0:	d144      	bne.n	800376c <ADC_Disable+0xb4>
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	689b      	ldr	r3, [r3, #8]
 80036e8:	f003 030d 	and.w	r3, r3, #13
 80036ec:	2b01      	cmp	r3, #1
 80036ee:	d10c      	bne.n	800370a <ADC_Disable+0x52>
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	4618      	mov	r0, r3
 80036f6:	f7fe feb7 	bl	8002468 <LL_ADC_Disable>
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	681b      	ldr	r3, [r3, #0]
 80036fe:	2203      	movs	r2, #3
 8003700:	601a      	str	r2, [r3, #0]
 8003702:	f7fe fca5 	bl	8002050 <HAL_GetTick>
 8003706:	60b8      	str	r0, [r7, #8]
 8003708:	e029      	b.n	800375e <ADC_Disable+0xa6>
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800370e:	f043 0210 	orr.w	r2, r3, #16
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800371a:	f043 0201 	orr.w	r2, r3, #1
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	661a      	str	r2, [r3, #96]	@ 0x60
 8003722:	2301      	movs	r3, #1
 8003724:	e023      	b.n	800376e <ADC_Disable+0xb6>
 8003726:	f7fe fc93 	bl	8002050 <HAL_GetTick>
 800372a:	4602      	mov	r2, r0
 800372c:	68bb      	ldr	r3, [r7, #8]
 800372e:	1ad3      	subs	r3, r2, r3
 8003730:	2b02      	cmp	r3, #2
 8003732:	d914      	bls.n	800375e <ADC_Disable+0xa6>
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	689b      	ldr	r3, [r3, #8]
 800373a:	f003 0301 	and.w	r3, r3, #1
 800373e:	2b00      	cmp	r3, #0
 8003740:	d00d      	beq.n	800375e <ADC_Disable+0xa6>
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003746:	f043 0210 	orr.w	r2, r3, #16
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003752:	f043 0201 	orr.w	r2, r3, #1
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	661a      	str	r2, [r3, #96]	@ 0x60
 800375a:	2301      	movs	r3, #1
 800375c:	e007      	b.n	800376e <ADC_Disable+0xb6>
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	689b      	ldr	r3, [r3, #8]
 8003764:	f003 0301 	and.w	r3, r3, #1
 8003768:	2b00      	cmp	r3, #0
 800376a:	d1dc      	bne.n	8003726 <ADC_Disable+0x6e>
 800376c:	2300      	movs	r3, #0
 800376e:	4618      	mov	r0, r3
 8003770:	3710      	adds	r7, #16
 8003772:	46bd      	mov	sp, r7
 8003774:	bd80      	pop	{r7, pc}

08003776 <LL_ADC_IsEnabled>:
 8003776:	b480      	push	{r7}
 8003778:	b083      	sub	sp, #12
 800377a:	af00      	add	r7, sp, #0
 800377c:	6078      	str	r0, [r7, #4]
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	689b      	ldr	r3, [r3, #8]
 8003782:	f003 0301 	and.w	r3, r3, #1
 8003786:	2b01      	cmp	r3, #1
 8003788:	d101      	bne.n	800378e <LL_ADC_IsEnabled+0x18>
 800378a:	2301      	movs	r3, #1
 800378c:	e000      	b.n	8003790 <LL_ADC_IsEnabled+0x1a>
 800378e:	2300      	movs	r3, #0
 8003790:	4618      	mov	r0, r3
 8003792:	370c      	adds	r7, #12
 8003794:	46bd      	mov	sp, r7
 8003796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800379a:	4770      	bx	lr

0800379c <LL_ADC_REG_IsConversionOngoing>:
 800379c:	b480      	push	{r7}
 800379e:	b083      	sub	sp, #12
 80037a0:	af00      	add	r7, sp, #0
 80037a2:	6078      	str	r0, [r7, #4]
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	689b      	ldr	r3, [r3, #8]
 80037a8:	f003 0304 	and.w	r3, r3, #4
 80037ac:	2b04      	cmp	r3, #4
 80037ae:	d101      	bne.n	80037b4 <LL_ADC_REG_IsConversionOngoing+0x18>
 80037b0:	2301      	movs	r3, #1
 80037b2:	e000      	b.n	80037b6 <LL_ADC_REG_IsConversionOngoing+0x1a>
 80037b4:	2300      	movs	r3, #0
 80037b6:	4618      	mov	r0, r3
 80037b8:	370c      	adds	r7, #12
 80037ba:	46bd      	mov	sp, r7
 80037bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037c0:	4770      	bx	lr
	...

080037c4 <HAL_ADCEx_MultiModeConfigChannel>:
 80037c4:	b590      	push	{r4, r7, lr}
 80037c6:	b0a1      	sub	sp, #132	@ 0x84
 80037c8:	af00      	add	r7, sp, #0
 80037ca:	6078      	str	r0, [r7, #4]
 80037cc:	6039      	str	r1, [r7, #0]
 80037ce:	2300      	movs	r3, #0
 80037d0:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80037da:	2b01      	cmp	r3, #1
 80037dc:	d101      	bne.n	80037e2 <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 80037de:	2302      	movs	r3, #2
 80037e0:	e08b      	b.n	80038fa <HAL_ADCEx_MultiModeConfigChannel+0x136>
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	2201      	movs	r2, #1
 80037e6:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80037ea:	2300      	movs	r3, #0
 80037ec:	667b      	str	r3, [r7, #100]	@ 0x64
 80037ee:	2300      	movs	r3, #0
 80037f0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80037fa:	d102      	bne.n	8003802 <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 80037fc:	4b41      	ldr	r3, [pc, #260]	@ (8003904 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 80037fe:	60bb      	str	r3, [r7, #8]
 8003800:	e001      	b.n	8003806 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 8003802:	2300      	movs	r3, #0
 8003804:	60bb      	str	r3, [r7, #8]
 8003806:	68bb      	ldr	r3, [r7, #8]
 8003808:	2b00      	cmp	r3, #0
 800380a:	d10b      	bne.n	8003824 <HAL_ADCEx_MultiModeConfigChannel+0x60>
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003810:	f043 0220 	orr.w	r2, r3, #32
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	2200      	movs	r2, #0
 800381c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003820:	2301      	movs	r3, #1
 8003822:	e06a      	b.n	80038fa <HAL_ADCEx_MultiModeConfigChannel+0x136>
 8003824:	68bb      	ldr	r3, [r7, #8]
 8003826:	4618      	mov	r0, r3
 8003828:	f7ff ffb8 	bl	800379c <LL_ADC_REG_IsConversionOngoing>
 800382c:	67b8      	str	r0, [r7, #120]	@ 0x78
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	681b      	ldr	r3, [r3, #0]
 8003832:	4618      	mov	r0, r3
 8003834:	f7ff ffb2 	bl	800379c <LL_ADC_REG_IsConversionOngoing>
 8003838:	4603      	mov	r3, r0
 800383a:	2b00      	cmp	r3, #0
 800383c:	d14c      	bne.n	80038d8 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 800383e:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003840:	2b00      	cmp	r3, #0
 8003842:	d149      	bne.n	80038d8 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 8003844:	4b30      	ldr	r3, [pc, #192]	@ (8003908 <HAL_ADCEx_MultiModeConfigChannel+0x144>)
 8003846:	677b      	str	r3, [r7, #116]	@ 0x74
 8003848:	683b      	ldr	r3, [r7, #0]
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	2b00      	cmp	r3, #0
 800384e:	d028      	beq.n	80038a2 <HAL_ADCEx_MultiModeConfigChannel+0xde>
 8003850:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003852:	689b      	ldr	r3, [r3, #8]
 8003854:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003858:	683b      	ldr	r3, [r7, #0]
 800385a:	6859      	ldr	r1, [r3, #4]
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8003862:	035b      	lsls	r3, r3, #13
 8003864:	430b      	orrs	r3, r1
 8003866:	431a      	orrs	r2, r3
 8003868:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800386a:	609a      	str	r2, [r3, #8]
 800386c:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8003870:	f7ff ff81 	bl	8003776 <LL_ADC_IsEnabled>
 8003874:	4604      	mov	r4, r0
 8003876:	4823      	ldr	r0, [pc, #140]	@ (8003904 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8003878:	f7ff ff7d 	bl	8003776 <LL_ADC_IsEnabled>
 800387c:	4603      	mov	r3, r0
 800387e:	4323      	orrs	r3, r4
 8003880:	2b00      	cmp	r3, #0
 8003882:	d133      	bne.n	80038ec <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8003884:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003886:	689b      	ldr	r3, [r3, #8]
 8003888:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 800388c:	f023 030f 	bic.w	r3, r3, #15
 8003890:	683a      	ldr	r2, [r7, #0]
 8003892:	6811      	ldr	r1, [r2, #0]
 8003894:	683a      	ldr	r2, [r7, #0]
 8003896:	6892      	ldr	r2, [r2, #8]
 8003898:	430a      	orrs	r2, r1
 800389a:	431a      	orrs	r2, r3
 800389c:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800389e:	609a      	str	r2, [r3, #8]
 80038a0:	e024      	b.n	80038ec <HAL_ADCEx_MultiModeConfigChannel+0x128>
 80038a2:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80038a4:	689b      	ldr	r3, [r3, #8]
 80038a6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80038aa:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80038ac:	609a      	str	r2, [r3, #8]
 80038ae:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 80038b2:	f7ff ff60 	bl	8003776 <LL_ADC_IsEnabled>
 80038b6:	4604      	mov	r4, r0
 80038b8:	4812      	ldr	r0, [pc, #72]	@ (8003904 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 80038ba:	f7ff ff5c 	bl	8003776 <LL_ADC_IsEnabled>
 80038be:	4603      	mov	r3, r0
 80038c0:	4323      	orrs	r3, r4
 80038c2:	2b00      	cmp	r3, #0
 80038c4:	d112      	bne.n	80038ec <HAL_ADCEx_MultiModeConfigChannel+0x128>
 80038c6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80038c8:	689b      	ldr	r3, [r3, #8]
 80038ca:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 80038ce:	f023 030f 	bic.w	r3, r3, #15
 80038d2:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 80038d4:	6093      	str	r3, [r2, #8]
 80038d6:	e009      	b.n	80038ec <HAL_ADCEx_MultiModeConfigChannel+0x128>
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038dc:	f043 0220 	orr.w	r2, r3, #32
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	65da      	str	r2, [r3, #92]	@ 0x5c
 80038e4:	2301      	movs	r3, #1
 80038e6:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 80038ea:	e000      	b.n	80038ee <HAL_ADCEx_MultiModeConfigChannel+0x12a>
 80038ec:	bf00      	nop
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	2200      	movs	r2, #0
 80038f2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80038f6:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 80038fa:	4618      	mov	r0, r3
 80038fc:	3784      	adds	r7, #132	@ 0x84
 80038fe:	46bd      	mov	sp, r7
 8003900:	bd90      	pop	{r4, r7, pc}
 8003902:	bf00      	nop
 8003904:	50000100 	.word	0x50000100
 8003908:	50000300 	.word	0x50000300

0800390c <__NVIC_SetPriorityGrouping>:
 800390c:	b480      	push	{r7}
 800390e:	b085      	sub	sp, #20
 8003910:	af00      	add	r7, sp, #0
 8003912:	6078      	str	r0, [r7, #4]
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	f003 0307 	and.w	r3, r3, #7
 800391a:	60fb      	str	r3, [r7, #12]
 800391c:	4b0c      	ldr	r3, [pc, #48]	@ (8003950 <__NVIC_SetPriorityGrouping+0x44>)
 800391e:	68db      	ldr	r3, [r3, #12]
 8003920:	60bb      	str	r3, [r7, #8]
 8003922:	68ba      	ldr	r2, [r7, #8]
 8003924:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003928:	4013      	ands	r3, r2
 800392a:	60bb      	str	r3, [r7, #8]
 800392c:	68fb      	ldr	r3, [r7, #12]
 800392e:	021a      	lsls	r2, r3, #8
 8003930:	68bb      	ldr	r3, [r7, #8]
 8003932:	4313      	orrs	r3, r2
 8003934:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003938:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800393c:	60bb      	str	r3, [r7, #8]
 800393e:	4a04      	ldr	r2, [pc, #16]	@ (8003950 <__NVIC_SetPriorityGrouping+0x44>)
 8003940:	68bb      	ldr	r3, [r7, #8]
 8003942:	60d3      	str	r3, [r2, #12]
 8003944:	bf00      	nop
 8003946:	3714      	adds	r7, #20
 8003948:	46bd      	mov	sp, r7
 800394a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800394e:	4770      	bx	lr
 8003950:	e000ed00 	.word	0xe000ed00

08003954 <__NVIC_GetPriorityGrouping>:
 8003954:	b480      	push	{r7}
 8003956:	af00      	add	r7, sp, #0
 8003958:	4b04      	ldr	r3, [pc, #16]	@ (800396c <__NVIC_GetPriorityGrouping+0x18>)
 800395a:	68db      	ldr	r3, [r3, #12]
 800395c:	0a1b      	lsrs	r3, r3, #8
 800395e:	f003 0307 	and.w	r3, r3, #7
 8003962:	4618      	mov	r0, r3
 8003964:	46bd      	mov	sp, r7
 8003966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800396a:	4770      	bx	lr
 800396c:	e000ed00 	.word	0xe000ed00

08003970 <__NVIC_EnableIRQ>:
 8003970:	b480      	push	{r7}
 8003972:	b083      	sub	sp, #12
 8003974:	af00      	add	r7, sp, #0
 8003976:	4603      	mov	r3, r0
 8003978:	71fb      	strb	r3, [r7, #7]
 800397a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800397e:	2b00      	cmp	r3, #0
 8003980:	db0b      	blt.n	800399a <__NVIC_EnableIRQ+0x2a>
 8003982:	79fb      	ldrb	r3, [r7, #7]
 8003984:	f003 021f 	and.w	r2, r3, #31
 8003988:	4907      	ldr	r1, [pc, #28]	@ (80039a8 <__NVIC_EnableIRQ+0x38>)
 800398a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800398e:	095b      	lsrs	r3, r3, #5
 8003990:	2001      	movs	r0, #1
 8003992:	fa00 f202 	lsl.w	r2, r0, r2
 8003996:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800399a:	bf00      	nop
 800399c:	370c      	adds	r7, #12
 800399e:	46bd      	mov	sp, r7
 80039a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039a4:	4770      	bx	lr
 80039a6:	bf00      	nop
 80039a8:	e000e100 	.word	0xe000e100

080039ac <__NVIC_SetPriority>:
 80039ac:	b480      	push	{r7}
 80039ae:	b083      	sub	sp, #12
 80039b0:	af00      	add	r7, sp, #0
 80039b2:	4603      	mov	r3, r0
 80039b4:	6039      	str	r1, [r7, #0]
 80039b6:	71fb      	strb	r3, [r7, #7]
 80039b8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039bc:	2b00      	cmp	r3, #0
 80039be:	db0a      	blt.n	80039d6 <__NVIC_SetPriority+0x2a>
 80039c0:	683b      	ldr	r3, [r7, #0]
 80039c2:	b2da      	uxtb	r2, r3
 80039c4:	490c      	ldr	r1, [pc, #48]	@ (80039f8 <__NVIC_SetPriority+0x4c>)
 80039c6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039ca:	0112      	lsls	r2, r2, #4
 80039cc:	b2d2      	uxtb	r2, r2
 80039ce:	440b      	add	r3, r1
 80039d0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80039d4:	e00a      	b.n	80039ec <__NVIC_SetPriority+0x40>
 80039d6:	683b      	ldr	r3, [r7, #0]
 80039d8:	b2da      	uxtb	r2, r3
 80039da:	4908      	ldr	r1, [pc, #32]	@ (80039fc <__NVIC_SetPriority+0x50>)
 80039dc:	79fb      	ldrb	r3, [r7, #7]
 80039de:	f003 030f 	and.w	r3, r3, #15
 80039e2:	3b04      	subs	r3, #4
 80039e4:	0112      	lsls	r2, r2, #4
 80039e6:	b2d2      	uxtb	r2, r2
 80039e8:	440b      	add	r3, r1
 80039ea:	761a      	strb	r2, [r3, #24]
 80039ec:	bf00      	nop
 80039ee:	370c      	adds	r7, #12
 80039f0:	46bd      	mov	sp, r7
 80039f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039f6:	4770      	bx	lr
 80039f8:	e000e100 	.word	0xe000e100
 80039fc:	e000ed00 	.word	0xe000ed00

08003a00 <NVIC_EncodePriority>:
 8003a00:	b480      	push	{r7}
 8003a02:	b089      	sub	sp, #36	@ 0x24
 8003a04:	af00      	add	r7, sp, #0
 8003a06:	60f8      	str	r0, [r7, #12]
 8003a08:	60b9      	str	r1, [r7, #8]
 8003a0a:	607a      	str	r2, [r7, #4]
 8003a0c:	68fb      	ldr	r3, [r7, #12]
 8003a0e:	f003 0307 	and.w	r3, r3, #7
 8003a12:	61fb      	str	r3, [r7, #28]
 8003a14:	69fb      	ldr	r3, [r7, #28]
 8003a16:	f1c3 0307 	rsb	r3, r3, #7
 8003a1a:	2b04      	cmp	r3, #4
 8003a1c:	bf28      	it	cs
 8003a1e:	2304      	movcs	r3, #4
 8003a20:	61bb      	str	r3, [r7, #24]
 8003a22:	69fb      	ldr	r3, [r7, #28]
 8003a24:	3304      	adds	r3, #4
 8003a26:	2b06      	cmp	r3, #6
 8003a28:	d902      	bls.n	8003a30 <NVIC_EncodePriority+0x30>
 8003a2a:	69fb      	ldr	r3, [r7, #28]
 8003a2c:	3b03      	subs	r3, #3
 8003a2e:	e000      	b.n	8003a32 <NVIC_EncodePriority+0x32>
 8003a30:	2300      	movs	r3, #0
 8003a32:	617b      	str	r3, [r7, #20]
 8003a34:	f04f 32ff 	mov.w	r2, #4294967295
 8003a38:	69bb      	ldr	r3, [r7, #24]
 8003a3a:	fa02 f303 	lsl.w	r3, r2, r3
 8003a3e:	43da      	mvns	r2, r3
 8003a40:	68bb      	ldr	r3, [r7, #8]
 8003a42:	401a      	ands	r2, r3
 8003a44:	697b      	ldr	r3, [r7, #20]
 8003a46:	409a      	lsls	r2, r3
 8003a48:	f04f 31ff 	mov.w	r1, #4294967295
 8003a4c:	697b      	ldr	r3, [r7, #20]
 8003a4e:	fa01 f303 	lsl.w	r3, r1, r3
 8003a52:	43d9      	mvns	r1, r3
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	400b      	ands	r3, r1
 8003a58:	4313      	orrs	r3, r2
 8003a5a:	4618      	mov	r0, r3
 8003a5c:	3724      	adds	r7, #36	@ 0x24
 8003a5e:	46bd      	mov	sp, r7
 8003a60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a64:	4770      	bx	lr
	...

08003a68 <SysTick_Config>:
 8003a68:	b580      	push	{r7, lr}
 8003a6a:	b082      	sub	sp, #8
 8003a6c:	af00      	add	r7, sp, #0
 8003a6e:	6078      	str	r0, [r7, #4]
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	3b01      	subs	r3, #1
 8003a74:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003a78:	d301      	bcc.n	8003a7e <SysTick_Config+0x16>
 8003a7a:	2301      	movs	r3, #1
 8003a7c:	e00f      	b.n	8003a9e <SysTick_Config+0x36>
 8003a7e:	4a0a      	ldr	r2, [pc, #40]	@ (8003aa8 <SysTick_Config+0x40>)
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	3b01      	subs	r3, #1
 8003a84:	6053      	str	r3, [r2, #4]
 8003a86:	210f      	movs	r1, #15
 8003a88:	f04f 30ff 	mov.w	r0, #4294967295
 8003a8c:	f7ff ff8e 	bl	80039ac <__NVIC_SetPriority>
 8003a90:	4b05      	ldr	r3, [pc, #20]	@ (8003aa8 <SysTick_Config+0x40>)
 8003a92:	2200      	movs	r2, #0
 8003a94:	609a      	str	r2, [r3, #8]
 8003a96:	4b04      	ldr	r3, [pc, #16]	@ (8003aa8 <SysTick_Config+0x40>)
 8003a98:	2207      	movs	r2, #7
 8003a9a:	601a      	str	r2, [r3, #0]
 8003a9c:	2300      	movs	r3, #0
 8003a9e:	4618      	mov	r0, r3
 8003aa0:	3708      	adds	r7, #8
 8003aa2:	46bd      	mov	sp, r7
 8003aa4:	bd80      	pop	{r7, pc}
 8003aa6:	bf00      	nop
 8003aa8:	e000e010 	.word	0xe000e010

08003aac <HAL_NVIC_SetPriorityGrouping>:
 8003aac:	b580      	push	{r7, lr}
 8003aae:	b082      	sub	sp, #8
 8003ab0:	af00      	add	r7, sp, #0
 8003ab2:	6078      	str	r0, [r7, #4]
 8003ab4:	6878      	ldr	r0, [r7, #4]
 8003ab6:	f7ff ff29 	bl	800390c <__NVIC_SetPriorityGrouping>
 8003aba:	bf00      	nop
 8003abc:	3708      	adds	r7, #8
 8003abe:	46bd      	mov	sp, r7
 8003ac0:	bd80      	pop	{r7, pc}

08003ac2 <HAL_NVIC_SetPriority>:
 8003ac2:	b580      	push	{r7, lr}
 8003ac4:	b086      	sub	sp, #24
 8003ac6:	af00      	add	r7, sp, #0
 8003ac8:	4603      	mov	r3, r0
 8003aca:	60b9      	str	r1, [r7, #8]
 8003acc:	607a      	str	r2, [r7, #4]
 8003ace:	73fb      	strb	r3, [r7, #15]
 8003ad0:	f7ff ff40 	bl	8003954 <__NVIC_GetPriorityGrouping>
 8003ad4:	6178      	str	r0, [r7, #20]
 8003ad6:	687a      	ldr	r2, [r7, #4]
 8003ad8:	68b9      	ldr	r1, [r7, #8]
 8003ada:	6978      	ldr	r0, [r7, #20]
 8003adc:	f7ff ff90 	bl	8003a00 <NVIC_EncodePriority>
 8003ae0:	4602      	mov	r2, r0
 8003ae2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003ae6:	4611      	mov	r1, r2
 8003ae8:	4618      	mov	r0, r3
 8003aea:	f7ff ff5f 	bl	80039ac <__NVIC_SetPriority>
 8003aee:	bf00      	nop
 8003af0:	3718      	adds	r7, #24
 8003af2:	46bd      	mov	sp, r7
 8003af4:	bd80      	pop	{r7, pc}

08003af6 <HAL_NVIC_EnableIRQ>:
 8003af6:	b580      	push	{r7, lr}
 8003af8:	b082      	sub	sp, #8
 8003afa:	af00      	add	r7, sp, #0
 8003afc:	4603      	mov	r3, r0
 8003afe:	71fb      	strb	r3, [r7, #7]
 8003b00:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003b04:	4618      	mov	r0, r3
 8003b06:	f7ff ff33 	bl	8003970 <__NVIC_EnableIRQ>
 8003b0a:	bf00      	nop
 8003b0c:	3708      	adds	r7, #8
 8003b0e:	46bd      	mov	sp, r7
 8003b10:	bd80      	pop	{r7, pc}

08003b12 <HAL_SYSTICK_Config>:
 8003b12:	b580      	push	{r7, lr}
 8003b14:	b082      	sub	sp, #8
 8003b16:	af00      	add	r7, sp, #0
 8003b18:	6078      	str	r0, [r7, #4]
 8003b1a:	6878      	ldr	r0, [r7, #4]
 8003b1c:	f7ff ffa4 	bl	8003a68 <SysTick_Config>
 8003b20:	4603      	mov	r3, r0
 8003b22:	4618      	mov	r0, r3
 8003b24:	3708      	adds	r7, #8
 8003b26:	46bd      	mov	sp, r7
 8003b28:	bd80      	pop	{r7, pc}
	...

08003b2c <HAL_FDCAN_Init>:
 8003b2c:	b580      	push	{r7, lr}
 8003b2e:	b084      	sub	sp, #16
 8003b30:	af00      	add	r7, sp, #0
 8003b32:	6078      	str	r0, [r7, #4]
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	d101      	bne.n	8003b3e <HAL_FDCAN_Init+0x12>
 8003b3a:	2301      	movs	r3, #1
 8003b3c:	e147      	b.n	8003dce <HAL_FDCAN_Init+0x2a2>
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003b44:	b2db      	uxtb	r3, r3
 8003b46:	2b00      	cmp	r3, #0
 8003b48:	d106      	bne.n	8003b58 <HAL_FDCAN_Init+0x2c>
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	2200      	movs	r2, #0
 8003b4e:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8003b52:	6878      	ldr	r0, [r7, #4]
 8003b54:	f7fe f802 	bl	8001b5c <HAL_FDCAN_MspInit>
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	681b      	ldr	r3, [r3, #0]
 8003b5c:	699a      	ldr	r2, [r3, #24]
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	f022 0210 	bic.w	r2, r2, #16
 8003b66:	619a      	str	r2, [r3, #24]
 8003b68:	f7fe fa72 	bl	8002050 <HAL_GetTick>
 8003b6c:	60f8      	str	r0, [r7, #12]
 8003b6e:	e012      	b.n	8003b96 <HAL_FDCAN_Init+0x6a>
 8003b70:	f7fe fa6e 	bl	8002050 <HAL_GetTick>
 8003b74:	4602      	mov	r2, r0
 8003b76:	68fb      	ldr	r3, [r7, #12]
 8003b78:	1ad3      	subs	r3, r2, r3
 8003b7a:	2b0a      	cmp	r3, #10
 8003b7c:	d90b      	bls.n	8003b96 <HAL_FDCAN_Init+0x6a>
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003b82:	f043 0201 	orr.w	r2, r3, #1
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	661a      	str	r2, [r3, #96]	@ 0x60
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	2203      	movs	r2, #3
 8003b8e:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8003b92:	2301      	movs	r3, #1
 8003b94:	e11b      	b.n	8003dce <HAL_FDCAN_Init+0x2a2>
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	699b      	ldr	r3, [r3, #24]
 8003b9c:	f003 0308 	and.w	r3, r3, #8
 8003ba0:	2b08      	cmp	r3, #8
 8003ba2:	d0e5      	beq.n	8003b70 <HAL_FDCAN_Init+0x44>
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	699a      	ldr	r2, [r3, #24]
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	681b      	ldr	r3, [r3, #0]
 8003bae:	f042 0201 	orr.w	r2, r2, #1
 8003bb2:	619a      	str	r2, [r3, #24]
 8003bb4:	f7fe fa4c 	bl	8002050 <HAL_GetTick>
 8003bb8:	60f8      	str	r0, [r7, #12]
 8003bba:	e012      	b.n	8003be2 <HAL_FDCAN_Init+0xb6>
 8003bbc:	f7fe fa48 	bl	8002050 <HAL_GetTick>
 8003bc0:	4602      	mov	r2, r0
 8003bc2:	68fb      	ldr	r3, [r7, #12]
 8003bc4:	1ad3      	subs	r3, r2, r3
 8003bc6:	2b0a      	cmp	r3, #10
 8003bc8:	d90b      	bls.n	8003be2 <HAL_FDCAN_Init+0xb6>
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003bce:	f043 0201 	orr.w	r2, r3, #1
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	661a      	str	r2, [r3, #96]	@ 0x60
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	2203      	movs	r2, #3
 8003bda:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8003bde:	2301      	movs	r3, #1
 8003be0:	e0f5      	b.n	8003dce <HAL_FDCAN_Init+0x2a2>
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	699b      	ldr	r3, [r3, #24]
 8003be8:	f003 0301 	and.w	r3, r3, #1
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	d0e5      	beq.n	8003bbc <HAL_FDCAN_Init+0x90>
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	681b      	ldr	r3, [r3, #0]
 8003bf4:	699a      	ldr	r2, [r3, #24]
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	681b      	ldr	r3, [r3, #0]
 8003bfa:	f042 0202 	orr.w	r2, r2, #2
 8003bfe:	619a      	str	r2, [r3, #24]
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	681b      	ldr	r3, [r3, #0]
 8003c04:	4a74      	ldr	r2, [pc, #464]	@ (8003dd8 <HAL_FDCAN_Init+0x2ac>)
 8003c06:	4293      	cmp	r3, r2
 8003c08:	d103      	bne.n	8003c12 <HAL_FDCAN_Init+0xe6>
 8003c0a:	4a74      	ldr	r2, [pc, #464]	@ (8003ddc <HAL_FDCAN_Init+0x2b0>)
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	685b      	ldr	r3, [r3, #4]
 8003c10:	6013      	str	r3, [r2, #0]
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	7c1b      	ldrb	r3, [r3, #16]
 8003c16:	2b01      	cmp	r3, #1
 8003c18:	d108      	bne.n	8003c2c <HAL_FDCAN_Init+0x100>
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	699a      	ldr	r2, [r3, #24]
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	681b      	ldr	r3, [r3, #0]
 8003c24:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003c28:	619a      	str	r2, [r3, #24]
 8003c2a:	e007      	b.n	8003c3c <HAL_FDCAN_Init+0x110>
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	681b      	ldr	r3, [r3, #0]
 8003c30:	699a      	ldr	r2, [r3, #24]
 8003c32:	687b      	ldr	r3, [r7, #4]
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003c3a:	619a      	str	r2, [r3, #24]
 8003c3c:	687b      	ldr	r3, [r7, #4]
 8003c3e:	7c5b      	ldrb	r3, [r3, #17]
 8003c40:	2b01      	cmp	r3, #1
 8003c42:	d108      	bne.n	8003c56 <HAL_FDCAN_Init+0x12a>
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	699a      	ldr	r2, [r3, #24]
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	681b      	ldr	r3, [r3, #0]
 8003c4e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003c52:	619a      	str	r2, [r3, #24]
 8003c54:	e007      	b.n	8003c66 <HAL_FDCAN_Init+0x13a>
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	681b      	ldr	r3, [r3, #0]
 8003c5a:	699a      	ldr	r2, [r3, #24]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8003c64:	619a      	str	r2, [r3, #24]
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	7c9b      	ldrb	r3, [r3, #18]
 8003c6a:	2b01      	cmp	r3, #1
 8003c6c:	d108      	bne.n	8003c80 <HAL_FDCAN_Init+0x154>
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	681b      	ldr	r3, [r3, #0]
 8003c72:	699a      	ldr	r2, [r3, #24]
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003c7c:	619a      	str	r2, [r3, #24]
 8003c7e:	e007      	b.n	8003c90 <HAL_FDCAN_Init+0x164>
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	699a      	ldr	r2, [r3, #24]
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	681b      	ldr	r3, [r3, #0]
 8003c8a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8003c8e:	619a      	str	r2, [r3, #24]
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	699b      	ldr	r3, [r3, #24]
 8003c96:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	689a      	ldr	r2, [r3, #8]
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	681b      	ldr	r3, [r3, #0]
 8003ca2:	430a      	orrs	r2, r1
 8003ca4:	619a      	str	r2, [r3, #24]
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	681b      	ldr	r3, [r3, #0]
 8003caa:	699a      	ldr	r2, [r3, #24]
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	f022 02a4 	bic.w	r2, r2, #164	@ 0xa4
 8003cb4:	619a      	str	r2, [r3, #24]
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	691a      	ldr	r2, [r3, #16]
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	f022 0210 	bic.w	r2, r2, #16
 8003cc4:	611a      	str	r2, [r3, #16]
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	68db      	ldr	r3, [r3, #12]
 8003cca:	2b01      	cmp	r3, #1
 8003ccc:	d108      	bne.n	8003ce0 <HAL_FDCAN_Init+0x1b4>
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	699a      	ldr	r2, [r3, #24]
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	f042 0204 	orr.w	r2, r2, #4
 8003cdc:	619a      	str	r2, [r3, #24]
 8003cde:	e02c      	b.n	8003d3a <HAL_FDCAN_Init+0x20e>
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	68db      	ldr	r3, [r3, #12]
 8003ce4:	2b00      	cmp	r3, #0
 8003ce6:	d028      	beq.n	8003d3a <HAL_FDCAN_Init+0x20e>
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	68db      	ldr	r3, [r3, #12]
 8003cec:	2b02      	cmp	r3, #2
 8003cee:	d01c      	beq.n	8003d2a <HAL_FDCAN_Init+0x1fe>
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	699a      	ldr	r2, [r3, #24]
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	681b      	ldr	r3, [r3, #0]
 8003cfa:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8003cfe:	619a      	str	r2, [r3, #24]
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	691a      	ldr	r2, [r3, #16]
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	681b      	ldr	r3, [r3, #0]
 8003d0a:	f042 0210 	orr.w	r2, r2, #16
 8003d0e:	611a      	str	r2, [r3, #16]
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	68db      	ldr	r3, [r3, #12]
 8003d14:	2b03      	cmp	r3, #3
 8003d16:	d110      	bne.n	8003d3a <HAL_FDCAN_Init+0x20e>
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	699a      	ldr	r2, [r3, #24]
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	f042 0220 	orr.w	r2, r2, #32
 8003d26:	619a      	str	r2, [r3, #24]
 8003d28:	e007      	b.n	8003d3a <HAL_FDCAN_Init+0x20e>
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	699a      	ldr	r2, [r3, #24]
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	681b      	ldr	r3, [r3, #0]
 8003d34:	f042 0220 	orr.w	r2, r2, #32
 8003d38:	619a      	str	r2, [r3, #24]
 8003d3a:	687b      	ldr	r3, [r7, #4]
 8003d3c:	699b      	ldr	r3, [r3, #24]
 8003d3e:	3b01      	subs	r3, #1
 8003d40:	065a      	lsls	r2, r3, #25
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	69db      	ldr	r3, [r3, #28]
 8003d46:	3b01      	subs	r3, #1
 8003d48:	021b      	lsls	r3, r3, #8
 8003d4a:	431a      	orrs	r2, r3
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	6a1b      	ldr	r3, [r3, #32]
 8003d50:	3b01      	subs	r3, #1
 8003d52:	ea42 0103 	orr.w	r1, r2, r3
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	695b      	ldr	r3, [r3, #20]
 8003d5a:	3b01      	subs	r3, #1
 8003d5c:	041a      	lsls	r2, r3, #16
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	430a      	orrs	r2, r1
 8003d64:	61da      	str	r2, [r3, #28]
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	689b      	ldr	r3, [r3, #8]
 8003d6a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8003d6e:	d115      	bne.n	8003d9c <HAL_FDCAN_Init+0x270>
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003d74:	1e5a      	subs	r2, r3, #1
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d7a:	3b01      	subs	r3, #1
 8003d7c:	021b      	lsls	r3, r3, #8
 8003d7e:	431a      	orrs	r2, r3
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003d84:	3b01      	subs	r3, #1
 8003d86:	011b      	lsls	r3, r3, #4
 8003d88:	ea42 0103 	orr.w	r1, r2, r3
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d90:	3b01      	subs	r3, #1
 8003d92:	041a      	lsls	r2, r3, #16
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	430a      	orrs	r2, r1
 8003d9a:	60da      	str	r2, [r3, #12]
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	681b      	ldr	r3, [r3, #0]
 8003da0:	f8d3 10c0 	ldr.w	r1, [r3, #192]	@ 0xc0
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	430a      	orrs	r2, r1
 8003dae:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 8003db2:	6878      	ldr	r0, [r7, #4]
 8003db4:	f000 fc0e 	bl	80045d4 <FDCAN_CalcultateRamBlockAddresses>
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	2200      	movs	r2, #0
 8003dbc:	659a      	str	r2, [r3, #88]	@ 0x58
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	2200      	movs	r2, #0
 8003dc2:	661a      	str	r2, [r3, #96]	@ 0x60
 8003dc4:	687b      	ldr	r3, [r7, #4]
 8003dc6:	2201      	movs	r2, #1
 8003dc8:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8003dcc:	2300      	movs	r3, #0
 8003dce:	4618      	mov	r0, r3
 8003dd0:	3710      	adds	r7, #16
 8003dd2:	46bd      	mov	sp, r7
 8003dd4:	bd80      	pop	{r7, pc}
 8003dd6:	bf00      	nop
 8003dd8:	40006400 	.word	0x40006400
 8003ddc:	40006500 	.word	0x40006500

08003de0 <HAL_FDCAN_Start>:
 8003de0:	b480      	push	{r7}
 8003de2:	b083      	sub	sp, #12
 8003de4:	af00      	add	r7, sp, #0
 8003de6:	6078      	str	r0, [r7, #4]
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003dee:	b2db      	uxtb	r3, r3
 8003df0:	2b01      	cmp	r3, #1
 8003df2:	d110      	bne.n	8003e16 <HAL_FDCAN_Start+0x36>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	2202      	movs	r2, #2
 8003df8:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	699a      	ldr	r2, [r3, #24]
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	f022 0201 	bic.w	r2, r2, #1
 8003e0a:	619a      	str	r2, [r3, #24]
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	2200      	movs	r2, #0
 8003e10:	661a      	str	r2, [r3, #96]	@ 0x60
 8003e12:	2300      	movs	r3, #0
 8003e14:	e006      	b.n	8003e24 <HAL_FDCAN_Start+0x44>
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003e1a:	f043 0204 	orr.w	r2, r3, #4
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	661a      	str	r2, [r3, #96]	@ 0x60
 8003e22:	2301      	movs	r3, #1
 8003e24:	4618      	mov	r0, r3
 8003e26:	370c      	adds	r7, #12
 8003e28:	46bd      	mov	sp, r7
 8003e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e2e:	4770      	bx	lr

08003e30 <HAL_FDCAN_AddMessageToTxFifoQ>:
 8003e30:	b580      	push	{r7, lr}
 8003e32:	b086      	sub	sp, #24
 8003e34:	af00      	add	r7, sp, #0
 8003e36:	60f8      	str	r0, [r7, #12]
 8003e38:	60b9      	str	r1, [r7, #8]
 8003e3a:	607a      	str	r2, [r7, #4]
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003e42:	b2db      	uxtb	r3, r3
 8003e44:	2b02      	cmp	r3, #2
 8003e46:	d12c      	bne.n	8003ea2 <HAL_FDCAN_AddMessageToTxFifoQ+0x72>
 8003e48:	68fb      	ldr	r3, [r7, #12]
 8003e4a:	681b      	ldr	r3, [r3, #0]
 8003e4c:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8003e50:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003e54:	2b00      	cmp	r3, #0
 8003e56:	d007      	beq.n	8003e68 <HAL_FDCAN_AddMessageToTxFifoQ+0x38>
 8003e58:	68fb      	ldr	r3, [r7, #12]
 8003e5a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003e5c:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003e60:	68fb      	ldr	r3, [r7, #12]
 8003e62:	661a      	str	r2, [r3, #96]	@ 0x60
 8003e64:	2301      	movs	r3, #1
 8003e66:	e023      	b.n	8003eb0 <HAL_FDCAN_AddMessageToTxFifoQ+0x80>
 8003e68:	68fb      	ldr	r3, [r7, #12]
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8003e70:	0c1b      	lsrs	r3, r3, #16
 8003e72:	f003 0303 	and.w	r3, r3, #3
 8003e76:	617b      	str	r3, [r7, #20]
 8003e78:	697b      	ldr	r3, [r7, #20]
 8003e7a:	687a      	ldr	r2, [r7, #4]
 8003e7c:	68b9      	ldr	r1, [r7, #8]
 8003e7e:	68f8      	ldr	r0, [r7, #12]
 8003e80:	f000 fbfe 	bl	8004680 <FDCAN_CopyMessageToRAM>
 8003e84:	68fb      	ldr	r3, [r7, #12]
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	2101      	movs	r1, #1
 8003e8a:	697a      	ldr	r2, [r7, #20]
 8003e8c:	fa01 f202 	lsl.w	r2, r1, r2
 8003e90:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
 8003e94:	2201      	movs	r2, #1
 8003e96:	697b      	ldr	r3, [r7, #20]
 8003e98:	409a      	lsls	r2, r3
 8003e9a:	68fb      	ldr	r3, [r7, #12]
 8003e9c:	659a      	str	r2, [r3, #88]	@ 0x58
 8003e9e:	2300      	movs	r3, #0
 8003ea0:	e006      	b.n	8003eb0 <HAL_FDCAN_AddMessageToTxFifoQ+0x80>
 8003ea2:	68fb      	ldr	r3, [r7, #12]
 8003ea4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003ea6:	f043 0208 	orr.w	r2, r3, #8
 8003eaa:	68fb      	ldr	r3, [r7, #12]
 8003eac:	661a      	str	r2, [r3, #96]	@ 0x60
 8003eae:	2301      	movs	r3, #1
 8003eb0:	4618      	mov	r0, r3
 8003eb2:	3718      	adds	r7, #24
 8003eb4:	46bd      	mov	sp, r7
 8003eb6:	bd80      	pop	{r7, pc}

08003eb8 <HAL_FDCAN_GetRxMessage>:
 8003eb8:	b480      	push	{r7}
 8003eba:	b08b      	sub	sp, #44	@ 0x2c
 8003ebc:	af00      	add	r7, sp, #0
 8003ebe:	60f8      	str	r0, [r7, #12]
 8003ec0:	60b9      	str	r1, [r7, #8]
 8003ec2:	607a      	str	r2, [r7, #4]
 8003ec4:	603b      	str	r3, [r7, #0]
 8003ec6:	2300      	movs	r3, #0
 8003ec8:	61fb      	str	r3, [r7, #28]
 8003eca:	68fb      	ldr	r3, [r7, #12]
 8003ecc:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8003ed0:	76fb      	strb	r3, [r7, #27]
 8003ed2:	7efb      	ldrb	r3, [r7, #27]
 8003ed4:	2b02      	cmp	r3, #2
 8003ed6:	f040 80e8 	bne.w	80040aa <HAL_FDCAN_GetRxMessage+0x1f2>
 8003eda:	68bb      	ldr	r3, [r7, #8]
 8003edc:	2b40      	cmp	r3, #64	@ 0x40
 8003ede:	d137      	bne.n	8003f50 <HAL_FDCAN_GetRxMessage+0x98>
 8003ee0:	68fb      	ldr	r3, [r7, #12]
 8003ee2:	681b      	ldr	r3, [r3, #0]
 8003ee4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003ee8:	f003 030f 	and.w	r3, r3, #15
 8003eec:	2b00      	cmp	r3, #0
 8003eee:	d107      	bne.n	8003f00 <HAL_FDCAN_GetRxMessage+0x48>
 8003ef0:	68fb      	ldr	r3, [r7, #12]
 8003ef2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003ef4:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8003ef8:	68fb      	ldr	r3, [r7, #12]
 8003efa:	661a      	str	r2, [r3, #96]	@ 0x60
 8003efc:	2301      	movs	r3, #1
 8003efe:	e0db      	b.n	80040b8 <HAL_FDCAN_GetRxMessage+0x200>
 8003f00:	68fb      	ldr	r3, [r7, #12]
 8003f02:	681b      	ldr	r3, [r3, #0]
 8003f04:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003f08:	0e1b      	lsrs	r3, r3, #24
 8003f0a:	f003 0301 	and.w	r3, r3, #1
 8003f0e:	2b01      	cmp	r3, #1
 8003f10:	d10a      	bne.n	8003f28 <HAL_FDCAN_GetRxMessage+0x70>
 8003f12:	68fb      	ldr	r3, [r7, #12]
 8003f14:	681b      	ldr	r3, [r3, #0]
 8003f16:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003f1a:	0a5b      	lsrs	r3, r3, #9
 8003f1c:	f003 0301 	and.w	r3, r3, #1
 8003f20:	2b01      	cmp	r3, #1
 8003f22:	d101      	bne.n	8003f28 <HAL_FDCAN_GetRxMessage+0x70>
 8003f24:	2301      	movs	r3, #1
 8003f26:	61fb      	str	r3, [r7, #28]
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003f30:	0a1b      	lsrs	r3, r3, #8
 8003f32:	f003 0303 	and.w	r3, r3, #3
 8003f36:	69fa      	ldr	r2, [r7, #28]
 8003f38:	4413      	add	r3, r2
 8003f3a:	61fb      	str	r3, [r7, #28]
 8003f3c:	68fb      	ldr	r3, [r7, #12]
 8003f3e:	6c99      	ldr	r1, [r3, #72]	@ 0x48
 8003f40:	69fa      	ldr	r2, [r7, #28]
 8003f42:	4613      	mov	r3, r2
 8003f44:	00db      	lsls	r3, r3, #3
 8003f46:	4413      	add	r3, r2
 8003f48:	00db      	lsls	r3, r3, #3
 8003f4a:	440b      	add	r3, r1
 8003f4c:	627b      	str	r3, [r7, #36]	@ 0x24
 8003f4e:	e036      	b.n	8003fbe <HAL_FDCAN_GetRxMessage+0x106>
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8003f58:	f003 030f 	and.w	r3, r3, #15
 8003f5c:	2b00      	cmp	r3, #0
 8003f5e:	d107      	bne.n	8003f70 <HAL_FDCAN_GetRxMessage+0xb8>
 8003f60:	68fb      	ldr	r3, [r7, #12]
 8003f62:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003f64:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8003f68:	68fb      	ldr	r3, [r7, #12]
 8003f6a:	661a      	str	r2, [r3, #96]	@ 0x60
 8003f6c:	2301      	movs	r3, #1
 8003f6e:	e0a3      	b.n	80040b8 <HAL_FDCAN_GetRxMessage+0x200>
 8003f70:	68fb      	ldr	r3, [r7, #12]
 8003f72:	681b      	ldr	r3, [r3, #0]
 8003f74:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8003f78:	0e1b      	lsrs	r3, r3, #24
 8003f7a:	f003 0301 	and.w	r3, r3, #1
 8003f7e:	2b01      	cmp	r3, #1
 8003f80:	d10a      	bne.n	8003f98 <HAL_FDCAN_GetRxMessage+0xe0>
 8003f82:	68fb      	ldr	r3, [r7, #12]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003f8a:	0a1b      	lsrs	r3, r3, #8
 8003f8c:	f003 0301 	and.w	r3, r3, #1
 8003f90:	2b01      	cmp	r3, #1
 8003f92:	d101      	bne.n	8003f98 <HAL_FDCAN_GetRxMessage+0xe0>
 8003f94:	2301      	movs	r3, #1
 8003f96:	61fb      	str	r3, [r7, #28]
 8003f98:	68fb      	ldr	r3, [r7, #12]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8003fa0:	0a1b      	lsrs	r3, r3, #8
 8003fa2:	f003 0303 	and.w	r3, r3, #3
 8003fa6:	69fa      	ldr	r2, [r7, #28]
 8003fa8:	4413      	add	r3, r2
 8003faa:	61fb      	str	r3, [r7, #28]
 8003fac:	68fb      	ldr	r3, [r7, #12]
 8003fae:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8003fb0:	69fa      	ldr	r2, [r7, #28]
 8003fb2:	4613      	mov	r3, r2
 8003fb4:	00db      	lsls	r3, r3, #3
 8003fb6:	4413      	add	r3, r2
 8003fb8:	00db      	lsls	r3, r3, #3
 8003fba:	440b      	add	r3, r1
 8003fbc:	627b      	str	r3, [r7, #36]	@ 0x24
 8003fbe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	f003 4280 	and.w	r2, r3, #1073741824	@ 0x40000000
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	605a      	str	r2, [r3, #4]
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	685b      	ldr	r3, [r3, #4]
 8003fce:	2b00      	cmp	r3, #0
 8003fd0:	d107      	bne.n	8003fe2 <HAL_FDCAN_GetRxMessage+0x12a>
 8003fd2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	0c9b      	lsrs	r3, r3, #18
 8003fd8:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	601a      	str	r2, [r3, #0]
 8003fe0:	e005      	b.n	8003fee <HAL_FDCAN_GetRxMessage+0x136>
 8003fe2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	601a      	str	r2, [r3, #0]
 8003fee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	f003 5200 	and.w	r2, r3, #536870912	@ 0x20000000
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	609a      	str	r2, [r3, #8]
 8003ffa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	611a      	str	r2, [r3, #16]
 8004006:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004008:	3304      	adds	r3, #4
 800400a:	627b      	str	r3, [r7, #36]	@ 0x24
 800400c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	b29a      	uxth	r2, r3
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	61da      	str	r2, [r3, #28]
 8004016:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	0c1b      	lsrs	r3, r3, #16
 800401c:	f003 020f 	and.w	r2, r3, #15
 8004020:	687b      	ldr	r3, [r7, #4]
 8004022:	60da      	str	r2, [r3, #12]
 8004024:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004026:	681b      	ldr	r3, [r3, #0]
 8004028:	f403 1280 	and.w	r2, r3, #1048576	@ 0x100000
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	615a      	str	r2, [r3, #20]
 8004030:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	f403 1200 	and.w	r2, r3, #2097152	@ 0x200000
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	619a      	str	r2, [r3, #24]
 800403c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800403e:	681b      	ldr	r3, [r3, #0]
 8004040:	0e1b      	lsrs	r3, r3, #24
 8004042:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	621a      	str	r2, [r3, #32]
 800404a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800404c:	681b      	ldr	r3, [r3, #0]
 800404e:	0fda      	lsrs	r2, r3, #31
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	625a      	str	r2, [r3, #36]	@ 0x24
 8004054:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004056:	3304      	adds	r3, #4
 8004058:	627b      	str	r3, [r7, #36]	@ 0x24
 800405a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800405c:	617b      	str	r3, [r7, #20]
 800405e:	2300      	movs	r3, #0
 8004060:	623b      	str	r3, [r7, #32]
 8004062:	e00a      	b.n	800407a <HAL_FDCAN_GetRxMessage+0x1c2>
 8004064:	697a      	ldr	r2, [r7, #20]
 8004066:	6a3b      	ldr	r3, [r7, #32]
 8004068:	441a      	add	r2, r3
 800406a:	6839      	ldr	r1, [r7, #0]
 800406c:	6a3b      	ldr	r3, [r7, #32]
 800406e:	440b      	add	r3, r1
 8004070:	7812      	ldrb	r2, [r2, #0]
 8004072:	701a      	strb	r2, [r3, #0]
 8004074:	6a3b      	ldr	r3, [r7, #32]
 8004076:	3301      	adds	r3, #1
 8004078:	623b      	str	r3, [r7, #32]
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	68db      	ldr	r3, [r3, #12]
 800407e:	4a11      	ldr	r2, [pc, #68]	@ (80040c4 <HAL_FDCAN_GetRxMessage+0x20c>)
 8004080:	5cd3      	ldrb	r3, [r2, r3]
 8004082:	461a      	mov	r2, r3
 8004084:	6a3b      	ldr	r3, [r7, #32]
 8004086:	4293      	cmp	r3, r2
 8004088:	d3ec      	bcc.n	8004064 <HAL_FDCAN_GetRxMessage+0x1ac>
 800408a:	68bb      	ldr	r3, [r7, #8]
 800408c:	2b40      	cmp	r3, #64	@ 0x40
 800408e:	d105      	bne.n	800409c <HAL_FDCAN_GetRxMessage+0x1e4>
 8004090:	68fb      	ldr	r3, [r7, #12]
 8004092:	681b      	ldr	r3, [r3, #0]
 8004094:	69fa      	ldr	r2, [r7, #28]
 8004096:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 800409a:	e004      	b.n	80040a6 <HAL_FDCAN_GetRxMessage+0x1ee>
 800409c:	68fb      	ldr	r3, [r7, #12]
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	69fa      	ldr	r2, [r7, #28]
 80040a2:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 80040a6:	2300      	movs	r3, #0
 80040a8:	e006      	b.n	80040b8 <HAL_FDCAN_GetRxMessage+0x200>
 80040aa:	68fb      	ldr	r3, [r7, #12]
 80040ac:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80040ae:	f043 0208 	orr.w	r2, r3, #8
 80040b2:	68fb      	ldr	r3, [r7, #12]
 80040b4:	661a      	str	r2, [r3, #96]	@ 0x60
 80040b6:	2301      	movs	r3, #1
 80040b8:	4618      	mov	r0, r3
 80040ba:	372c      	adds	r7, #44	@ 0x2c
 80040bc:	46bd      	mov	sp, r7
 80040be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040c2:	4770      	bx	lr
 80040c4:	08007134 	.word	0x08007134

080040c8 <HAL_FDCAN_GetTxFifoFreeLevel>:
 80040c8:	b480      	push	{r7}
 80040ca:	b085      	sub	sp, #20
 80040cc:	af00      	add	r7, sp, #0
 80040ce:	6078      	str	r0, [r7, #4]
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 80040d8:	f003 0307 	and.w	r3, r3, #7
 80040dc:	60fb      	str	r3, [r7, #12]
 80040de:	68fb      	ldr	r3, [r7, #12]
 80040e0:	4618      	mov	r0, r3
 80040e2:	3714      	adds	r7, #20
 80040e4:	46bd      	mov	sp, r7
 80040e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ea:	4770      	bx	lr

080040ec <HAL_FDCAN_ActivateNotification>:
 80040ec:	b480      	push	{r7}
 80040ee:	b087      	sub	sp, #28
 80040f0:	af00      	add	r7, sp, #0
 80040f2:	60f8      	str	r0, [r7, #12]
 80040f4:	60b9      	str	r1, [r7, #8]
 80040f6:	607a      	str	r2, [r7, #4]
 80040f8:	68fb      	ldr	r3, [r7, #12]
 80040fa:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 80040fe:	75fb      	strb	r3, [r7, #23]
 8004100:	7dfb      	ldrb	r3, [r7, #23]
 8004102:	2b01      	cmp	r3, #1
 8004104:	d003      	beq.n	800410e <HAL_FDCAN_ActivateNotification+0x22>
 8004106:	7dfb      	ldrb	r3, [r7, #23]
 8004108:	2b02      	cmp	r3, #2
 800410a:	f040 80c8 	bne.w	800429e <HAL_FDCAN_ActivateNotification+0x1b2>
 800410e:	68fb      	ldr	r3, [r7, #12]
 8004110:	681b      	ldr	r3, [r3, #0]
 8004112:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004114:	613b      	str	r3, [r7, #16]
 8004116:	68bb      	ldr	r3, [r7, #8]
 8004118:	f003 0307 	and.w	r3, r3, #7
 800411c:	2b00      	cmp	r3, #0
 800411e:	d004      	beq.n	800412a <HAL_FDCAN_ActivateNotification+0x3e>
 8004120:	693b      	ldr	r3, [r7, #16]
 8004122:	f003 0301 	and.w	r3, r3, #1
 8004126:	2b00      	cmp	r3, #0
 8004128:	d03b      	beq.n	80041a2 <HAL_FDCAN_ActivateNotification+0xb6>
 800412a:	68bb      	ldr	r3, [r7, #8]
 800412c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004130:	2b00      	cmp	r3, #0
 8004132:	d004      	beq.n	800413e <HAL_FDCAN_ActivateNotification+0x52>
 8004134:	693b      	ldr	r3, [r7, #16]
 8004136:	f003 0302 	and.w	r3, r3, #2
 800413a:	2b00      	cmp	r3, #0
 800413c:	d031      	beq.n	80041a2 <HAL_FDCAN_ActivateNotification+0xb6>
 800413e:	68bb      	ldr	r3, [r7, #8]
 8004140:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
 8004144:	2b00      	cmp	r3, #0
 8004146:	d004      	beq.n	8004152 <HAL_FDCAN_ActivateNotification+0x66>
 8004148:	693b      	ldr	r3, [r7, #16]
 800414a:	f003 0304 	and.w	r3, r3, #4
 800414e:	2b00      	cmp	r3, #0
 8004150:	d027      	beq.n	80041a2 <HAL_FDCAN_ActivateNotification+0xb6>
 8004152:	68bb      	ldr	r3, [r7, #8]
 8004154:	f403 53f0 	and.w	r3, r3, #7680	@ 0x1e00
 8004158:	2b00      	cmp	r3, #0
 800415a:	d004      	beq.n	8004166 <HAL_FDCAN_ActivateNotification+0x7a>
 800415c:	693b      	ldr	r3, [r7, #16]
 800415e:	f003 0308 	and.w	r3, r3, #8
 8004162:	2b00      	cmp	r3, #0
 8004164:	d01d      	beq.n	80041a2 <HAL_FDCAN_ActivateNotification+0xb6>
 8004166:	68bb      	ldr	r3, [r7, #8]
 8004168:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 800416c:	2b00      	cmp	r3, #0
 800416e:	d004      	beq.n	800417a <HAL_FDCAN_ActivateNotification+0x8e>
 8004170:	693b      	ldr	r3, [r7, #16]
 8004172:	f003 0310 	and.w	r3, r3, #16
 8004176:	2b00      	cmp	r3, #0
 8004178:	d013      	beq.n	80041a2 <HAL_FDCAN_ActivateNotification+0xb6>
 800417a:	68bb      	ldr	r3, [r7, #8]
 800417c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004180:	2b00      	cmp	r3, #0
 8004182:	d004      	beq.n	800418e <HAL_FDCAN_ActivateNotification+0xa2>
 8004184:	693b      	ldr	r3, [r7, #16]
 8004186:	f003 0320 	and.w	r3, r3, #32
 800418a:	2b00      	cmp	r3, #0
 800418c:	d009      	beq.n	80041a2 <HAL_FDCAN_ActivateNotification+0xb6>
 800418e:	68bb      	ldr	r3, [r7, #8]
 8004190:	f403 037c 	and.w	r3, r3, #16515072	@ 0xfc0000
 8004194:	2b00      	cmp	r3, #0
 8004196:	d00c      	beq.n	80041b2 <HAL_FDCAN_ActivateNotification+0xc6>
 8004198:	693b      	ldr	r3, [r7, #16]
 800419a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800419e:	2b00      	cmp	r3, #0
 80041a0:	d107      	bne.n	80041b2 <HAL_FDCAN_ActivateNotification+0xc6>
 80041a2:	68fb      	ldr	r3, [r7, #12]
 80041a4:	681b      	ldr	r3, [r3, #0]
 80041a6:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	681b      	ldr	r3, [r3, #0]
 80041ac:	f042 0201 	orr.w	r2, r2, #1
 80041b0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80041b2:	68bb      	ldr	r3, [r7, #8]
 80041b4:	f003 0307 	and.w	r3, r3, #7
 80041b8:	2b00      	cmp	r3, #0
 80041ba:	d004      	beq.n	80041c6 <HAL_FDCAN_ActivateNotification+0xda>
 80041bc:	693b      	ldr	r3, [r7, #16]
 80041be:	f003 0301 	and.w	r3, r3, #1
 80041c2:	2b00      	cmp	r3, #0
 80041c4:	d13b      	bne.n	800423e <HAL_FDCAN_ActivateNotification+0x152>
 80041c6:	68bb      	ldr	r3, [r7, #8]
 80041c8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80041cc:	2b00      	cmp	r3, #0
 80041ce:	d004      	beq.n	80041da <HAL_FDCAN_ActivateNotification+0xee>
 80041d0:	693b      	ldr	r3, [r7, #16]
 80041d2:	f003 0302 	and.w	r3, r3, #2
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	d131      	bne.n	800423e <HAL_FDCAN_ActivateNotification+0x152>
 80041da:	68bb      	ldr	r3, [r7, #8]
 80041dc:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
 80041e0:	2b00      	cmp	r3, #0
 80041e2:	d004      	beq.n	80041ee <HAL_FDCAN_ActivateNotification+0x102>
 80041e4:	693b      	ldr	r3, [r7, #16]
 80041e6:	f003 0304 	and.w	r3, r3, #4
 80041ea:	2b00      	cmp	r3, #0
 80041ec:	d127      	bne.n	800423e <HAL_FDCAN_ActivateNotification+0x152>
 80041ee:	68bb      	ldr	r3, [r7, #8]
 80041f0:	f403 53f0 	and.w	r3, r3, #7680	@ 0x1e00
 80041f4:	2b00      	cmp	r3, #0
 80041f6:	d004      	beq.n	8004202 <HAL_FDCAN_ActivateNotification+0x116>
 80041f8:	693b      	ldr	r3, [r7, #16]
 80041fa:	f003 0308 	and.w	r3, r3, #8
 80041fe:	2b00      	cmp	r3, #0
 8004200:	d11d      	bne.n	800423e <HAL_FDCAN_ActivateNotification+0x152>
 8004202:	68bb      	ldr	r3, [r7, #8]
 8004204:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8004208:	2b00      	cmp	r3, #0
 800420a:	d004      	beq.n	8004216 <HAL_FDCAN_ActivateNotification+0x12a>
 800420c:	693b      	ldr	r3, [r7, #16]
 800420e:	f003 0310 	and.w	r3, r3, #16
 8004212:	2b00      	cmp	r3, #0
 8004214:	d113      	bne.n	800423e <HAL_FDCAN_ActivateNotification+0x152>
 8004216:	68bb      	ldr	r3, [r7, #8]
 8004218:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800421c:	2b00      	cmp	r3, #0
 800421e:	d004      	beq.n	800422a <HAL_FDCAN_ActivateNotification+0x13e>
 8004220:	693b      	ldr	r3, [r7, #16]
 8004222:	f003 0320 	and.w	r3, r3, #32
 8004226:	2b00      	cmp	r3, #0
 8004228:	d109      	bne.n	800423e <HAL_FDCAN_ActivateNotification+0x152>
 800422a:	68bb      	ldr	r3, [r7, #8]
 800422c:	f403 037c 	and.w	r3, r3, #16515072	@ 0xfc0000
 8004230:	2b00      	cmp	r3, #0
 8004232:	d00c      	beq.n	800424e <HAL_FDCAN_ActivateNotification+0x162>
 8004234:	693b      	ldr	r3, [r7, #16]
 8004236:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800423a:	2b00      	cmp	r3, #0
 800423c:	d007      	beq.n	800424e <HAL_FDCAN_ActivateNotification+0x162>
 800423e:	68fb      	ldr	r3, [r7, #12]
 8004240:	681b      	ldr	r3, [r3, #0]
 8004242:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004244:	68fb      	ldr	r3, [r7, #12]
 8004246:	681b      	ldr	r3, [r3, #0]
 8004248:	f042 0202 	orr.w	r2, r2, #2
 800424c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800424e:	68bb      	ldr	r3, [r7, #8]
 8004250:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004254:	2b00      	cmp	r3, #0
 8004256:	d009      	beq.n	800426c <HAL_FDCAN_ActivateNotification+0x180>
 8004258:	68fb      	ldr	r3, [r7, #12]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	f8d3 10dc 	ldr.w	r1, [r3, #220]	@ 0xdc
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	681b      	ldr	r3, [r3, #0]
 8004264:	687a      	ldr	r2, [r7, #4]
 8004266:	430a      	orrs	r2, r1
 8004268:	f8c3 20dc 	str.w	r2, [r3, #220]	@ 0xdc
 800426c:	68bb      	ldr	r3, [r7, #8]
 800426e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004272:	2b00      	cmp	r3, #0
 8004274:	d009      	beq.n	800428a <HAL_FDCAN_ActivateNotification+0x19e>
 8004276:	68fb      	ldr	r3, [r7, #12]
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	f8d3 10e0 	ldr.w	r1, [r3, #224]	@ 0xe0
 800427e:	68fb      	ldr	r3, [r7, #12]
 8004280:	681b      	ldr	r3, [r3, #0]
 8004282:	687a      	ldr	r2, [r7, #4]
 8004284:	430a      	orrs	r2, r1
 8004286:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
 800428a:	68fb      	ldr	r3, [r7, #12]
 800428c:	681b      	ldr	r3, [r3, #0]
 800428e:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8004290:	68fb      	ldr	r3, [r7, #12]
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	68ba      	ldr	r2, [r7, #8]
 8004296:	430a      	orrs	r2, r1
 8004298:	655a      	str	r2, [r3, #84]	@ 0x54
 800429a:	2300      	movs	r3, #0
 800429c:	e006      	b.n	80042ac <HAL_FDCAN_ActivateNotification+0x1c0>
 800429e:	68fb      	ldr	r3, [r7, #12]
 80042a0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80042a2:	f043 0202 	orr.w	r2, r3, #2
 80042a6:	68fb      	ldr	r3, [r7, #12]
 80042a8:	661a      	str	r2, [r3, #96]	@ 0x60
 80042aa:	2301      	movs	r3, #1
 80042ac:	4618      	mov	r0, r3
 80042ae:	371c      	adds	r7, #28
 80042b0:	46bd      	mov	sp, r7
 80042b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042b6:	4770      	bx	lr

080042b8 <HAL_FDCAN_IRQHandler>:
 80042b8:	b580      	push	{r7, lr}
 80042ba:	b08c      	sub	sp, #48	@ 0x30
 80042bc:	af00      	add	r7, sp, #0
 80042be:	6078      	str	r0, [r7, #4]
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	681b      	ldr	r3, [r3, #0]
 80042c4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80042c6:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 80042ca:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80042cc:	687b      	ldr	r3, [r7, #4]
 80042ce:	681b      	ldr	r3, [r3, #0]
 80042d0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80042d2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80042d4:	4013      	ands	r3, r2
 80042d6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80042d8:	687b      	ldr	r3, [r7, #4]
 80042da:	681b      	ldr	r3, [r3, #0]
 80042dc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80042de:	f003 0307 	and.w	r3, r3, #7
 80042e2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	681b      	ldr	r3, [r3, #0]
 80042e8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80042ea:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80042ec:	4013      	ands	r3, r2
 80042ee:	62bb      	str	r3, [r7, #40]	@ 0x28
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80042f6:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80042fa:	627b      	str	r3, [r7, #36]	@ 0x24
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004302:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004304:	4013      	ands	r3, r2
 8004306:	627b      	str	r3, [r7, #36]	@ 0x24
 8004308:	687b      	ldr	r3, [r7, #4]
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800430e:	f403 0371 	and.w	r3, r3, #15794176	@ 0xf10000
 8004312:	623b      	str	r3, [r7, #32]
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800431a:	6a3a      	ldr	r2, [r7, #32]
 800431c:	4013      	ands	r3, r2
 800431e:	623b      	str	r3, [r7, #32]
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	681b      	ldr	r3, [r3, #0]
 8004324:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004326:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 800432a:	61fb      	str	r3, [r7, #28]
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004332:	69fa      	ldr	r2, [r7, #28]
 8004334:	4013      	ands	r3, r2
 8004336:	61fb      	str	r3, [r7, #28]
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800433e:	61bb      	str	r3, [r7, #24]
 8004340:	687b      	ldr	r3, [r7, #4]
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004346:	617b      	str	r3, [r7, #20]
 8004348:	697b      	ldr	r3, [r7, #20]
 800434a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800434e:	2b00      	cmp	r3, #0
 8004350:	d00b      	beq.n	800436a <HAL_FDCAN_IRQHandler+0xb2>
 8004352:	69bb      	ldr	r3, [r7, #24]
 8004354:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004358:	2b00      	cmp	r3, #0
 800435a:	d006      	beq.n	800436a <HAL_FDCAN_IRQHandler+0xb2>
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	681b      	ldr	r3, [r3, #0]
 8004360:	2240      	movs	r2, #64	@ 0x40
 8004362:	651a      	str	r2, [r3, #80]	@ 0x50
 8004364:	6878      	ldr	r0, [r7, #4]
 8004366:	f000 f916 	bl	8004596 <HAL_FDCAN_HighPriorityMessageCallback>
 800436a:	697b      	ldr	r3, [r7, #20]
 800436c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004370:	2b00      	cmp	r3, #0
 8004372:	d019      	beq.n	80043a8 <HAL_FDCAN_IRQHandler+0xf0>
 8004374:	69bb      	ldr	r3, [r7, #24]
 8004376:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800437a:	2b00      	cmp	r3, #0
 800437c:	d014      	beq.n	80043a8 <HAL_FDCAN_IRQHandler+0xf0>
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8004386:	613b      	str	r3, [r7, #16]
 8004388:	687b      	ldr	r3, [r7, #4]
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8004390:	693a      	ldr	r2, [r7, #16]
 8004392:	4013      	ands	r3, r2
 8004394:	613b      	str	r3, [r7, #16]
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800439e:	651a      	str	r2, [r3, #80]	@ 0x50
 80043a0:	6939      	ldr	r1, [r7, #16]
 80043a2:	6878      	ldr	r0, [r7, #4]
 80043a4:	f000 f8d8 	bl	8004558 <HAL_FDCAN_TxBufferAbortCallback>
 80043a8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80043aa:	2b00      	cmp	r3, #0
 80043ac:	d007      	beq.n	80043be <HAL_FDCAN_IRQHandler+0x106>
 80043ae:	687b      	ldr	r3, [r7, #4]
 80043b0:	681b      	ldr	r3, [r3, #0]
 80043b2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80043b4:	651a      	str	r2, [r3, #80]	@ 0x50
 80043b6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80043b8:	6878      	ldr	r0, [r7, #4]
 80043ba:	f000 f8a2 	bl	8004502 <HAL_FDCAN_TxEventFifoCallback>
 80043be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80043c0:	2b00      	cmp	r3, #0
 80043c2:	d007      	beq.n	80043d4 <HAL_FDCAN_IRQHandler+0x11c>
 80043c4:	687b      	ldr	r3, [r7, #4]
 80043c6:	681b      	ldr	r3, [r3, #0]
 80043c8:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80043ca:	651a      	str	r2, [r3, #80]	@ 0x50
 80043cc:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80043ce:	6878      	ldr	r0, [r7, #4]
 80043d0:	f7fc f994 	bl	80006fc <HAL_FDCAN_RxFifo0Callback>
 80043d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80043d6:	2b00      	cmp	r3, #0
 80043d8:	d007      	beq.n	80043ea <HAL_FDCAN_IRQHandler+0x132>
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80043e0:	651a      	str	r2, [r3, #80]	@ 0x50
 80043e2:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80043e4:	6878      	ldr	r0, [r7, #4]
 80043e6:	f000 f897 	bl	8004518 <HAL_FDCAN_RxFifo1Callback>
 80043ea:	697b      	ldr	r3, [r7, #20]
 80043ec:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	d00c      	beq.n	800440e <HAL_FDCAN_IRQHandler+0x156>
 80043f4:	69bb      	ldr	r3, [r7, #24]
 80043f6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80043fa:	2b00      	cmp	r3, #0
 80043fc:	d007      	beq.n	800440e <HAL_FDCAN_IRQHandler+0x156>
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	681b      	ldr	r3, [r3, #0]
 8004402:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004406:	651a      	str	r2, [r3, #80]	@ 0x50
 8004408:	6878      	ldr	r0, [r7, #4]
 800440a:	f000 f890 	bl	800452e <HAL_FDCAN_TxFifoEmptyCallback>
 800440e:	697b      	ldr	r3, [r7, #20]
 8004410:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004414:	2b00      	cmp	r3, #0
 8004416:	d018      	beq.n	800444a <HAL_FDCAN_IRQHandler+0x192>
 8004418:	69bb      	ldr	r3, [r7, #24]
 800441a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800441e:	2b00      	cmp	r3, #0
 8004420:	d013      	beq.n	800444a <HAL_FDCAN_IRQHandler+0x192>
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	681b      	ldr	r3, [r3, #0]
 8004426:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800442a:	60fb      	str	r3, [r7, #12]
 800442c:	687b      	ldr	r3, [r7, #4]
 800442e:	681b      	ldr	r3, [r3, #0]
 8004430:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004434:	68fa      	ldr	r2, [r7, #12]
 8004436:	4013      	ands	r3, r2
 8004438:	60fb      	str	r3, [r7, #12]
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	2280      	movs	r2, #128	@ 0x80
 8004440:	651a      	str	r2, [r3, #80]	@ 0x50
 8004442:	68f9      	ldr	r1, [r7, #12]
 8004444:	6878      	ldr	r0, [r7, #4]
 8004446:	f000 f87c 	bl	8004542 <HAL_FDCAN_TxBufferCompleteCallback>
 800444a:	697b      	ldr	r3, [r7, #20]
 800444c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004450:	2b00      	cmp	r3, #0
 8004452:	d00c      	beq.n	800446e <HAL_FDCAN_IRQHandler+0x1b6>
 8004454:	69bb      	ldr	r3, [r7, #24]
 8004456:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800445a:	2b00      	cmp	r3, #0
 800445c:	d007      	beq.n	800446e <HAL_FDCAN_IRQHandler+0x1b6>
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	681b      	ldr	r3, [r3, #0]
 8004462:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8004466:	651a      	str	r2, [r3, #80]	@ 0x50
 8004468:	6878      	ldr	r0, [r7, #4]
 800446a:	f000 f880 	bl	800456e <HAL_FDCAN_TimestampWraparoundCallback>
 800446e:	697b      	ldr	r3, [r7, #20]
 8004470:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004474:	2b00      	cmp	r3, #0
 8004476:	d00c      	beq.n	8004492 <HAL_FDCAN_IRQHandler+0x1da>
 8004478:	69bb      	ldr	r3, [r7, #24]
 800447a:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800447e:	2b00      	cmp	r3, #0
 8004480:	d007      	beq.n	8004492 <HAL_FDCAN_IRQHandler+0x1da>
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800448a:	651a      	str	r2, [r3, #80]	@ 0x50
 800448c:	6878      	ldr	r0, [r7, #4]
 800448e:	f000 f878 	bl	8004582 <HAL_FDCAN_TimeoutOccurredCallback>
 8004492:	697b      	ldr	r3, [r7, #20]
 8004494:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004498:	2b00      	cmp	r3, #0
 800449a:	d00f      	beq.n	80044bc <HAL_FDCAN_IRQHandler+0x204>
 800449c:	69bb      	ldr	r3, [r7, #24]
 800449e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80044a2:	2b00      	cmp	r3, #0
 80044a4:	d00a      	beq.n	80044bc <HAL_FDCAN_IRQHandler+0x204>
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	681b      	ldr	r3, [r3, #0]
 80044aa:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80044ae:	651a      	str	r2, [r3, #80]	@ 0x50
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80044b4:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	661a      	str	r2, [r3, #96]	@ 0x60
 80044bc:	69fb      	ldr	r3, [r7, #28]
 80044be:	2b00      	cmp	r3, #0
 80044c0:	d007      	beq.n	80044d2 <HAL_FDCAN_IRQHandler+0x21a>
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	681b      	ldr	r3, [r3, #0]
 80044c6:	69fa      	ldr	r2, [r7, #28]
 80044c8:	651a      	str	r2, [r3, #80]	@ 0x50
 80044ca:	69f9      	ldr	r1, [r7, #28]
 80044cc:	6878      	ldr	r0, [r7, #4]
 80044ce:	f000 f876 	bl	80045be <HAL_FDCAN_ErrorStatusCallback>
 80044d2:	6a3b      	ldr	r3, [r7, #32]
 80044d4:	2b00      	cmp	r3, #0
 80044d6:	d009      	beq.n	80044ec <HAL_FDCAN_IRQHandler+0x234>
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	6a3a      	ldr	r2, [r7, #32]
 80044de:	651a      	str	r2, [r3, #80]	@ 0x50
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80044e4:	6a3b      	ldr	r3, [r7, #32]
 80044e6:	431a      	orrs	r2, r3
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	661a      	str	r2, [r3, #96]	@ 0x60
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80044f0:	2b00      	cmp	r3, #0
 80044f2:	d002      	beq.n	80044fa <HAL_FDCAN_IRQHandler+0x242>
 80044f4:	6878      	ldr	r0, [r7, #4]
 80044f6:	f000 f858 	bl	80045aa <HAL_FDCAN_ErrorCallback>
 80044fa:	bf00      	nop
 80044fc:	3730      	adds	r7, #48	@ 0x30
 80044fe:	46bd      	mov	sp, r7
 8004500:	bd80      	pop	{r7, pc}

08004502 <HAL_FDCAN_TxEventFifoCallback>:
 8004502:	b480      	push	{r7}
 8004504:	b083      	sub	sp, #12
 8004506:	af00      	add	r7, sp, #0
 8004508:	6078      	str	r0, [r7, #4]
 800450a:	6039      	str	r1, [r7, #0]
 800450c:	bf00      	nop
 800450e:	370c      	adds	r7, #12
 8004510:	46bd      	mov	sp, r7
 8004512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004516:	4770      	bx	lr

08004518 <HAL_FDCAN_RxFifo1Callback>:
 8004518:	b480      	push	{r7}
 800451a:	b083      	sub	sp, #12
 800451c:	af00      	add	r7, sp, #0
 800451e:	6078      	str	r0, [r7, #4]
 8004520:	6039      	str	r1, [r7, #0]
 8004522:	bf00      	nop
 8004524:	370c      	adds	r7, #12
 8004526:	46bd      	mov	sp, r7
 8004528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800452c:	4770      	bx	lr

0800452e <HAL_FDCAN_TxFifoEmptyCallback>:
 800452e:	b480      	push	{r7}
 8004530:	b083      	sub	sp, #12
 8004532:	af00      	add	r7, sp, #0
 8004534:	6078      	str	r0, [r7, #4]
 8004536:	bf00      	nop
 8004538:	370c      	adds	r7, #12
 800453a:	46bd      	mov	sp, r7
 800453c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004540:	4770      	bx	lr

08004542 <HAL_FDCAN_TxBufferCompleteCallback>:
 8004542:	b480      	push	{r7}
 8004544:	b083      	sub	sp, #12
 8004546:	af00      	add	r7, sp, #0
 8004548:	6078      	str	r0, [r7, #4]
 800454a:	6039      	str	r1, [r7, #0]
 800454c:	bf00      	nop
 800454e:	370c      	adds	r7, #12
 8004550:	46bd      	mov	sp, r7
 8004552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004556:	4770      	bx	lr

08004558 <HAL_FDCAN_TxBufferAbortCallback>:
 8004558:	b480      	push	{r7}
 800455a:	b083      	sub	sp, #12
 800455c:	af00      	add	r7, sp, #0
 800455e:	6078      	str	r0, [r7, #4]
 8004560:	6039      	str	r1, [r7, #0]
 8004562:	bf00      	nop
 8004564:	370c      	adds	r7, #12
 8004566:	46bd      	mov	sp, r7
 8004568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800456c:	4770      	bx	lr

0800456e <HAL_FDCAN_TimestampWraparoundCallback>:
 800456e:	b480      	push	{r7}
 8004570:	b083      	sub	sp, #12
 8004572:	af00      	add	r7, sp, #0
 8004574:	6078      	str	r0, [r7, #4]
 8004576:	bf00      	nop
 8004578:	370c      	adds	r7, #12
 800457a:	46bd      	mov	sp, r7
 800457c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004580:	4770      	bx	lr

08004582 <HAL_FDCAN_TimeoutOccurredCallback>:
 8004582:	b480      	push	{r7}
 8004584:	b083      	sub	sp, #12
 8004586:	af00      	add	r7, sp, #0
 8004588:	6078      	str	r0, [r7, #4]
 800458a:	bf00      	nop
 800458c:	370c      	adds	r7, #12
 800458e:	46bd      	mov	sp, r7
 8004590:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004594:	4770      	bx	lr

08004596 <HAL_FDCAN_HighPriorityMessageCallback>:
 8004596:	b480      	push	{r7}
 8004598:	b083      	sub	sp, #12
 800459a:	af00      	add	r7, sp, #0
 800459c:	6078      	str	r0, [r7, #4]
 800459e:	bf00      	nop
 80045a0:	370c      	adds	r7, #12
 80045a2:	46bd      	mov	sp, r7
 80045a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045a8:	4770      	bx	lr

080045aa <HAL_FDCAN_ErrorCallback>:
 80045aa:	b480      	push	{r7}
 80045ac:	b083      	sub	sp, #12
 80045ae:	af00      	add	r7, sp, #0
 80045b0:	6078      	str	r0, [r7, #4]
 80045b2:	bf00      	nop
 80045b4:	370c      	adds	r7, #12
 80045b6:	46bd      	mov	sp, r7
 80045b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045bc:	4770      	bx	lr

080045be <HAL_FDCAN_ErrorStatusCallback>:
 80045be:	b480      	push	{r7}
 80045c0:	b083      	sub	sp, #12
 80045c2:	af00      	add	r7, sp, #0
 80045c4:	6078      	str	r0, [r7, #4]
 80045c6:	6039      	str	r1, [r7, #0]
 80045c8:	bf00      	nop
 80045ca:	370c      	adds	r7, #12
 80045cc:	46bd      	mov	sp, r7
 80045ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045d2:	4770      	bx	lr

080045d4 <FDCAN_CalcultateRamBlockAddresses>:
 80045d4:	b480      	push	{r7}
 80045d6:	b085      	sub	sp, #20
 80045d8:	af00      	add	r7, sp, #0
 80045da:	6078      	str	r0, [r7, #4]
 80045dc:	4b27      	ldr	r3, [pc, #156]	@ (800467c <FDCAN_CalcultateRamBlockAddresses+0xa8>)
 80045de:	60bb      	str	r3, [r7, #8]
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	68ba      	ldr	r2, [r7, #8]
 80045e4:	641a      	str	r2, [r3, #64]	@ 0x40
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80045ee:	f423 11f8 	bic.w	r1, r3, #2031616	@ 0x1f0000
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80045f6:	041a      	lsls	r2, r3, #16
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	430a      	orrs	r2, r1
 80045fe:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004602:	68bb      	ldr	r3, [r7, #8]
 8004604:	f103 0270 	add.w	r2, r3, #112	@ 0x70
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	645a      	str	r2, [r3, #68]	@ 0x44
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004614:	f023 6170 	bic.w	r1, r3, #251658240	@ 0xf000000
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800461c:	061a      	lsls	r2, r3, #24
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	430a      	orrs	r2, r1
 8004624:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004628:	68bb      	ldr	r3, [r7, #8]
 800462a:	f103 02b0 	add.w	r2, r3, #176	@ 0xb0
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	649a      	str	r2, [r3, #72]	@ 0x48
 8004632:	68bb      	ldr	r3, [r7, #8]
 8004634:	f503 72c4 	add.w	r2, r3, #392	@ 0x188
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	64da      	str	r2, [r3, #76]	@ 0x4c
 800463c:	68bb      	ldr	r3, [r7, #8]
 800463e:	f503 7218 	add.w	r2, r3, #608	@ 0x260
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	651a      	str	r2, [r3, #80]	@ 0x50
 8004646:	68bb      	ldr	r3, [r7, #8]
 8004648:	f503 721e 	add.w	r2, r3, #632	@ 0x278
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	655a      	str	r2, [r3, #84]	@ 0x54
 8004650:	68bb      	ldr	r3, [r7, #8]
 8004652:	60fb      	str	r3, [r7, #12]
 8004654:	e005      	b.n	8004662 <FDCAN_CalcultateRamBlockAddresses+0x8e>
 8004656:	68fb      	ldr	r3, [r7, #12]
 8004658:	2200      	movs	r2, #0
 800465a:	601a      	str	r2, [r3, #0]
 800465c:	68fb      	ldr	r3, [r7, #12]
 800465e:	3304      	adds	r3, #4
 8004660:	60fb      	str	r3, [r7, #12]
 8004662:	68bb      	ldr	r3, [r7, #8]
 8004664:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 8004668:	68fa      	ldr	r2, [r7, #12]
 800466a:	429a      	cmp	r2, r3
 800466c:	d3f3      	bcc.n	8004656 <FDCAN_CalcultateRamBlockAddresses+0x82>
 800466e:	bf00      	nop
 8004670:	bf00      	nop
 8004672:	3714      	adds	r7, #20
 8004674:	46bd      	mov	sp, r7
 8004676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800467a:	4770      	bx	lr
 800467c:	4000a400 	.word	0x4000a400

08004680 <FDCAN_CopyMessageToRAM>:
 8004680:	b480      	push	{r7}
 8004682:	b089      	sub	sp, #36	@ 0x24
 8004684:	af00      	add	r7, sp, #0
 8004686:	60f8      	str	r0, [r7, #12]
 8004688:	60b9      	str	r1, [r7, #8]
 800468a:	607a      	str	r2, [r7, #4]
 800468c:	603b      	str	r3, [r7, #0]
 800468e:	68bb      	ldr	r3, [r7, #8]
 8004690:	685b      	ldr	r3, [r3, #4]
 8004692:	2b00      	cmp	r3, #0
 8004694:	d10a      	bne.n	80046ac <FDCAN_CopyMessageToRAM+0x2c>
 8004696:	68bb      	ldr	r3, [r7, #8]
 8004698:	691a      	ldr	r2, [r3, #16]
 800469a:	68bb      	ldr	r3, [r7, #8]
 800469c:	689b      	ldr	r3, [r3, #8]
 800469e:	431a      	orrs	r2, r3
 80046a0:	68bb      	ldr	r3, [r7, #8]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	049b      	lsls	r3, r3, #18
 80046a6:	4313      	orrs	r3, r2
 80046a8:	61fb      	str	r3, [r7, #28]
 80046aa:	e00a      	b.n	80046c2 <FDCAN_CopyMessageToRAM+0x42>
 80046ac:	68bb      	ldr	r3, [r7, #8]
 80046ae:	691a      	ldr	r2, [r3, #16]
 80046b0:	68bb      	ldr	r3, [r7, #8]
 80046b2:	689b      	ldr	r3, [r3, #8]
 80046b4:	431a      	orrs	r2, r3
 80046b6:	68bb      	ldr	r3, [r7, #8]
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	4313      	orrs	r3, r2
 80046bc:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80046c0:	61fb      	str	r3, [r7, #28]
 80046c2:	68bb      	ldr	r3, [r7, #8]
 80046c4:	6a1b      	ldr	r3, [r3, #32]
 80046c6:	061a      	lsls	r2, r3, #24
 80046c8:	68bb      	ldr	r3, [r7, #8]
 80046ca:	69db      	ldr	r3, [r3, #28]
 80046cc:	431a      	orrs	r2, r3
 80046ce:	68bb      	ldr	r3, [r7, #8]
 80046d0:	699b      	ldr	r3, [r3, #24]
 80046d2:	431a      	orrs	r2, r3
 80046d4:	68bb      	ldr	r3, [r7, #8]
 80046d6:	695b      	ldr	r3, [r3, #20]
 80046d8:	431a      	orrs	r2, r3
 80046da:	68bb      	ldr	r3, [r7, #8]
 80046dc:	68db      	ldr	r3, [r3, #12]
 80046de:	041b      	lsls	r3, r3, #16
 80046e0:	4313      	orrs	r3, r2
 80046e2:	613b      	str	r3, [r7, #16]
 80046e4:	68fb      	ldr	r3, [r7, #12]
 80046e6:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80046e8:	683a      	ldr	r2, [r7, #0]
 80046ea:	4613      	mov	r3, r2
 80046ec:	00db      	lsls	r3, r3, #3
 80046ee:	4413      	add	r3, r2
 80046f0:	00db      	lsls	r3, r3, #3
 80046f2:	440b      	add	r3, r1
 80046f4:	61bb      	str	r3, [r7, #24]
 80046f6:	69bb      	ldr	r3, [r7, #24]
 80046f8:	69fa      	ldr	r2, [r7, #28]
 80046fa:	601a      	str	r2, [r3, #0]
 80046fc:	69bb      	ldr	r3, [r7, #24]
 80046fe:	3304      	adds	r3, #4
 8004700:	61bb      	str	r3, [r7, #24]
 8004702:	69bb      	ldr	r3, [r7, #24]
 8004704:	693a      	ldr	r2, [r7, #16]
 8004706:	601a      	str	r2, [r3, #0]
 8004708:	69bb      	ldr	r3, [r7, #24]
 800470a:	3304      	adds	r3, #4
 800470c:	61bb      	str	r3, [r7, #24]
 800470e:	2300      	movs	r3, #0
 8004710:	617b      	str	r3, [r7, #20]
 8004712:	e020      	b.n	8004756 <FDCAN_CopyMessageToRAM+0xd6>
 8004714:	697b      	ldr	r3, [r7, #20]
 8004716:	3303      	adds	r3, #3
 8004718:	687a      	ldr	r2, [r7, #4]
 800471a:	4413      	add	r3, r2
 800471c:	781b      	ldrb	r3, [r3, #0]
 800471e:	061a      	lsls	r2, r3, #24
 8004720:	697b      	ldr	r3, [r7, #20]
 8004722:	3302      	adds	r3, #2
 8004724:	6879      	ldr	r1, [r7, #4]
 8004726:	440b      	add	r3, r1
 8004728:	781b      	ldrb	r3, [r3, #0]
 800472a:	041b      	lsls	r3, r3, #16
 800472c:	431a      	orrs	r2, r3
 800472e:	697b      	ldr	r3, [r7, #20]
 8004730:	3301      	adds	r3, #1
 8004732:	6879      	ldr	r1, [r7, #4]
 8004734:	440b      	add	r3, r1
 8004736:	781b      	ldrb	r3, [r3, #0]
 8004738:	021b      	lsls	r3, r3, #8
 800473a:	4313      	orrs	r3, r2
 800473c:	6879      	ldr	r1, [r7, #4]
 800473e:	697a      	ldr	r2, [r7, #20]
 8004740:	440a      	add	r2, r1
 8004742:	7812      	ldrb	r2, [r2, #0]
 8004744:	431a      	orrs	r2, r3
 8004746:	69bb      	ldr	r3, [r7, #24]
 8004748:	601a      	str	r2, [r3, #0]
 800474a:	69bb      	ldr	r3, [r7, #24]
 800474c:	3304      	adds	r3, #4
 800474e:	61bb      	str	r3, [r7, #24]
 8004750:	697b      	ldr	r3, [r7, #20]
 8004752:	3304      	adds	r3, #4
 8004754:	617b      	str	r3, [r7, #20]
 8004756:	68bb      	ldr	r3, [r7, #8]
 8004758:	68db      	ldr	r3, [r3, #12]
 800475a:	4a06      	ldr	r2, [pc, #24]	@ (8004774 <FDCAN_CopyMessageToRAM+0xf4>)
 800475c:	5cd3      	ldrb	r3, [r2, r3]
 800475e:	461a      	mov	r2, r3
 8004760:	697b      	ldr	r3, [r7, #20]
 8004762:	4293      	cmp	r3, r2
 8004764:	d3d6      	bcc.n	8004714 <FDCAN_CopyMessageToRAM+0x94>
 8004766:	bf00      	nop
 8004768:	bf00      	nop
 800476a:	3724      	adds	r7, #36	@ 0x24
 800476c:	46bd      	mov	sp, r7
 800476e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004772:	4770      	bx	lr
 8004774:	08007134 	.word	0x08007134

08004778 <HAL_GPIO_Init>:
 8004778:	b480      	push	{r7}
 800477a:	b087      	sub	sp, #28
 800477c:	af00      	add	r7, sp, #0
 800477e:	6078      	str	r0, [r7, #4]
 8004780:	6039      	str	r1, [r7, #0]
 8004782:	2300      	movs	r3, #0
 8004784:	617b      	str	r3, [r7, #20]
 8004786:	e15a      	b.n	8004a3e <HAL_GPIO_Init+0x2c6>
 8004788:	683b      	ldr	r3, [r7, #0]
 800478a:	681a      	ldr	r2, [r3, #0]
 800478c:	2101      	movs	r1, #1
 800478e:	697b      	ldr	r3, [r7, #20]
 8004790:	fa01 f303 	lsl.w	r3, r1, r3
 8004794:	4013      	ands	r3, r2
 8004796:	60fb      	str	r3, [r7, #12]
 8004798:	68fb      	ldr	r3, [r7, #12]
 800479a:	2b00      	cmp	r3, #0
 800479c:	f000 814c 	beq.w	8004a38 <HAL_GPIO_Init+0x2c0>
 80047a0:	683b      	ldr	r3, [r7, #0]
 80047a2:	685b      	ldr	r3, [r3, #4]
 80047a4:	f003 0303 	and.w	r3, r3, #3
 80047a8:	2b01      	cmp	r3, #1
 80047aa:	d005      	beq.n	80047b8 <HAL_GPIO_Init+0x40>
 80047ac:	683b      	ldr	r3, [r7, #0]
 80047ae:	685b      	ldr	r3, [r3, #4]
 80047b0:	f003 0303 	and.w	r3, r3, #3
 80047b4:	2b02      	cmp	r3, #2
 80047b6:	d130      	bne.n	800481a <HAL_GPIO_Init+0xa2>
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	689b      	ldr	r3, [r3, #8]
 80047bc:	613b      	str	r3, [r7, #16]
 80047be:	697b      	ldr	r3, [r7, #20]
 80047c0:	005b      	lsls	r3, r3, #1
 80047c2:	2203      	movs	r2, #3
 80047c4:	fa02 f303 	lsl.w	r3, r2, r3
 80047c8:	43db      	mvns	r3, r3
 80047ca:	693a      	ldr	r2, [r7, #16]
 80047cc:	4013      	ands	r3, r2
 80047ce:	613b      	str	r3, [r7, #16]
 80047d0:	683b      	ldr	r3, [r7, #0]
 80047d2:	68da      	ldr	r2, [r3, #12]
 80047d4:	697b      	ldr	r3, [r7, #20]
 80047d6:	005b      	lsls	r3, r3, #1
 80047d8:	fa02 f303 	lsl.w	r3, r2, r3
 80047dc:	693a      	ldr	r2, [r7, #16]
 80047de:	4313      	orrs	r3, r2
 80047e0:	613b      	str	r3, [r7, #16]
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	693a      	ldr	r2, [r7, #16]
 80047e6:	609a      	str	r2, [r3, #8]
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	685b      	ldr	r3, [r3, #4]
 80047ec:	613b      	str	r3, [r7, #16]
 80047ee:	2201      	movs	r2, #1
 80047f0:	697b      	ldr	r3, [r7, #20]
 80047f2:	fa02 f303 	lsl.w	r3, r2, r3
 80047f6:	43db      	mvns	r3, r3
 80047f8:	693a      	ldr	r2, [r7, #16]
 80047fa:	4013      	ands	r3, r2
 80047fc:	613b      	str	r3, [r7, #16]
 80047fe:	683b      	ldr	r3, [r7, #0]
 8004800:	685b      	ldr	r3, [r3, #4]
 8004802:	091b      	lsrs	r3, r3, #4
 8004804:	f003 0201 	and.w	r2, r3, #1
 8004808:	697b      	ldr	r3, [r7, #20]
 800480a:	fa02 f303 	lsl.w	r3, r2, r3
 800480e:	693a      	ldr	r2, [r7, #16]
 8004810:	4313      	orrs	r3, r2
 8004812:	613b      	str	r3, [r7, #16]
 8004814:	687b      	ldr	r3, [r7, #4]
 8004816:	693a      	ldr	r2, [r7, #16]
 8004818:	605a      	str	r2, [r3, #4]
 800481a:	683b      	ldr	r3, [r7, #0]
 800481c:	685b      	ldr	r3, [r3, #4]
 800481e:	f003 0303 	and.w	r3, r3, #3
 8004822:	2b03      	cmp	r3, #3
 8004824:	d017      	beq.n	8004856 <HAL_GPIO_Init+0xde>
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	68db      	ldr	r3, [r3, #12]
 800482a:	613b      	str	r3, [r7, #16]
 800482c:	697b      	ldr	r3, [r7, #20]
 800482e:	005b      	lsls	r3, r3, #1
 8004830:	2203      	movs	r2, #3
 8004832:	fa02 f303 	lsl.w	r3, r2, r3
 8004836:	43db      	mvns	r3, r3
 8004838:	693a      	ldr	r2, [r7, #16]
 800483a:	4013      	ands	r3, r2
 800483c:	613b      	str	r3, [r7, #16]
 800483e:	683b      	ldr	r3, [r7, #0]
 8004840:	689a      	ldr	r2, [r3, #8]
 8004842:	697b      	ldr	r3, [r7, #20]
 8004844:	005b      	lsls	r3, r3, #1
 8004846:	fa02 f303 	lsl.w	r3, r2, r3
 800484a:	693a      	ldr	r2, [r7, #16]
 800484c:	4313      	orrs	r3, r2
 800484e:	613b      	str	r3, [r7, #16]
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	693a      	ldr	r2, [r7, #16]
 8004854:	60da      	str	r2, [r3, #12]
 8004856:	683b      	ldr	r3, [r7, #0]
 8004858:	685b      	ldr	r3, [r3, #4]
 800485a:	f003 0303 	and.w	r3, r3, #3
 800485e:	2b02      	cmp	r3, #2
 8004860:	d123      	bne.n	80048aa <HAL_GPIO_Init+0x132>
 8004862:	697b      	ldr	r3, [r7, #20]
 8004864:	08da      	lsrs	r2, r3, #3
 8004866:	687b      	ldr	r3, [r7, #4]
 8004868:	3208      	adds	r2, #8
 800486a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800486e:	613b      	str	r3, [r7, #16]
 8004870:	697b      	ldr	r3, [r7, #20]
 8004872:	f003 0307 	and.w	r3, r3, #7
 8004876:	009b      	lsls	r3, r3, #2
 8004878:	220f      	movs	r2, #15
 800487a:	fa02 f303 	lsl.w	r3, r2, r3
 800487e:	43db      	mvns	r3, r3
 8004880:	693a      	ldr	r2, [r7, #16]
 8004882:	4013      	ands	r3, r2
 8004884:	613b      	str	r3, [r7, #16]
 8004886:	683b      	ldr	r3, [r7, #0]
 8004888:	691a      	ldr	r2, [r3, #16]
 800488a:	697b      	ldr	r3, [r7, #20]
 800488c:	f003 0307 	and.w	r3, r3, #7
 8004890:	009b      	lsls	r3, r3, #2
 8004892:	fa02 f303 	lsl.w	r3, r2, r3
 8004896:	693a      	ldr	r2, [r7, #16]
 8004898:	4313      	orrs	r3, r2
 800489a:	613b      	str	r3, [r7, #16]
 800489c:	697b      	ldr	r3, [r7, #20]
 800489e:	08da      	lsrs	r2, r3, #3
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	3208      	adds	r2, #8
 80048a4:	6939      	ldr	r1, [r7, #16]
 80048a6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	613b      	str	r3, [r7, #16]
 80048b0:	697b      	ldr	r3, [r7, #20]
 80048b2:	005b      	lsls	r3, r3, #1
 80048b4:	2203      	movs	r2, #3
 80048b6:	fa02 f303 	lsl.w	r3, r2, r3
 80048ba:	43db      	mvns	r3, r3
 80048bc:	693a      	ldr	r2, [r7, #16]
 80048be:	4013      	ands	r3, r2
 80048c0:	613b      	str	r3, [r7, #16]
 80048c2:	683b      	ldr	r3, [r7, #0]
 80048c4:	685b      	ldr	r3, [r3, #4]
 80048c6:	f003 0203 	and.w	r2, r3, #3
 80048ca:	697b      	ldr	r3, [r7, #20]
 80048cc:	005b      	lsls	r3, r3, #1
 80048ce:	fa02 f303 	lsl.w	r3, r2, r3
 80048d2:	693a      	ldr	r2, [r7, #16]
 80048d4:	4313      	orrs	r3, r2
 80048d6:	613b      	str	r3, [r7, #16]
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	693a      	ldr	r2, [r7, #16]
 80048dc:	601a      	str	r2, [r3, #0]
 80048de:	683b      	ldr	r3, [r7, #0]
 80048e0:	685b      	ldr	r3, [r3, #4]
 80048e2:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80048e6:	2b00      	cmp	r3, #0
 80048e8:	f000 80a6 	beq.w	8004a38 <HAL_GPIO_Init+0x2c0>
 80048ec:	4b5b      	ldr	r3, [pc, #364]	@ (8004a5c <HAL_GPIO_Init+0x2e4>)
 80048ee:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80048f0:	4a5a      	ldr	r2, [pc, #360]	@ (8004a5c <HAL_GPIO_Init+0x2e4>)
 80048f2:	f043 0301 	orr.w	r3, r3, #1
 80048f6:	6613      	str	r3, [r2, #96]	@ 0x60
 80048f8:	4b58      	ldr	r3, [pc, #352]	@ (8004a5c <HAL_GPIO_Init+0x2e4>)
 80048fa:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80048fc:	f003 0301 	and.w	r3, r3, #1
 8004900:	60bb      	str	r3, [r7, #8]
 8004902:	68bb      	ldr	r3, [r7, #8]
 8004904:	4a56      	ldr	r2, [pc, #344]	@ (8004a60 <HAL_GPIO_Init+0x2e8>)
 8004906:	697b      	ldr	r3, [r7, #20]
 8004908:	089b      	lsrs	r3, r3, #2
 800490a:	3302      	adds	r3, #2
 800490c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004910:	613b      	str	r3, [r7, #16]
 8004912:	697b      	ldr	r3, [r7, #20]
 8004914:	f003 0303 	and.w	r3, r3, #3
 8004918:	009b      	lsls	r3, r3, #2
 800491a:	220f      	movs	r2, #15
 800491c:	fa02 f303 	lsl.w	r3, r2, r3
 8004920:	43db      	mvns	r3, r3
 8004922:	693a      	ldr	r2, [r7, #16]
 8004924:	4013      	ands	r3, r2
 8004926:	613b      	str	r3, [r7, #16]
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800492e:	d01f      	beq.n	8004970 <HAL_GPIO_Init+0x1f8>
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	4a4c      	ldr	r2, [pc, #304]	@ (8004a64 <HAL_GPIO_Init+0x2ec>)
 8004934:	4293      	cmp	r3, r2
 8004936:	d019      	beq.n	800496c <HAL_GPIO_Init+0x1f4>
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	4a4b      	ldr	r2, [pc, #300]	@ (8004a68 <HAL_GPIO_Init+0x2f0>)
 800493c:	4293      	cmp	r3, r2
 800493e:	d013      	beq.n	8004968 <HAL_GPIO_Init+0x1f0>
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	4a4a      	ldr	r2, [pc, #296]	@ (8004a6c <HAL_GPIO_Init+0x2f4>)
 8004944:	4293      	cmp	r3, r2
 8004946:	d00d      	beq.n	8004964 <HAL_GPIO_Init+0x1ec>
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	4a49      	ldr	r2, [pc, #292]	@ (8004a70 <HAL_GPIO_Init+0x2f8>)
 800494c:	4293      	cmp	r3, r2
 800494e:	d007      	beq.n	8004960 <HAL_GPIO_Init+0x1e8>
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	4a48      	ldr	r2, [pc, #288]	@ (8004a74 <HAL_GPIO_Init+0x2fc>)
 8004954:	4293      	cmp	r3, r2
 8004956:	d101      	bne.n	800495c <HAL_GPIO_Init+0x1e4>
 8004958:	2305      	movs	r3, #5
 800495a:	e00a      	b.n	8004972 <HAL_GPIO_Init+0x1fa>
 800495c:	2306      	movs	r3, #6
 800495e:	e008      	b.n	8004972 <HAL_GPIO_Init+0x1fa>
 8004960:	2304      	movs	r3, #4
 8004962:	e006      	b.n	8004972 <HAL_GPIO_Init+0x1fa>
 8004964:	2303      	movs	r3, #3
 8004966:	e004      	b.n	8004972 <HAL_GPIO_Init+0x1fa>
 8004968:	2302      	movs	r3, #2
 800496a:	e002      	b.n	8004972 <HAL_GPIO_Init+0x1fa>
 800496c:	2301      	movs	r3, #1
 800496e:	e000      	b.n	8004972 <HAL_GPIO_Init+0x1fa>
 8004970:	2300      	movs	r3, #0
 8004972:	697a      	ldr	r2, [r7, #20]
 8004974:	f002 0203 	and.w	r2, r2, #3
 8004978:	0092      	lsls	r2, r2, #2
 800497a:	4093      	lsls	r3, r2
 800497c:	693a      	ldr	r2, [r7, #16]
 800497e:	4313      	orrs	r3, r2
 8004980:	613b      	str	r3, [r7, #16]
 8004982:	4937      	ldr	r1, [pc, #220]	@ (8004a60 <HAL_GPIO_Init+0x2e8>)
 8004984:	697b      	ldr	r3, [r7, #20]
 8004986:	089b      	lsrs	r3, r3, #2
 8004988:	3302      	adds	r3, #2
 800498a:	693a      	ldr	r2, [r7, #16]
 800498c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004990:	4b39      	ldr	r3, [pc, #228]	@ (8004a78 <HAL_GPIO_Init+0x300>)
 8004992:	689b      	ldr	r3, [r3, #8]
 8004994:	613b      	str	r3, [r7, #16]
 8004996:	68fb      	ldr	r3, [r7, #12]
 8004998:	43db      	mvns	r3, r3
 800499a:	693a      	ldr	r2, [r7, #16]
 800499c:	4013      	ands	r3, r2
 800499e:	613b      	str	r3, [r7, #16]
 80049a0:	683b      	ldr	r3, [r7, #0]
 80049a2:	685b      	ldr	r3, [r3, #4]
 80049a4:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d003      	beq.n	80049b4 <HAL_GPIO_Init+0x23c>
 80049ac:	693a      	ldr	r2, [r7, #16]
 80049ae:	68fb      	ldr	r3, [r7, #12]
 80049b0:	4313      	orrs	r3, r2
 80049b2:	613b      	str	r3, [r7, #16]
 80049b4:	4a30      	ldr	r2, [pc, #192]	@ (8004a78 <HAL_GPIO_Init+0x300>)
 80049b6:	693b      	ldr	r3, [r7, #16]
 80049b8:	6093      	str	r3, [r2, #8]
 80049ba:	4b2f      	ldr	r3, [pc, #188]	@ (8004a78 <HAL_GPIO_Init+0x300>)
 80049bc:	68db      	ldr	r3, [r3, #12]
 80049be:	613b      	str	r3, [r7, #16]
 80049c0:	68fb      	ldr	r3, [r7, #12]
 80049c2:	43db      	mvns	r3, r3
 80049c4:	693a      	ldr	r2, [r7, #16]
 80049c6:	4013      	ands	r3, r2
 80049c8:	613b      	str	r3, [r7, #16]
 80049ca:	683b      	ldr	r3, [r7, #0]
 80049cc:	685b      	ldr	r3, [r3, #4]
 80049ce:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80049d2:	2b00      	cmp	r3, #0
 80049d4:	d003      	beq.n	80049de <HAL_GPIO_Init+0x266>
 80049d6:	693a      	ldr	r2, [r7, #16]
 80049d8:	68fb      	ldr	r3, [r7, #12]
 80049da:	4313      	orrs	r3, r2
 80049dc:	613b      	str	r3, [r7, #16]
 80049de:	4a26      	ldr	r2, [pc, #152]	@ (8004a78 <HAL_GPIO_Init+0x300>)
 80049e0:	693b      	ldr	r3, [r7, #16]
 80049e2:	60d3      	str	r3, [r2, #12]
 80049e4:	4b24      	ldr	r3, [pc, #144]	@ (8004a78 <HAL_GPIO_Init+0x300>)
 80049e6:	685b      	ldr	r3, [r3, #4]
 80049e8:	613b      	str	r3, [r7, #16]
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	43db      	mvns	r3, r3
 80049ee:	693a      	ldr	r2, [r7, #16]
 80049f0:	4013      	ands	r3, r2
 80049f2:	613b      	str	r3, [r7, #16]
 80049f4:	683b      	ldr	r3, [r7, #0]
 80049f6:	685b      	ldr	r3, [r3, #4]
 80049f8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d003      	beq.n	8004a08 <HAL_GPIO_Init+0x290>
 8004a00:	693a      	ldr	r2, [r7, #16]
 8004a02:	68fb      	ldr	r3, [r7, #12]
 8004a04:	4313      	orrs	r3, r2
 8004a06:	613b      	str	r3, [r7, #16]
 8004a08:	4a1b      	ldr	r2, [pc, #108]	@ (8004a78 <HAL_GPIO_Init+0x300>)
 8004a0a:	693b      	ldr	r3, [r7, #16]
 8004a0c:	6053      	str	r3, [r2, #4]
 8004a0e:	4b1a      	ldr	r3, [pc, #104]	@ (8004a78 <HAL_GPIO_Init+0x300>)
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	613b      	str	r3, [r7, #16]
 8004a14:	68fb      	ldr	r3, [r7, #12]
 8004a16:	43db      	mvns	r3, r3
 8004a18:	693a      	ldr	r2, [r7, #16]
 8004a1a:	4013      	ands	r3, r2
 8004a1c:	613b      	str	r3, [r7, #16]
 8004a1e:	683b      	ldr	r3, [r7, #0]
 8004a20:	685b      	ldr	r3, [r3, #4]
 8004a22:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004a26:	2b00      	cmp	r3, #0
 8004a28:	d003      	beq.n	8004a32 <HAL_GPIO_Init+0x2ba>
 8004a2a:	693a      	ldr	r2, [r7, #16]
 8004a2c:	68fb      	ldr	r3, [r7, #12]
 8004a2e:	4313      	orrs	r3, r2
 8004a30:	613b      	str	r3, [r7, #16]
 8004a32:	4a11      	ldr	r2, [pc, #68]	@ (8004a78 <HAL_GPIO_Init+0x300>)
 8004a34:	693b      	ldr	r3, [r7, #16]
 8004a36:	6013      	str	r3, [r2, #0]
 8004a38:	697b      	ldr	r3, [r7, #20]
 8004a3a:	3301      	adds	r3, #1
 8004a3c:	617b      	str	r3, [r7, #20]
 8004a3e:	683b      	ldr	r3, [r7, #0]
 8004a40:	681a      	ldr	r2, [r3, #0]
 8004a42:	697b      	ldr	r3, [r7, #20]
 8004a44:	fa22 f303 	lsr.w	r3, r2, r3
 8004a48:	2b00      	cmp	r3, #0
 8004a4a:	f47f ae9d 	bne.w	8004788 <HAL_GPIO_Init+0x10>
 8004a4e:	bf00      	nop
 8004a50:	bf00      	nop
 8004a52:	371c      	adds	r7, #28
 8004a54:	46bd      	mov	sp, r7
 8004a56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a5a:	4770      	bx	lr
 8004a5c:	40021000 	.word	0x40021000
 8004a60:	40010000 	.word	0x40010000
 8004a64:	48000400 	.word	0x48000400
 8004a68:	48000800 	.word	0x48000800
 8004a6c:	48000c00 	.word	0x48000c00
 8004a70:	48001000 	.word	0x48001000
 8004a74:	48001400 	.word	0x48001400
 8004a78:	40010400 	.word	0x40010400

08004a7c <HAL_GPIO_WritePin>:
 8004a7c:	b480      	push	{r7}
 8004a7e:	b083      	sub	sp, #12
 8004a80:	af00      	add	r7, sp, #0
 8004a82:	6078      	str	r0, [r7, #4]
 8004a84:	460b      	mov	r3, r1
 8004a86:	807b      	strh	r3, [r7, #2]
 8004a88:	4613      	mov	r3, r2
 8004a8a:	707b      	strb	r3, [r7, #1]
 8004a8c:	787b      	ldrb	r3, [r7, #1]
 8004a8e:	2b00      	cmp	r3, #0
 8004a90:	d003      	beq.n	8004a9a <HAL_GPIO_WritePin+0x1e>
 8004a92:	887a      	ldrh	r2, [r7, #2]
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	619a      	str	r2, [r3, #24]
 8004a98:	e002      	b.n	8004aa0 <HAL_GPIO_WritePin+0x24>
 8004a9a:	887a      	ldrh	r2, [r7, #2]
 8004a9c:	687b      	ldr	r3, [r7, #4]
 8004a9e:	629a      	str	r2, [r3, #40]	@ 0x28
 8004aa0:	bf00      	nop
 8004aa2:	370c      	adds	r7, #12
 8004aa4:	46bd      	mov	sp, r7
 8004aa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aaa:	4770      	bx	lr

08004aac <HAL_PWREx_ControlVoltageScaling>:
 8004aac:	b480      	push	{r7}
 8004aae:	b085      	sub	sp, #20
 8004ab0:	af00      	add	r7, sp, #0
 8004ab2:	6078      	str	r0, [r7, #4]
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d141      	bne.n	8004b3e <HAL_PWREx_ControlVoltageScaling+0x92>
 8004aba:	4b4b      	ldr	r3, [pc, #300]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004abc:	681b      	ldr	r3, [r3, #0]
 8004abe:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8004ac2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004ac6:	d131      	bne.n	8004b2c <HAL_PWREx_ControlVoltageScaling+0x80>
 8004ac8:	4b47      	ldr	r3, [pc, #284]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004aca:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004ace:	4a46      	ldr	r2, [pc, #280]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004ad0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004ad4:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004ad8:	4b43      	ldr	r3, [pc, #268]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004ada:	681b      	ldr	r3, [r3, #0]
 8004adc:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8004ae0:	4a41      	ldr	r2, [pc, #260]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004ae2:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004ae6:	6013      	str	r3, [r2, #0]
 8004ae8:	4b40      	ldr	r3, [pc, #256]	@ (8004bec <HAL_PWREx_ControlVoltageScaling+0x140>)
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	2232      	movs	r2, #50	@ 0x32
 8004aee:	fb02 f303 	mul.w	r3, r2, r3
 8004af2:	4a3f      	ldr	r2, [pc, #252]	@ (8004bf0 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8004af4:	fba2 2303 	umull	r2, r3, r2, r3
 8004af8:	0c9b      	lsrs	r3, r3, #18
 8004afa:	3301      	adds	r3, #1
 8004afc:	60fb      	str	r3, [r7, #12]
 8004afe:	e002      	b.n	8004b06 <HAL_PWREx_ControlVoltageScaling+0x5a>
 8004b00:	68fb      	ldr	r3, [r7, #12]
 8004b02:	3b01      	subs	r3, #1
 8004b04:	60fb      	str	r3, [r7, #12]
 8004b06:	4b38      	ldr	r3, [pc, #224]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004b08:	695b      	ldr	r3, [r3, #20]
 8004b0a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004b0e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004b12:	d102      	bne.n	8004b1a <HAL_PWREx_ControlVoltageScaling+0x6e>
 8004b14:	68fb      	ldr	r3, [r7, #12]
 8004b16:	2b00      	cmp	r3, #0
 8004b18:	d1f2      	bne.n	8004b00 <HAL_PWREx_ControlVoltageScaling+0x54>
 8004b1a:	4b33      	ldr	r3, [pc, #204]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004b1c:	695b      	ldr	r3, [r3, #20]
 8004b1e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004b22:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004b26:	d158      	bne.n	8004bda <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004b28:	2303      	movs	r3, #3
 8004b2a:	e057      	b.n	8004bdc <HAL_PWREx_ControlVoltageScaling+0x130>
 8004b2c:	4b2e      	ldr	r3, [pc, #184]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004b2e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004b32:	4a2d      	ldr	r2, [pc, #180]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004b34:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004b38:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004b3c:	e04d      	b.n	8004bda <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004b3e:	687b      	ldr	r3, [r7, #4]
 8004b40:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004b44:	d141      	bne.n	8004bca <HAL_PWREx_ControlVoltageScaling+0x11e>
 8004b46:	4b28      	ldr	r3, [pc, #160]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004b48:	681b      	ldr	r3, [r3, #0]
 8004b4a:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8004b4e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004b52:	d131      	bne.n	8004bb8 <HAL_PWREx_ControlVoltageScaling+0x10c>
 8004b54:	4b24      	ldr	r3, [pc, #144]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004b56:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004b5a:	4a23      	ldr	r2, [pc, #140]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004b5c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004b60:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004b64:	4b20      	ldr	r3, [pc, #128]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004b66:	681b      	ldr	r3, [r3, #0]
 8004b68:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8004b6c:	4a1e      	ldr	r2, [pc, #120]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004b6e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004b72:	6013      	str	r3, [r2, #0]
 8004b74:	4b1d      	ldr	r3, [pc, #116]	@ (8004bec <HAL_PWREx_ControlVoltageScaling+0x140>)
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	2232      	movs	r2, #50	@ 0x32
 8004b7a:	fb02 f303 	mul.w	r3, r2, r3
 8004b7e:	4a1c      	ldr	r2, [pc, #112]	@ (8004bf0 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8004b80:	fba2 2303 	umull	r2, r3, r2, r3
 8004b84:	0c9b      	lsrs	r3, r3, #18
 8004b86:	3301      	adds	r3, #1
 8004b88:	60fb      	str	r3, [r7, #12]
 8004b8a:	e002      	b.n	8004b92 <HAL_PWREx_ControlVoltageScaling+0xe6>
 8004b8c:	68fb      	ldr	r3, [r7, #12]
 8004b8e:	3b01      	subs	r3, #1
 8004b90:	60fb      	str	r3, [r7, #12]
 8004b92:	4b15      	ldr	r3, [pc, #84]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004b94:	695b      	ldr	r3, [r3, #20]
 8004b96:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004b9a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004b9e:	d102      	bne.n	8004ba6 <HAL_PWREx_ControlVoltageScaling+0xfa>
 8004ba0:	68fb      	ldr	r3, [r7, #12]
 8004ba2:	2b00      	cmp	r3, #0
 8004ba4:	d1f2      	bne.n	8004b8c <HAL_PWREx_ControlVoltageScaling+0xe0>
 8004ba6:	4b10      	ldr	r3, [pc, #64]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004ba8:	695b      	ldr	r3, [r3, #20]
 8004baa:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004bae:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004bb2:	d112      	bne.n	8004bda <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004bb4:	2303      	movs	r3, #3
 8004bb6:	e011      	b.n	8004bdc <HAL_PWREx_ControlVoltageScaling+0x130>
 8004bb8:	4b0b      	ldr	r3, [pc, #44]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004bba:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004bbe:	4a0a      	ldr	r2, [pc, #40]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004bc0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004bc4:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8004bc8:	e007      	b.n	8004bda <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004bca:	4b07      	ldr	r3, [pc, #28]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004bcc:	681b      	ldr	r3, [r3, #0]
 8004bce:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8004bd2:	4a05      	ldr	r2, [pc, #20]	@ (8004be8 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004bd4:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8004bd8:	6013      	str	r3, [r2, #0]
 8004bda:	2300      	movs	r3, #0
 8004bdc:	4618      	mov	r0, r3
 8004bde:	3714      	adds	r7, #20
 8004be0:	46bd      	mov	sp, r7
 8004be2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004be6:	4770      	bx	lr
 8004be8:	40007000 	.word	0x40007000
 8004bec:	20000000 	.word	0x20000000
 8004bf0:	431bde83 	.word	0x431bde83

08004bf4 <HAL_PWREx_DisableUCPDDeadBattery>:
 8004bf4:	b480      	push	{r7}
 8004bf6:	af00      	add	r7, sp, #0
 8004bf8:	4b05      	ldr	r3, [pc, #20]	@ (8004c10 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8004bfa:	689b      	ldr	r3, [r3, #8]
 8004bfc:	4a04      	ldr	r2, [pc, #16]	@ (8004c10 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8004bfe:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004c02:	6093      	str	r3, [r2, #8]
 8004c04:	bf00      	nop
 8004c06:	46bd      	mov	sp, r7
 8004c08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c0c:	4770      	bx	lr
 8004c0e:	bf00      	nop
 8004c10:	40007000 	.word	0x40007000

08004c14 <HAL_RCC_OscConfig>:
 8004c14:	b580      	push	{r7, lr}
 8004c16:	b088      	sub	sp, #32
 8004c18:	af00      	add	r7, sp, #0
 8004c1a:	6078      	str	r0, [r7, #4]
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	2b00      	cmp	r3, #0
 8004c20:	d101      	bne.n	8004c26 <HAL_RCC_OscConfig+0x12>
 8004c22:	2301      	movs	r3, #1
 8004c24:	e2fe      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	681b      	ldr	r3, [r3, #0]
 8004c2a:	f003 0301 	and.w	r3, r3, #1
 8004c2e:	2b00      	cmp	r3, #0
 8004c30:	d075      	beq.n	8004d1e <HAL_RCC_OscConfig+0x10a>
 8004c32:	4b97      	ldr	r3, [pc, #604]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004c34:	689b      	ldr	r3, [r3, #8]
 8004c36:	f003 030c 	and.w	r3, r3, #12
 8004c3a:	61bb      	str	r3, [r7, #24]
 8004c3c:	4b94      	ldr	r3, [pc, #592]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004c3e:	68db      	ldr	r3, [r3, #12]
 8004c40:	f003 0303 	and.w	r3, r3, #3
 8004c44:	617b      	str	r3, [r7, #20]
 8004c46:	69bb      	ldr	r3, [r7, #24]
 8004c48:	2b0c      	cmp	r3, #12
 8004c4a:	d102      	bne.n	8004c52 <HAL_RCC_OscConfig+0x3e>
 8004c4c:	697b      	ldr	r3, [r7, #20]
 8004c4e:	2b03      	cmp	r3, #3
 8004c50:	d002      	beq.n	8004c58 <HAL_RCC_OscConfig+0x44>
 8004c52:	69bb      	ldr	r3, [r7, #24]
 8004c54:	2b08      	cmp	r3, #8
 8004c56:	d10b      	bne.n	8004c70 <HAL_RCC_OscConfig+0x5c>
 8004c58:	4b8d      	ldr	r3, [pc, #564]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004c5a:	681b      	ldr	r3, [r3, #0]
 8004c5c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004c60:	2b00      	cmp	r3, #0
 8004c62:	d05b      	beq.n	8004d1c <HAL_RCC_OscConfig+0x108>
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	685b      	ldr	r3, [r3, #4]
 8004c68:	2b00      	cmp	r3, #0
 8004c6a:	d157      	bne.n	8004d1c <HAL_RCC_OscConfig+0x108>
 8004c6c:	2301      	movs	r3, #1
 8004c6e:	e2d9      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	685b      	ldr	r3, [r3, #4]
 8004c74:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004c78:	d106      	bne.n	8004c88 <HAL_RCC_OscConfig+0x74>
 8004c7a:	4b85      	ldr	r3, [pc, #532]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	4a84      	ldr	r2, [pc, #528]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004c80:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004c84:	6013      	str	r3, [r2, #0]
 8004c86:	e01d      	b.n	8004cc4 <HAL_RCC_OscConfig+0xb0>
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	685b      	ldr	r3, [r3, #4]
 8004c8c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004c90:	d10c      	bne.n	8004cac <HAL_RCC_OscConfig+0x98>
 8004c92:	4b7f      	ldr	r3, [pc, #508]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	4a7e      	ldr	r2, [pc, #504]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004c98:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004c9c:	6013      	str	r3, [r2, #0]
 8004c9e:	4b7c      	ldr	r3, [pc, #496]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004ca0:	681b      	ldr	r3, [r3, #0]
 8004ca2:	4a7b      	ldr	r2, [pc, #492]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004ca4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004ca8:	6013      	str	r3, [r2, #0]
 8004caa:	e00b      	b.n	8004cc4 <HAL_RCC_OscConfig+0xb0>
 8004cac:	4b78      	ldr	r3, [pc, #480]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004cae:	681b      	ldr	r3, [r3, #0]
 8004cb0:	4a77      	ldr	r2, [pc, #476]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004cb2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004cb6:	6013      	str	r3, [r2, #0]
 8004cb8:	4b75      	ldr	r3, [pc, #468]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004cba:	681b      	ldr	r3, [r3, #0]
 8004cbc:	4a74      	ldr	r2, [pc, #464]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004cbe:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004cc2:	6013      	str	r3, [r2, #0]
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	685b      	ldr	r3, [r3, #4]
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	d013      	beq.n	8004cf4 <HAL_RCC_OscConfig+0xe0>
 8004ccc:	f7fd f9c0 	bl	8002050 <HAL_GetTick>
 8004cd0:	6138      	str	r0, [r7, #16]
 8004cd2:	e008      	b.n	8004ce6 <HAL_RCC_OscConfig+0xd2>
 8004cd4:	f7fd f9bc 	bl	8002050 <HAL_GetTick>
 8004cd8:	4602      	mov	r2, r0
 8004cda:	693b      	ldr	r3, [r7, #16]
 8004cdc:	1ad3      	subs	r3, r2, r3
 8004cde:	2b64      	cmp	r3, #100	@ 0x64
 8004ce0:	d901      	bls.n	8004ce6 <HAL_RCC_OscConfig+0xd2>
 8004ce2:	2303      	movs	r3, #3
 8004ce4:	e29e      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004ce6:	4b6a      	ldr	r3, [pc, #424]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004ce8:	681b      	ldr	r3, [r3, #0]
 8004cea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004cee:	2b00      	cmp	r3, #0
 8004cf0:	d0f0      	beq.n	8004cd4 <HAL_RCC_OscConfig+0xc0>
 8004cf2:	e014      	b.n	8004d1e <HAL_RCC_OscConfig+0x10a>
 8004cf4:	f7fd f9ac 	bl	8002050 <HAL_GetTick>
 8004cf8:	6138      	str	r0, [r7, #16]
 8004cfa:	e008      	b.n	8004d0e <HAL_RCC_OscConfig+0xfa>
 8004cfc:	f7fd f9a8 	bl	8002050 <HAL_GetTick>
 8004d00:	4602      	mov	r2, r0
 8004d02:	693b      	ldr	r3, [r7, #16]
 8004d04:	1ad3      	subs	r3, r2, r3
 8004d06:	2b64      	cmp	r3, #100	@ 0x64
 8004d08:	d901      	bls.n	8004d0e <HAL_RCC_OscConfig+0xfa>
 8004d0a:	2303      	movs	r3, #3
 8004d0c:	e28a      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004d0e:	4b60      	ldr	r3, [pc, #384]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d1f0      	bne.n	8004cfc <HAL_RCC_OscConfig+0xe8>
 8004d1a:	e000      	b.n	8004d1e <HAL_RCC_OscConfig+0x10a>
 8004d1c:	bf00      	nop
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	f003 0302 	and.w	r3, r3, #2
 8004d26:	2b00      	cmp	r3, #0
 8004d28:	d075      	beq.n	8004e16 <HAL_RCC_OscConfig+0x202>
 8004d2a:	4b59      	ldr	r3, [pc, #356]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004d2c:	689b      	ldr	r3, [r3, #8]
 8004d2e:	f003 030c 	and.w	r3, r3, #12
 8004d32:	61bb      	str	r3, [r7, #24]
 8004d34:	4b56      	ldr	r3, [pc, #344]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004d36:	68db      	ldr	r3, [r3, #12]
 8004d38:	f003 0303 	and.w	r3, r3, #3
 8004d3c:	617b      	str	r3, [r7, #20]
 8004d3e:	69bb      	ldr	r3, [r7, #24]
 8004d40:	2b0c      	cmp	r3, #12
 8004d42:	d102      	bne.n	8004d4a <HAL_RCC_OscConfig+0x136>
 8004d44:	697b      	ldr	r3, [r7, #20]
 8004d46:	2b02      	cmp	r3, #2
 8004d48:	d002      	beq.n	8004d50 <HAL_RCC_OscConfig+0x13c>
 8004d4a:	69bb      	ldr	r3, [r7, #24]
 8004d4c:	2b04      	cmp	r3, #4
 8004d4e:	d11f      	bne.n	8004d90 <HAL_RCC_OscConfig+0x17c>
 8004d50:	4b4f      	ldr	r3, [pc, #316]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004d52:	681b      	ldr	r3, [r3, #0]
 8004d54:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004d58:	2b00      	cmp	r3, #0
 8004d5a:	d005      	beq.n	8004d68 <HAL_RCC_OscConfig+0x154>
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	68db      	ldr	r3, [r3, #12]
 8004d60:	2b00      	cmp	r3, #0
 8004d62:	d101      	bne.n	8004d68 <HAL_RCC_OscConfig+0x154>
 8004d64:	2301      	movs	r3, #1
 8004d66:	e25d      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004d68:	4b49      	ldr	r3, [pc, #292]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004d6a:	685b      	ldr	r3, [r3, #4]
 8004d6c:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8004d70:	687b      	ldr	r3, [r7, #4]
 8004d72:	691b      	ldr	r3, [r3, #16]
 8004d74:	061b      	lsls	r3, r3, #24
 8004d76:	4946      	ldr	r1, [pc, #280]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004d78:	4313      	orrs	r3, r2
 8004d7a:	604b      	str	r3, [r1, #4]
 8004d7c:	4b45      	ldr	r3, [pc, #276]	@ (8004e94 <HAL_RCC_OscConfig+0x280>)
 8004d7e:	681b      	ldr	r3, [r3, #0]
 8004d80:	4618      	mov	r0, r3
 8004d82:	f7fd f919 	bl	8001fb8 <HAL_InitTick>
 8004d86:	4603      	mov	r3, r0
 8004d88:	2b00      	cmp	r3, #0
 8004d8a:	d043      	beq.n	8004e14 <HAL_RCC_OscConfig+0x200>
 8004d8c:	2301      	movs	r3, #1
 8004d8e:	e249      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	68db      	ldr	r3, [r3, #12]
 8004d94:	2b00      	cmp	r3, #0
 8004d96:	d023      	beq.n	8004de0 <HAL_RCC_OscConfig+0x1cc>
 8004d98:	4b3d      	ldr	r3, [pc, #244]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	4a3c      	ldr	r2, [pc, #240]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004d9e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004da2:	6013      	str	r3, [r2, #0]
 8004da4:	f7fd f954 	bl	8002050 <HAL_GetTick>
 8004da8:	6138      	str	r0, [r7, #16]
 8004daa:	e008      	b.n	8004dbe <HAL_RCC_OscConfig+0x1aa>
 8004dac:	f7fd f950 	bl	8002050 <HAL_GetTick>
 8004db0:	4602      	mov	r2, r0
 8004db2:	693b      	ldr	r3, [r7, #16]
 8004db4:	1ad3      	subs	r3, r2, r3
 8004db6:	2b02      	cmp	r3, #2
 8004db8:	d901      	bls.n	8004dbe <HAL_RCC_OscConfig+0x1aa>
 8004dba:	2303      	movs	r3, #3
 8004dbc:	e232      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004dbe:	4b34      	ldr	r3, [pc, #208]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004dc0:	681b      	ldr	r3, [r3, #0]
 8004dc2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004dc6:	2b00      	cmp	r3, #0
 8004dc8:	d0f0      	beq.n	8004dac <HAL_RCC_OscConfig+0x198>
 8004dca:	4b31      	ldr	r3, [pc, #196]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004dcc:	685b      	ldr	r3, [r3, #4]
 8004dce:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	691b      	ldr	r3, [r3, #16]
 8004dd6:	061b      	lsls	r3, r3, #24
 8004dd8:	492d      	ldr	r1, [pc, #180]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004dda:	4313      	orrs	r3, r2
 8004ddc:	604b      	str	r3, [r1, #4]
 8004dde:	e01a      	b.n	8004e16 <HAL_RCC_OscConfig+0x202>
 8004de0:	4b2b      	ldr	r3, [pc, #172]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	4a2a      	ldr	r2, [pc, #168]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004de6:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004dea:	6013      	str	r3, [r2, #0]
 8004dec:	f7fd f930 	bl	8002050 <HAL_GetTick>
 8004df0:	6138      	str	r0, [r7, #16]
 8004df2:	e008      	b.n	8004e06 <HAL_RCC_OscConfig+0x1f2>
 8004df4:	f7fd f92c 	bl	8002050 <HAL_GetTick>
 8004df8:	4602      	mov	r2, r0
 8004dfa:	693b      	ldr	r3, [r7, #16]
 8004dfc:	1ad3      	subs	r3, r2, r3
 8004dfe:	2b02      	cmp	r3, #2
 8004e00:	d901      	bls.n	8004e06 <HAL_RCC_OscConfig+0x1f2>
 8004e02:	2303      	movs	r3, #3
 8004e04:	e20e      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004e06:	4b22      	ldr	r3, [pc, #136]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004e08:	681b      	ldr	r3, [r3, #0]
 8004e0a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004e0e:	2b00      	cmp	r3, #0
 8004e10:	d1f0      	bne.n	8004df4 <HAL_RCC_OscConfig+0x1e0>
 8004e12:	e000      	b.n	8004e16 <HAL_RCC_OscConfig+0x202>
 8004e14:	bf00      	nop
 8004e16:	687b      	ldr	r3, [r7, #4]
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	f003 0308 	and.w	r3, r3, #8
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	d041      	beq.n	8004ea6 <HAL_RCC_OscConfig+0x292>
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	695b      	ldr	r3, [r3, #20]
 8004e26:	2b00      	cmp	r3, #0
 8004e28:	d01c      	beq.n	8004e64 <HAL_RCC_OscConfig+0x250>
 8004e2a:	4b19      	ldr	r3, [pc, #100]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004e2c:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004e30:	4a17      	ldr	r2, [pc, #92]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004e32:	f043 0301 	orr.w	r3, r3, #1
 8004e36:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8004e3a:	f7fd f909 	bl	8002050 <HAL_GetTick>
 8004e3e:	6138      	str	r0, [r7, #16]
 8004e40:	e008      	b.n	8004e54 <HAL_RCC_OscConfig+0x240>
 8004e42:	f7fd f905 	bl	8002050 <HAL_GetTick>
 8004e46:	4602      	mov	r2, r0
 8004e48:	693b      	ldr	r3, [r7, #16]
 8004e4a:	1ad3      	subs	r3, r2, r3
 8004e4c:	2b02      	cmp	r3, #2
 8004e4e:	d901      	bls.n	8004e54 <HAL_RCC_OscConfig+0x240>
 8004e50:	2303      	movs	r3, #3
 8004e52:	e1e7      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004e54:	4b0e      	ldr	r3, [pc, #56]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004e56:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004e5a:	f003 0302 	and.w	r3, r3, #2
 8004e5e:	2b00      	cmp	r3, #0
 8004e60:	d0ef      	beq.n	8004e42 <HAL_RCC_OscConfig+0x22e>
 8004e62:	e020      	b.n	8004ea6 <HAL_RCC_OscConfig+0x292>
 8004e64:	4b0a      	ldr	r3, [pc, #40]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004e66:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004e6a:	4a09      	ldr	r2, [pc, #36]	@ (8004e90 <HAL_RCC_OscConfig+0x27c>)
 8004e6c:	f023 0301 	bic.w	r3, r3, #1
 8004e70:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8004e74:	f7fd f8ec 	bl	8002050 <HAL_GetTick>
 8004e78:	6138      	str	r0, [r7, #16]
 8004e7a:	e00d      	b.n	8004e98 <HAL_RCC_OscConfig+0x284>
 8004e7c:	f7fd f8e8 	bl	8002050 <HAL_GetTick>
 8004e80:	4602      	mov	r2, r0
 8004e82:	693b      	ldr	r3, [r7, #16]
 8004e84:	1ad3      	subs	r3, r2, r3
 8004e86:	2b02      	cmp	r3, #2
 8004e88:	d906      	bls.n	8004e98 <HAL_RCC_OscConfig+0x284>
 8004e8a:	2303      	movs	r3, #3
 8004e8c:	e1ca      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004e8e:	bf00      	nop
 8004e90:	40021000 	.word	0x40021000
 8004e94:	20000004 	.word	0x20000004
 8004e98:	4b8c      	ldr	r3, [pc, #560]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004e9a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004e9e:	f003 0302 	and.w	r3, r3, #2
 8004ea2:	2b00      	cmp	r3, #0
 8004ea4:	d1ea      	bne.n	8004e7c <HAL_RCC_OscConfig+0x268>
 8004ea6:	687b      	ldr	r3, [r7, #4]
 8004ea8:	681b      	ldr	r3, [r3, #0]
 8004eaa:	f003 0304 	and.w	r3, r3, #4
 8004eae:	2b00      	cmp	r3, #0
 8004eb0:	f000 80a6 	beq.w	8005000 <HAL_RCC_OscConfig+0x3ec>
 8004eb4:	2300      	movs	r3, #0
 8004eb6:	77fb      	strb	r3, [r7, #31]
 8004eb8:	4b84      	ldr	r3, [pc, #528]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004eba:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004ebc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004ec0:	2b00      	cmp	r3, #0
 8004ec2:	d101      	bne.n	8004ec8 <HAL_RCC_OscConfig+0x2b4>
 8004ec4:	2301      	movs	r3, #1
 8004ec6:	e000      	b.n	8004eca <HAL_RCC_OscConfig+0x2b6>
 8004ec8:	2300      	movs	r3, #0
 8004eca:	2b00      	cmp	r3, #0
 8004ecc:	d00d      	beq.n	8004eea <HAL_RCC_OscConfig+0x2d6>
 8004ece:	4b7f      	ldr	r3, [pc, #508]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004ed0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004ed2:	4a7e      	ldr	r2, [pc, #504]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004ed4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004ed8:	6593      	str	r3, [r2, #88]	@ 0x58
 8004eda:	4b7c      	ldr	r3, [pc, #496]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004edc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004ede:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004ee2:	60fb      	str	r3, [r7, #12]
 8004ee4:	68fb      	ldr	r3, [r7, #12]
 8004ee6:	2301      	movs	r3, #1
 8004ee8:	77fb      	strb	r3, [r7, #31]
 8004eea:	4b79      	ldr	r3, [pc, #484]	@ (80050d0 <HAL_RCC_OscConfig+0x4bc>)
 8004eec:	681b      	ldr	r3, [r3, #0]
 8004eee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004ef2:	2b00      	cmp	r3, #0
 8004ef4:	d118      	bne.n	8004f28 <HAL_RCC_OscConfig+0x314>
 8004ef6:	4b76      	ldr	r3, [pc, #472]	@ (80050d0 <HAL_RCC_OscConfig+0x4bc>)
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	4a75      	ldr	r2, [pc, #468]	@ (80050d0 <HAL_RCC_OscConfig+0x4bc>)
 8004efc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004f00:	6013      	str	r3, [r2, #0]
 8004f02:	f7fd f8a5 	bl	8002050 <HAL_GetTick>
 8004f06:	6138      	str	r0, [r7, #16]
 8004f08:	e008      	b.n	8004f1c <HAL_RCC_OscConfig+0x308>
 8004f0a:	f7fd f8a1 	bl	8002050 <HAL_GetTick>
 8004f0e:	4602      	mov	r2, r0
 8004f10:	693b      	ldr	r3, [r7, #16]
 8004f12:	1ad3      	subs	r3, r2, r3
 8004f14:	2b02      	cmp	r3, #2
 8004f16:	d901      	bls.n	8004f1c <HAL_RCC_OscConfig+0x308>
 8004f18:	2303      	movs	r3, #3
 8004f1a:	e183      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004f1c:	4b6c      	ldr	r3, [pc, #432]	@ (80050d0 <HAL_RCC_OscConfig+0x4bc>)
 8004f1e:	681b      	ldr	r3, [r3, #0]
 8004f20:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004f24:	2b00      	cmp	r3, #0
 8004f26:	d0f0      	beq.n	8004f0a <HAL_RCC_OscConfig+0x2f6>
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	689b      	ldr	r3, [r3, #8]
 8004f2c:	2b01      	cmp	r3, #1
 8004f2e:	d108      	bne.n	8004f42 <HAL_RCC_OscConfig+0x32e>
 8004f30:	4b66      	ldr	r3, [pc, #408]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004f32:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004f36:	4a65      	ldr	r2, [pc, #404]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004f38:	f043 0301 	orr.w	r3, r3, #1
 8004f3c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004f40:	e024      	b.n	8004f8c <HAL_RCC_OscConfig+0x378>
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	689b      	ldr	r3, [r3, #8]
 8004f46:	2b05      	cmp	r3, #5
 8004f48:	d110      	bne.n	8004f6c <HAL_RCC_OscConfig+0x358>
 8004f4a:	4b60      	ldr	r3, [pc, #384]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004f4c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004f50:	4a5e      	ldr	r2, [pc, #376]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004f52:	f043 0304 	orr.w	r3, r3, #4
 8004f56:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004f5a:	4b5c      	ldr	r3, [pc, #368]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004f5c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004f60:	4a5a      	ldr	r2, [pc, #360]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004f62:	f043 0301 	orr.w	r3, r3, #1
 8004f66:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004f6a:	e00f      	b.n	8004f8c <HAL_RCC_OscConfig+0x378>
 8004f6c:	4b57      	ldr	r3, [pc, #348]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004f6e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004f72:	4a56      	ldr	r2, [pc, #344]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004f74:	f023 0301 	bic.w	r3, r3, #1
 8004f78:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004f7c:	4b53      	ldr	r3, [pc, #332]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004f7e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004f82:	4a52      	ldr	r2, [pc, #328]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004f84:	f023 0304 	bic.w	r3, r3, #4
 8004f88:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	689b      	ldr	r3, [r3, #8]
 8004f90:	2b00      	cmp	r3, #0
 8004f92:	d016      	beq.n	8004fc2 <HAL_RCC_OscConfig+0x3ae>
 8004f94:	f7fd f85c 	bl	8002050 <HAL_GetTick>
 8004f98:	6138      	str	r0, [r7, #16]
 8004f9a:	e00a      	b.n	8004fb2 <HAL_RCC_OscConfig+0x39e>
 8004f9c:	f7fd f858 	bl	8002050 <HAL_GetTick>
 8004fa0:	4602      	mov	r2, r0
 8004fa2:	693b      	ldr	r3, [r7, #16]
 8004fa4:	1ad3      	subs	r3, r2, r3
 8004fa6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004faa:	4293      	cmp	r3, r2
 8004fac:	d901      	bls.n	8004fb2 <HAL_RCC_OscConfig+0x39e>
 8004fae:	2303      	movs	r3, #3
 8004fb0:	e138      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004fb2:	4b46      	ldr	r3, [pc, #280]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004fb4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004fb8:	f003 0302 	and.w	r3, r3, #2
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	d0ed      	beq.n	8004f9c <HAL_RCC_OscConfig+0x388>
 8004fc0:	e015      	b.n	8004fee <HAL_RCC_OscConfig+0x3da>
 8004fc2:	f7fd f845 	bl	8002050 <HAL_GetTick>
 8004fc6:	6138      	str	r0, [r7, #16]
 8004fc8:	e00a      	b.n	8004fe0 <HAL_RCC_OscConfig+0x3cc>
 8004fca:	f7fd f841 	bl	8002050 <HAL_GetTick>
 8004fce:	4602      	mov	r2, r0
 8004fd0:	693b      	ldr	r3, [r7, #16]
 8004fd2:	1ad3      	subs	r3, r2, r3
 8004fd4:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004fd8:	4293      	cmp	r3, r2
 8004fda:	d901      	bls.n	8004fe0 <HAL_RCC_OscConfig+0x3cc>
 8004fdc:	2303      	movs	r3, #3
 8004fde:	e121      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8004fe0:	4b3a      	ldr	r3, [pc, #232]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004fe2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004fe6:	f003 0302 	and.w	r3, r3, #2
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	d1ed      	bne.n	8004fca <HAL_RCC_OscConfig+0x3b6>
 8004fee:	7ffb      	ldrb	r3, [r7, #31]
 8004ff0:	2b01      	cmp	r3, #1
 8004ff2:	d105      	bne.n	8005000 <HAL_RCC_OscConfig+0x3ec>
 8004ff4:	4b35      	ldr	r3, [pc, #212]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004ff6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004ff8:	4a34      	ldr	r2, [pc, #208]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8004ffa:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004ffe:	6593      	str	r3, [r2, #88]	@ 0x58
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	681b      	ldr	r3, [r3, #0]
 8005004:	f003 0320 	and.w	r3, r3, #32
 8005008:	2b00      	cmp	r3, #0
 800500a:	d03c      	beq.n	8005086 <HAL_RCC_OscConfig+0x472>
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	699b      	ldr	r3, [r3, #24]
 8005010:	2b00      	cmp	r3, #0
 8005012:	d01c      	beq.n	800504e <HAL_RCC_OscConfig+0x43a>
 8005014:	4b2d      	ldr	r3, [pc, #180]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8005016:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800501a:	4a2c      	ldr	r2, [pc, #176]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 800501c:	f043 0301 	orr.w	r3, r3, #1
 8005020:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8005024:	f7fd f814 	bl	8002050 <HAL_GetTick>
 8005028:	6138      	str	r0, [r7, #16]
 800502a:	e008      	b.n	800503e <HAL_RCC_OscConfig+0x42a>
 800502c:	f7fd f810 	bl	8002050 <HAL_GetTick>
 8005030:	4602      	mov	r2, r0
 8005032:	693b      	ldr	r3, [r7, #16]
 8005034:	1ad3      	subs	r3, r2, r3
 8005036:	2b02      	cmp	r3, #2
 8005038:	d901      	bls.n	800503e <HAL_RCC_OscConfig+0x42a>
 800503a:	2303      	movs	r3, #3
 800503c:	e0f2      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 800503e:	4b23      	ldr	r3, [pc, #140]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8005040:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005044:	f003 0302 	and.w	r3, r3, #2
 8005048:	2b00      	cmp	r3, #0
 800504a:	d0ef      	beq.n	800502c <HAL_RCC_OscConfig+0x418>
 800504c:	e01b      	b.n	8005086 <HAL_RCC_OscConfig+0x472>
 800504e:	4b1f      	ldr	r3, [pc, #124]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8005050:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005054:	4a1d      	ldr	r2, [pc, #116]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8005056:	f023 0301 	bic.w	r3, r3, #1
 800505a:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 800505e:	f7fc fff7 	bl	8002050 <HAL_GetTick>
 8005062:	6138      	str	r0, [r7, #16]
 8005064:	e008      	b.n	8005078 <HAL_RCC_OscConfig+0x464>
 8005066:	f7fc fff3 	bl	8002050 <HAL_GetTick>
 800506a:	4602      	mov	r2, r0
 800506c:	693b      	ldr	r3, [r7, #16]
 800506e:	1ad3      	subs	r3, r2, r3
 8005070:	2b02      	cmp	r3, #2
 8005072:	d901      	bls.n	8005078 <HAL_RCC_OscConfig+0x464>
 8005074:	2303      	movs	r3, #3
 8005076:	e0d5      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8005078:	4b14      	ldr	r3, [pc, #80]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 800507a:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800507e:	f003 0302 	and.w	r3, r3, #2
 8005082:	2b00      	cmp	r3, #0
 8005084:	d1ef      	bne.n	8005066 <HAL_RCC_OscConfig+0x452>
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	69db      	ldr	r3, [r3, #28]
 800508a:	2b00      	cmp	r3, #0
 800508c:	f000 80c9 	beq.w	8005222 <HAL_RCC_OscConfig+0x60e>
 8005090:	4b0e      	ldr	r3, [pc, #56]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 8005092:	689b      	ldr	r3, [r3, #8]
 8005094:	f003 030c 	and.w	r3, r3, #12
 8005098:	2b0c      	cmp	r3, #12
 800509a:	f000 8083 	beq.w	80051a4 <HAL_RCC_OscConfig+0x590>
 800509e:	687b      	ldr	r3, [r7, #4]
 80050a0:	69db      	ldr	r3, [r3, #28]
 80050a2:	2b02      	cmp	r3, #2
 80050a4:	d15e      	bne.n	8005164 <HAL_RCC_OscConfig+0x550>
 80050a6:	4b09      	ldr	r3, [pc, #36]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 80050a8:	681b      	ldr	r3, [r3, #0]
 80050aa:	4a08      	ldr	r2, [pc, #32]	@ (80050cc <HAL_RCC_OscConfig+0x4b8>)
 80050ac:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80050b0:	6013      	str	r3, [r2, #0]
 80050b2:	f7fc ffcd 	bl	8002050 <HAL_GetTick>
 80050b6:	6138      	str	r0, [r7, #16]
 80050b8:	e00c      	b.n	80050d4 <HAL_RCC_OscConfig+0x4c0>
 80050ba:	f7fc ffc9 	bl	8002050 <HAL_GetTick>
 80050be:	4602      	mov	r2, r0
 80050c0:	693b      	ldr	r3, [r7, #16]
 80050c2:	1ad3      	subs	r3, r2, r3
 80050c4:	2b02      	cmp	r3, #2
 80050c6:	d905      	bls.n	80050d4 <HAL_RCC_OscConfig+0x4c0>
 80050c8:	2303      	movs	r3, #3
 80050ca:	e0ab      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 80050cc:	40021000 	.word	0x40021000
 80050d0:	40007000 	.word	0x40007000
 80050d4:	4b55      	ldr	r3, [pc, #340]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 80050d6:	681b      	ldr	r3, [r3, #0]
 80050d8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80050dc:	2b00      	cmp	r3, #0
 80050de:	d1ec      	bne.n	80050ba <HAL_RCC_OscConfig+0x4a6>
 80050e0:	4b52      	ldr	r3, [pc, #328]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 80050e2:	68da      	ldr	r2, [r3, #12]
 80050e4:	4b52      	ldr	r3, [pc, #328]	@ (8005230 <HAL_RCC_OscConfig+0x61c>)
 80050e6:	4013      	ands	r3, r2
 80050e8:	687a      	ldr	r2, [r7, #4]
 80050ea:	6a11      	ldr	r1, [r2, #32]
 80050ec:	687a      	ldr	r2, [r7, #4]
 80050ee:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80050f0:	3a01      	subs	r2, #1
 80050f2:	0112      	lsls	r2, r2, #4
 80050f4:	4311      	orrs	r1, r2
 80050f6:	687a      	ldr	r2, [r7, #4]
 80050f8:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 80050fa:	0212      	lsls	r2, r2, #8
 80050fc:	4311      	orrs	r1, r2
 80050fe:	687a      	ldr	r2, [r7, #4]
 8005100:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8005102:	0852      	lsrs	r2, r2, #1
 8005104:	3a01      	subs	r2, #1
 8005106:	0552      	lsls	r2, r2, #21
 8005108:	4311      	orrs	r1, r2
 800510a:	687a      	ldr	r2, [r7, #4]
 800510c:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800510e:	0852      	lsrs	r2, r2, #1
 8005110:	3a01      	subs	r2, #1
 8005112:	0652      	lsls	r2, r2, #25
 8005114:	4311      	orrs	r1, r2
 8005116:	687a      	ldr	r2, [r7, #4]
 8005118:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800511a:	06d2      	lsls	r2, r2, #27
 800511c:	430a      	orrs	r2, r1
 800511e:	4943      	ldr	r1, [pc, #268]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 8005120:	4313      	orrs	r3, r2
 8005122:	60cb      	str	r3, [r1, #12]
 8005124:	4b41      	ldr	r3, [pc, #260]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 8005126:	681b      	ldr	r3, [r3, #0]
 8005128:	4a40      	ldr	r2, [pc, #256]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 800512a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800512e:	6013      	str	r3, [r2, #0]
 8005130:	4b3e      	ldr	r3, [pc, #248]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 8005132:	68db      	ldr	r3, [r3, #12]
 8005134:	4a3d      	ldr	r2, [pc, #244]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 8005136:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800513a:	60d3      	str	r3, [r2, #12]
 800513c:	f7fc ff88 	bl	8002050 <HAL_GetTick>
 8005140:	6138      	str	r0, [r7, #16]
 8005142:	e008      	b.n	8005156 <HAL_RCC_OscConfig+0x542>
 8005144:	f7fc ff84 	bl	8002050 <HAL_GetTick>
 8005148:	4602      	mov	r2, r0
 800514a:	693b      	ldr	r3, [r7, #16]
 800514c:	1ad3      	subs	r3, r2, r3
 800514e:	2b02      	cmp	r3, #2
 8005150:	d901      	bls.n	8005156 <HAL_RCC_OscConfig+0x542>
 8005152:	2303      	movs	r3, #3
 8005154:	e066      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8005156:	4b35      	ldr	r3, [pc, #212]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 8005158:	681b      	ldr	r3, [r3, #0]
 800515a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800515e:	2b00      	cmp	r3, #0
 8005160:	d0f0      	beq.n	8005144 <HAL_RCC_OscConfig+0x530>
 8005162:	e05e      	b.n	8005222 <HAL_RCC_OscConfig+0x60e>
 8005164:	4b31      	ldr	r3, [pc, #196]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 8005166:	681b      	ldr	r3, [r3, #0]
 8005168:	4a30      	ldr	r2, [pc, #192]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 800516a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800516e:	6013      	str	r3, [r2, #0]
 8005170:	f7fc ff6e 	bl	8002050 <HAL_GetTick>
 8005174:	6138      	str	r0, [r7, #16]
 8005176:	e008      	b.n	800518a <HAL_RCC_OscConfig+0x576>
 8005178:	f7fc ff6a 	bl	8002050 <HAL_GetTick>
 800517c:	4602      	mov	r2, r0
 800517e:	693b      	ldr	r3, [r7, #16]
 8005180:	1ad3      	subs	r3, r2, r3
 8005182:	2b02      	cmp	r3, #2
 8005184:	d901      	bls.n	800518a <HAL_RCC_OscConfig+0x576>
 8005186:	2303      	movs	r3, #3
 8005188:	e04c      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 800518a:	4b28      	ldr	r3, [pc, #160]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005192:	2b00      	cmp	r3, #0
 8005194:	d1f0      	bne.n	8005178 <HAL_RCC_OscConfig+0x564>
 8005196:	4b25      	ldr	r3, [pc, #148]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 8005198:	68da      	ldr	r2, [r3, #12]
 800519a:	4924      	ldr	r1, [pc, #144]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 800519c:	4b25      	ldr	r3, [pc, #148]	@ (8005234 <HAL_RCC_OscConfig+0x620>)
 800519e:	4013      	ands	r3, r2
 80051a0:	60cb      	str	r3, [r1, #12]
 80051a2:	e03e      	b.n	8005222 <HAL_RCC_OscConfig+0x60e>
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	69db      	ldr	r3, [r3, #28]
 80051a8:	2b01      	cmp	r3, #1
 80051aa:	d101      	bne.n	80051b0 <HAL_RCC_OscConfig+0x59c>
 80051ac:	2301      	movs	r3, #1
 80051ae:	e039      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 80051b0:	4b1e      	ldr	r3, [pc, #120]	@ (800522c <HAL_RCC_OscConfig+0x618>)
 80051b2:	68db      	ldr	r3, [r3, #12]
 80051b4:	617b      	str	r3, [r7, #20]
 80051b6:	697b      	ldr	r3, [r7, #20]
 80051b8:	f003 0203 	and.w	r2, r3, #3
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	6a1b      	ldr	r3, [r3, #32]
 80051c0:	429a      	cmp	r2, r3
 80051c2:	d12c      	bne.n	800521e <HAL_RCC_OscConfig+0x60a>
 80051c4:	697b      	ldr	r3, [r7, #20]
 80051c6:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051ce:	3b01      	subs	r3, #1
 80051d0:	011b      	lsls	r3, r3, #4
 80051d2:	429a      	cmp	r2, r3
 80051d4:	d123      	bne.n	800521e <HAL_RCC_OscConfig+0x60a>
 80051d6:	697b      	ldr	r3, [r7, #20]
 80051d8:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80051e0:	021b      	lsls	r3, r3, #8
 80051e2:	429a      	cmp	r2, r3
 80051e4:	d11b      	bne.n	800521e <HAL_RCC_OscConfig+0x60a>
 80051e6:	697b      	ldr	r3, [r7, #20]
 80051e8:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80051f0:	06db      	lsls	r3, r3, #27
 80051f2:	429a      	cmp	r2, r3
 80051f4:	d113      	bne.n	800521e <HAL_RCC_OscConfig+0x60a>
 80051f6:	697b      	ldr	r3, [r7, #20]
 80051f8:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005200:	085b      	lsrs	r3, r3, #1
 8005202:	3b01      	subs	r3, #1
 8005204:	055b      	lsls	r3, r3, #21
 8005206:	429a      	cmp	r2, r3
 8005208:	d109      	bne.n	800521e <HAL_RCC_OscConfig+0x60a>
 800520a:	697b      	ldr	r3, [r7, #20]
 800520c:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005214:	085b      	lsrs	r3, r3, #1
 8005216:	3b01      	subs	r3, #1
 8005218:	065b      	lsls	r3, r3, #25
 800521a:	429a      	cmp	r2, r3
 800521c:	d001      	beq.n	8005222 <HAL_RCC_OscConfig+0x60e>
 800521e:	2301      	movs	r3, #1
 8005220:	e000      	b.n	8005224 <HAL_RCC_OscConfig+0x610>
 8005222:	2300      	movs	r3, #0
 8005224:	4618      	mov	r0, r3
 8005226:	3720      	adds	r7, #32
 8005228:	46bd      	mov	sp, r7
 800522a:	bd80      	pop	{r7, pc}
 800522c:	40021000 	.word	0x40021000
 8005230:	019f800c 	.word	0x019f800c
 8005234:	feeefffc 	.word	0xfeeefffc

08005238 <HAL_RCC_ClockConfig>:
 8005238:	b580      	push	{r7, lr}
 800523a:	b086      	sub	sp, #24
 800523c:	af00      	add	r7, sp, #0
 800523e:	6078      	str	r0, [r7, #4]
 8005240:	6039      	str	r1, [r7, #0]
 8005242:	2300      	movs	r3, #0
 8005244:	617b      	str	r3, [r7, #20]
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	2b00      	cmp	r3, #0
 800524a:	d101      	bne.n	8005250 <HAL_RCC_ClockConfig+0x18>
 800524c:	2301      	movs	r3, #1
 800524e:	e11e      	b.n	800548e <HAL_RCC_ClockConfig+0x256>
 8005250:	4b91      	ldr	r3, [pc, #580]	@ (8005498 <HAL_RCC_ClockConfig+0x260>)
 8005252:	681b      	ldr	r3, [r3, #0]
 8005254:	f003 030f 	and.w	r3, r3, #15
 8005258:	683a      	ldr	r2, [r7, #0]
 800525a:	429a      	cmp	r2, r3
 800525c:	d910      	bls.n	8005280 <HAL_RCC_ClockConfig+0x48>
 800525e:	4b8e      	ldr	r3, [pc, #568]	@ (8005498 <HAL_RCC_ClockConfig+0x260>)
 8005260:	681b      	ldr	r3, [r3, #0]
 8005262:	f023 020f 	bic.w	r2, r3, #15
 8005266:	498c      	ldr	r1, [pc, #560]	@ (8005498 <HAL_RCC_ClockConfig+0x260>)
 8005268:	683b      	ldr	r3, [r7, #0]
 800526a:	4313      	orrs	r3, r2
 800526c:	600b      	str	r3, [r1, #0]
 800526e:	4b8a      	ldr	r3, [pc, #552]	@ (8005498 <HAL_RCC_ClockConfig+0x260>)
 8005270:	681b      	ldr	r3, [r3, #0]
 8005272:	f003 030f 	and.w	r3, r3, #15
 8005276:	683a      	ldr	r2, [r7, #0]
 8005278:	429a      	cmp	r2, r3
 800527a:	d001      	beq.n	8005280 <HAL_RCC_ClockConfig+0x48>
 800527c:	2301      	movs	r3, #1
 800527e:	e106      	b.n	800548e <HAL_RCC_ClockConfig+0x256>
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	681b      	ldr	r3, [r3, #0]
 8005284:	f003 0301 	and.w	r3, r3, #1
 8005288:	2b00      	cmp	r3, #0
 800528a:	d073      	beq.n	8005374 <HAL_RCC_ClockConfig+0x13c>
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	685b      	ldr	r3, [r3, #4]
 8005290:	2b03      	cmp	r3, #3
 8005292:	d129      	bne.n	80052e8 <HAL_RCC_ClockConfig+0xb0>
 8005294:	4b81      	ldr	r3, [pc, #516]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 8005296:	681b      	ldr	r3, [r3, #0]
 8005298:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800529c:	2b00      	cmp	r3, #0
 800529e:	d101      	bne.n	80052a4 <HAL_RCC_ClockConfig+0x6c>
 80052a0:	2301      	movs	r3, #1
 80052a2:	e0f4      	b.n	800548e <HAL_RCC_ClockConfig+0x256>
 80052a4:	f000 f966 	bl	8005574 <RCC_GetSysClockFreqFromPLLSource>
 80052a8:	6138      	str	r0, [r7, #16]
 80052aa:	693b      	ldr	r3, [r7, #16]
 80052ac:	4a7c      	ldr	r2, [pc, #496]	@ (80054a0 <HAL_RCC_ClockConfig+0x268>)
 80052ae:	4293      	cmp	r3, r2
 80052b0:	d93f      	bls.n	8005332 <HAL_RCC_ClockConfig+0xfa>
 80052b2:	4b7a      	ldr	r3, [pc, #488]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 80052b4:	689b      	ldr	r3, [r3, #8]
 80052b6:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80052ba:	2b00      	cmp	r3, #0
 80052bc:	d009      	beq.n	80052d2 <HAL_RCC_ClockConfig+0x9a>
 80052be:	687b      	ldr	r3, [r7, #4]
 80052c0:	681b      	ldr	r3, [r3, #0]
 80052c2:	f003 0302 	and.w	r3, r3, #2
 80052c6:	2b00      	cmp	r3, #0
 80052c8:	d033      	beq.n	8005332 <HAL_RCC_ClockConfig+0xfa>
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	689b      	ldr	r3, [r3, #8]
 80052ce:	2b00      	cmp	r3, #0
 80052d0:	d12f      	bne.n	8005332 <HAL_RCC_ClockConfig+0xfa>
 80052d2:	4b72      	ldr	r3, [pc, #456]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 80052d4:	689b      	ldr	r3, [r3, #8]
 80052d6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80052da:	4a70      	ldr	r2, [pc, #448]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 80052dc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80052e0:	6093      	str	r3, [r2, #8]
 80052e2:	2380      	movs	r3, #128	@ 0x80
 80052e4:	617b      	str	r3, [r7, #20]
 80052e6:	e024      	b.n	8005332 <HAL_RCC_ClockConfig+0xfa>
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	685b      	ldr	r3, [r3, #4]
 80052ec:	2b02      	cmp	r3, #2
 80052ee:	d107      	bne.n	8005300 <HAL_RCC_ClockConfig+0xc8>
 80052f0:	4b6a      	ldr	r3, [pc, #424]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80052f8:	2b00      	cmp	r3, #0
 80052fa:	d109      	bne.n	8005310 <HAL_RCC_ClockConfig+0xd8>
 80052fc:	2301      	movs	r3, #1
 80052fe:	e0c6      	b.n	800548e <HAL_RCC_ClockConfig+0x256>
 8005300:	4b66      	ldr	r3, [pc, #408]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 8005302:	681b      	ldr	r3, [r3, #0]
 8005304:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005308:	2b00      	cmp	r3, #0
 800530a:	d101      	bne.n	8005310 <HAL_RCC_ClockConfig+0xd8>
 800530c:	2301      	movs	r3, #1
 800530e:	e0be      	b.n	800548e <HAL_RCC_ClockConfig+0x256>
 8005310:	f000 f8ce 	bl	80054b0 <HAL_RCC_GetSysClockFreq>
 8005314:	6138      	str	r0, [r7, #16]
 8005316:	693b      	ldr	r3, [r7, #16]
 8005318:	4a61      	ldr	r2, [pc, #388]	@ (80054a0 <HAL_RCC_ClockConfig+0x268>)
 800531a:	4293      	cmp	r3, r2
 800531c:	d909      	bls.n	8005332 <HAL_RCC_ClockConfig+0xfa>
 800531e:	4b5f      	ldr	r3, [pc, #380]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 8005320:	689b      	ldr	r3, [r3, #8]
 8005322:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005326:	4a5d      	ldr	r2, [pc, #372]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 8005328:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800532c:	6093      	str	r3, [r2, #8]
 800532e:	2380      	movs	r3, #128	@ 0x80
 8005330:	617b      	str	r3, [r7, #20]
 8005332:	4b5a      	ldr	r3, [pc, #360]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 8005334:	689b      	ldr	r3, [r3, #8]
 8005336:	f023 0203 	bic.w	r2, r3, #3
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	685b      	ldr	r3, [r3, #4]
 800533e:	4957      	ldr	r1, [pc, #348]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 8005340:	4313      	orrs	r3, r2
 8005342:	608b      	str	r3, [r1, #8]
 8005344:	f7fc fe84 	bl	8002050 <HAL_GetTick>
 8005348:	60f8      	str	r0, [r7, #12]
 800534a:	e00a      	b.n	8005362 <HAL_RCC_ClockConfig+0x12a>
 800534c:	f7fc fe80 	bl	8002050 <HAL_GetTick>
 8005350:	4602      	mov	r2, r0
 8005352:	68fb      	ldr	r3, [r7, #12]
 8005354:	1ad3      	subs	r3, r2, r3
 8005356:	f241 3288 	movw	r2, #5000	@ 0x1388
 800535a:	4293      	cmp	r3, r2
 800535c:	d901      	bls.n	8005362 <HAL_RCC_ClockConfig+0x12a>
 800535e:	2303      	movs	r3, #3
 8005360:	e095      	b.n	800548e <HAL_RCC_ClockConfig+0x256>
 8005362:	4b4e      	ldr	r3, [pc, #312]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 8005364:	689b      	ldr	r3, [r3, #8]
 8005366:	f003 020c 	and.w	r2, r3, #12
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	685b      	ldr	r3, [r3, #4]
 800536e:	009b      	lsls	r3, r3, #2
 8005370:	429a      	cmp	r2, r3
 8005372:	d1eb      	bne.n	800534c <HAL_RCC_ClockConfig+0x114>
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	681b      	ldr	r3, [r3, #0]
 8005378:	f003 0302 	and.w	r3, r3, #2
 800537c:	2b00      	cmp	r3, #0
 800537e:	d023      	beq.n	80053c8 <HAL_RCC_ClockConfig+0x190>
 8005380:	687b      	ldr	r3, [r7, #4]
 8005382:	681b      	ldr	r3, [r3, #0]
 8005384:	f003 0304 	and.w	r3, r3, #4
 8005388:	2b00      	cmp	r3, #0
 800538a:	d005      	beq.n	8005398 <HAL_RCC_ClockConfig+0x160>
 800538c:	4b43      	ldr	r3, [pc, #268]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 800538e:	689b      	ldr	r3, [r3, #8]
 8005390:	4a42      	ldr	r2, [pc, #264]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 8005392:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8005396:	6093      	str	r3, [r2, #8]
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	f003 0308 	and.w	r3, r3, #8
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d007      	beq.n	80053b4 <HAL_RCC_ClockConfig+0x17c>
 80053a4:	4b3d      	ldr	r3, [pc, #244]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 80053a6:	689b      	ldr	r3, [r3, #8]
 80053a8:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 80053ac:	4a3b      	ldr	r2, [pc, #236]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 80053ae:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80053b2:	6093      	str	r3, [r2, #8]
 80053b4:	4b39      	ldr	r3, [pc, #228]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 80053b6:	689b      	ldr	r3, [r3, #8]
 80053b8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80053bc:	687b      	ldr	r3, [r7, #4]
 80053be:	689b      	ldr	r3, [r3, #8]
 80053c0:	4936      	ldr	r1, [pc, #216]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 80053c2:	4313      	orrs	r3, r2
 80053c4:	608b      	str	r3, [r1, #8]
 80053c6:	e008      	b.n	80053da <HAL_RCC_ClockConfig+0x1a2>
 80053c8:	697b      	ldr	r3, [r7, #20]
 80053ca:	2b80      	cmp	r3, #128	@ 0x80
 80053cc:	d105      	bne.n	80053da <HAL_RCC_ClockConfig+0x1a2>
 80053ce:	4b33      	ldr	r3, [pc, #204]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 80053d0:	689b      	ldr	r3, [r3, #8]
 80053d2:	4a32      	ldr	r2, [pc, #200]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 80053d4:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80053d8:	6093      	str	r3, [r2, #8]
 80053da:	4b2f      	ldr	r3, [pc, #188]	@ (8005498 <HAL_RCC_ClockConfig+0x260>)
 80053dc:	681b      	ldr	r3, [r3, #0]
 80053de:	f003 030f 	and.w	r3, r3, #15
 80053e2:	683a      	ldr	r2, [r7, #0]
 80053e4:	429a      	cmp	r2, r3
 80053e6:	d21d      	bcs.n	8005424 <HAL_RCC_ClockConfig+0x1ec>
 80053e8:	4b2b      	ldr	r3, [pc, #172]	@ (8005498 <HAL_RCC_ClockConfig+0x260>)
 80053ea:	681b      	ldr	r3, [r3, #0]
 80053ec:	f023 020f 	bic.w	r2, r3, #15
 80053f0:	4929      	ldr	r1, [pc, #164]	@ (8005498 <HAL_RCC_ClockConfig+0x260>)
 80053f2:	683b      	ldr	r3, [r7, #0]
 80053f4:	4313      	orrs	r3, r2
 80053f6:	600b      	str	r3, [r1, #0]
 80053f8:	f7fc fe2a 	bl	8002050 <HAL_GetTick>
 80053fc:	60f8      	str	r0, [r7, #12]
 80053fe:	e00a      	b.n	8005416 <HAL_RCC_ClockConfig+0x1de>
 8005400:	f7fc fe26 	bl	8002050 <HAL_GetTick>
 8005404:	4602      	mov	r2, r0
 8005406:	68fb      	ldr	r3, [r7, #12]
 8005408:	1ad3      	subs	r3, r2, r3
 800540a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800540e:	4293      	cmp	r3, r2
 8005410:	d901      	bls.n	8005416 <HAL_RCC_ClockConfig+0x1de>
 8005412:	2303      	movs	r3, #3
 8005414:	e03b      	b.n	800548e <HAL_RCC_ClockConfig+0x256>
 8005416:	4b20      	ldr	r3, [pc, #128]	@ (8005498 <HAL_RCC_ClockConfig+0x260>)
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	f003 030f 	and.w	r3, r3, #15
 800541e:	683a      	ldr	r2, [r7, #0]
 8005420:	429a      	cmp	r2, r3
 8005422:	d1ed      	bne.n	8005400 <HAL_RCC_ClockConfig+0x1c8>
 8005424:	687b      	ldr	r3, [r7, #4]
 8005426:	681b      	ldr	r3, [r3, #0]
 8005428:	f003 0304 	and.w	r3, r3, #4
 800542c:	2b00      	cmp	r3, #0
 800542e:	d008      	beq.n	8005442 <HAL_RCC_ClockConfig+0x20a>
 8005430:	4b1a      	ldr	r3, [pc, #104]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 8005432:	689b      	ldr	r3, [r3, #8]
 8005434:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8005438:	687b      	ldr	r3, [r7, #4]
 800543a:	68db      	ldr	r3, [r3, #12]
 800543c:	4917      	ldr	r1, [pc, #92]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 800543e:	4313      	orrs	r3, r2
 8005440:	608b      	str	r3, [r1, #8]
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	681b      	ldr	r3, [r3, #0]
 8005446:	f003 0308 	and.w	r3, r3, #8
 800544a:	2b00      	cmp	r3, #0
 800544c:	d009      	beq.n	8005462 <HAL_RCC_ClockConfig+0x22a>
 800544e:	4b13      	ldr	r3, [pc, #76]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 8005450:	689b      	ldr	r3, [r3, #8]
 8005452:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	691b      	ldr	r3, [r3, #16]
 800545a:	00db      	lsls	r3, r3, #3
 800545c:	490f      	ldr	r1, [pc, #60]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 800545e:	4313      	orrs	r3, r2
 8005460:	608b      	str	r3, [r1, #8]
 8005462:	f000 f825 	bl	80054b0 <HAL_RCC_GetSysClockFreq>
 8005466:	4602      	mov	r2, r0
 8005468:	4b0c      	ldr	r3, [pc, #48]	@ (800549c <HAL_RCC_ClockConfig+0x264>)
 800546a:	689b      	ldr	r3, [r3, #8]
 800546c:	091b      	lsrs	r3, r3, #4
 800546e:	f003 030f 	and.w	r3, r3, #15
 8005472:	490c      	ldr	r1, [pc, #48]	@ (80054a4 <HAL_RCC_ClockConfig+0x26c>)
 8005474:	5ccb      	ldrb	r3, [r1, r3]
 8005476:	f003 031f 	and.w	r3, r3, #31
 800547a:	fa22 f303 	lsr.w	r3, r2, r3
 800547e:	4a0a      	ldr	r2, [pc, #40]	@ (80054a8 <HAL_RCC_ClockConfig+0x270>)
 8005480:	6013      	str	r3, [r2, #0]
 8005482:	4b0a      	ldr	r3, [pc, #40]	@ (80054ac <HAL_RCC_ClockConfig+0x274>)
 8005484:	681b      	ldr	r3, [r3, #0]
 8005486:	4618      	mov	r0, r3
 8005488:	f7fc fd96 	bl	8001fb8 <HAL_InitTick>
 800548c:	4603      	mov	r3, r0
 800548e:	4618      	mov	r0, r3
 8005490:	3718      	adds	r7, #24
 8005492:	46bd      	mov	sp, r7
 8005494:	bd80      	pop	{r7, pc}
 8005496:	bf00      	nop
 8005498:	40022000 	.word	0x40022000
 800549c:	40021000 	.word	0x40021000
 80054a0:	04c4b400 	.word	0x04c4b400
 80054a4:	08007124 	.word	0x08007124
 80054a8:	20000000 	.word	0x20000000
 80054ac:	20000004 	.word	0x20000004

080054b0 <HAL_RCC_GetSysClockFreq>:
 80054b0:	b480      	push	{r7}
 80054b2:	b087      	sub	sp, #28
 80054b4:	af00      	add	r7, sp, #0
 80054b6:	4b2c      	ldr	r3, [pc, #176]	@ (8005568 <HAL_RCC_GetSysClockFreq+0xb8>)
 80054b8:	689b      	ldr	r3, [r3, #8]
 80054ba:	f003 030c 	and.w	r3, r3, #12
 80054be:	2b04      	cmp	r3, #4
 80054c0:	d102      	bne.n	80054c8 <HAL_RCC_GetSysClockFreq+0x18>
 80054c2:	4b2a      	ldr	r3, [pc, #168]	@ (800556c <HAL_RCC_GetSysClockFreq+0xbc>)
 80054c4:	613b      	str	r3, [r7, #16]
 80054c6:	e047      	b.n	8005558 <HAL_RCC_GetSysClockFreq+0xa8>
 80054c8:	4b27      	ldr	r3, [pc, #156]	@ (8005568 <HAL_RCC_GetSysClockFreq+0xb8>)
 80054ca:	689b      	ldr	r3, [r3, #8]
 80054cc:	f003 030c 	and.w	r3, r3, #12
 80054d0:	2b08      	cmp	r3, #8
 80054d2:	d102      	bne.n	80054da <HAL_RCC_GetSysClockFreq+0x2a>
 80054d4:	4b26      	ldr	r3, [pc, #152]	@ (8005570 <HAL_RCC_GetSysClockFreq+0xc0>)
 80054d6:	613b      	str	r3, [r7, #16]
 80054d8:	e03e      	b.n	8005558 <HAL_RCC_GetSysClockFreq+0xa8>
 80054da:	4b23      	ldr	r3, [pc, #140]	@ (8005568 <HAL_RCC_GetSysClockFreq+0xb8>)
 80054dc:	689b      	ldr	r3, [r3, #8]
 80054de:	f003 030c 	and.w	r3, r3, #12
 80054e2:	2b0c      	cmp	r3, #12
 80054e4:	d136      	bne.n	8005554 <HAL_RCC_GetSysClockFreq+0xa4>
 80054e6:	4b20      	ldr	r3, [pc, #128]	@ (8005568 <HAL_RCC_GetSysClockFreq+0xb8>)
 80054e8:	68db      	ldr	r3, [r3, #12]
 80054ea:	f003 0303 	and.w	r3, r3, #3
 80054ee:	60fb      	str	r3, [r7, #12]
 80054f0:	4b1d      	ldr	r3, [pc, #116]	@ (8005568 <HAL_RCC_GetSysClockFreq+0xb8>)
 80054f2:	68db      	ldr	r3, [r3, #12]
 80054f4:	091b      	lsrs	r3, r3, #4
 80054f6:	f003 030f 	and.w	r3, r3, #15
 80054fa:	3301      	adds	r3, #1
 80054fc:	60bb      	str	r3, [r7, #8]
 80054fe:	68fb      	ldr	r3, [r7, #12]
 8005500:	2b03      	cmp	r3, #3
 8005502:	d10c      	bne.n	800551e <HAL_RCC_GetSysClockFreq+0x6e>
 8005504:	4a1a      	ldr	r2, [pc, #104]	@ (8005570 <HAL_RCC_GetSysClockFreq+0xc0>)
 8005506:	68bb      	ldr	r3, [r7, #8]
 8005508:	fbb2 f3f3 	udiv	r3, r2, r3
 800550c:	4a16      	ldr	r2, [pc, #88]	@ (8005568 <HAL_RCC_GetSysClockFreq+0xb8>)
 800550e:	68d2      	ldr	r2, [r2, #12]
 8005510:	0a12      	lsrs	r2, r2, #8
 8005512:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8005516:	fb02 f303 	mul.w	r3, r2, r3
 800551a:	617b      	str	r3, [r7, #20]
 800551c:	e00c      	b.n	8005538 <HAL_RCC_GetSysClockFreq+0x88>
 800551e:	4a13      	ldr	r2, [pc, #76]	@ (800556c <HAL_RCC_GetSysClockFreq+0xbc>)
 8005520:	68bb      	ldr	r3, [r7, #8]
 8005522:	fbb2 f3f3 	udiv	r3, r2, r3
 8005526:	4a10      	ldr	r2, [pc, #64]	@ (8005568 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005528:	68d2      	ldr	r2, [r2, #12]
 800552a:	0a12      	lsrs	r2, r2, #8
 800552c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8005530:	fb02 f303 	mul.w	r3, r2, r3
 8005534:	617b      	str	r3, [r7, #20]
 8005536:	bf00      	nop
 8005538:	4b0b      	ldr	r3, [pc, #44]	@ (8005568 <HAL_RCC_GetSysClockFreq+0xb8>)
 800553a:	68db      	ldr	r3, [r3, #12]
 800553c:	0e5b      	lsrs	r3, r3, #25
 800553e:	f003 0303 	and.w	r3, r3, #3
 8005542:	3301      	adds	r3, #1
 8005544:	005b      	lsls	r3, r3, #1
 8005546:	607b      	str	r3, [r7, #4]
 8005548:	697a      	ldr	r2, [r7, #20]
 800554a:	687b      	ldr	r3, [r7, #4]
 800554c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005550:	613b      	str	r3, [r7, #16]
 8005552:	e001      	b.n	8005558 <HAL_RCC_GetSysClockFreq+0xa8>
 8005554:	2300      	movs	r3, #0
 8005556:	613b      	str	r3, [r7, #16]
 8005558:	693b      	ldr	r3, [r7, #16]
 800555a:	4618      	mov	r0, r3
 800555c:	371c      	adds	r7, #28
 800555e:	46bd      	mov	sp, r7
 8005560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005564:	4770      	bx	lr
 8005566:	bf00      	nop
 8005568:	40021000 	.word	0x40021000
 800556c:	00f42400 	.word	0x00f42400
 8005570:	007a1200 	.word	0x007a1200

08005574 <RCC_GetSysClockFreqFromPLLSource>:
 8005574:	b480      	push	{r7}
 8005576:	b087      	sub	sp, #28
 8005578:	af00      	add	r7, sp, #0
 800557a:	4b1e      	ldr	r3, [pc, #120]	@ (80055f4 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800557c:	68db      	ldr	r3, [r3, #12]
 800557e:	f003 0303 	and.w	r3, r3, #3
 8005582:	613b      	str	r3, [r7, #16]
 8005584:	4b1b      	ldr	r3, [pc, #108]	@ (80055f4 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8005586:	68db      	ldr	r3, [r3, #12]
 8005588:	091b      	lsrs	r3, r3, #4
 800558a:	f003 030f 	and.w	r3, r3, #15
 800558e:	3301      	adds	r3, #1
 8005590:	60fb      	str	r3, [r7, #12]
 8005592:	693b      	ldr	r3, [r7, #16]
 8005594:	2b03      	cmp	r3, #3
 8005596:	d10c      	bne.n	80055b2 <RCC_GetSysClockFreqFromPLLSource+0x3e>
 8005598:	4a17      	ldr	r2, [pc, #92]	@ (80055f8 <RCC_GetSysClockFreqFromPLLSource+0x84>)
 800559a:	68fb      	ldr	r3, [r7, #12]
 800559c:	fbb2 f3f3 	udiv	r3, r2, r3
 80055a0:	4a14      	ldr	r2, [pc, #80]	@ (80055f4 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80055a2:	68d2      	ldr	r2, [r2, #12]
 80055a4:	0a12      	lsrs	r2, r2, #8
 80055a6:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80055aa:	fb02 f303 	mul.w	r3, r2, r3
 80055ae:	617b      	str	r3, [r7, #20]
 80055b0:	e00c      	b.n	80055cc <RCC_GetSysClockFreqFromPLLSource+0x58>
 80055b2:	4a12      	ldr	r2, [pc, #72]	@ (80055fc <RCC_GetSysClockFreqFromPLLSource+0x88>)
 80055b4:	68fb      	ldr	r3, [r7, #12]
 80055b6:	fbb2 f3f3 	udiv	r3, r2, r3
 80055ba:	4a0e      	ldr	r2, [pc, #56]	@ (80055f4 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80055bc:	68d2      	ldr	r2, [r2, #12]
 80055be:	0a12      	lsrs	r2, r2, #8
 80055c0:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80055c4:	fb02 f303 	mul.w	r3, r2, r3
 80055c8:	617b      	str	r3, [r7, #20]
 80055ca:	bf00      	nop
 80055cc:	4b09      	ldr	r3, [pc, #36]	@ (80055f4 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80055ce:	68db      	ldr	r3, [r3, #12]
 80055d0:	0e5b      	lsrs	r3, r3, #25
 80055d2:	f003 0303 	and.w	r3, r3, #3
 80055d6:	3301      	adds	r3, #1
 80055d8:	005b      	lsls	r3, r3, #1
 80055da:	60bb      	str	r3, [r7, #8]
 80055dc:	697a      	ldr	r2, [r7, #20]
 80055de:	68bb      	ldr	r3, [r7, #8]
 80055e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80055e4:	607b      	str	r3, [r7, #4]
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	4618      	mov	r0, r3
 80055ea:	371c      	adds	r7, #28
 80055ec:	46bd      	mov	sp, r7
 80055ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055f2:	4770      	bx	lr
 80055f4:	40021000 	.word	0x40021000
 80055f8:	007a1200 	.word	0x007a1200
 80055fc:	00f42400 	.word	0x00f42400

08005600 <HAL_RCCEx_PeriphCLKConfig>:
 8005600:	b580      	push	{r7, lr}
 8005602:	b086      	sub	sp, #24
 8005604:	af00      	add	r7, sp, #0
 8005606:	6078      	str	r0, [r7, #4]
 8005608:	2300      	movs	r3, #0
 800560a:	74fb      	strb	r3, [r7, #19]
 800560c:	2300      	movs	r3, #0
 800560e:	74bb      	strb	r3, [r7, #18]
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	681b      	ldr	r3, [r3, #0]
 8005614:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8005618:	2b00      	cmp	r3, #0
 800561a:	f000 8098 	beq.w	800574e <HAL_RCCEx_PeriphCLKConfig+0x14e>
 800561e:	2300      	movs	r3, #0
 8005620:	747b      	strb	r3, [r7, #17]
 8005622:	4b43      	ldr	r3, [pc, #268]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005624:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005626:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800562a:	2b00      	cmp	r3, #0
 800562c:	d10d      	bne.n	800564a <HAL_RCCEx_PeriphCLKConfig+0x4a>
 800562e:	4b40      	ldr	r3, [pc, #256]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005630:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005632:	4a3f      	ldr	r2, [pc, #252]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005634:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005638:	6593      	str	r3, [r2, #88]	@ 0x58
 800563a:	4b3d      	ldr	r3, [pc, #244]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800563c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800563e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005642:	60bb      	str	r3, [r7, #8]
 8005644:	68bb      	ldr	r3, [r7, #8]
 8005646:	2301      	movs	r3, #1
 8005648:	747b      	strb	r3, [r7, #17]
 800564a:	4b3a      	ldr	r3, [pc, #232]	@ (8005734 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	4a39      	ldr	r2, [pc, #228]	@ (8005734 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8005650:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005654:	6013      	str	r3, [r2, #0]
 8005656:	f7fc fcfb 	bl	8002050 <HAL_GetTick>
 800565a:	60f8      	str	r0, [r7, #12]
 800565c:	e009      	b.n	8005672 <HAL_RCCEx_PeriphCLKConfig+0x72>
 800565e:	f7fc fcf7 	bl	8002050 <HAL_GetTick>
 8005662:	4602      	mov	r2, r0
 8005664:	68fb      	ldr	r3, [r7, #12]
 8005666:	1ad3      	subs	r3, r2, r3
 8005668:	2b02      	cmp	r3, #2
 800566a:	d902      	bls.n	8005672 <HAL_RCCEx_PeriphCLKConfig+0x72>
 800566c:	2303      	movs	r3, #3
 800566e:	74fb      	strb	r3, [r7, #19]
 8005670:	e005      	b.n	800567e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8005672:	4b30      	ldr	r3, [pc, #192]	@ (8005734 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8005674:	681b      	ldr	r3, [r3, #0]
 8005676:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800567a:	2b00      	cmp	r3, #0
 800567c:	d0ef      	beq.n	800565e <HAL_RCCEx_PeriphCLKConfig+0x5e>
 800567e:	7cfb      	ldrb	r3, [r7, #19]
 8005680:	2b00      	cmp	r3, #0
 8005682:	d159      	bne.n	8005738 <HAL_RCCEx_PeriphCLKConfig+0x138>
 8005684:	4b2a      	ldr	r3, [pc, #168]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005686:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800568a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800568e:	617b      	str	r3, [r7, #20]
 8005690:	697b      	ldr	r3, [r7, #20]
 8005692:	2b00      	cmp	r3, #0
 8005694:	d01e      	beq.n	80056d4 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800569a:	697a      	ldr	r2, [r7, #20]
 800569c:	429a      	cmp	r2, r3
 800569e:	d019      	beq.n	80056d4 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80056a0:	4b23      	ldr	r3, [pc, #140]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80056a2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80056a6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80056aa:	617b      	str	r3, [r7, #20]
 80056ac:	4b20      	ldr	r3, [pc, #128]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80056ae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80056b2:	4a1f      	ldr	r2, [pc, #124]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80056b4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80056b8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80056bc:	4b1c      	ldr	r3, [pc, #112]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80056be:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80056c2:	4a1b      	ldr	r2, [pc, #108]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80056c4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80056c8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80056cc:	4a18      	ldr	r2, [pc, #96]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80056ce:	697b      	ldr	r3, [r7, #20]
 80056d0:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80056d4:	697b      	ldr	r3, [r7, #20]
 80056d6:	f003 0301 	and.w	r3, r3, #1
 80056da:	2b00      	cmp	r3, #0
 80056dc:	d016      	beq.n	800570c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80056de:	f7fc fcb7 	bl	8002050 <HAL_GetTick>
 80056e2:	60f8      	str	r0, [r7, #12]
 80056e4:	e00b      	b.n	80056fe <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80056e6:	f7fc fcb3 	bl	8002050 <HAL_GetTick>
 80056ea:	4602      	mov	r2, r0
 80056ec:	68fb      	ldr	r3, [r7, #12]
 80056ee:	1ad3      	subs	r3, r2, r3
 80056f0:	f241 3288 	movw	r2, #5000	@ 0x1388
 80056f4:	4293      	cmp	r3, r2
 80056f6:	d902      	bls.n	80056fe <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80056f8:	2303      	movs	r3, #3
 80056fa:	74fb      	strb	r3, [r7, #19]
 80056fc:	e006      	b.n	800570c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80056fe:	4b0c      	ldr	r3, [pc, #48]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005700:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005704:	f003 0302 	and.w	r3, r3, #2
 8005708:	2b00      	cmp	r3, #0
 800570a:	d0ec      	beq.n	80056e6 <HAL_RCCEx_PeriphCLKConfig+0xe6>
 800570c:	7cfb      	ldrb	r3, [r7, #19]
 800570e:	2b00      	cmp	r3, #0
 8005710:	d10b      	bne.n	800572a <HAL_RCCEx_PeriphCLKConfig+0x12a>
 8005712:	4b07      	ldr	r3, [pc, #28]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005714:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005718:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005720:	4903      	ldr	r1, [pc, #12]	@ (8005730 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8005722:	4313      	orrs	r3, r2
 8005724:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8005728:	e008      	b.n	800573c <HAL_RCCEx_PeriphCLKConfig+0x13c>
 800572a:	7cfb      	ldrb	r3, [r7, #19]
 800572c:	74bb      	strb	r3, [r7, #18]
 800572e:	e005      	b.n	800573c <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8005730:	40021000 	.word	0x40021000
 8005734:	40007000 	.word	0x40007000
 8005738:	7cfb      	ldrb	r3, [r7, #19]
 800573a:	74bb      	strb	r3, [r7, #18]
 800573c:	7c7b      	ldrb	r3, [r7, #17]
 800573e:	2b01      	cmp	r3, #1
 8005740:	d105      	bne.n	800574e <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8005742:	4ba6      	ldr	r3, [pc, #664]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005744:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005746:	4aa5      	ldr	r2, [pc, #660]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005748:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800574c:	6593      	str	r3, [r2, #88]	@ 0x58
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	681b      	ldr	r3, [r3, #0]
 8005752:	f003 0301 	and.w	r3, r3, #1
 8005756:	2b00      	cmp	r3, #0
 8005758:	d00a      	beq.n	8005770 <HAL_RCCEx_PeriphCLKConfig+0x170>
 800575a:	4ba0      	ldr	r3, [pc, #640]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800575c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005760:	f023 0203 	bic.w	r2, r3, #3
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	685b      	ldr	r3, [r3, #4]
 8005768:	499c      	ldr	r1, [pc, #624]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800576a:	4313      	orrs	r3, r2
 800576c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	681b      	ldr	r3, [r3, #0]
 8005774:	f003 0302 	and.w	r3, r3, #2
 8005778:	2b00      	cmp	r3, #0
 800577a:	d00a      	beq.n	8005792 <HAL_RCCEx_PeriphCLKConfig+0x192>
 800577c:	4b97      	ldr	r3, [pc, #604]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800577e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005782:	f023 020c 	bic.w	r2, r3, #12
 8005786:	687b      	ldr	r3, [r7, #4]
 8005788:	689b      	ldr	r3, [r3, #8]
 800578a:	4994      	ldr	r1, [pc, #592]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800578c:	4313      	orrs	r3, r2
 800578e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	681b      	ldr	r3, [r3, #0]
 8005796:	f003 0304 	and.w	r3, r3, #4
 800579a:	2b00      	cmp	r3, #0
 800579c:	d00a      	beq.n	80057b4 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 800579e:	4b8f      	ldr	r3, [pc, #572]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80057a0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80057a4:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 80057a8:	687b      	ldr	r3, [r7, #4]
 80057aa:	68db      	ldr	r3, [r3, #12]
 80057ac:	498b      	ldr	r1, [pc, #556]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80057ae:	4313      	orrs	r3, r2
 80057b0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	681b      	ldr	r3, [r3, #0]
 80057b8:	f003 0308 	and.w	r3, r3, #8
 80057bc:	2b00      	cmp	r3, #0
 80057be:	d00a      	beq.n	80057d6 <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 80057c0:	4b86      	ldr	r3, [pc, #536]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80057c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80057c6:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	691b      	ldr	r3, [r3, #16]
 80057ce:	4983      	ldr	r1, [pc, #524]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80057d0:	4313      	orrs	r3, r2
 80057d2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	f003 0320 	and.w	r3, r3, #32
 80057de:	2b00      	cmp	r3, #0
 80057e0:	d00a      	beq.n	80057f8 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 80057e2:	4b7e      	ldr	r3, [pc, #504]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80057e4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80057e8:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80057ec:	687b      	ldr	r3, [r7, #4]
 80057ee:	695b      	ldr	r3, [r3, #20]
 80057f0:	497a      	ldr	r1, [pc, #488]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80057f2:	4313      	orrs	r3, r2
 80057f4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80057f8:	687b      	ldr	r3, [r7, #4]
 80057fa:	681b      	ldr	r3, [r3, #0]
 80057fc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005800:	2b00      	cmp	r3, #0
 8005802:	d00a      	beq.n	800581a <HAL_RCCEx_PeriphCLKConfig+0x21a>
 8005804:	4b75      	ldr	r3, [pc, #468]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005806:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800580a:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 800580e:	687b      	ldr	r3, [r7, #4]
 8005810:	699b      	ldr	r3, [r3, #24]
 8005812:	4972      	ldr	r1, [pc, #456]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005814:	4313      	orrs	r3, r2
 8005816:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005822:	2b00      	cmp	r3, #0
 8005824:	d00a      	beq.n	800583c <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8005826:	4b6d      	ldr	r3, [pc, #436]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005828:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800582c:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8005830:	687b      	ldr	r3, [r7, #4]
 8005832:	69db      	ldr	r3, [r3, #28]
 8005834:	4969      	ldr	r1, [pc, #420]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005836:	4313      	orrs	r3, r2
 8005838:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005844:	2b00      	cmp	r3, #0
 8005846:	d00a      	beq.n	800585e <HAL_RCCEx_PeriphCLKConfig+0x25e>
 8005848:	4b64      	ldr	r3, [pc, #400]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800584a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800584e:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	6a1b      	ldr	r3, [r3, #32]
 8005856:	4961      	ldr	r1, [pc, #388]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005858:	4313      	orrs	r3, r2
 800585a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	681b      	ldr	r3, [r3, #0]
 8005862:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005866:	2b00      	cmp	r3, #0
 8005868:	d00a      	beq.n	8005880 <HAL_RCCEx_PeriphCLKConfig+0x280>
 800586a:	4b5c      	ldr	r3, [pc, #368]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800586c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005870:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005878:	4958      	ldr	r1, [pc, #352]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800587a:	4313      	orrs	r3, r2
 800587c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005880:	687b      	ldr	r3, [r7, #4]
 8005882:	681b      	ldr	r3, [r3, #0]
 8005884:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005888:	2b00      	cmp	r3, #0
 800588a:	d015      	beq.n	80058b8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 800588c:	4b53      	ldr	r3, [pc, #332]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800588e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005892:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800589a:	4950      	ldr	r1, [pc, #320]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800589c:	4313      	orrs	r3, r2
 800589e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80058a2:	687b      	ldr	r3, [r7, #4]
 80058a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80058a6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80058aa:	d105      	bne.n	80058b8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 80058ac:	4b4b      	ldr	r3, [pc, #300]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80058ae:	68db      	ldr	r3, [r3, #12]
 80058b0:	4a4a      	ldr	r2, [pc, #296]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80058b2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80058b6:	60d3      	str	r3, [r2, #12]
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	681b      	ldr	r3, [r3, #0]
 80058bc:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80058c0:	2b00      	cmp	r3, #0
 80058c2:	d015      	beq.n	80058f0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 80058c4:	4b45      	ldr	r3, [pc, #276]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80058c6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80058ca:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 80058ce:	687b      	ldr	r3, [r7, #4]
 80058d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80058d2:	4942      	ldr	r1, [pc, #264]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80058d4:	4313      	orrs	r3, r2
 80058d6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80058de:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80058e2:	d105      	bne.n	80058f0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 80058e4:	4b3d      	ldr	r3, [pc, #244]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80058e6:	68db      	ldr	r3, [r3, #12]
 80058e8:	4a3c      	ldr	r2, [pc, #240]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80058ea:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80058ee:	60d3      	str	r3, [r2, #12]
 80058f0:	687b      	ldr	r3, [r7, #4]
 80058f2:	681b      	ldr	r3, [r3, #0]
 80058f4:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80058f8:	2b00      	cmp	r3, #0
 80058fa:	d015      	beq.n	8005928 <HAL_RCCEx_PeriphCLKConfig+0x328>
 80058fc:	4b37      	ldr	r3, [pc, #220]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80058fe:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005902:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8005906:	687b      	ldr	r3, [r7, #4]
 8005908:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800590a:	4934      	ldr	r1, [pc, #208]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800590c:	4313      	orrs	r3, r2
 800590e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005916:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800591a:	d105      	bne.n	8005928 <HAL_RCCEx_PeriphCLKConfig+0x328>
 800591c:	4b2f      	ldr	r3, [pc, #188]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800591e:	68db      	ldr	r3, [r3, #12]
 8005920:	4a2e      	ldr	r2, [pc, #184]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005922:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005926:	60d3      	str	r3, [r2, #12]
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	681b      	ldr	r3, [r3, #0]
 800592c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8005930:	2b00      	cmp	r3, #0
 8005932:	d015      	beq.n	8005960 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8005934:	4b29      	ldr	r3, [pc, #164]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005936:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800593a:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 800593e:	687b      	ldr	r3, [r7, #4]
 8005940:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005942:	4926      	ldr	r1, [pc, #152]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005944:	4313      	orrs	r3, r2
 8005946:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800594e:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8005952:	d105      	bne.n	8005960 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8005954:	4b21      	ldr	r3, [pc, #132]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005956:	68db      	ldr	r3, [r3, #12]
 8005958:	4a20      	ldr	r2, [pc, #128]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800595a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800595e:	60d3      	str	r3, [r2, #12]
 8005960:	687b      	ldr	r3, [r7, #4]
 8005962:	681b      	ldr	r3, [r3, #0]
 8005964:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005968:	2b00      	cmp	r3, #0
 800596a:	d015      	beq.n	8005998 <HAL_RCCEx_PeriphCLKConfig+0x398>
 800596c:	4b1b      	ldr	r3, [pc, #108]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800596e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005972:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8005976:	687b      	ldr	r3, [r7, #4]
 8005978:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800597a:	4918      	ldr	r1, [pc, #96]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800597c:	4313      	orrs	r3, r2
 800597e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005986:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800598a:	d105      	bne.n	8005998 <HAL_RCCEx_PeriphCLKConfig+0x398>
 800598c:	4b13      	ldr	r3, [pc, #76]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800598e:	68db      	ldr	r3, [r3, #12]
 8005990:	4a12      	ldr	r2, [pc, #72]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8005992:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005996:	60d3      	str	r3, [r2, #12]
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	681b      	ldr	r3, [r3, #0]
 800599c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80059a0:	2b00      	cmp	r3, #0
 80059a2:	d015      	beq.n	80059d0 <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 80059a4:	4b0d      	ldr	r3, [pc, #52]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80059a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80059aa:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 80059ae:	687b      	ldr	r3, [r7, #4]
 80059b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80059b2:	490a      	ldr	r1, [pc, #40]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80059b4:	4313      	orrs	r3, r2
 80059b6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80059be:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80059c2:	d105      	bne.n	80059d0 <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 80059c4:	4b05      	ldr	r3, [pc, #20]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80059c6:	68db      	ldr	r3, [r3, #12]
 80059c8:	4a04      	ldr	r2, [pc, #16]	@ (80059dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80059ca:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80059ce:	60d3      	str	r3, [r2, #12]
 80059d0:	7cbb      	ldrb	r3, [r7, #18]
 80059d2:	4618      	mov	r0, r3
 80059d4:	3718      	adds	r7, #24
 80059d6:	46bd      	mov	sp, r7
 80059d8:	bd80      	pop	{r7, pc}
 80059da:	bf00      	nop
 80059dc:	40021000 	.word	0x40021000

080059e0 <HAL_TIM_Base_Init>:
 80059e0:	b580      	push	{r7, lr}
 80059e2:	b082      	sub	sp, #8
 80059e4:	af00      	add	r7, sp, #0
 80059e6:	6078      	str	r0, [r7, #4]
 80059e8:	687b      	ldr	r3, [r7, #4]
 80059ea:	2b00      	cmp	r3, #0
 80059ec:	d101      	bne.n	80059f2 <HAL_TIM_Base_Init+0x12>
 80059ee:	2301      	movs	r3, #1
 80059f0:	e049      	b.n	8005a86 <HAL_TIM_Base_Init+0xa6>
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80059f8:	b2db      	uxtb	r3, r3
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	d106      	bne.n	8005a0c <HAL_TIM_Base_Init+0x2c>
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	2200      	movs	r2, #0
 8005a02:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005a06:	6878      	ldr	r0, [r7, #4]
 8005a08:	f7fc f90a 	bl	8001c20 <HAL_TIM_Base_MspInit>
 8005a0c:	687b      	ldr	r3, [r7, #4]
 8005a0e:	2202      	movs	r2, #2
 8005a10:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	681a      	ldr	r2, [r3, #0]
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	3304      	adds	r3, #4
 8005a1c:	4619      	mov	r1, r3
 8005a1e:	4610      	mov	r0, r2
 8005a20:	f000 fd92 	bl	8006548 <TIM_Base_SetConfig>
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	2201      	movs	r2, #1
 8005a28:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8005a2c:	687b      	ldr	r3, [r7, #4]
 8005a2e:	2201      	movs	r2, #1
 8005a30:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	2201      	movs	r2, #1
 8005a38:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005a3c:	687b      	ldr	r3, [r7, #4]
 8005a3e:	2201      	movs	r2, #1
 8005a40:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	2201      	movs	r2, #1
 8005a48:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	2201      	movs	r2, #1
 8005a50:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005a54:	687b      	ldr	r3, [r7, #4]
 8005a56:	2201      	movs	r2, #1
 8005a58:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	2201      	movs	r2, #1
 8005a60:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005a64:	687b      	ldr	r3, [r7, #4]
 8005a66:	2201      	movs	r2, #1
 8005a68:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	2201      	movs	r2, #1
 8005a70:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	2201      	movs	r2, #1
 8005a78:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	2201      	movs	r2, #1
 8005a80:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005a84:	2300      	movs	r3, #0
 8005a86:	4618      	mov	r0, r3
 8005a88:	3708      	adds	r7, #8
 8005a8a:	46bd      	mov	sp, r7
 8005a8c:	bd80      	pop	{r7, pc}
	...

08005a90 <HAL_TIM_Base_Start_IT>:
 8005a90:	b480      	push	{r7}
 8005a92:	b085      	sub	sp, #20
 8005a94:	af00      	add	r7, sp, #0
 8005a96:	6078      	str	r0, [r7, #4]
 8005a98:	687b      	ldr	r3, [r7, #4]
 8005a9a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005a9e:	b2db      	uxtb	r3, r3
 8005aa0:	2b01      	cmp	r3, #1
 8005aa2:	d001      	beq.n	8005aa8 <HAL_TIM_Base_Start_IT+0x18>
 8005aa4:	2301      	movs	r3, #1
 8005aa6:	e04a      	b.n	8005b3e <HAL_TIM_Base_Start_IT+0xae>
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	2202      	movs	r2, #2
 8005aac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	681b      	ldr	r3, [r3, #0]
 8005ab4:	68da      	ldr	r2, [r3, #12]
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	681b      	ldr	r3, [r3, #0]
 8005aba:	f042 0201 	orr.w	r2, r2, #1
 8005abe:	60da      	str	r2, [r3, #12]
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	4a21      	ldr	r2, [pc, #132]	@ (8005b4c <HAL_TIM_Base_Start_IT+0xbc>)
 8005ac6:	4293      	cmp	r3, r2
 8005ac8:	d018      	beq.n	8005afc <HAL_TIM_Base_Start_IT+0x6c>
 8005aca:	687b      	ldr	r3, [r7, #4]
 8005acc:	681b      	ldr	r3, [r3, #0]
 8005ace:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005ad2:	d013      	beq.n	8005afc <HAL_TIM_Base_Start_IT+0x6c>
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	4a1d      	ldr	r2, [pc, #116]	@ (8005b50 <HAL_TIM_Base_Start_IT+0xc0>)
 8005ada:	4293      	cmp	r3, r2
 8005adc:	d00e      	beq.n	8005afc <HAL_TIM_Base_Start_IT+0x6c>
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	681b      	ldr	r3, [r3, #0]
 8005ae2:	4a1c      	ldr	r2, [pc, #112]	@ (8005b54 <HAL_TIM_Base_Start_IT+0xc4>)
 8005ae4:	4293      	cmp	r3, r2
 8005ae6:	d009      	beq.n	8005afc <HAL_TIM_Base_Start_IT+0x6c>
 8005ae8:	687b      	ldr	r3, [r7, #4]
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	4a1a      	ldr	r2, [pc, #104]	@ (8005b58 <HAL_TIM_Base_Start_IT+0xc8>)
 8005aee:	4293      	cmp	r3, r2
 8005af0:	d004      	beq.n	8005afc <HAL_TIM_Base_Start_IT+0x6c>
 8005af2:	687b      	ldr	r3, [r7, #4]
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	4a19      	ldr	r2, [pc, #100]	@ (8005b5c <HAL_TIM_Base_Start_IT+0xcc>)
 8005af8:	4293      	cmp	r3, r2
 8005afa:	d115      	bne.n	8005b28 <HAL_TIM_Base_Start_IT+0x98>
 8005afc:	687b      	ldr	r3, [r7, #4]
 8005afe:	681b      	ldr	r3, [r3, #0]
 8005b00:	689a      	ldr	r2, [r3, #8]
 8005b02:	4b17      	ldr	r3, [pc, #92]	@ (8005b60 <HAL_TIM_Base_Start_IT+0xd0>)
 8005b04:	4013      	ands	r3, r2
 8005b06:	60fb      	str	r3, [r7, #12]
 8005b08:	68fb      	ldr	r3, [r7, #12]
 8005b0a:	2b06      	cmp	r3, #6
 8005b0c:	d015      	beq.n	8005b3a <HAL_TIM_Base_Start_IT+0xaa>
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005b14:	d011      	beq.n	8005b3a <HAL_TIM_Base_Start_IT+0xaa>
 8005b16:	687b      	ldr	r3, [r7, #4]
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	681a      	ldr	r2, [r3, #0]
 8005b1c:	687b      	ldr	r3, [r7, #4]
 8005b1e:	681b      	ldr	r3, [r3, #0]
 8005b20:	f042 0201 	orr.w	r2, r2, #1
 8005b24:	601a      	str	r2, [r3, #0]
 8005b26:	e008      	b.n	8005b3a <HAL_TIM_Base_Start_IT+0xaa>
 8005b28:	687b      	ldr	r3, [r7, #4]
 8005b2a:	681b      	ldr	r3, [r3, #0]
 8005b2c:	681a      	ldr	r2, [r3, #0]
 8005b2e:	687b      	ldr	r3, [r7, #4]
 8005b30:	681b      	ldr	r3, [r3, #0]
 8005b32:	f042 0201 	orr.w	r2, r2, #1
 8005b36:	601a      	str	r2, [r3, #0]
 8005b38:	e000      	b.n	8005b3c <HAL_TIM_Base_Start_IT+0xac>
 8005b3a:	bf00      	nop
 8005b3c:	2300      	movs	r3, #0
 8005b3e:	4618      	mov	r0, r3
 8005b40:	3714      	adds	r7, #20
 8005b42:	46bd      	mov	sp, r7
 8005b44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b48:	4770      	bx	lr
 8005b4a:	bf00      	nop
 8005b4c:	40012c00 	.word	0x40012c00
 8005b50:	40000400 	.word	0x40000400
 8005b54:	40000800 	.word	0x40000800
 8005b58:	40013400 	.word	0x40013400
 8005b5c:	40014000 	.word	0x40014000
 8005b60:	00010007 	.word	0x00010007

08005b64 <HAL_TIM_PWM_Init>:
 8005b64:	b580      	push	{r7, lr}
 8005b66:	b082      	sub	sp, #8
 8005b68:	af00      	add	r7, sp, #0
 8005b6a:	6078      	str	r0, [r7, #4]
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	2b00      	cmp	r3, #0
 8005b70:	d101      	bne.n	8005b76 <HAL_TIM_PWM_Init+0x12>
 8005b72:	2301      	movs	r3, #1
 8005b74:	e049      	b.n	8005c0a <HAL_TIM_PWM_Init+0xa6>
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005b7c:	b2db      	uxtb	r3, r3
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	d106      	bne.n	8005b90 <HAL_TIM_PWM_Init+0x2c>
 8005b82:	687b      	ldr	r3, [r7, #4]
 8005b84:	2200      	movs	r2, #0
 8005b86:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005b8a:	6878      	ldr	r0, [r7, #4]
 8005b8c:	f000 f841 	bl	8005c12 <HAL_TIM_PWM_MspInit>
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	2202      	movs	r2, #2
 8005b94:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	681a      	ldr	r2, [r3, #0]
 8005b9c:	687b      	ldr	r3, [r7, #4]
 8005b9e:	3304      	adds	r3, #4
 8005ba0:	4619      	mov	r1, r3
 8005ba2:	4610      	mov	r0, r2
 8005ba4:	f000 fcd0 	bl	8006548 <TIM_Base_SetConfig>
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	2201      	movs	r2, #1
 8005bac:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8005bb0:	687b      	ldr	r3, [r7, #4]
 8005bb2:	2201      	movs	r2, #1
 8005bb4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005bb8:	687b      	ldr	r3, [r7, #4]
 8005bba:	2201      	movs	r2, #1
 8005bbc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	2201      	movs	r2, #1
 8005bc4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005bc8:	687b      	ldr	r3, [r7, #4]
 8005bca:	2201      	movs	r2, #1
 8005bcc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005bd0:	687b      	ldr	r3, [r7, #4]
 8005bd2:	2201      	movs	r2, #1
 8005bd4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005bd8:	687b      	ldr	r3, [r7, #4]
 8005bda:	2201      	movs	r2, #1
 8005bdc:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005be0:	687b      	ldr	r3, [r7, #4]
 8005be2:	2201      	movs	r2, #1
 8005be4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005be8:	687b      	ldr	r3, [r7, #4]
 8005bea:	2201      	movs	r2, #1
 8005bec:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	2201      	movs	r2, #1
 8005bf4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	2201      	movs	r2, #1
 8005bfc:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	2201      	movs	r2, #1
 8005c04:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005c08:	2300      	movs	r3, #0
 8005c0a:	4618      	mov	r0, r3
 8005c0c:	3708      	adds	r7, #8
 8005c0e:	46bd      	mov	sp, r7
 8005c10:	bd80      	pop	{r7, pc}

08005c12 <HAL_TIM_PWM_MspInit>:
 8005c12:	b480      	push	{r7}
 8005c14:	b083      	sub	sp, #12
 8005c16:	af00      	add	r7, sp, #0
 8005c18:	6078      	str	r0, [r7, #4]
 8005c1a:	bf00      	nop
 8005c1c:	370c      	adds	r7, #12
 8005c1e:	46bd      	mov	sp, r7
 8005c20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c24:	4770      	bx	lr
	...

08005c28 <HAL_TIM_PWM_Start>:
 8005c28:	b580      	push	{r7, lr}
 8005c2a:	b084      	sub	sp, #16
 8005c2c:	af00      	add	r7, sp, #0
 8005c2e:	6078      	str	r0, [r7, #4]
 8005c30:	6039      	str	r1, [r7, #0]
 8005c32:	683b      	ldr	r3, [r7, #0]
 8005c34:	2b00      	cmp	r3, #0
 8005c36:	d109      	bne.n	8005c4c <HAL_TIM_PWM_Start+0x24>
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8005c3e:	b2db      	uxtb	r3, r3
 8005c40:	2b01      	cmp	r3, #1
 8005c42:	bf14      	ite	ne
 8005c44:	2301      	movne	r3, #1
 8005c46:	2300      	moveq	r3, #0
 8005c48:	b2db      	uxtb	r3, r3
 8005c4a:	e03c      	b.n	8005cc6 <HAL_TIM_PWM_Start+0x9e>
 8005c4c:	683b      	ldr	r3, [r7, #0]
 8005c4e:	2b04      	cmp	r3, #4
 8005c50:	d109      	bne.n	8005c66 <HAL_TIM_PWM_Start+0x3e>
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8005c58:	b2db      	uxtb	r3, r3
 8005c5a:	2b01      	cmp	r3, #1
 8005c5c:	bf14      	ite	ne
 8005c5e:	2301      	movne	r3, #1
 8005c60:	2300      	moveq	r3, #0
 8005c62:	b2db      	uxtb	r3, r3
 8005c64:	e02f      	b.n	8005cc6 <HAL_TIM_PWM_Start+0x9e>
 8005c66:	683b      	ldr	r3, [r7, #0]
 8005c68:	2b08      	cmp	r3, #8
 8005c6a:	d109      	bne.n	8005c80 <HAL_TIM_PWM_Start+0x58>
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005c72:	b2db      	uxtb	r3, r3
 8005c74:	2b01      	cmp	r3, #1
 8005c76:	bf14      	ite	ne
 8005c78:	2301      	movne	r3, #1
 8005c7a:	2300      	moveq	r3, #0
 8005c7c:	b2db      	uxtb	r3, r3
 8005c7e:	e022      	b.n	8005cc6 <HAL_TIM_PWM_Start+0x9e>
 8005c80:	683b      	ldr	r3, [r7, #0]
 8005c82:	2b0c      	cmp	r3, #12
 8005c84:	d109      	bne.n	8005c9a <HAL_TIM_PWM_Start+0x72>
 8005c86:	687b      	ldr	r3, [r7, #4]
 8005c88:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005c8c:	b2db      	uxtb	r3, r3
 8005c8e:	2b01      	cmp	r3, #1
 8005c90:	bf14      	ite	ne
 8005c92:	2301      	movne	r3, #1
 8005c94:	2300      	moveq	r3, #0
 8005c96:	b2db      	uxtb	r3, r3
 8005c98:	e015      	b.n	8005cc6 <HAL_TIM_PWM_Start+0x9e>
 8005c9a:	683b      	ldr	r3, [r7, #0]
 8005c9c:	2b10      	cmp	r3, #16
 8005c9e:	d109      	bne.n	8005cb4 <HAL_TIM_PWM_Start+0x8c>
 8005ca0:	687b      	ldr	r3, [r7, #4]
 8005ca2:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005ca6:	b2db      	uxtb	r3, r3
 8005ca8:	2b01      	cmp	r3, #1
 8005caa:	bf14      	ite	ne
 8005cac:	2301      	movne	r3, #1
 8005cae:	2300      	moveq	r3, #0
 8005cb0:	b2db      	uxtb	r3, r3
 8005cb2:	e008      	b.n	8005cc6 <HAL_TIM_PWM_Start+0x9e>
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8005cba:	b2db      	uxtb	r3, r3
 8005cbc:	2b01      	cmp	r3, #1
 8005cbe:	bf14      	ite	ne
 8005cc0:	2301      	movne	r3, #1
 8005cc2:	2300      	moveq	r3, #0
 8005cc4:	b2db      	uxtb	r3, r3
 8005cc6:	2b00      	cmp	r3, #0
 8005cc8:	d001      	beq.n	8005cce <HAL_TIM_PWM_Start+0xa6>
 8005cca:	2301      	movs	r3, #1
 8005ccc:	e097      	b.n	8005dfe <HAL_TIM_PWM_Start+0x1d6>
 8005cce:	683b      	ldr	r3, [r7, #0]
 8005cd0:	2b00      	cmp	r3, #0
 8005cd2:	d104      	bne.n	8005cde <HAL_TIM_PWM_Start+0xb6>
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	2202      	movs	r2, #2
 8005cd8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005cdc:	e023      	b.n	8005d26 <HAL_TIM_PWM_Start+0xfe>
 8005cde:	683b      	ldr	r3, [r7, #0]
 8005ce0:	2b04      	cmp	r3, #4
 8005ce2:	d104      	bne.n	8005cee <HAL_TIM_PWM_Start+0xc6>
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	2202      	movs	r2, #2
 8005ce8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005cec:	e01b      	b.n	8005d26 <HAL_TIM_PWM_Start+0xfe>
 8005cee:	683b      	ldr	r3, [r7, #0]
 8005cf0:	2b08      	cmp	r3, #8
 8005cf2:	d104      	bne.n	8005cfe <HAL_TIM_PWM_Start+0xd6>
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	2202      	movs	r2, #2
 8005cf8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005cfc:	e013      	b.n	8005d26 <HAL_TIM_PWM_Start+0xfe>
 8005cfe:	683b      	ldr	r3, [r7, #0]
 8005d00:	2b0c      	cmp	r3, #12
 8005d02:	d104      	bne.n	8005d0e <HAL_TIM_PWM_Start+0xe6>
 8005d04:	687b      	ldr	r3, [r7, #4]
 8005d06:	2202      	movs	r2, #2
 8005d08:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005d0c:	e00b      	b.n	8005d26 <HAL_TIM_PWM_Start+0xfe>
 8005d0e:	683b      	ldr	r3, [r7, #0]
 8005d10:	2b10      	cmp	r3, #16
 8005d12:	d104      	bne.n	8005d1e <HAL_TIM_PWM_Start+0xf6>
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	2202      	movs	r2, #2
 8005d18:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005d1c:	e003      	b.n	8005d26 <HAL_TIM_PWM_Start+0xfe>
 8005d1e:	687b      	ldr	r3, [r7, #4]
 8005d20:	2202      	movs	r2, #2
 8005d22:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	2201      	movs	r2, #1
 8005d2c:	6839      	ldr	r1, [r7, #0]
 8005d2e:	4618      	mov	r0, r3
 8005d30:	f001 f838 	bl	8006da4 <TIM_CCxChannelCmd>
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	681b      	ldr	r3, [r3, #0]
 8005d38:	4a33      	ldr	r2, [pc, #204]	@ (8005e08 <HAL_TIM_PWM_Start+0x1e0>)
 8005d3a:	4293      	cmp	r3, r2
 8005d3c:	d013      	beq.n	8005d66 <HAL_TIM_PWM_Start+0x13e>
 8005d3e:	687b      	ldr	r3, [r7, #4]
 8005d40:	681b      	ldr	r3, [r3, #0]
 8005d42:	4a32      	ldr	r2, [pc, #200]	@ (8005e0c <HAL_TIM_PWM_Start+0x1e4>)
 8005d44:	4293      	cmp	r3, r2
 8005d46:	d00e      	beq.n	8005d66 <HAL_TIM_PWM_Start+0x13e>
 8005d48:	687b      	ldr	r3, [r7, #4]
 8005d4a:	681b      	ldr	r3, [r3, #0]
 8005d4c:	4a30      	ldr	r2, [pc, #192]	@ (8005e10 <HAL_TIM_PWM_Start+0x1e8>)
 8005d4e:	4293      	cmp	r3, r2
 8005d50:	d009      	beq.n	8005d66 <HAL_TIM_PWM_Start+0x13e>
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	4a2f      	ldr	r2, [pc, #188]	@ (8005e14 <HAL_TIM_PWM_Start+0x1ec>)
 8005d58:	4293      	cmp	r3, r2
 8005d5a:	d004      	beq.n	8005d66 <HAL_TIM_PWM_Start+0x13e>
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	681b      	ldr	r3, [r3, #0]
 8005d60:	4a2d      	ldr	r2, [pc, #180]	@ (8005e18 <HAL_TIM_PWM_Start+0x1f0>)
 8005d62:	4293      	cmp	r3, r2
 8005d64:	d101      	bne.n	8005d6a <HAL_TIM_PWM_Start+0x142>
 8005d66:	2301      	movs	r3, #1
 8005d68:	e000      	b.n	8005d6c <HAL_TIM_PWM_Start+0x144>
 8005d6a:	2300      	movs	r3, #0
 8005d6c:	2b00      	cmp	r3, #0
 8005d6e:	d007      	beq.n	8005d80 <HAL_TIM_PWM_Start+0x158>
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	681b      	ldr	r3, [r3, #0]
 8005d74:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005d76:	687b      	ldr	r3, [r7, #4]
 8005d78:	681b      	ldr	r3, [r3, #0]
 8005d7a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005d7e:	645a      	str	r2, [r3, #68]	@ 0x44
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	4a20      	ldr	r2, [pc, #128]	@ (8005e08 <HAL_TIM_PWM_Start+0x1e0>)
 8005d86:	4293      	cmp	r3, r2
 8005d88:	d018      	beq.n	8005dbc <HAL_TIM_PWM_Start+0x194>
 8005d8a:	687b      	ldr	r3, [r7, #4]
 8005d8c:	681b      	ldr	r3, [r3, #0]
 8005d8e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005d92:	d013      	beq.n	8005dbc <HAL_TIM_PWM_Start+0x194>
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	681b      	ldr	r3, [r3, #0]
 8005d98:	4a20      	ldr	r2, [pc, #128]	@ (8005e1c <HAL_TIM_PWM_Start+0x1f4>)
 8005d9a:	4293      	cmp	r3, r2
 8005d9c:	d00e      	beq.n	8005dbc <HAL_TIM_PWM_Start+0x194>
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	681b      	ldr	r3, [r3, #0]
 8005da2:	4a1f      	ldr	r2, [pc, #124]	@ (8005e20 <HAL_TIM_PWM_Start+0x1f8>)
 8005da4:	4293      	cmp	r3, r2
 8005da6:	d009      	beq.n	8005dbc <HAL_TIM_PWM_Start+0x194>
 8005da8:	687b      	ldr	r3, [r7, #4]
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	4a17      	ldr	r2, [pc, #92]	@ (8005e0c <HAL_TIM_PWM_Start+0x1e4>)
 8005dae:	4293      	cmp	r3, r2
 8005db0:	d004      	beq.n	8005dbc <HAL_TIM_PWM_Start+0x194>
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	681b      	ldr	r3, [r3, #0]
 8005db6:	4a16      	ldr	r2, [pc, #88]	@ (8005e10 <HAL_TIM_PWM_Start+0x1e8>)
 8005db8:	4293      	cmp	r3, r2
 8005dba:	d115      	bne.n	8005de8 <HAL_TIM_PWM_Start+0x1c0>
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	681b      	ldr	r3, [r3, #0]
 8005dc0:	689a      	ldr	r2, [r3, #8]
 8005dc2:	4b18      	ldr	r3, [pc, #96]	@ (8005e24 <HAL_TIM_PWM_Start+0x1fc>)
 8005dc4:	4013      	ands	r3, r2
 8005dc6:	60fb      	str	r3, [r7, #12]
 8005dc8:	68fb      	ldr	r3, [r7, #12]
 8005dca:	2b06      	cmp	r3, #6
 8005dcc:	d015      	beq.n	8005dfa <HAL_TIM_PWM_Start+0x1d2>
 8005dce:	68fb      	ldr	r3, [r7, #12]
 8005dd0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005dd4:	d011      	beq.n	8005dfa <HAL_TIM_PWM_Start+0x1d2>
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	681b      	ldr	r3, [r3, #0]
 8005dda:	681a      	ldr	r2, [r3, #0]
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	681b      	ldr	r3, [r3, #0]
 8005de0:	f042 0201 	orr.w	r2, r2, #1
 8005de4:	601a      	str	r2, [r3, #0]
 8005de6:	e008      	b.n	8005dfa <HAL_TIM_PWM_Start+0x1d2>
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	681b      	ldr	r3, [r3, #0]
 8005dec:	681a      	ldr	r2, [r3, #0]
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	681b      	ldr	r3, [r3, #0]
 8005df2:	f042 0201 	orr.w	r2, r2, #1
 8005df6:	601a      	str	r2, [r3, #0]
 8005df8:	e000      	b.n	8005dfc <HAL_TIM_PWM_Start+0x1d4>
 8005dfa:	bf00      	nop
 8005dfc:	2300      	movs	r3, #0
 8005dfe:	4618      	mov	r0, r3
 8005e00:	3710      	adds	r7, #16
 8005e02:	46bd      	mov	sp, r7
 8005e04:	bd80      	pop	{r7, pc}
 8005e06:	bf00      	nop
 8005e08:	40012c00 	.word	0x40012c00
 8005e0c:	40013400 	.word	0x40013400
 8005e10:	40014000 	.word	0x40014000
 8005e14:	40014400 	.word	0x40014400
 8005e18:	40014800 	.word	0x40014800
 8005e1c:	40000400 	.word	0x40000400
 8005e20:	40000800 	.word	0x40000800
 8005e24:	00010007 	.word	0x00010007

08005e28 <HAL_TIM_IRQHandler>:
 8005e28:	b580      	push	{r7, lr}
 8005e2a:	b084      	sub	sp, #16
 8005e2c:	af00      	add	r7, sp, #0
 8005e2e:	6078      	str	r0, [r7, #4]
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	68db      	ldr	r3, [r3, #12]
 8005e36:	60fb      	str	r3, [r7, #12]
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	691b      	ldr	r3, [r3, #16]
 8005e3e:	60bb      	str	r3, [r7, #8]
 8005e40:	68bb      	ldr	r3, [r7, #8]
 8005e42:	f003 0302 	and.w	r3, r3, #2
 8005e46:	2b00      	cmp	r3, #0
 8005e48:	d020      	beq.n	8005e8c <HAL_TIM_IRQHandler+0x64>
 8005e4a:	68fb      	ldr	r3, [r7, #12]
 8005e4c:	f003 0302 	and.w	r3, r3, #2
 8005e50:	2b00      	cmp	r3, #0
 8005e52:	d01b      	beq.n	8005e8c <HAL_TIM_IRQHandler+0x64>
 8005e54:	687b      	ldr	r3, [r7, #4]
 8005e56:	681b      	ldr	r3, [r3, #0]
 8005e58:	f06f 0202 	mvn.w	r2, #2
 8005e5c:	611a      	str	r2, [r3, #16]
 8005e5e:	687b      	ldr	r3, [r7, #4]
 8005e60:	2201      	movs	r2, #1
 8005e62:	771a      	strb	r2, [r3, #28]
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	699b      	ldr	r3, [r3, #24]
 8005e6a:	f003 0303 	and.w	r3, r3, #3
 8005e6e:	2b00      	cmp	r3, #0
 8005e70:	d003      	beq.n	8005e7a <HAL_TIM_IRQHandler+0x52>
 8005e72:	6878      	ldr	r0, [r7, #4]
 8005e74:	f000 fb4a 	bl	800650c <HAL_TIM_IC_CaptureCallback>
 8005e78:	e005      	b.n	8005e86 <HAL_TIM_IRQHandler+0x5e>
 8005e7a:	6878      	ldr	r0, [r7, #4]
 8005e7c:	f000 fb3c 	bl	80064f8 <HAL_TIM_OC_DelayElapsedCallback>
 8005e80:	6878      	ldr	r0, [r7, #4]
 8005e82:	f000 fb4d 	bl	8006520 <HAL_TIM_PWM_PulseFinishedCallback>
 8005e86:	687b      	ldr	r3, [r7, #4]
 8005e88:	2200      	movs	r2, #0
 8005e8a:	771a      	strb	r2, [r3, #28]
 8005e8c:	68bb      	ldr	r3, [r7, #8]
 8005e8e:	f003 0304 	and.w	r3, r3, #4
 8005e92:	2b00      	cmp	r3, #0
 8005e94:	d020      	beq.n	8005ed8 <HAL_TIM_IRQHandler+0xb0>
 8005e96:	68fb      	ldr	r3, [r7, #12]
 8005e98:	f003 0304 	and.w	r3, r3, #4
 8005e9c:	2b00      	cmp	r3, #0
 8005e9e:	d01b      	beq.n	8005ed8 <HAL_TIM_IRQHandler+0xb0>
 8005ea0:	687b      	ldr	r3, [r7, #4]
 8005ea2:	681b      	ldr	r3, [r3, #0]
 8005ea4:	f06f 0204 	mvn.w	r2, #4
 8005ea8:	611a      	str	r2, [r3, #16]
 8005eaa:	687b      	ldr	r3, [r7, #4]
 8005eac:	2202      	movs	r2, #2
 8005eae:	771a      	strb	r2, [r3, #28]
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	681b      	ldr	r3, [r3, #0]
 8005eb4:	699b      	ldr	r3, [r3, #24]
 8005eb6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005eba:	2b00      	cmp	r3, #0
 8005ebc:	d003      	beq.n	8005ec6 <HAL_TIM_IRQHandler+0x9e>
 8005ebe:	6878      	ldr	r0, [r7, #4]
 8005ec0:	f000 fb24 	bl	800650c <HAL_TIM_IC_CaptureCallback>
 8005ec4:	e005      	b.n	8005ed2 <HAL_TIM_IRQHandler+0xaa>
 8005ec6:	6878      	ldr	r0, [r7, #4]
 8005ec8:	f000 fb16 	bl	80064f8 <HAL_TIM_OC_DelayElapsedCallback>
 8005ecc:	6878      	ldr	r0, [r7, #4]
 8005ece:	f000 fb27 	bl	8006520 <HAL_TIM_PWM_PulseFinishedCallback>
 8005ed2:	687b      	ldr	r3, [r7, #4]
 8005ed4:	2200      	movs	r2, #0
 8005ed6:	771a      	strb	r2, [r3, #28]
 8005ed8:	68bb      	ldr	r3, [r7, #8]
 8005eda:	f003 0308 	and.w	r3, r3, #8
 8005ede:	2b00      	cmp	r3, #0
 8005ee0:	d020      	beq.n	8005f24 <HAL_TIM_IRQHandler+0xfc>
 8005ee2:	68fb      	ldr	r3, [r7, #12]
 8005ee4:	f003 0308 	and.w	r3, r3, #8
 8005ee8:	2b00      	cmp	r3, #0
 8005eea:	d01b      	beq.n	8005f24 <HAL_TIM_IRQHandler+0xfc>
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	681b      	ldr	r3, [r3, #0]
 8005ef0:	f06f 0208 	mvn.w	r2, #8
 8005ef4:	611a      	str	r2, [r3, #16]
 8005ef6:	687b      	ldr	r3, [r7, #4]
 8005ef8:	2204      	movs	r2, #4
 8005efa:	771a      	strb	r2, [r3, #28]
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	681b      	ldr	r3, [r3, #0]
 8005f00:	69db      	ldr	r3, [r3, #28]
 8005f02:	f003 0303 	and.w	r3, r3, #3
 8005f06:	2b00      	cmp	r3, #0
 8005f08:	d003      	beq.n	8005f12 <HAL_TIM_IRQHandler+0xea>
 8005f0a:	6878      	ldr	r0, [r7, #4]
 8005f0c:	f000 fafe 	bl	800650c <HAL_TIM_IC_CaptureCallback>
 8005f10:	e005      	b.n	8005f1e <HAL_TIM_IRQHandler+0xf6>
 8005f12:	6878      	ldr	r0, [r7, #4]
 8005f14:	f000 faf0 	bl	80064f8 <HAL_TIM_OC_DelayElapsedCallback>
 8005f18:	6878      	ldr	r0, [r7, #4]
 8005f1a:	f000 fb01 	bl	8006520 <HAL_TIM_PWM_PulseFinishedCallback>
 8005f1e:	687b      	ldr	r3, [r7, #4]
 8005f20:	2200      	movs	r2, #0
 8005f22:	771a      	strb	r2, [r3, #28]
 8005f24:	68bb      	ldr	r3, [r7, #8]
 8005f26:	f003 0310 	and.w	r3, r3, #16
 8005f2a:	2b00      	cmp	r3, #0
 8005f2c:	d020      	beq.n	8005f70 <HAL_TIM_IRQHandler+0x148>
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	f003 0310 	and.w	r3, r3, #16
 8005f34:	2b00      	cmp	r3, #0
 8005f36:	d01b      	beq.n	8005f70 <HAL_TIM_IRQHandler+0x148>
 8005f38:	687b      	ldr	r3, [r7, #4]
 8005f3a:	681b      	ldr	r3, [r3, #0]
 8005f3c:	f06f 0210 	mvn.w	r2, #16
 8005f40:	611a      	str	r2, [r3, #16]
 8005f42:	687b      	ldr	r3, [r7, #4]
 8005f44:	2208      	movs	r2, #8
 8005f46:	771a      	strb	r2, [r3, #28]
 8005f48:	687b      	ldr	r3, [r7, #4]
 8005f4a:	681b      	ldr	r3, [r3, #0]
 8005f4c:	69db      	ldr	r3, [r3, #28]
 8005f4e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005f52:	2b00      	cmp	r3, #0
 8005f54:	d003      	beq.n	8005f5e <HAL_TIM_IRQHandler+0x136>
 8005f56:	6878      	ldr	r0, [r7, #4]
 8005f58:	f000 fad8 	bl	800650c <HAL_TIM_IC_CaptureCallback>
 8005f5c:	e005      	b.n	8005f6a <HAL_TIM_IRQHandler+0x142>
 8005f5e:	6878      	ldr	r0, [r7, #4]
 8005f60:	f000 faca 	bl	80064f8 <HAL_TIM_OC_DelayElapsedCallback>
 8005f64:	6878      	ldr	r0, [r7, #4]
 8005f66:	f000 fadb 	bl	8006520 <HAL_TIM_PWM_PulseFinishedCallback>
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	2200      	movs	r2, #0
 8005f6e:	771a      	strb	r2, [r3, #28]
 8005f70:	68bb      	ldr	r3, [r7, #8]
 8005f72:	f003 0301 	and.w	r3, r3, #1
 8005f76:	2b00      	cmp	r3, #0
 8005f78:	d00c      	beq.n	8005f94 <HAL_TIM_IRQHandler+0x16c>
 8005f7a:	68fb      	ldr	r3, [r7, #12]
 8005f7c:	f003 0301 	and.w	r3, r3, #1
 8005f80:	2b00      	cmp	r3, #0
 8005f82:	d007      	beq.n	8005f94 <HAL_TIM_IRQHandler+0x16c>
 8005f84:	687b      	ldr	r3, [r7, #4]
 8005f86:	681b      	ldr	r3, [r3, #0]
 8005f88:	f06f 0201 	mvn.w	r2, #1
 8005f8c:	611a      	str	r2, [r3, #16]
 8005f8e:	6878      	ldr	r0, [r7, #4]
 8005f90:	f000 faa8 	bl	80064e4 <HAL_TIM_PeriodElapsedCallback>
 8005f94:	68bb      	ldr	r3, [r7, #8]
 8005f96:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005f9a:	2b00      	cmp	r3, #0
 8005f9c:	d104      	bne.n	8005fa8 <HAL_TIM_IRQHandler+0x180>
 8005f9e:	68bb      	ldr	r3, [r7, #8]
 8005fa0:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8005fa4:	2b00      	cmp	r3, #0
 8005fa6:	d00c      	beq.n	8005fc2 <HAL_TIM_IRQHandler+0x19a>
 8005fa8:	68fb      	ldr	r3, [r7, #12]
 8005faa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005fae:	2b00      	cmp	r3, #0
 8005fb0:	d007      	beq.n	8005fc2 <HAL_TIM_IRQHandler+0x19a>
 8005fb2:	687b      	ldr	r3, [r7, #4]
 8005fb4:	681b      	ldr	r3, [r3, #0]
 8005fb6:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8005fba:	611a      	str	r2, [r3, #16]
 8005fbc:	6878      	ldr	r0, [r7, #4]
 8005fbe:	f001 f82f 	bl	8007020 <HAL_TIMEx_BreakCallback>
 8005fc2:	68bb      	ldr	r3, [r7, #8]
 8005fc4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005fc8:	2b00      	cmp	r3, #0
 8005fca:	d00c      	beq.n	8005fe6 <HAL_TIM_IRQHandler+0x1be>
 8005fcc:	68fb      	ldr	r3, [r7, #12]
 8005fce:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005fd2:	2b00      	cmp	r3, #0
 8005fd4:	d007      	beq.n	8005fe6 <HAL_TIM_IRQHandler+0x1be>
 8005fd6:	687b      	ldr	r3, [r7, #4]
 8005fd8:	681b      	ldr	r3, [r3, #0]
 8005fda:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8005fde:	611a      	str	r2, [r3, #16]
 8005fe0:	6878      	ldr	r0, [r7, #4]
 8005fe2:	f001 f827 	bl	8007034 <HAL_TIMEx_Break2Callback>
 8005fe6:	68bb      	ldr	r3, [r7, #8]
 8005fe8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005fec:	2b00      	cmp	r3, #0
 8005fee:	d00c      	beq.n	800600a <HAL_TIM_IRQHandler+0x1e2>
 8005ff0:	68fb      	ldr	r3, [r7, #12]
 8005ff2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005ff6:	2b00      	cmp	r3, #0
 8005ff8:	d007      	beq.n	800600a <HAL_TIM_IRQHandler+0x1e2>
 8005ffa:	687b      	ldr	r3, [r7, #4]
 8005ffc:	681b      	ldr	r3, [r3, #0]
 8005ffe:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006002:	611a      	str	r2, [r3, #16]
 8006004:	6878      	ldr	r0, [r7, #4]
 8006006:	f000 fa95 	bl	8006534 <HAL_TIM_TriggerCallback>
 800600a:	68bb      	ldr	r3, [r7, #8]
 800600c:	f003 0320 	and.w	r3, r3, #32
 8006010:	2b00      	cmp	r3, #0
 8006012:	d00c      	beq.n	800602e <HAL_TIM_IRQHandler+0x206>
 8006014:	68fb      	ldr	r3, [r7, #12]
 8006016:	f003 0320 	and.w	r3, r3, #32
 800601a:	2b00      	cmp	r3, #0
 800601c:	d007      	beq.n	800602e <HAL_TIM_IRQHandler+0x206>
 800601e:	687b      	ldr	r3, [r7, #4]
 8006020:	681b      	ldr	r3, [r3, #0]
 8006022:	f06f 0220 	mvn.w	r2, #32
 8006026:	611a      	str	r2, [r3, #16]
 8006028:	6878      	ldr	r0, [r7, #4]
 800602a:	f000 ffef 	bl	800700c <HAL_TIMEx_CommutCallback>
 800602e:	68bb      	ldr	r3, [r7, #8]
 8006030:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006034:	2b00      	cmp	r3, #0
 8006036:	d00c      	beq.n	8006052 <HAL_TIM_IRQHandler+0x22a>
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800603e:	2b00      	cmp	r3, #0
 8006040:	d007      	beq.n	8006052 <HAL_TIM_IRQHandler+0x22a>
 8006042:	687b      	ldr	r3, [r7, #4]
 8006044:	681b      	ldr	r3, [r3, #0]
 8006046:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 800604a:	611a      	str	r2, [r3, #16]
 800604c:	6878      	ldr	r0, [r7, #4]
 800604e:	f000 fffb 	bl	8007048 <HAL_TIMEx_EncoderIndexCallback>
 8006052:	68bb      	ldr	r3, [r7, #8]
 8006054:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006058:	2b00      	cmp	r3, #0
 800605a:	d00c      	beq.n	8006076 <HAL_TIM_IRQHandler+0x24e>
 800605c:	68fb      	ldr	r3, [r7, #12]
 800605e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006062:	2b00      	cmp	r3, #0
 8006064:	d007      	beq.n	8006076 <HAL_TIM_IRQHandler+0x24e>
 8006066:	687b      	ldr	r3, [r7, #4]
 8006068:	681b      	ldr	r3, [r3, #0]
 800606a:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 800606e:	611a      	str	r2, [r3, #16]
 8006070:	6878      	ldr	r0, [r7, #4]
 8006072:	f000 fff3 	bl	800705c <HAL_TIMEx_DirectionChangeCallback>
 8006076:	68bb      	ldr	r3, [r7, #8]
 8006078:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800607c:	2b00      	cmp	r3, #0
 800607e:	d00c      	beq.n	800609a <HAL_TIM_IRQHandler+0x272>
 8006080:	68fb      	ldr	r3, [r7, #12]
 8006082:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006086:	2b00      	cmp	r3, #0
 8006088:	d007      	beq.n	800609a <HAL_TIM_IRQHandler+0x272>
 800608a:	687b      	ldr	r3, [r7, #4]
 800608c:	681b      	ldr	r3, [r3, #0]
 800608e:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8006092:	611a      	str	r2, [r3, #16]
 8006094:	6878      	ldr	r0, [r7, #4]
 8006096:	f000 ffeb 	bl	8007070 <HAL_TIMEx_IndexErrorCallback>
 800609a:	68bb      	ldr	r3, [r7, #8]
 800609c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80060a0:	2b00      	cmp	r3, #0
 80060a2:	d00c      	beq.n	80060be <HAL_TIM_IRQHandler+0x296>
 80060a4:	68fb      	ldr	r3, [r7, #12]
 80060a6:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80060aa:	2b00      	cmp	r3, #0
 80060ac:	d007      	beq.n	80060be <HAL_TIM_IRQHandler+0x296>
 80060ae:	687b      	ldr	r3, [r7, #4]
 80060b0:	681b      	ldr	r3, [r3, #0]
 80060b2:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 80060b6:	611a      	str	r2, [r3, #16]
 80060b8:	6878      	ldr	r0, [r7, #4]
 80060ba:	f000 ffe3 	bl	8007084 <HAL_TIMEx_TransitionErrorCallback>
 80060be:	bf00      	nop
 80060c0:	3710      	adds	r7, #16
 80060c2:	46bd      	mov	sp, r7
 80060c4:	bd80      	pop	{r7, pc}
	...

080060c8 <HAL_TIM_PWM_ConfigChannel>:
 80060c8:	b580      	push	{r7, lr}
 80060ca:	b086      	sub	sp, #24
 80060cc:	af00      	add	r7, sp, #0
 80060ce:	60f8      	str	r0, [r7, #12]
 80060d0:	60b9      	str	r1, [r7, #8]
 80060d2:	607a      	str	r2, [r7, #4]
 80060d4:	2300      	movs	r3, #0
 80060d6:	75fb      	strb	r3, [r7, #23]
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80060de:	2b01      	cmp	r3, #1
 80060e0:	d101      	bne.n	80060e6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80060e2:	2302      	movs	r3, #2
 80060e4:	e0ff      	b.n	80062e6 <HAL_TIM_PWM_ConfigChannel+0x21e>
 80060e6:	68fb      	ldr	r3, [r7, #12]
 80060e8:	2201      	movs	r2, #1
 80060ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	2b14      	cmp	r3, #20
 80060f2:	f200 80f0 	bhi.w	80062d6 <HAL_TIM_PWM_ConfigChannel+0x20e>
 80060f6:	a201      	add	r2, pc, #4	@ (adr r2, 80060fc <HAL_TIM_PWM_ConfigChannel+0x34>)
 80060f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80060fc:	08006151 	.word	0x08006151
 8006100:	080062d7 	.word	0x080062d7
 8006104:	080062d7 	.word	0x080062d7
 8006108:	080062d7 	.word	0x080062d7
 800610c:	08006191 	.word	0x08006191
 8006110:	080062d7 	.word	0x080062d7
 8006114:	080062d7 	.word	0x080062d7
 8006118:	080062d7 	.word	0x080062d7
 800611c:	080061d3 	.word	0x080061d3
 8006120:	080062d7 	.word	0x080062d7
 8006124:	080062d7 	.word	0x080062d7
 8006128:	080062d7 	.word	0x080062d7
 800612c:	08006213 	.word	0x08006213
 8006130:	080062d7 	.word	0x080062d7
 8006134:	080062d7 	.word	0x080062d7
 8006138:	080062d7 	.word	0x080062d7
 800613c:	08006255 	.word	0x08006255
 8006140:	080062d7 	.word	0x080062d7
 8006144:	080062d7 	.word	0x080062d7
 8006148:	080062d7 	.word	0x080062d7
 800614c:	08006295 	.word	0x08006295
 8006150:	68fb      	ldr	r3, [r7, #12]
 8006152:	681b      	ldr	r3, [r3, #0]
 8006154:	68b9      	ldr	r1, [r7, #8]
 8006156:	4618      	mov	r0, r3
 8006158:	f000 fa92 	bl	8006680 <TIM_OC1_SetConfig>
 800615c:	68fb      	ldr	r3, [r7, #12]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	699a      	ldr	r2, [r3, #24]
 8006162:	68fb      	ldr	r3, [r7, #12]
 8006164:	681b      	ldr	r3, [r3, #0]
 8006166:	f042 0208 	orr.w	r2, r2, #8
 800616a:	619a      	str	r2, [r3, #24]
 800616c:	68fb      	ldr	r3, [r7, #12]
 800616e:	681b      	ldr	r3, [r3, #0]
 8006170:	699a      	ldr	r2, [r3, #24]
 8006172:	68fb      	ldr	r3, [r7, #12]
 8006174:	681b      	ldr	r3, [r3, #0]
 8006176:	f022 0204 	bic.w	r2, r2, #4
 800617a:	619a      	str	r2, [r3, #24]
 800617c:	68fb      	ldr	r3, [r7, #12]
 800617e:	681b      	ldr	r3, [r3, #0]
 8006180:	6999      	ldr	r1, [r3, #24]
 8006182:	68bb      	ldr	r3, [r7, #8]
 8006184:	691a      	ldr	r2, [r3, #16]
 8006186:	68fb      	ldr	r3, [r7, #12]
 8006188:	681b      	ldr	r3, [r3, #0]
 800618a:	430a      	orrs	r2, r1
 800618c:	619a      	str	r2, [r3, #24]
 800618e:	e0a5      	b.n	80062dc <HAL_TIM_PWM_ConfigChannel+0x214>
 8006190:	68fb      	ldr	r3, [r7, #12]
 8006192:	681b      	ldr	r3, [r3, #0]
 8006194:	68b9      	ldr	r1, [r7, #8]
 8006196:	4618      	mov	r0, r3
 8006198:	f000 fb02 	bl	80067a0 <TIM_OC2_SetConfig>
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	681b      	ldr	r3, [r3, #0]
 80061a0:	699a      	ldr	r2, [r3, #24]
 80061a2:	68fb      	ldr	r3, [r7, #12]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80061aa:	619a      	str	r2, [r3, #24]
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	681b      	ldr	r3, [r3, #0]
 80061b0:	699a      	ldr	r2, [r3, #24]
 80061b2:	68fb      	ldr	r3, [r7, #12]
 80061b4:	681b      	ldr	r3, [r3, #0]
 80061b6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80061ba:	619a      	str	r2, [r3, #24]
 80061bc:	68fb      	ldr	r3, [r7, #12]
 80061be:	681b      	ldr	r3, [r3, #0]
 80061c0:	6999      	ldr	r1, [r3, #24]
 80061c2:	68bb      	ldr	r3, [r7, #8]
 80061c4:	691b      	ldr	r3, [r3, #16]
 80061c6:	021a      	lsls	r2, r3, #8
 80061c8:	68fb      	ldr	r3, [r7, #12]
 80061ca:	681b      	ldr	r3, [r3, #0]
 80061cc:	430a      	orrs	r2, r1
 80061ce:	619a      	str	r2, [r3, #24]
 80061d0:	e084      	b.n	80062dc <HAL_TIM_PWM_ConfigChannel+0x214>
 80061d2:	68fb      	ldr	r3, [r7, #12]
 80061d4:	681b      	ldr	r3, [r3, #0]
 80061d6:	68b9      	ldr	r1, [r7, #8]
 80061d8:	4618      	mov	r0, r3
 80061da:	f000 fb6b 	bl	80068b4 <TIM_OC3_SetConfig>
 80061de:	68fb      	ldr	r3, [r7, #12]
 80061e0:	681b      	ldr	r3, [r3, #0]
 80061e2:	69da      	ldr	r2, [r3, #28]
 80061e4:	68fb      	ldr	r3, [r7, #12]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	f042 0208 	orr.w	r2, r2, #8
 80061ec:	61da      	str	r2, [r3, #28]
 80061ee:	68fb      	ldr	r3, [r7, #12]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	69da      	ldr	r2, [r3, #28]
 80061f4:	68fb      	ldr	r3, [r7, #12]
 80061f6:	681b      	ldr	r3, [r3, #0]
 80061f8:	f022 0204 	bic.w	r2, r2, #4
 80061fc:	61da      	str	r2, [r3, #28]
 80061fe:	68fb      	ldr	r3, [r7, #12]
 8006200:	681b      	ldr	r3, [r3, #0]
 8006202:	69d9      	ldr	r1, [r3, #28]
 8006204:	68bb      	ldr	r3, [r7, #8]
 8006206:	691a      	ldr	r2, [r3, #16]
 8006208:	68fb      	ldr	r3, [r7, #12]
 800620a:	681b      	ldr	r3, [r3, #0]
 800620c:	430a      	orrs	r2, r1
 800620e:	61da      	str	r2, [r3, #28]
 8006210:	e064      	b.n	80062dc <HAL_TIM_PWM_ConfigChannel+0x214>
 8006212:	68fb      	ldr	r3, [r7, #12]
 8006214:	681b      	ldr	r3, [r3, #0]
 8006216:	68b9      	ldr	r1, [r7, #8]
 8006218:	4618      	mov	r0, r3
 800621a:	f000 fbd3 	bl	80069c4 <TIM_OC4_SetConfig>
 800621e:	68fb      	ldr	r3, [r7, #12]
 8006220:	681b      	ldr	r3, [r3, #0]
 8006222:	69da      	ldr	r2, [r3, #28]
 8006224:	68fb      	ldr	r3, [r7, #12]
 8006226:	681b      	ldr	r3, [r3, #0]
 8006228:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800622c:	61da      	str	r2, [r3, #28]
 800622e:	68fb      	ldr	r3, [r7, #12]
 8006230:	681b      	ldr	r3, [r3, #0]
 8006232:	69da      	ldr	r2, [r3, #28]
 8006234:	68fb      	ldr	r3, [r7, #12]
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800623c:	61da      	str	r2, [r3, #28]
 800623e:	68fb      	ldr	r3, [r7, #12]
 8006240:	681b      	ldr	r3, [r3, #0]
 8006242:	69d9      	ldr	r1, [r3, #28]
 8006244:	68bb      	ldr	r3, [r7, #8]
 8006246:	691b      	ldr	r3, [r3, #16]
 8006248:	021a      	lsls	r2, r3, #8
 800624a:	68fb      	ldr	r3, [r7, #12]
 800624c:	681b      	ldr	r3, [r3, #0]
 800624e:	430a      	orrs	r2, r1
 8006250:	61da      	str	r2, [r3, #28]
 8006252:	e043      	b.n	80062dc <HAL_TIM_PWM_ConfigChannel+0x214>
 8006254:	68fb      	ldr	r3, [r7, #12]
 8006256:	681b      	ldr	r3, [r3, #0]
 8006258:	68b9      	ldr	r1, [r7, #8]
 800625a:	4618      	mov	r0, r3
 800625c:	f000 fc3c 	bl	8006ad8 <TIM_OC5_SetConfig>
 8006260:	68fb      	ldr	r3, [r7, #12]
 8006262:	681b      	ldr	r3, [r3, #0]
 8006264:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8006266:	68fb      	ldr	r3, [r7, #12]
 8006268:	681b      	ldr	r3, [r3, #0]
 800626a:	f042 0208 	orr.w	r2, r2, #8
 800626e:	651a      	str	r2, [r3, #80]	@ 0x50
 8006270:	68fb      	ldr	r3, [r7, #12]
 8006272:	681b      	ldr	r3, [r3, #0]
 8006274:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8006276:	68fb      	ldr	r3, [r7, #12]
 8006278:	681b      	ldr	r3, [r3, #0]
 800627a:	f022 0204 	bic.w	r2, r2, #4
 800627e:	651a      	str	r2, [r3, #80]	@ 0x50
 8006280:	68fb      	ldr	r3, [r7, #12]
 8006282:	681b      	ldr	r3, [r3, #0]
 8006284:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 8006286:	68bb      	ldr	r3, [r7, #8]
 8006288:	691a      	ldr	r2, [r3, #16]
 800628a:	68fb      	ldr	r3, [r7, #12]
 800628c:	681b      	ldr	r3, [r3, #0]
 800628e:	430a      	orrs	r2, r1
 8006290:	651a      	str	r2, [r3, #80]	@ 0x50
 8006292:	e023      	b.n	80062dc <HAL_TIM_PWM_ConfigChannel+0x214>
 8006294:	68fb      	ldr	r3, [r7, #12]
 8006296:	681b      	ldr	r3, [r3, #0]
 8006298:	68b9      	ldr	r1, [r7, #8]
 800629a:	4618      	mov	r0, r3
 800629c:	f000 fc80 	bl	8006ba0 <TIM_OC6_SetConfig>
 80062a0:	68fb      	ldr	r3, [r7, #12]
 80062a2:	681b      	ldr	r3, [r3, #0]
 80062a4:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 80062a6:	68fb      	ldr	r3, [r7, #12]
 80062a8:	681b      	ldr	r3, [r3, #0]
 80062aa:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80062ae:	651a      	str	r2, [r3, #80]	@ 0x50
 80062b0:	68fb      	ldr	r3, [r7, #12]
 80062b2:	681b      	ldr	r3, [r3, #0]
 80062b4:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 80062b6:	68fb      	ldr	r3, [r7, #12]
 80062b8:	681b      	ldr	r3, [r3, #0]
 80062ba:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80062be:	651a      	str	r2, [r3, #80]	@ 0x50
 80062c0:	68fb      	ldr	r3, [r7, #12]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 80062c6:	68bb      	ldr	r3, [r7, #8]
 80062c8:	691b      	ldr	r3, [r3, #16]
 80062ca:	021a      	lsls	r2, r3, #8
 80062cc:	68fb      	ldr	r3, [r7, #12]
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	430a      	orrs	r2, r1
 80062d2:	651a      	str	r2, [r3, #80]	@ 0x50
 80062d4:	e002      	b.n	80062dc <HAL_TIM_PWM_ConfigChannel+0x214>
 80062d6:	2301      	movs	r3, #1
 80062d8:	75fb      	strb	r3, [r7, #23]
 80062da:	bf00      	nop
 80062dc:	68fb      	ldr	r3, [r7, #12]
 80062de:	2200      	movs	r2, #0
 80062e0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80062e4:	7dfb      	ldrb	r3, [r7, #23]
 80062e6:	4618      	mov	r0, r3
 80062e8:	3718      	adds	r7, #24
 80062ea:	46bd      	mov	sp, r7
 80062ec:	bd80      	pop	{r7, pc}
 80062ee:	bf00      	nop

080062f0 <HAL_TIM_ConfigClockSource>:
 80062f0:	b580      	push	{r7, lr}
 80062f2:	b084      	sub	sp, #16
 80062f4:	af00      	add	r7, sp, #0
 80062f6:	6078      	str	r0, [r7, #4]
 80062f8:	6039      	str	r1, [r7, #0]
 80062fa:	2300      	movs	r3, #0
 80062fc:	73fb      	strb	r3, [r7, #15]
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006304:	2b01      	cmp	r3, #1
 8006306:	d101      	bne.n	800630c <HAL_TIM_ConfigClockSource+0x1c>
 8006308:	2302      	movs	r3, #2
 800630a:	e0de      	b.n	80064ca <HAL_TIM_ConfigClockSource+0x1da>
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	2201      	movs	r2, #1
 8006310:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006314:	687b      	ldr	r3, [r7, #4]
 8006316:	2202      	movs	r2, #2
 8006318:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800631c:	687b      	ldr	r3, [r7, #4]
 800631e:	681b      	ldr	r3, [r3, #0]
 8006320:	689b      	ldr	r3, [r3, #8]
 8006322:	60bb      	str	r3, [r7, #8]
 8006324:	68bb      	ldr	r3, [r7, #8]
 8006326:	f423 1344 	bic.w	r3, r3, #3211264	@ 0x310000
 800632a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800632e:	60bb      	str	r3, [r7, #8]
 8006330:	68bb      	ldr	r3, [r7, #8]
 8006332:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006336:	60bb      	str	r3, [r7, #8]
 8006338:	687b      	ldr	r3, [r7, #4]
 800633a:	681b      	ldr	r3, [r3, #0]
 800633c:	68ba      	ldr	r2, [r7, #8]
 800633e:	609a      	str	r2, [r3, #8]
 8006340:	683b      	ldr	r3, [r7, #0]
 8006342:	681b      	ldr	r3, [r3, #0]
 8006344:	4a63      	ldr	r2, [pc, #396]	@ (80064d4 <HAL_TIM_ConfigClockSource+0x1e4>)
 8006346:	4293      	cmp	r3, r2
 8006348:	f000 80a9 	beq.w	800649e <HAL_TIM_ConfigClockSource+0x1ae>
 800634c:	4a61      	ldr	r2, [pc, #388]	@ (80064d4 <HAL_TIM_ConfigClockSource+0x1e4>)
 800634e:	4293      	cmp	r3, r2
 8006350:	f200 80ae 	bhi.w	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 8006354:	4a60      	ldr	r2, [pc, #384]	@ (80064d8 <HAL_TIM_ConfigClockSource+0x1e8>)
 8006356:	4293      	cmp	r3, r2
 8006358:	f000 80a1 	beq.w	800649e <HAL_TIM_ConfigClockSource+0x1ae>
 800635c:	4a5e      	ldr	r2, [pc, #376]	@ (80064d8 <HAL_TIM_ConfigClockSource+0x1e8>)
 800635e:	4293      	cmp	r3, r2
 8006360:	f200 80a6 	bhi.w	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 8006364:	4a5d      	ldr	r2, [pc, #372]	@ (80064dc <HAL_TIM_ConfigClockSource+0x1ec>)
 8006366:	4293      	cmp	r3, r2
 8006368:	f000 8099 	beq.w	800649e <HAL_TIM_ConfigClockSource+0x1ae>
 800636c:	4a5b      	ldr	r2, [pc, #364]	@ (80064dc <HAL_TIM_ConfigClockSource+0x1ec>)
 800636e:	4293      	cmp	r3, r2
 8006370:	f200 809e 	bhi.w	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 8006374:	4a5a      	ldr	r2, [pc, #360]	@ (80064e0 <HAL_TIM_ConfigClockSource+0x1f0>)
 8006376:	4293      	cmp	r3, r2
 8006378:	f000 8091 	beq.w	800649e <HAL_TIM_ConfigClockSource+0x1ae>
 800637c:	4a58      	ldr	r2, [pc, #352]	@ (80064e0 <HAL_TIM_ConfigClockSource+0x1f0>)
 800637e:	4293      	cmp	r3, r2
 8006380:	f200 8096 	bhi.w	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 8006384:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8006388:	f000 8089 	beq.w	800649e <HAL_TIM_ConfigClockSource+0x1ae>
 800638c:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8006390:	f200 808e 	bhi.w	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 8006394:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006398:	d03e      	beq.n	8006418 <HAL_TIM_ConfigClockSource+0x128>
 800639a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800639e:	f200 8087 	bhi.w	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 80063a2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80063a6:	f000 8086 	beq.w	80064b6 <HAL_TIM_ConfigClockSource+0x1c6>
 80063aa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80063ae:	d87f      	bhi.n	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 80063b0:	2b70      	cmp	r3, #112	@ 0x70
 80063b2:	d01a      	beq.n	80063ea <HAL_TIM_ConfigClockSource+0xfa>
 80063b4:	2b70      	cmp	r3, #112	@ 0x70
 80063b6:	d87b      	bhi.n	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 80063b8:	2b60      	cmp	r3, #96	@ 0x60
 80063ba:	d050      	beq.n	800645e <HAL_TIM_ConfigClockSource+0x16e>
 80063bc:	2b60      	cmp	r3, #96	@ 0x60
 80063be:	d877      	bhi.n	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 80063c0:	2b50      	cmp	r3, #80	@ 0x50
 80063c2:	d03c      	beq.n	800643e <HAL_TIM_ConfigClockSource+0x14e>
 80063c4:	2b50      	cmp	r3, #80	@ 0x50
 80063c6:	d873      	bhi.n	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 80063c8:	2b40      	cmp	r3, #64	@ 0x40
 80063ca:	d058      	beq.n	800647e <HAL_TIM_ConfigClockSource+0x18e>
 80063cc:	2b40      	cmp	r3, #64	@ 0x40
 80063ce:	d86f      	bhi.n	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 80063d0:	2b30      	cmp	r3, #48	@ 0x30
 80063d2:	d064      	beq.n	800649e <HAL_TIM_ConfigClockSource+0x1ae>
 80063d4:	2b30      	cmp	r3, #48	@ 0x30
 80063d6:	d86b      	bhi.n	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 80063d8:	2b20      	cmp	r3, #32
 80063da:	d060      	beq.n	800649e <HAL_TIM_ConfigClockSource+0x1ae>
 80063dc:	2b20      	cmp	r3, #32
 80063de:	d867      	bhi.n	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 80063e0:	2b00      	cmp	r3, #0
 80063e2:	d05c      	beq.n	800649e <HAL_TIM_ConfigClockSource+0x1ae>
 80063e4:	2b10      	cmp	r3, #16
 80063e6:	d05a      	beq.n	800649e <HAL_TIM_ConfigClockSource+0x1ae>
 80063e8:	e062      	b.n	80064b0 <HAL_TIM_ConfigClockSource+0x1c0>
 80063ea:	687b      	ldr	r3, [r7, #4]
 80063ec:	6818      	ldr	r0, [r3, #0]
 80063ee:	683b      	ldr	r3, [r7, #0]
 80063f0:	6899      	ldr	r1, [r3, #8]
 80063f2:	683b      	ldr	r3, [r7, #0]
 80063f4:	685a      	ldr	r2, [r3, #4]
 80063f6:	683b      	ldr	r3, [r7, #0]
 80063f8:	68db      	ldr	r3, [r3, #12]
 80063fa:	f000 fcb3 	bl	8006d64 <TIM_ETR_SetConfig>
 80063fe:	687b      	ldr	r3, [r7, #4]
 8006400:	681b      	ldr	r3, [r3, #0]
 8006402:	689b      	ldr	r3, [r3, #8]
 8006404:	60bb      	str	r3, [r7, #8]
 8006406:	68bb      	ldr	r3, [r7, #8]
 8006408:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 800640c:	60bb      	str	r3, [r7, #8]
 800640e:	687b      	ldr	r3, [r7, #4]
 8006410:	681b      	ldr	r3, [r3, #0]
 8006412:	68ba      	ldr	r2, [r7, #8]
 8006414:	609a      	str	r2, [r3, #8]
 8006416:	e04f      	b.n	80064b8 <HAL_TIM_ConfigClockSource+0x1c8>
 8006418:	687b      	ldr	r3, [r7, #4]
 800641a:	6818      	ldr	r0, [r3, #0]
 800641c:	683b      	ldr	r3, [r7, #0]
 800641e:	6899      	ldr	r1, [r3, #8]
 8006420:	683b      	ldr	r3, [r7, #0]
 8006422:	685a      	ldr	r2, [r3, #4]
 8006424:	683b      	ldr	r3, [r7, #0]
 8006426:	68db      	ldr	r3, [r3, #12]
 8006428:	f000 fc9c 	bl	8006d64 <TIM_ETR_SetConfig>
 800642c:	687b      	ldr	r3, [r7, #4]
 800642e:	681b      	ldr	r3, [r3, #0]
 8006430:	689a      	ldr	r2, [r3, #8]
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	681b      	ldr	r3, [r3, #0]
 8006436:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800643a:	609a      	str	r2, [r3, #8]
 800643c:	e03c      	b.n	80064b8 <HAL_TIM_ConfigClockSource+0x1c8>
 800643e:	687b      	ldr	r3, [r7, #4]
 8006440:	6818      	ldr	r0, [r3, #0]
 8006442:	683b      	ldr	r3, [r7, #0]
 8006444:	6859      	ldr	r1, [r3, #4]
 8006446:	683b      	ldr	r3, [r7, #0]
 8006448:	68db      	ldr	r3, [r3, #12]
 800644a:	461a      	mov	r2, r3
 800644c:	f000 fc0e 	bl	8006c6c <TIM_TI1_ConfigInputStage>
 8006450:	687b      	ldr	r3, [r7, #4]
 8006452:	681b      	ldr	r3, [r3, #0]
 8006454:	2150      	movs	r1, #80	@ 0x50
 8006456:	4618      	mov	r0, r3
 8006458:	f000 fc67 	bl	8006d2a <TIM_ITRx_SetConfig>
 800645c:	e02c      	b.n	80064b8 <HAL_TIM_ConfigClockSource+0x1c8>
 800645e:	687b      	ldr	r3, [r7, #4]
 8006460:	6818      	ldr	r0, [r3, #0]
 8006462:	683b      	ldr	r3, [r7, #0]
 8006464:	6859      	ldr	r1, [r3, #4]
 8006466:	683b      	ldr	r3, [r7, #0]
 8006468:	68db      	ldr	r3, [r3, #12]
 800646a:	461a      	mov	r2, r3
 800646c:	f000 fc2d 	bl	8006cca <TIM_TI2_ConfigInputStage>
 8006470:	687b      	ldr	r3, [r7, #4]
 8006472:	681b      	ldr	r3, [r3, #0]
 8006474:	2160      	movs	r1, #96	@ 0x60
 8006476:	4618      	mov	r0, r3
 8006478:	f000 fc57 	bl	8006d2a <TIM_ITRx_SetConfig>
 800647c:	e01c      	b.n	80064b8 <HAL_TIM_ConfigClockSource+0x1c8>
 800647e:	687b      	ldr	r3, [r7, #4]
 8006480:	6818      	ldr	r0, [r3, #0]
 8006482:	683b      	ldr	r3, [r7, #0]
 8006484:	6859      	ldr	r1, [r3, #4]
 8006486:	683b      	ldr	r3, [r7, #0]
 8006488:	68db      	ldr	r3, [r3, #12]
 800648a:	461a      	mov	r2, r3
 800648c:	f000 fbee 	bl	8006c6c <TIM_TI1_ConfigInputStage>
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	2140      	movs	r1, #64	@ 0x40
 8006496:	4618      	mov	r0, r3
 8006498:	f000 fc47 	bl	8006d2a <TIM_ITRx_SetConfig>
 800649c:	e00c      	b.n	80064b8 <HAL_TIM_ConfigClockSource+0x1c8>
 800649e:	687b      	ldr	r3, [r7, #4]
 80064a0:	681a      	ldr	r2, [r3, #0]
 80064a2:	683b      	ldr	r3, [r7, #0]
 80064a4:	681b      	ldr	r3, [r3, #0]
 80064a6:	4619      	mov	r1, r3
 80064a8:	4610      	mov	r0, r2
 80064aa:	f000 fc3e 	bl	8006d2a <TIM_ITRx_SetConfig>
 80064ae:	e003      	b.n	80064b8 <HAL_TIM_ConfigClockSource+0x1c8>
 80064b0:	2301      	movs	r3, #1
 80064b2:	73fb      	strb	r3, [r7, #15]
 80064b4:	e000      	b.n	80064b8 <HAL_TIM_ConfigClockSource+0x1c8>
 80064b6:	bf00      	nop
 80064b8:	687b      	ldr	r3, [r7, #4]
 80064ba:	2201      	movs	r2, #1
 80064bc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80064c0:	687b      	ldr	r3, [r7, #4]
 80064c2:	2200      	movs	r2, #0
 80064c4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80064c8:	7bfb      	ldrb	r3, [r7, #15]
 80064ca:	4618      	mov	r0, r3
 80064cc:	3710      	adds	r7, #16
 80064ce:	46bd      	mov	sp, r7
 80064d0:	bd80      	pop	{r7, pc}
 80064d2:	bf00      	nop
 80064d4:	00100070 	.word	0x00100070
 80064d8:	00100040 	.word	0x00100040
 80064dc:	00100030 	.word	0x00100030
 80064e0:	00100020 	.word	0x00100020

080064e4 <HAL_TIM_PeriodElapsedCallback>:
 80064e4:	b480      	push	{r7}
 80064e6:	b083      	sub	sp, #12
 80064e8:	af00      	add	r7, sp, #0
 80064ea:	6078      	str	r0, [r7, #4]
 80064ec:	bf00      	nop
 80064ee:	370c      	adds	r7, #12
 80064f0:	46bd      	mov	sp, r7
 80064f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064f6:	4770      	bx	lr

080064f8 <HAL_TIM_OC_DelayElapsedCallback>:
 80064f8:	b480      	push	{r7}
 80064fa:	b083      	sub	sp, #12
 80064fc:	af00      	add	r7, sp, #0
 80064fe:	6078      	str	r0, [r7, #4]
 8006500:	bf00      	nop
 8006502:	370c      	adds	r7, #12
 8006504:	46bd      	mov	sp, r7
 8006506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800650a:	4770      	bx	lr

0800650c <HAL_TIM_IC_CaptureCallback>:
 800650c:	b480      	push	{r7}
 800650e:	b083      	sub	sp, #12
 8006510:	af00      	add	r7, sp, #0
 8006512:	6078      	str	r0, [r7, #4]
 8006514:	bf00      	nop
 8006516:	370c      	adds	r7, #12
 8006518:	46bd      	mov	sp, r7
 800651a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800651e:	4770      	bx	lr

08006520 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006520:	b480      	push	{r7}
 8006522:	b083      	sub	sp, #12
 8006524:	af00      	add	r7, sp, #0
 8006526:	6078      	str	r0, [r7, #4]
 8006528:	bf00      	nop
 800652a:	370c      	adds	r7, #12
 800652c:	46bd      	mov	sp, r7
 800652e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006532:	4770      	bx	lr

08006534 <HAL_TIM_TriggerCallback>:
 8006534:	b480      	push	{r7}
 8006536:	b083      	sub	sp, #12
 8006538:	af00      	add	r7, sp, #0
 800653a:	6078      	str	r0, [r7, #4]
 800653c:	bf00      	nop
 800653e:	370c      	adds	r7, #12
 8006540:	46bd      	mov	sp, r7
 8006542:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006546:	4770      	bx	lr

08006548 <TIM_Base_SetConfig>:
 8006548:	b480      	push	{r7}
 800654a:	b085      	sub	sp, #20
 800654c:	af00      	add	r7, sp, #0
 800654e:	6078      	str	r0, [r7, #4]
 8006550:	6039      	str	r1, [r7, #0]
 8006552:	687b      	ldr	r3, [r7, #4]
 8006554:	681b      	ldr	r3, [r3, #0]
 8006556:	60fb      	str	r3, [r7, #12]
 8006558:	687b      	ldr	r3, [r7, #4]
 800655a:	4a42      	ldr	r2, [pc, #264]	@ (8006664 <TIM_Base_SetConfig+0x11c>)
 800655c:	4293      	cmp	r3, r2
 800655e:	d00f      	beq.n	8006580 <TIM_Base_SetConfig+0x38>
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006566:	d00b      	beq.n	8006580 <TIM_Base_SetConfig+0x38>
 8006568:	687b      	ldr	r3, [r7, #4]
 800656a:	4a3f      	ldr	r2, [pc, #252]	@ (8006668 <TIM_Base_SetConfig+0x120>)
 800656c:	4293      	cmp	r3, r2
 800656e:	d007      	beq.n	8006580 <TIM_Base_SetConfig+0x38>
 8006570:	687b      	ldr	r3, [r7, #4]
 8006572:	4a3e      	ldr	r2, [pc, #248]	@ (800666c <TIM_Base_SetConfig+0x124>)
 8006574:	4293      	cmp	r3, r2
 8006576:	d003      	beq.n	8006580 <TIM_Base_SetConfig+0x38>
 8006578:	687b      	ldr	r3, [r7, #4]
 800657a:	4a3d      	ldr	r2, [pc, #244]	@ (8006670 <TIM_Base_SetConfig+0x128>)
 800657c:	4293      	cmp	r3, r2
 800657e:	d108      	bne.n	8006592 <TIM_Base_SetConfig+0x4a>
 8006580:	68fb      	ldr	r3, [r7, #12]
 8006582:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006586:	60fb      	str	r3, [r7, #12]
 8006588:	683b      	ldr	r3, [r7, #0]
 800658a:	685b      	ldr	r3, [r3, #4]
 800658c:	68fa      	ldr	r2, [r7, #12]
 800658e:	4313      	orrs	r3, r2
 8006590:	60fb      	str	r3, [r7, #12]
 8006592:	687b      	ldr	r3, [r7, #4]
 8006594:	4a33      	ldr	r2, [pc, #204]	@ (8006664 <TIM_Base_SetConfig+0x11c>)
 8006596:	4293      	cmp	r3, r2
 8006598:	d01b      	beq.n	80065d2 <TIM_Base_SetConfig+0x8a>
 800659a:	687b      	ldr	r3, [r7, #4]
 800659c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80065a0:	d017      	beq.n	80065d2 <TIM_Base_SetConfig+0x8a>
 80065a2:	687b      	ldr	r3, [r7, #4]
 80065a4:	4a30      	ldr	r2, [pc, #192]	@ (8006668 <TIM_Base_SetConfig+0x120>)
 80065a6:	4293      	cmp	r3, r2
 80065a8:	d013      	beq.n	80065d2 <TIM_Base_SetConfig+0x8a>
 80065aa:	687b      	ldr	r3, [r7, #4]
 80065ac:	4a2f      	ldr	r2, [pc, #188]	@ (800666c <TIM_Base_SetConfig+0x124>)
 80065ae:	4293      	cmp	r3, r2
 80065b0:	d00f      	beq.n	80065d2 <TIM_Base_SetConfig+0x8a>
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	4a2e      	ldr	r2, [pc, #184]	@ (8006670 <TIM_Base_SetConfig+0x128>)
 80065b6:	4293      	cmp	r3, r2
 80065b8:	d00b      	beq.n	80065d2 <TIM_Base_SetConfig+0x8a>
 80065ba:	687b      	ldr	r3, [r7, #4]
 80065bc:	4a2d      	ldr	r2, [pc, #180]	@ (8006674 <TIM_Base_SetConfig+0x12c>)
 80065be:	4293      	cmp	r3, r2
 80065c0:	d007      	beq.n	80065d2 <TIM_Base_SetConfig+0x8a>
 80065c2:	687b      	ldr	r3, [r7, #4]
 80065c4:	4a2c      	ldr	r2, [pc, #176]	@ (8006678 <TIM_Base_SetConfig+0x130>)
 80065c6:	4293      	cmp	r3, r2
 80065c8:	d003      	beq.n	80065d2 <TIM_Base_SetConfig+0x8a>
 80065ca:	687b      	ldr	r3, [r7, #4]
 80065cc:	4a2b      	ldr	r2, [pc, #172]	@ (800667c <TIM_Base_SetConfig+0x134>)
 80065ce:	4293      	cmp	r3, r2
 80065d0:	d108      	bne.n	80065e4 <TIM_Base_SetConfig+0x9c>
 80065d2:	68fb      	ldr	r3, [r7, #12]
 80065d4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80065d8:	60fb      	str	r3, [r7, #12]
 80065da:	683b      	ldr	r3, [r7, #0]
 80065dc:	68db      	ldr	r3, [r3, #12]
 80065de:	68fa      	ldr	r2, [r7, #12]
 80065e0:	4313      	orrs	r3, r2
 80065e2:	60fb      	str	r3, [r7, #12]
 80065e4:	68fb      	ldr	r3, [r7, #12]
 80065e6:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80065ea:	683b      	ldr	r3, [r7, #0]
 80065ec:	695b      	ldr	r3, [r3, #20]
 80065ee:	4313      	orrs	r3, r2
 80065f0:	60fb      	str	r3, [r7, #12]
 80065f2:	687b      	ldr	r3, [r7, #4]
 80065f4:	68fa      	ldr	r2, [r7, #12]
 80065f6:	601a      	str	r2, [r3, #0]
 80065f8:	683b      	ldr	r3, [r7, #0]
 80065fa:	689a      	ldr	r2, [r3, #8]
 80065fc:	687b      	ldr	r3, [r7, #4]
 80065fe:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006600:	683b      	ldr	r3, [r7, #0]
 8006602:	681a      	ldr	r2, [r3, #0]
 8006604:	687b      	ldr	r3, [r7, #4]
 8006606:	629a      	str	r2, [r3, #40]	@ 0x28
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	4a16      	ldr	r2, [pc, #88]	@ (8006664 <TIM_Base_SetConfig+0x11c>)
 800660c:	4293      	cmp	r3, r2
 800660e:	d00f      	beq.n	8006630 <TIM_Base_SetConfig+0xe8>
 8006610:	687b      	ldr	r3, [r7, #4]
 8006612:	4a17      	ldr	r2, [pc, #92]	@ (8006670 <TIM_Base_SetConfig+0x128>)
 8006614:	4293      	cmp	r3, r2
 8006616:	d00b      	beq.n	8006630 <TIM_Base_SetConfig+0xe8>
 8006618:	687b      	ldr	r3, [r7, #4]
 800661a:	4a16      	ldr	r2, [pc, #88]	@ (8006674 <TIM_Base_SetConfig+0x12c>)
 800661c:	4293      	cmp	r3, r2
 800661e:	d007      	beq.n	8006630 <TIM_Base_SetConfig+0xe8>
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	4a15      	ldr	r2, [pc, #84]	@ (8006678 <TIM_Base_SetConfig+0x130>)
 8006624:	4293      	cmp	r3, r2
 8006626:	d003      	beq.n	8006630 <TIM_Base_SetConfig+0xe8>
 8006628:	687b      	ldr	r3, [r7, #4]
 800662a:	4a14      	ldr	r2, [pc, #80]	@ (800667c <TIM_Base_SetConfig+0x134>)
 800662c:	4293      	cmp	r3, r2
 800662e:	d103      	bne.n	8006638 <TIM_Base_SetConfig+0xf0>
 8006630:	683b      	ldr	r3, [r7, #0]
 8006632:	691a      	ldr	r2, [r3, #16]
 8006634:	687b      	ldr	r3, [r7, #4]
 8006636:	631a      	str	r2, [r3, #48]	@ 0x30
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	2201      	movs	r2, #1
 800663c:	615a      	str	r2, [r3, #20]
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	691b      	ldr	r3, [r3, #16]
 8006642:	f003 0301 	and.w	r3, r3, #1
 8006646:	2b01      	cmp	r3, #1
 8006648:	d105      	bne.n	8006656 <TIM_Base_SetConfig+0x10e>
 800664a:	687b      	ldr	r3, [r7, #4]
 800664c:	691b      	ldr	r3, [r3, #16]
 800664e:	f023 0201 	bic.w	r2, r3, #1
 8006652:	687b      	ldr	r3, [r7, #4]
 8006654:	611a      	str	r2, [r3, #16]
 8006656:	bf00      	nop
 8006658:	3714      	adds	r7, #20
 800665a:	46bd      	mov	sp, r7
 800665c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006660:	4770      	bx	lr
 8006662:	bf00      	nop
 8006664:	40012c00 	.word	0x40012c00
 8006668:	40000400 	.word	0x40000400
 800666c:	40000800 	.word	0x40000800
 8006670:	40013400 	.word	0x40013400
 8006674:	40014000 	.word	0x40014000
 8006678:	40014400 	.word	0x40014400
 800667c:	40014800 	.word	0x40014800

08006680 <TIM_OC1_SetConfig>:
 8006680:	b480      	push	{r7}
 8006682:	b087      	sub	sp, #28
 8006684:	af00      	add	r7, sp, #0
 8006686:	6078      	str	r0, [r7, #4]
 8006688:	6039      	str	r1, [r7, #0]
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	6a1b      	ldr	r3, [r3, #32]
 800668e:	617b      	str	r3, [r7, #20]
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	6a1b      	ldr	r3, [r3, #32]
 8006694:	f023 0201 	bic.w	r2, r3, #1
 8006698:	687b      	ldr	r3, [r7, #4]
 800669a:	621a      	str	r2, [r3, #32]
 800669c:	687b      	ldr	r3, [r7, #4]
 800669e:	685b      	ldr	r3, [r3, #4]
 80066a0:	613b      	str	r3, [r7, #16]
 80066a2:	687b      	ldr	r3, [r7, #4]
 80066a4:	699b      	ldr	r3, [r3, #24]
 80066a6:	60fb      	str	r3, [r7, #12]
 80066a8:	68fb      	ldr	r3, [r7, #12]
 80066aa:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80066ae:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80066b2:	60fb      	str	r3, [r7, #12]
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	f023 0303 	bic.w	r3, r3, #3
 80066ba:	60fb      	str	r3, [r7, #12]
 80066bc:	683b      	ldr	r3, [r7, #0]
 80066be:	681b      	ldr	r3, [r3, #0]
 80066c0:	68fa      	ldr	r2, [r7, #12]
 80066c2:	4313      	orrs	r3, r2
 80066c4:	60fb      	str	r3, [r7, #12]
 80066c6:	697b      	ldr	r3, [r7, #20]
 80066c8:	f023 0302 	bic.w	r3, r3, #2
 80066cc:	617b      	str	r3, [r7, #20]
 80066ce:	683b      	ldr	r3, [r7, #0]
 80066d0:	689b      	ldr	r3, [r3, #8]
 80066d2:	697a      	ldr	r2, [r7, #20]
 80066d4:	4313      	orrs	r3, r2
 80066d6:	617b      	str	r3, [r7, #20]
 80066d8:	687b      	ldr	r3, [r7, #4]
 80066da:	4a2c      	ldr	r2, [pc, #176]	@ (800678c <TIM_OC1_SetConfig+0x10c>)
 80066dc:	4293      	cmp	r3, r2
 80066de:	d00f      	beq.n	8006700 <TIM_OC1_SetConfig+0x80>
 80066e0:	687b      	ldr	r3, [r7, #4]
 80066e2:	4a2b      	ldr	r2, [pc, #172]	@ (8006790 <TIM_OC1_SetConfig+0x110>)
 80066e4:	4293      	cmp	r3, r2
 80066e6:	d00b      	beq.n	8006700 <TIM_OC1_SetConfig+0x80>
 80066e8:	687b      	ldr	r3, [r7, #4]
 80066ea:	4a2a      	ldr	r2, [pc, #168]	@ (8006794 <TIM_OC1_SetConfig+0x114>)
 80066ec:	4293      	cmp	r3, r2
 80066ee:	d007      	beq.n	8006700 <TIM_OC1_SetConfig+0x80>
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	4a29      	ldr	r2, [pc, #164]	@ (8006798 <TIM_OC1_SetConfig+0x118>)
 80066f4:	4293      	cmp	r3, r2
 80066f6:	d003      	beq.n	8006700 <TIM_OC1_SetConfig+0x80>
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	4a28      	ldr	r2, [pc, #160]	@ (800679c <TIM_OC1_SetConfig+0x11c>)
 80066fc:	4293      	cmp	r3, r2
 80066fe:	d10c      	bne.n	800671a <TIM_OC1_SetConfig+0x9a>
 8006700:	697b      	ldr	r3, [r7, #20]
 8006702:	f023 0308 	bic.w	r3, r3, #8
 8006706:	617b      	str	r3, [r7, #20]
 8006708:	683b      	ldr	r3, [r7, #0]
 800670a:	68db      	ldr	r3, [r3, #12]
 800670c:	697a      	ldr	r2, [r7, #20]
 800670e:	4313      	orrs	r3, r2
 8006710:	617b      	str	r3, [r7, #20]
 8006712:	697b      	ldr	r3, [r7, #20]
 8006714:	f023 0304 	bic.w	r3, r3, #4
 8006718:	617b      	str	r3, [r7, #20]
 800671a:	687b      	ldr	r3, [r7, #4]
 800671c:	4a1b      	ldr	r2, [pc, #108]	@ (800678c <TIM_OC1_SetConfig+0x10c>)
 800671e:	4293      	cmp	r3, r2
 8006720:	d00f      	beq.n	8006742 <TIM_OC1_SetConfig+0xc2>
 8006722:	687b      	ldr	r3, [r7, #4]
 8006724:	4a1a      	ldr	r2, [pc, #104]	@ (8006790 <TIM_OC1_SetConfig+0x110>)
 8006726:	4293      	cmp	r3, r2
 8006728:	d00b      	beq.n	8006742 <TIM_OC1_SetConfig+0xc2>
 800672a:	687b      	ldr	r3, [r7, #4]
 800672c:	4a19      	ldr	r2, [pc, #100]	@ (8006794 <TIM_OC1_SetConfig+0x114>)
 800672e:	4293      	cmp	r3, r2
 8006730:	d007      	beq.n	8006742 <TIM_OC1_SetConfig+0xc2>
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	4a18      	ldr	r2, [pc, #96]	@ (8006798 <TIM_OC1_SetConfig+0x118>)
 8006736:	4293      	cmp	r3, r2
 8006738:	d003      	beq.n	8006742 <TIM_OC1_SetConfig+0xc2>
 800673a:	687b      	ldr	r3, [r7, #4]
 800673c:	4a17      	ldr	r2, [pc, #92]	@ (800679c <TIM_OC1_SetConfig+0x11c>)
 800673e:	4293      	cmp	r3, r2
 8006740:	d111      	bne.n	8006766 <TIM_OC1_SetConfig+0xe6>
 8006742:	693b      	ldr	r3, [r7, #16]
 8006744:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006748:	613b      	str	r3, [r7, #16]
 800674a:	693b      	ldr	r3, [r7, #16]
 800674c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006750:	613b      	str	r3, [r7, #16]
 8006752:	683b      	ldr	r3, [r7, #0]
 8006754:	695b      	ldr	r3, [r3, #20]
 8006756:	693a      	ldr	r2, [r7, #16]
 8006758:	4313      	orrs	r3, r2
 800675a:	613b      	str	r3, [r7, #16]
 800675c:	683b      	ldr	r3, [r7, #0]
 800675e:	699b      	ldr	r3, [r3, #24]
 8006760:	693a      	ldr	r2, [r7, #16]
 8006762:	4313      	orrs	r3, r2
 8006764:	613b      	str	r3, [r7, #16]
 8006766:	687b      	ldr	r3, [r7, #4]
 8006768:	693a      	ldr	r2, [r7, #16]
 800676a:	605a      	str	r2, [r3, #4]
 800676c:	687b      	ldr	r3, [r7, #4]
 800676e:	68fa      	ldr	r2, [r7, #12]
 8006770:	619a      	str	r2, [r3, #24]
 8006772:	683b      	ldr	r3, [r7, #0]
 8006774:	685a      	ldr	r2, [r3, #4]
 8006776:	687b      	ldr	r3, [r7, #4]
 8006778:	635a      	str	r2, [r3, #52]	@ 0x34
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	697a      	ldr	r2, [r7, #20]
 800677e:	621a      	str	r2, [r3, #32]
 8006780:	bf00      	nop
 8006782:	371c      	adds	r7, #28
 8006784:	46bd      	mov	sp, r7
 8006786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800678a:	4770      	bx	lr
 800678c:	40012c00 	.word	0x40012c00
 8006790:	40013400 	.word	0x40013400
 8006794:	40014000 	.word	0x40014000
 8006798:	40014400 	.word	0x40014400
 800679c:	40014800 	.word	0x40014800

080067a0 <TIM_OC2_SetConfig>:
 80067a0:	b480      	push	{r7}
 80067a2:	b087      	sub	sp, #28
 80067a4:	af00      	add	r7, sp, #0
 80067a6:	6078      	str	r0, [r7, #4]
 80067a8:	6039      	str	r1, [r7, #0]
 80067aa:	687b      	ldr	r3, [r7, #4]
 80067ac:	6a1b      	ldr	r3, [r3, #32]
 80067ae:	617b      	str	r3, [r7, #20]
 80067b0:	687b      	ldr	r3, [r7, #4]
 80067b2:	6a1b      	ldr	r3, [r3, #32]
 80067b4:	f023 0210 	bic.w	r2, r3, #16
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	621a      	str	r2, [r3, #32]
 80067bc:	687b      	ldr	r3, [r7, #4]
 80067be:	685b      	ldr	r3, [r3, #4]
 80067c0:	613b      	str	r3, [r7, #16]
 80067c2:	687b      	ldr	r3, [r7, #4]
 80067c4:	699b      	ldr	r3, [r3, #24]
 80067c6:	60fb      	str	r3, [r7, #12]
 80067c8:	68fb      	ldr	r3, [r7, #12]
 80067ca:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80067ce:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80067d2:	60fb      	str	r3, [r7, #12]
 80067d4:	68fb      	ldr	r3, [r7, #12]
 80067d6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80067da:	60fb      	str	r3, [r7, #12]
 80067dc:	683b      	ldr	r3, [r7, #0]
 80067de:	681b      	ldr	r3, [r3, #0]
 80067e0:	021b      	lsls	r3, r3, #8
 80067e2:	68fa      	ldr	r2, [r7, #12]
 80067e4:	4313      	orrs	r3, r2
 80067e6:	60fb      	str	r3, [r7, #12]
 80067e8:	697b      	ldr	r3, [r7, #20]
 80067ea:	f023 0320 	bic.w	r3, r3, #32
 80067ee:	617b      	str	r3, [r7, #20]
 80067f0:	683b      	ldr	r3, [r7, #0]
 80067f2:	689b      	ldr	r3, [r3, #8]
 80067f4:	011b      	lsls	r3, r3, #4
 80067f6:	697a      	ldr	r2, [r7, #20]
 80067f8:	4313      	orrs	r3, r2
 80067fa:	617b      	str	r3, [r7, #20]
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	4a28      	ldr	r2, [pc, #160]	@ (80068a0 <TIM_OC2_SetConfig+0x100>)
 8006800:	4293      	cmp	r3, r2
 8006802:	d003      	beq.n	800680c <TIM_OC2_SetConfig+0x6c>
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	4a27      	ldr	r2, [pc, #156]	@ (80068a4 <TIM_OC2_SetConfig+0x104>)
 8006808:	4293      	cmp	r3, r2
 800680a:	d10d      	bne.n	8006828 <TIM_OC2_SetConfig+0x88>
 800680c:	697b      	ldr	r3, [r7, #20]
 800680e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006812:	617b      	str	r3, [r7, #20]
 8006814:	683b      	ldr	r3, [r7, #0]
 8006816:	68db      	ldr	r3, [r3, #12]
 8006818:	011b      	lsls	r3, r3, #4
 800681a:	697a      	ldr	r2, [r7, #20]
 800681c:	4313      	orrs	r3, r2
 800681e:	617b      	str	r3, [r7, #20]
 8006820:	697b      	ldr	r3, [r7, #20]
 8006822:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006826:	617b      	str	r3, [r7, #20]
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	4a1d      	ldr	r2, [pc, #116]	@ (80068a0 <TIM_OC2_SetConfig+0x100>)
 800682c:	4293      	cmp	r3, r2
 800682e:	d00f      	beq.n	8006850 <TIM_OC2_SetConfig+0xb0>
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	4a1c      	ldr	r2, [pc, #112]	@ (80068a4 <TIM_OC2_SetConfig+0x104>)
 8006834:	4293      	cmp	r3, r2
 8006836:	d00b      	beq.n	8006850 <TIM_OC2_SetConfig+0xb0>
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	4a1b      	ldr	r2, [pc, #108]	@ (80068a8 <TIM_OC2_SetConfig+0x108>)
 800683c:	4293      	cmp	r3, r2
 800683e:	d007      	beq.n	8006850 <TIM_OC2_SetConfig+0xb0>
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	4a1a      	ldr	r2, [pc, #104]	@ (80068ac <TIM_OC2_SetConfig+0x10c>)
 8006844:	4293      	cmp	r3, r2
 8006846:	d003      	beq.n	8006850 <TIM_OC2_SetConfig+0xb0>
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	4a19      	ldr	r2, [pc, #100]	@ (80068b0 <TIM_OC2_SetConfig+0x110>)
 800684c:	4293      	cmp	r3, r2
 800684e:	d113      	bne.n	8006878 <TIM_OC2_SetConfig+0xd8>
 8006850:	693b      	ldr	r3, [r7, #16]
 8006852:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006856:	613b      	str	r3, [r7, #16]
 8006858:	693b      	ldr	r3, [r7, #16]
 800685a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800685e:	613b      	str	r3, [r7, #16]
 8006860:	683b      	ldr	r3, [r7, #0]
 8006862:	695b      	ldr	r3, [r3, #20]
 8006864:	009b      	lsls	r3, r3, #2
 8006866:	693a      	ldr	r2, [r7, #16]
 8006868:	4313      	orrs	r3, r2
 800686a:	613b      	str	r3, [r7, #16]
 800686c:	683b      	ldr	r3, [r7, #0]
 800686e:	699b      	ldr	r3, [r3, #24]
 8006870:	009b      	lsls	r3, r3, #2
 8006872:	693a      	ldr	r2, [r7, #16]
 8006874:	4313      	orrs	r3, r2
 8006876:	613b      	str	r3, [r7, #16]
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	693a      	ldr	r2, [r7, #16]
 800687c:	605a      	str	r2, [r3, #4]
 800687e:	687b      	ldr	r3, [r7, #4]
 8006880:	68fa      	ldr	r2, [r7, #12]
 8006882:	619a      	str	r2, [r3, #24]
 8006884:	683b      	ldr	r3, [r7, #0]
 8006886:	685a      	ldr	r2, [r3, #4]
 8006888:	687b      	ldr	r3, [r7, #4]
 800688a:	639a      	str	r2, [r3, #56]	@ 0x38
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	697a      	ldr	r2, [r7, #20]
 8006890:	621a      	str	r2, [r3, #32]
 8006892:	bf00      	nop
 8006894:	371c      	adds	r7, #28
 8006896:	46bd      	mov	sp, r7
 8006898:	f85d 7b04 	ldr.w	r7, [sp], #4
 800689c:	4770      	bx	lr
 800689e:	bf00      	nop
 80068a0:	40012c00 	.word	0x40012c00
 80068a4:	40013400 	.word	0x40013400
 80068a8:	40014000 	.word	0x40014000
 80068ac:	40014400 	.word	0x40014400
 80068b0:	40014800 	.word	0x40014800

080068b4 <TIM_OC3_SetConfig>:
 80068b4:	b480      	push	{r7}
 80068b6:	b087      	sub	sp, #28
 80068b8:	af00      	add	r7, sp, #0
 80068ba:	6078      	str	r0, [r7, #4]
 80068bc:	6039      	str	r1, [r7, #0]
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	6a1b      	ldr	r3, [r3, #32]
 80068c2:	617b      	str	r3, [r7, #20]
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	6a1b      	ldr	r3, [r3, #32]
 80068c8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	621a      	str	r2, [r3, #32]
 80068d0:	687b      	ldr	r3, [r7, #4]
 80068d2:	685b      	ldr	r3, [r3, #4]
 80068d4:	613b      	str	r3, [r7, #16]
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	69db      	ldr	r3, [r3, #28]
 80068da:	60fb      	str	r3, [r7, #12]
 80068dc:	68fb      	ldr	r3, [r7, #12]
 80068de:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80068e2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80068e6:	60fb      	str	r3, [r7, #12]
 80068e8:	68fb      	ldr	r3, [r7, #12]
 80068ea:	f023 0303 	bic.w	r3, r3, #3
 80068ee:	60fb      	str	r3, [r7, #12]
 80068f0:	683b      	ldr	r3, [r7, #0]
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	68fa      	ldr	r2, [r7, #12]
 80068f6:	4313      	orrs	r3, r2
 80068f8:	60fb      	str	r3, [r7, #12]
 80068fa:	697b      	ldr	r3, [r7, #20]
 80068fc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006900:	617b      	str	r3, [r7, #20]
 8006902:	683b      	ldr	r3, [r7, #0]
 8006904:	689b      	ldr	r3, [r3, #8]
 8006906:	021b      	lsls	r3, r3, #8
 8006908:	697a      	ldr	r2, [r7, #20]
 800690a:	4313      	orrs	r3, r2
 800690c:	617b      	str	r3, [r7, #20]
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	4a27      	ldr	r2, [pc, #156]	@ (80069b0 <TIM_OC3_SetConfig+0xfc>)
 8006912:	4293      	cmp	r3, r2
 8006914:	d003      	beq.n	800691e <TIM_OC3_SetConfig+0x6a>
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	4a26      	ldr	r2, [pc, #152]	@ (80069b4 <TIM_OC3_SetConfig+0x100>)
 800691a:	4293      	cmp	r3, r2
 800691c:	d10d      	bne.n	800693a <TIM_OC3_SetConfig+0x86>
 800691e:	697b      	ldr	r3, [r7, #20]
 8006920:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006924:	617b      	str	r3, [r7, #20]
 8006926:	683b      	ldr	r3, [r7, #0]
 8006928:	68db      	ldr	r3, [r3, #12]
 800692a:	021b      	lsls	r3, r3, #8
 800692c:	697a      	ldr	r2, [r7, #20]
 800692e:	4313      	orrs	r3, r2
 8006930:	617b      	str	r3, [r7, #20]
 8006932:	697b      	ldr	r3, [r7, #20]
 8006934:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006938:	617b      	str	r3, [r7, #20]
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	4a1c      	ldr	r2, [pc, #112]	@ (80069b0 <TIM_OC3_SetConfig+0xfc>)
 800693e:	4293      	cmp	r3, r2
 8006940:	d00f      	beq.n	8006962 <TIM_OC3_SetConfig+0xae>
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	4a1b      	ldr	r2, [pc, #108]	@ (80069b4 <TIM_OC3_SetConfig+0x100>)
 8006946:	4293      	cmp	r3, r2
 8006948:	d00b      	beq.n	8006962 <TIM_OC3_SetConfig+0xae>
 800694a:	687b      	ldr	r3, [r7, #4]
 800694c:	4a1a      	ldr	r2, [pc, #104]	@ (80069b8 <TIM_OC3_SetConfig+0x104>)
 800694e:	4293      	cmp	r3, r2
 8006950:	d007      	beq.n	8006962 <TIM_OC3_SetConfig+0xae>
 8006952:	687b      	ldr	r3, [r7, #4]
 8006954:	4a19      	ldr	r2, [pc, #100]	@ (80069bc <TIM_OC3_SetConfig+0x108>)
 8006956:	4293      	cmp	r3, r2
 8006958:	d003      	beq.n	8006962 <TIM_OC3_SetConfig+0xae>
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	4a18      	ldr	r2, [pc, #96]	@ (80069c0 <TIM_OC3_SetConfig+0x10c>)
 800695e:	4293      	cmp	r3, r2
 8006960:	d113      	bne.n	800698a <TIM_OC3_SetConfig+0xd6>
 8006962:	693b      	ldr	r3, [r7, #16]
 8006964:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006968:	613b      	str	r3, [r7, #16]
 800696a:	693b      	ldr	r3, [r7, #16]
 800696c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006970:	613b      	str	r3, [r7, #16]
 8006972:	683b      	ldr	r3, [r7, #0]
 8006974:	695b      	ldr	r3, [r3, #20]
 8006976:	011b      	lsls	r3, r3, #4
 8006978:	693a      	ldr	r2, [r7, #16]
 800697a:	4313      	orrs	r3, r2
 800697c:	613b      	str	r3, [r7, #16]
 800697e:	683b      	ldr	r3, [r7, #0]
 8006980:	699b      	ldr	r3, [r3, #24]
 8006982:	011b      	lsls	r3, r3, #4
 8006984:	693a      	ldr	r2, [r7, #16]
 8006986:	4313      	orrs	r3, r2
 8006988:	613b      	str	r3, [r7, #16]
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	693a      	ldr	r2, [r7, #16]
 800698e:	605a      	str	r2, [r3, #4]
 8006990:	687b      	ldr	r3, [r7, #4]
 8006992:	68fa      	ldr	r2, [r7, #12]
 8006994:	61da      	str	r2, [r3, #28]
 8006996:	683b      	ldr	r3, [r7, #0]
 8006998:	685a      	ldr	r2, [r3, #4]
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	697a      	ldr	r2, [r7, #20]
 80069a2:	621a      	str	r2, [r3, #32]
 80069a4:	bf00      	nop
 80069a6:	371c      	adds	r7, #28
 80069a8:	46bd      	mov	sp, r7
 80069aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069ae:	4770      	bx	lr
 80069b0:	40012c00 	.word	0x40012c00
 80069b4:	40013400 	.word	0x40013400
 80069b8:	40014000 	.word	0x40014000
 80069bc:	40014400 	.word	0x40014400
 80069c0:	40014800 	.word	0x40014800

080069c4 <TIM_OC4_SetConfig>:
 80069c4:	b480      	push	{r7}
 80069c6:	b087      	sub	sp, #28
 80069c8:	af00      	add	r7, sp, #0
 80069ca:	6078      	str	r0, [r7, #4]
 80069cc:	6039      	str	r1, [r7, #0]
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	6a1b      	ldr	r3, [r3, #32]
 80069d2:	617b      	str	r3, [r7, #20]
 80069d4:	687b      	ldr	r3, [r7, #4]
 80069d6:	6a1b      	ldr	r3, [r3, #32]
 80069d8:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80069dc:	687b      	ldr	r3, [r7, #4]
 80069de:	621a      	str	r2, [r3, #32]
 80069e0:	687b      	ldr	r3, [r7, #4]
 80069e2:	685b      	ldr	r3, [r3, #4]
 80069e4:	613b      	str	r3, [r7, #16]
 80069e6:	687b      	ldr	r3, [r7, #4]
 80069e8:	69db      	ldr	r3, [r3, #28]
 80069ea:	60fb      	str	r3, [r7, #12]
 80069ec:	68fb      	ldr	r3, [r7, #12]
 80069ee:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80069f2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80069f6:	60fb      	str	r3, [r7, #12]
 80069f8:	68fb      	ldr	r3, [r7, #12]
 80069fa:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80069fe:	60fb      	str	r3, [r7, #12]
 8006a00:	683b      	ldr	r3, [r7, #0]
 8006a02:	681b      	ldr	r3, [r3, #0]
 8006a04:	021b      	lsls	r3, r3, #8
 8006a06:	68fa      	ldr	r2, [r7, #12]
 8006a08:	4313      	orrs	r3, r2
 8006a0a:	60fb      	str	r3, [r7, #12]
 8006a0c:	697b      	ldr	r3, [r7, #20]
 8006a0e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006a12:	617b      	str	r3, [r7, #20]
 8006a14:	683b      	ldr	r3, [r7, #0]
 8006a16:	689b      	ldr	r3, [r3, #8]
 8006a18:	031b      	lsls	r3, r3, #12
 8006a1a:	697a      	ldr	r2, [r7, #20]
 8006a1c:	4313      	orrs	r3, r2
 8006a1e:	617b      	str	r3, [r7, #20]
 8006a20:	687b      	ldr	r3, [r7, #4]
 8006a22:	4a28      	ldr	r2, [pc, #160]	@ (8006ac4 <TIM_OC4_SetConfig+0x100>)
 8006a24:	4293      	cmp	r3, r2
 8006a26:	d003      	beq.n	8006a30 <TIM_OC4_SetConfig+0x6c>
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	4a27      	ldr	r2, [pc, #156]	@ (8006ac8 <TIM_OC4_SetConfig+0x104>)
 8006a2c:	4293      	cmp	r3, r2
 8006a2e:	d10d      	bne.n	8006a4c <TIM_OC4_SetConfig+0x88>
 8006a30:	697b      	ldr	r3, [r7, #20]
 8006a32:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8006a36:	617b      	str	r3, [r7, #20]
 8006a38:	683b      	ldr	r3, [r7, #0]
 8006a3a:	68db      	ldr	r3, [r3, #12]
 8006a3c:	031b      	lsls	r3, r3, #12
 8006a3e:	697a      	ldr	r2, [r7, #20]
 8006a40:	4313      	orrs	r3, r2
 8006a42:	617b      	str	r3, [r7, #20]
 8006a44:	697b      	ldr	r3, [r7, #20]
 8006a46:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006a4a:	617b      	str	r3, [r7, #20]
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	4a1d      	ldr	r2, [pc, #116]	@ (8006ac4 <TIM_OC4_SetConfig+0x100>)
 8006a50:	4293      	cmp	r3, r2
 8006a52:	d00f      	beq.n	8006a74 <TIM_OC4_SetConfig+0xb0>
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	4a1c      	ldr	r2, [pc, #112]	@ (8006ac8 <TIM_OC4_SetConfig+0x104>)
 8006a58:	4293      	cmp	r3, r2
 8006a5a:	d00b      	beq.n	8006a74 <TIM_OC4_SetConfig+0xb0>
 8006a5c:	687b      	ldr	r3, [r7, #4]
 8006a5e:	4a1b      	ldr	r2, [pc, #108]	@ (8006acc <TIM_OC4_SetConfig+0x108>)
 8006a60:	4293      	cmp	r3, r2
 8006a62:	d007      	beq.n	8006a74 <TIM_OC4_SetConfig+0xb0>
 8006a64:	687b      	ldr	r3, [r7, #4]
 8006a66:	4a1a      	ldr	r2, [pc, #104]	@ (8006ad0 <TIM_OC4_SetConfig+0x10c>)
 8006a68:	4293      	cmp	r3, r2
 8006a6a:	d003      	beq.n	8006a74 <TIM_OC4_SetConfig+0xb0>
 8006a6c:	687b      	ldr	r3, [r7, #4]
 8006a6e:	4a19      	ldr	r2, [pc, #100]	@ (8006ad4 <TIM_OC4_SetConfig+0x110>)
 8006a70:	4293      	cmp	r3, r2
 8006a72:	d113      	bne.n	8006a9c <TIM_OC4_SetConfig+0xd8>
 8006a74:	693b      	ldr	r3, [r7, #16]
 8006a76:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006a7a:	613b      	str	r3, [r7, #16]
 8006a7c:	693b      	ldr	r3, [r7, #16]
 8006a7e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8006a82:	613b      	str	r3, [r7, #16]
 8006a84:	683b      	ldr	r3, [r7, #0]
 8006a86:	695b      	ldr	r3, [r3, #20]
 8006a88:	019b      	lsls	r3, r3, #6
 8006a8a:	693a      	ldr	r2, [r7, #16]
 8006a8c:	4313      	orrs	r3, r2
 8006a8e:	613b      	str	r3, [r7, #16]
 8006a90:	683b      	ldr	r3, [r7, #0]
 8006a92:	699b      	ldr	r3, [r3, #24]
 8006a94:	019b      	lsls	r3, r3, #6
 8006a96:	693a      	ldr	r2, [r7, #16]
 8006a98:	4313      	orrs	r3, r2
 8006a9a:	613b      	str	r3, [r7, #16]
 8006a9c:	687b      	ldr	r3, [r7, #4]
 8006a9e:	693a      	ldr	r2, [r7, #16]
 8006aa0:	605a      	str	r2, [r3, #4]
 8006aa2:	687b      	ldr	r3, [r7, #4]
 8006aa4:	68fa      	ldr	r2, [r7, #12]
 8006aa6:	61da      	str	r2, [r3, #28]
 8006aa8:	683b      	ldr	r3, [r7, #0]
 8006aaa:	685a      	ldr	r2, [r3, #4]
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	641a      	str	r2, [r3, #64]	@ 0x40
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	697a      	ldr	r2, [r7, #20]
 8006ab4:	621a      	str	r2, [r3, #32]
 8006ab6:	bf00      	nop
 8006ab8:	371c      	adds	r7, #28
 8006aba:	46bd      	mov	sp, r7
 8006abc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ac0:	4770      	bx	lr
 8006ac2:	bf00      	nop
 8006ac4:	40012c00 	.word	0x40012c00
 8006ac8:	40013400 	.word	0x40013400
 8006acc:	40014000 	.word	0x40014000
 8006ad0:	40014400 	.word	0x40014400
 8006ad4:	40014800 	.word	0x40014800

08006ad8 <TIM_OC5_SetConfig>:
 8006ad8:	b480      	push	{r7}
 8006ada:	b087      	sub	sp, #28
 8006adc:	af00      	add	r7, sp, #0
 8006ade:	6078      	str	r0, [r7, #4]
 8006ae0:	6039      	str	r1, [r7, #0]
 8006ae2:	687b      	ldr	r3, [r7, #4]
 8006ae4:	6a1b      	ldr	r3, [r3, #32]
 8006ae6:	613b      	str	r3, [r7, #16]
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	6a1b      	ldr	r3, [r3, #32]
 8006aec:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	621a      	str	r2, [r3, #32]
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	685b      	ldr	r3, [r3, #4]
 8006af8:	617b      	str	r3, [r7, #20]
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006afe:	60fb      	str	r3, [r7, #12]
 8006b00:	68fb      	ldr	r3, [r7, #12]
 8006b02:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006b06:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006b0a:	60fb      	str	r3, [r7, #12]
 8006b0c:	683b      	ldr	r3, [r7, #0]
 8006b0e:	681b      	ldr	r3, [r3, #0]
 8006b10:	68fa      	ldr	r2, [r7, #12]
 8006b12:	4313      	orrs	r3, r2
 8006b14:	60fb      	str	r3, [r7, #12]
 8006b16:	693b      	ldr	r3, [r7, #16]
 8006b18:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8006b1c:	613b      	str	r3, [r7, #16]
 8006b1e:	683b      	ldr	r3, [r7, #0]
 8006b20:	689b      	ldr	r3, [r3, #8]
 8006b22:	041b      	lsls	r3, r3, #16
 8006b24:	693a      	ldr	r2, [r7, #16]
 8006b26:	4313      	orrs	r3, r2
 8006b28:	613b      	str	r3, [r7, #16]
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	4a17      	ldr	r2, [pc, #92]	@ (8006b8c <TIM_OC5_SetConfig+0xb4>)
 8006b2e:	4293      	cmp	r3, r2
 8006b30:	d00f      	beq.n	8006b52 <TIM_OC5_SetConfig+0x7a>
 8006b32:	687b      	ldr	r3, [r7, #4]
 8006b34:	4a16      	ldr	r2, [pc, #88]	@ (8006b90 <TIM_OC5_SetConfig+0xb8>)
 8006b36:	4293      	cmp	r3, r2
 8006b38:	d00b      	beq.n	8006b52 <TIM_OC5_SetConfig+0x7a>
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	4a15      	ldr	r2, [pc, #84]	@ (8006b94 <TIM_OC5_SetConfig+0xbc>)
 8006b3e:	4293      	cmp	r3, r2
 8006b40:	d007      	beq.n	8006b52 <TIM_OC5_SetConfig+0x7a>
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	4a14      	ldr	r2, [pc, #80]	@ (8006b98 <TIM_OC5_SetConfig+0xc0>)
 8006b46:	4293      	cmp	r3, r2
 8006b48:	d003      	beq.n	8006b52 <TIM_OC5_SetConfig+0x7a>
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	4a13      	ldr	r2, [pc, #76]	@ (8006b9c <TIM_OC5_SetConfig+0xc4>)
 8006b4e:	4293      	cmp	r3, r2
 8006b50:	d109      	bne.n	8006b66 <TIM_OC5_SetConfig+0x8e>
 8006b52:	697b      	ldr	r3, [r7, #20]
 8006b54:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006b58:	617b      	str	r3, [r7, #20]
 8006b5a:	683b      	ldr	r3, [r7, #0]
 8006b5c:	695b      	ldr	r3, [r3, #20]
 8006b5e:	021b      	lsls	r3, r3, #8
 8006b60:	697a      	ldr	r2, [r7, #20]
 8006b62:	4313      	orrs	r3, r2
 8006b64:	617b      	str	r3, [r7, #20]
 8006b66:	687b      	ldr	r3, [r7, #4]
 8006b68:	697a      	ldr	r2, [r7, #20]
 8006b6a:	605a      	str	r2, [r3, #4]
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	68fa      	ldr	r2, [r7, #12]
 8006b70:	651a      	str	r2, [r3, #80]	@ 0x50
 8006b72:	683b      	ldr	r3, [r7, #0]
 8006b74:	685a      	ldr	r2, [r3, #4]
 8006b76:	687b      	ldr	r3, [r7, #4]
 8006b78:	649a      	str	r2, [r3, #72]	@ 0x48
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	693a      	ldr	r2, [r7, #16]
 8006b7e:	621a      	str	r2, [r3, #32]
 8006b80:	bf00      	nop
 8006b82:	371c      	adds	r7, #28
 8006b84:	46bd      	mov	sp, r7
 8006b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b8a:	4770      	bx	lr
 8006b8c:	40012c00 	.word	0x40012c00
 8006b90:	40013400 	.word	0x40013400
 8006b94:	40014000 	.word	0x40014000
 8006b98:	40014400 	.word	0x40014400
 8006b9c:	40014800 	.word	0x40014800

08006ba0 <TIM_OC6_SetConfig>:
 8006ba0:	b480      	push	{r7}
 8006ba2:	b087      	sub	sp, #28
 8006ba4:	af00      	add	r7, sp, #0
 8006ba6:	6078      	str	r0, [r7, #4]
 8006ba8:	6039      	str	r1, [r7, #0]
 8006baa:	687b      	ldr	r3, [r7, #4]
 8006bac:	6a1b      	ldr	r3, [r3, #32]
 8006bae:	613b      	str	r3, [r7, #16]
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	6a1b      	ldr	r3, [r3, #32]
 8006bb4:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	621a      	str	r2, [r3, #32]
 8006bbc:	687b      	ldr	r3, [r7, #4]
 8006bbe:	685b      	ldr	r3, [r3, #4]
 8006bc0:	617b      	str	r3, [r7, #20]
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006bc6:	60fb      	str	r3, [r7, #12]
 8006bc8:	68fb      	ldr	r3, [r7, #12]
 8006bca:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006bce:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006bd2:	60fb      	str	r3, [r7, #12]
 8006bd4:	683b      	ldr	r3, [r7, #0]
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	021b      	lsls	r3, r3, #8
 8006bda:	68fa      	ldr	r2, [r7, #12]
 8006bdc:	4313      	orrs	r3, r2
 8006bde:	60fb      	str	r3, [r7, #12]
 8006be0:	693b      	ldr	r3, [r7, #16]
 8006be2:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8006be6:	613b      	str	r3, [r7, #16]
 8006be8:	683b      	ldr	r3, [r7, #0]
 8006bea:	689b      	ldr	r3, [r3, #8]
 8006bec:	051b      	lsls	r3, r3, #20
 8006bee:	693a      	ldr	r2, [r7, #16]
 8006bf0:	4313      	orrs	r3, r2
 8006bf2:	613b      	str	r3, [r7, #16]
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	4a18      	ldr	r2, [pc, #96]	@ (8006c58 <TIM_OC6_SetConfig+0xb8>)
 8006bf8:	4293      	cmp	r3, r2
 8006bfa:	d00f      	beq.n	8006c1c <TIM_OC6_SetConfig+0x7c>
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	4a17      	ldr	r2, [pc, #92]	@ (8006c5c <TIM_OC6_SetConfig+0xbc>)
 8006c00:	4293      	cmp	r3, r2
 8006c02:	d00b      	beq.n	8006c1c <TIM_OC6_SetConfig+0x7c>
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	4a16      	ldr	r2, [pc, #88]	@ (8006c60 <TIM_OC6_SetConfig+0xc0>)
 8006c08:	4293      	cmp	r3, r2
 8006c0a:	d007      	beq.n	8006c1c <TIM_OC6_SetConfig+0x7c>
 8006c0c:	687b      	ldr	r3, [r7, #4]
 8006c0e:	4a15      	ldr	r2, [pc, #84]	@ (8006c64 <TIM_OC6_SetConfig+0xc4>)
 8006c10:	4293      	cmp	r3, r2
 8006c12:	d003      	beq.n	8006c1c <TIM_OC6_SetConfig+0x7c>
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	4a14      	ldr	r2, [pc, #80]	@ (8006c68 <TIM_OC6_SetConfig+0xc8>)
 8006c18:	4293      	cmp	r3, r2
 8006c1a:	d109      	bne.n	8006c30 <TIM_OC6_SetConfig+0x90>
 8006c1c:	697b      	ldr	r3, [r7, #20]
 8006c1e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006c22:	617b      	str	r3, [r7, #20]
 8006c24:	683b      	ldr	r3, [r7, #0]
 8006c26:	695b      	ldr	r3, [r3, #20]
 8006c28:	029b      	lsls	r3, r3, #10
 8006c2a:	697a      	ldr	r2, [r7, #20]
 8006c2c:	4313      	orrs	r3, r2
 8006c2e:	617b      	str	r3, [r7, #20]
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	697a      	ldr	r2, [r7, #20]
 8006c34:	605a      	str	r2, [r3, #4]
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	68fa      	ldr	r2, [r7, #12]
 8006c3a:	651a      	str	r2, [r3, #80]	@ 0x50
 8006c3c:	683b      	ldr	r3, [r7, #0]
 8006c3e:	685a      	ldr	r2, [r3, #4]
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	693a      	ldr	r2, [r7, #16]
 8006c48:	621a      	str	r2, [r3, #32]
 8006c4a:	bf00      	nop
 8006c4c:	371c      	adds	r7, #28
 8006c4e:	46bd      	mov	sp, r7
 8006c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c54:	4770      	bx	lr
 8006c56:	bf00      	nop
 8006c58:	40012c00 	.word	0x40012c00
 8006c5c:	40013400 	.word	0x40013400
 8006c60:	40014000 	.word	0x40014000
 8006c64:	40014400 	.word	0x40014400
 8006c68:	40014800 	.word	0x40014800

08006c6c <TIM_TI1_ConfigInputStage>:
 8006c6c:	b480      	push	{r7}
 8006c6e:	b087      	sub	sp, #28
 8006c70:	af00      	add	r7, sp, #0
 8006c72:	60f8      	str	r0, [r7, #12]
 8006c74:	60b9      	str	r1, [r7, #8]
 8006c76:	607a      	str	r2, [r7, #4]
 8006c78:	68fb      	ldr	r3, [r7, #12]
 8006c7a:	6a1b      	ldr	r3, [r3, #32]
 8006c7c:	617b      	str	r3, [r7, #20]
 8006c7e:	68fb      	ldr	r3, [r7, #12]
 8006c80:	6a1b      	ldr	r3, [r3, #32]
 8006c82:	f023 0201 	bic.w	r2, r3, #1
 8006c86:	68fb      	ldr	r3, [r7, #12]
 8006c88:	621a      	str	r2, [r3, #32]
 8006c8a:	68fb      	ldr	r3, [r7, #12]
 8006c8c:	699b      	ldr	r3, [r3, #24]
 8006c8e:	613b      	str	r3, [r7, #16]
 8006c90:	693b      	ldr	r3, [r7, #16]
 8006c92:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006c96:	613b      	str	r3, [r7, #16]
 8006c98:	687b      	ldr	r3, [r7, #4]
 8006c9a:	011b      	lsls	r3, r3, #4
 8006c9c:	693a      	ldr	r2, [r7, #16]
 8006c9e:	4313      	orrs	r3, r2
 8006ca0:	613b      	str	r3, [r7, #16]
 8006ca2:	697b      	ldr	r3, [r7, #20]
 8006ca4:	f023 030a 	bic.w	r3, r3, #10
 8006ca8:	617b      	str	r3, [r7, #20]
 8006caa:	697a      	ldr	r2, [r7, #20]
 8006cac:	68bb      	ldr	r3, [r7, #8]
 8006cae:	4313      	orrs	r3, r2
 8006cb0:	617b      	str	r3, [r7, #20]
 8006cb2:	68fb      	ldr	r3, [r7, #12]
 8006cb4:	693a      	ldr	r2, [r7, #16]
 8006cb6:	619a      	str	r2, [r3, #24]
 8006cb8:	68fb      	ldr	r3, [r7, #12]
 8006cba:	697a      	ldr	r2, [r7, #20]
 8006cbc:	621a      	str	r2, [r3, #32]
 8006cbe:	bf00      	nop
 8006cc0:	371c      	adds	r7, #28
 8006cc2:	46bd      	mov	sp, r7
 8006cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cc8:	4770      	bx	lr

08006cca <TIM_TI2_ConfigInputStage>:
 8006cca:	b480      	push	{r7}
 8006ccc:	b087      	sub	sp, #28
 8006cce:	af00      	add	r7, sp, #0
 8006cd0:	60f8      	str	r0, [r7, #12]
 8006cd2:	60b9      	str	r1, [r7, #8]
 8006cd4:	607a      	str	r2, [r7, #4]
 8006cd6:	68fb      	ldr	r3, [r7, #12]
 8006cd8:	6a1b      	ldr	r3, [r3, #32]
 8006cda:	617b      	str	r3, [r7, #20]
 8006cdc:	68fb      	ldr	r3, [r7, #12]
 8006cde:	6a1b      	ldr	r3, [r3, #32]
 8006ce0:	f023 0210 	bic.w	r2, r3, #16
 8006ce4:	68fb      	ldr	r3, [r7, #12]
 8006ce6:	621a      	str	r2, [r3, #32]
 8006ce8:	68fb      	ldr	r3, [r7, #12]
 8006cea:	699b      	ldr	r3, [r3, #24]
 8006cec:	613b      	str	r3, [r7, #16]
 8006cee:	693b      	ldr	r3, [r7, #16]
 8006cf0:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006cf4:	613b      	str	r3, [r7, #16]
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	031b      	lsls	r3, r3, #12
 8006cfa:	693a      	ldr	r2, [r7, #16]
 8006cfc:	4313      	orrs	r3, r2
 8006cfe:	613b      	str	r3, [r7, #16]
 8006d00:	697b      	ldr	r3, [r7, #20]
 8006d02:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8006d06:	617b      	str	r3, [r7, #20]
 8006d08:	68bb      	ldr	r3, [r7, #8]
 8006d0a:	011b      	lsls	r3, r3, #4
 8006d0c:	697a      	ldr	r2, [r7, #20]
 8006d0e:	4313      	orrs	r3, r2
 8006d10:	617b      	str	r3, [r7, #20]
 8006d12:	68fb      	ldr	r3, [r7, #12]
 8006d14:	693a      	ldr	r2, [r7, #16]
 8006d16:	619a      	str	r2, [r3, #24]
 8006d18:	68fb      	ldr	r3, [r7, #12]
 8006d1a:	697a      	ldr	r2, [r7, #20]
 8006d1c:	621a      	str	r2, [r3, #32]
 8006d1e:	bf00      	nop
 8006d20:	371c      	adds	r7, #28
 8006d22:	46bd      	mov	sp, r7
 8006d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d28:	4770      	bx	lr

08006d2a <TIM_ITRx_SetConfig>:
 8006d2a:	b480      	push	{r7}
 8006d2c:	b085      	sub	sp, #20
 8006d2e:	af00      	add	r7, sp, #0
 8006d30:	6078      	str	r0, [r7, #4]
 8006d32:	6039      	str	r1, [r7, #0]
 8006d34:	687b      	ldr	r3, [r7, #4]
 8006d36:	689b      	ldr	r3, [r3, #8]
 8006d38:	60fb      	str	r3, [r7, #12]
 8006d3a:	68fb      	ldr	r3, [r7, #12]
 8006d3c:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8006d40:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006d44:	60fb      	str	r3, [r7, #12]
 8006d46:	683a      	ldr	r2, [r7, #0]
 8006d48:	68fb      	ldr	r3, [r7, #12]
 8006d4a:	4313      	orrs	r3, r2
 8006d4c:	f043 0307 	orr.w	r3, r3, #7
 8006d50:	60fb      	str	r3, [r7, #12]
 8006d52:	687b      	ldr	r3, [r7, #4]
 8006d54:	68fa      	ldr	r2, [r7, #12]
 8006d56:	609a      	str	r2, [r3, #8]
 8006d58:	bf00      	nop
 8006d5a:	3714      	adds	r7, #20
 8006d5c:	46bd      	mov	sp, r7
 8006d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d62:	4770      	bx	lr

08006d64 <TIM_ETR_SetConfig>:
 8006d64:	b480      	push	{r7}
 8006d66:	b087      	sub	sp, #28
 8006d68:	af00      	add	r7, sp, #0
 8006d6a:	60f8      	str	r0, [r7, #12]
 8006d6c:	60b9      	str	r1, [r7, #8]
 8006d6e:	607a      	str	r2, [r7, #4]
 8006d70:	603b      	str	r3, [r7, #0]
 8006d72:	68fb      	ldr	r3, [r7, #12]
 8006d74:	689b      	ldr	r3, [r3, #8]
 8006d76:	617b      	str	r3, [r7, #20]
 8006d78:	697b      	ldr	r3, [r7, #20]
 8006d7a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006d7e:	617b      	str	r3, [r7, #20]
 8006d80:	683b      	ldr	r3, [r7, #0]
 8006d82:	021a      	lsls	r2, r3, #8
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	431a      	orrs	r2, r3
 8006d88:	68bb      	ldr	r3, [r7, #8]
 8006d8a:	4313      	orrs	r3, r2
 8006d8c:	697a      	ldr	r2, [r7, #20]
 8006d8e:	4313      	orrs	r3, r2
 8006d90:	617b      	str	r3, [r7, #20]
 8006d92:	68fb      	ldr	r3, [r7, #12]
 8006d94:	697a      	ldr	r2, [r7, #20]
 8006d96:	609a      	str	r2, [r3, #8]
 8006d98:	bf00      	nop
 8006d9a:	371c      	adds	r7, #28
 8006d9c:	46bd      	mov	sp, r7
 8006d9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006da2:	4770      	bx	lr

08006da4 <TIM_CCxChannelCmd>:
 8006da4:	b480      	push	{r7}
 8006da6:	b087      	sub	sp, #28
 8006da8:	af00      	add	r7, sp, #0
 8006daa:	60f8      	str	r0, [r7, #12]
 8006dac:	60b9      	str	r1, [r7, #8]
 8006dae:	607a      	str	r2, [r7, #4]
 8006db0:	68bb      	ldr	r3, [r7, #8]
 8006db2:	f003 031f 	and.w	r3, r3, #31
 8006db6:	2201      	movs	r2, #1
 8006db8:	fa02 f303 	lsl.w	r3, r2, r3
 8006dbc:	617b      	str	r3, [r7, #20]
 8006dbe:	68fb      	ldr	r3, [r7, #12]
 8006dc0:	6a1a      	ldr	r2, [r3, #32]
 8006dc2:	697b      	ldr	r3, [r7, #20]
 8006dc4:	43db      	mvns	r3, r3
 8006dc6:	401a      	ands	r2, r3
 8006dc8:	68fb      	ldr	r3, [r7, #12]
 8006dca:	621a      	str	r2, [r3, #32]
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	6a1a      	ldr	r2, [r3, #32]
 8006dd0:	68bb      	ldr	r3, [r7, #8]
 8006dd2:	f003 031f 	and.w	r3, r3, #31
 8006dd6:	6879      	ldr	r1, [r7, #4]
 8006dd8:	fa01 f303 	lsl.w	r3, r1, r3
 8006ddc:	431a      	orrs	r2, r3
 8006dde:	68fb      	ldr	r3, [r7, #12]
 8006de0:	621a      	str	r2, [r3, #32]
 8006de2:	bf00      	nop
 8006de4:	371c      	adds	r7, #28
 8006de6:	46bd      	mov	sp, r7
 8006de8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dec:	4770      	bx	lr
	...

08006df0 <HAL_TIMEx_MasterConfigSynchronization>:
 8006df0:	b480      	push	{r7}
 8006df2:	b085      	sub	sp, #20
 8006df4:	af00      	add	r7, sp, #0
 8006df6:	6078      	str	r0, [r7, #4]
 8006df8:	6039      	str	r1, [r7, #0]
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006e00:	2b01      	cmp	r3, #1
 8006e02:	d101      	bne.n	8006e08 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006e04:	2302      	movs	r3, #2
 8006e06:	e065      	b.n	8006ed4 <HAL_TIMEx_MasterConfigSynchronization+0xe4>
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	2201      	movs	r2, #1
 8006e0c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006e10:	687b      	ldr	r3, [r7, #4]
 8006e12:	2202      	movs	r2, #2
 8006e14:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	681b      	ldr	r3, [r3, #0]
 8006e1c:	685b      	ldr	r3, [r3, #4]
 8006e1e:	60fb      	str	r3, [r7, #12]
 8006e20:	687b      	ldr	r3, [r7, #4]
 8006e22:	681b      	ldr	r3, [r3, #0]
 8006e24:	689b      	ldr	r3, [r3, #8]
 8006e26:	60bb      	str	r3, [r7, #8]
 8006e28:	687b      	ldr	r3, [r7, #4]
 8006e2a:	681b      	ldr	r3, [r3, #0]
 8006e2c:	4a2c      	ldr	r2, [pc, #176]	@ (8006ee0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006e2e:	4293      	cmp	r3, r2
 8006e30:	d004      	beq.n	8006e3c <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	681b      	ldr	r3, [r3, #0]
 8006e36:	4a2b      	ldr	r2, [pc, #172]	@ (8006ee4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8006e38:	4293      	cmp	r3, r2
 8006e3a:	d108      	bne.n	8006e4e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8006e3c:	68fb      	ldr	r3, [r7, #12]
 8006e3e:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8006e42:	60fb      	str	r3, [r7, #12]
 8006e44:	683b      	ldr	r3, [r7, #0]
 8006e46:	685b      	ldr	r3, [r3, #4]
 8006e48:	68fa      	ldr	r2, [r7, #12]
 8006e4a:	4313      	orrs	r3, r2
 8006e4c:	60fb      	str	r3, [r7, #12]
 8006e4e:	68fb      	ldr	r3, [r7, #12]
 8006e50:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8006e54:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006e58:	60fb      	str	r3, [r7, #12]
 8006e5a:	683b      	ldr	r3, [r7, #0]
 8006e5c:	681b      	ldr	r3, [r3, #0]
 8006e5e:	68fa      	ldr	r2, [r7, #12]
 8006e60:	4313      	orrs	r3, r2
 8006e62:	60fb      	str	r3, [r7, #12]
 8006e64:	687b      	ldr	r3, [r7, #4]
 8006e66:	681b      	ldr	r3, [r3, #0]
 8006e68:	68fa      	ldr	r2, [r7, #12]
 8006e6a:	605a      	str	r2, [r3, #4]
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	681b      	ldr	r3, [r3, #0]
 8006e70:	4a1b      	ldr	r2, [pc, #108]	@ (8006ee0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006e72:	4293      	cmp	r3, r2
 8006e74:	d018      	beq.n	8006ea8 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006e76:	687b      	ldr	r3, [r7, #4]
 8006e78:	681b      	ldr	r3, [r3, #0]
 8006e7a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006e7e:	d013      	beq.n	8006ea8 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006e80:	687b      	ldr	r3, [r7, #4]
 8006e82:	681b      	ldr	r3, [r3, #0]
 8006e84:	4a18      	ldr	r2, [pc, #96]	@ (8006ee8 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 8006e86:	4293      	cmp	r3, r2
 8006e88:	d00e      	beq.n	8006ea8 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006e8a:	687b      	ldr	r3, [r7, #4]
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	4a17      	ldr	r2, [pc, #92]	@ (8006eec <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 8006e90:	4293      	cmp	r3, r2
 8006e92:	d009      	beq.n	8006ea8 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	681b      	ldr	r3, [r3, #0]
 8006e98:	4a12      	ldr	r2, [pc, #72]	@ (8006ee4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8006e9a:	4293      	cmp	r3, r2
 8006e9c:	d004      	beq.n	8006ea8 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006e9e:	687b      	ldr	r3, [r7, #4]
 8006ea0:	681b      	ldr	r3, [r3, #0]
 8006ea2:	4a13      	ldr	r2, [pc, #76]	@ (8006ef0 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8006ea4:	4293      	cmp	r3, r2
 8006ea6:	d10c      	bne.n	8006ec2 <HAL_TIMEx_MasterConfigSynchronization+0xd2>
 8006ea8:	68bb      	ldr	r3, [r7, #8]
 8006eaa:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006eae:	60bb      	str	r3, [r7, #8]
 8006eb0:	683b      	ldr	r3, [r7, #0]
 8006eb2:	689b      	ldr	r3, [r3, #8]
 8006eb4:	68ba      	ldr	r2, [r7, #8]
 8006eb6:	4313      	orrs	r3, r2
 8006eb8:	60bb      	str	r3, [r7, #8]
 8006eba:	687b      	ldr	r3, [r7, #4]
 8006ebc:	681b      	ldr	r3, [r3, #0]
 8006ebe:	68ba      	ldr	r2, [r7, #8]
 8006ec0:	609a      	str	r2, [r3, #8]
 8006ec2:	687b      	ldr	r3, [r7, #4]
 8006ec4:	2201      	movs	r2, #1
 8006ec6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	2200      	movs	r2, #0
 8006ece:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006ed2:	2300      	movs	r3, #0
 8006ed4:	4618      	mov	r0, r3
 8006ed6:	3714      	adds	r7, #20
 8006ed8:	46bd      	mov	sp, r7
 8006eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ede:	4770      	bx	lr
 8006ee0:	40012c00 	.word	0x40012c00
 8006ee4:	40013400 	.word	0x40013400
 8006ee8:	40000400 	.word	0x40000400
 8006eec:	40000800 	.word	0x40000800
 8006ef0:	40014000 	.word	0x40014000

08006ef4 <HAL_TIMEx_ConfigBreakDeadTime>:
 8006ef4:	b480      	push	{r7}
 8006ef6:	b085      	sub	sp, #20
 8006ef8:	af00      	add	r7, sp, #0
 8006efa:	6078      	str	r0, [r7, #4]
 8006efc:	6039      	str	r1, [r7, #0]
 8006efe:	2300      	movs	r3, #0
 8006f00:	60fb      	str	r3, [r7, #12]
 8006f02:	687b      	ldr	r3, [r7, #4]
 8006f04:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006f08:	2b01      	cmp	r3, #1
 8006f0a:	d101      	bne.n	8006f10 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8006f0c:	2302      	movs	r3, #2
 8006f0e:	e073      	b.n	8006ff8 <HAL_TIMEx_ConfigBreakDeadTime+0x104>
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	2201      	movs	r2, #1
 8006f14:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006f18:	68fb      	ldr	r3, [r7, #12]
 8006f1a:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8006f1e:	683b      	ldr	r3, [r7, #0]
 8006f20:	68db      	ldr	r3, [r3, #12]
 8006f22:	4313      	orrs	r3, r2
 8006f24:	60fb      	str	r3, [r7, #12]
 8006f26:	68fb      	ldr	r3, [r7, #12]
 8006f28:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8006f2c:	683b      	ldr	r3, [r7, #0]
 8006f2e:	689b      	ldr	r3, [r3, #8]
 8006f30:	4313      	orrs	r3, r2
 8006f32:	60fb      	str	r3, [r7, #12]
 8006f34:	68fb      	ldr	r3, [r7, #12]
 8006f36:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8006f3a:	683b      	ldr	r3, [r7, #0]
 8006f3c:	685b      	ldr	r3, [r3, #4]
 8006f3e:	4313      	orrs	r3, r2
 8006f40:	60fb      	str	r3, [r7, #12]
 8006f42:	68fb      	ldr	r3, [r7, #12]
 8006f44:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8006f48:	683b      	ldr	r3, [r7, #0]
 8006f4a:	681b      	ldr	r3, [r3, #0]
 8006f4c:	4313      	orrs	r3, r2
 8006f4e:	60fb      	str	r3, [r7, #12]
 8006f50:	68fb      	ldr	r3, [r7, #12]
 8006f52:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006f56:	683b      	ldr	r3, [r7, #0]
 8006f58:	691b      	ldr	r3, [r3, #16]
 8006f5a:	4313      	orrs	r3, r2
 8006f5c:	60fb      	str	r3, [r7, #12]
 8006f5e:	68fb      	ldr	r3, [r7, #12]
 8006f60:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8006f64:	683b      	ldr	r3, [r7, #0]
 8006f66:	695b      	ldr	r3, [r3, #20]
 8006f68:	4313      	orrs	r3, r2
 8006f6a:	60fb      	str	r3, [r7, #12]
 8006f6c:	68fb      	ldr	r3, [r7, #12]
 8006f6e:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8006f72:	683b      	ldr	r3, [r7, #0]
 8006f74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006f76:	4313      	orrs	r3, r2
 8006f78:	60fb      	str	r3, [r7, #12]
 8006f7a:	68fb      	ldr	r3, [r7, #12]
 8006f7c:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 8006f80:	683b      	ldr	r3, [r7, #0]
 8006f82:	699b      	ldr	r3, [r3, #24]
 8006f84:	041b      	lsls	r3, r3, #16
 8006f86:	4313      	orrs	r3, r2
 8006f88:	60fb      	str	r3, [r7, #12]
 8006f8a:	68fb      	ldr	r3, [r7, #12]
 8006f8c:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 8006f90:	683b      	ldr	r3, [r7, #0]
 8006f92:	69db      	ldr	r3, [r3, #28]
 8006f94:	4313      	orrs	r3, r2
 8006f96:	60fb      	str	r3, [r7, #12]
 8006f98:	687b      	ldr	r3, [r7, #4]
 8006f9a:	681b      	ldr	r3, [r3, #0]
 8006f9c:	4a19      	ldr	r2, [pc, #100]	@ (8007004 <HAL_TIMEx_ConfigBreakDeadTime+0x110>)
 8006f9e:	4293      	cmp	r3, r2
 8006fa0:	d004      	beq.n	8006fac <HAL_TIMEx_ConfigBreakDeadTime+0xb8>
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	4a18      	ldr	r2, [pc, #96]	@ (8007008 <HAL_TIMEx_ConfigBreakDeadTime+0x114>)
 8006fa8:	4293      	cmp	r3, r2
 8006faa:	d11c      	bne.n	8006fe6 <HAL_TIMEx_ConfigBreakDeadTime+0xf2>
 8006fac:	68fb      	ldr	r3, [r7, #12]
 8006fae:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 8006fb2:	683b      	ldr	r3, [r7, #0]
 8006fb4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006fb6:	051b      	lsls	r3, r3, #20
 8006fb8:	4313      	orrs	r3, r2
 8006fba:	60fb      	str	r3, [r7, #12]
 8006fbc:	68fb      	ldr	r3, [r7, #12]
 8006fbe:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8006fc2:	683b      	ldr	r3, [r7, #0]
 8006fc4:	6a1b      	ldr	r3, [r3, #32]
 8006fc6:	4313      	orrs	r3, r2
 8006fc8:	60fb      	str	r3, [r7, #12]
 8006fca:	68fb      	ldr	r3, [r7, #12]
 8006fcc:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8006fd0:	683b      	ldr	r3, [r7, #0]
 8006fd2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006fd4:	4313      	orrs	r3, r2
 8006fd6:	60fb      	str	r3, [r7, #12]
 8006fd8:	68fb      	ldr	r3, [r7, #12]
 8006fda:	f023 5200 	bic.w	r2, r3, #536870912	@ 0x20000000
 8006fde:	683b      	ldr	r3, [r7, #0]
 8006fe0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006fe2:	4313      	orrs	r3, r2
 8006fe4:	60fb      	str	r3, [r7, #12]
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	681b      	ldr	r3, [r3, #0]
 8006fea:	68fa      	ldr	r2, [r7, #12]
 8006fec:	645a      	str	r2, [r3, #68]	@ 0x44
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	2200      	movs	r2, #0
 8006ff2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006ff6:	2300      	movs	r3, #0
 8006ff8:	4618      	mov	r0, r3
 8006ffa:	3714      	adds	r7, #20
 8006ffc:	46bd      	mov	sp, r7
 8006ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007002:	4770      	bx	lr
 8007004:	40012c00 	.word	0x40012c00
 8007008:	40013400 	.word	0x40013400

0800700c <HAL_TIMEx_CommutCallback>:
 800700c:	b480      	push	{r7}
 800700e:	b083      	sub	sp, #12
 8007010:	af00      	add	r7, sp, #0
 8007012:	6078      	str	r0, [r7, #4]
 8007014:	bf00      	nop
 8007016:	370c      	adds	r7, #12
 8007018:	46bd      	mov	sp, r7
 800701a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800701e:	4770      	bx	lr

08007020 <HAL_TIMEx_BreakCallback>:
 8007020:	b480      	push	{r7}
 8007022:	b083      	sub	sp, #12
 8007024:	af00      	add	r7, sp, #0
 8007026:	6078      	str	r0, [r7, #4]
 8007028:	bf00      	nop
 800702a:	370c      	adds	r7, #12
 800702c:	46bd      	mov	sp, r7
 800702e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007032:	4770      	bx	lr

08007034 <HAL_TIMEx_Break2Callback>:
 8007034:	b480      	push	{r7}
 8007036:	b083      	sub	sp, #12
 8007038:	af00      	add	r7, sp, #0
 800703a:	6078      	str	r0, [r7, #4]
 800703c:	bf00      	nop
 800703e:	370c      	adds	r7, #12
 8007040:	46bd      	mov	sp, r7
 8007042:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007046:	4770      	bx	lr

08007048 <HAL_TIMEx_EncoderIndexCallback>:
 8007048:	b480      	push	{r7}
 800704a:	b083      	sub	sp, #12
 800704c:	af00      	add	r7, sp, #0
 800704e:	6078      	str	r0, [r7, #4]
 8007050:	bf00      	nop
 8007052:	370c      	adds	r7, #12
 8007054:	46bd      	mov	sp, r7
 8007056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800705a:	4770      	bx	lr

0800705c <HAL_TIMEx_DirectionChangeCallback>:
 800705c:	b480      	push	{r7}
 800705e:	b083      	sub	sp, #12
 8007060:	af00      	add	r7, sp, #0
 8007062:	6078      	str	r0, [r7, #4]
 8007064:	bf00      	nop
 8007066:	370c      	adds	r7, #12
 8007068:	46bd      	mov	sp, r7
 800706a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800706e:	4770      	bx	lr

08007070 <HAL_TIMEx_IndexErrorCallback>:
 8007070:	b480      	push	{r7}
 8007072:	b083      	sub	sp, #12
 8007074:	af00      	add	r7, sp, #0
 8007076:	6078      	str	r0, [r7, #4]
 8007078:	bf00      	nop
 800707a:	370c      	adds	r7, #12
 800707c:	46bd      	mov	sp, r7
 800707e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007082:	4770      	bx	lr

08007084 <HAL_TIMEx_TransitionErrorCallback>:
 8007084:	b480      	push	{r7}
 8007086:	b083      	sub	sp, #12
 8007088:	af00      	add	r7, sp, #0
 800708a:	6078      	str	r0, [r7, #4]
 800708c:	bf00      	nop
 800708e:	370c      	adds	r7, #12
 8007090:	46bd      	mov	sp, r7
 8007092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007096:	4770      	bx	lr

08007098 <memset>:
 8007098:	4402      	add	r2, r0
 800709a:	4603      	mov	r3, r0
 800709c:	4293      	cmp	r3, r2
 800709e:	d100      	bne.n	80070a2 <memset+0xa>
 80070a0:	4770      	bx	lr
 80070a2:	f803 1b01 	strb.w	r1, [r3], #1
 80070a6:	e7f9      	b.n	800709c <memset+0x4>

080070a8 <__libc_init_array>:
 80070a8:	b570      	push	{r4, r5, r6, lr}
 80070aa:	4d0d      	ldr	r5, [pc, #52]	@ (80070e0 <__libc_init_array+0x38>)
 80070ac:	4c0d      	ldr	r4, [pc, #52]	@ (80070e4 <__libc_init_array+0x3c>)
 80070ae:	1b64      	subs	r4, r4, r5
 80070b0:	10a4      	asrs	r4, r4, #2
 80070b2:	2600      	movs	r6, #0
 80070b4:	42a6      	cmp	r6, r4
 80070b6:	d109      	bne.n	80070cc <__libc_init_array+0x24>
 80070b8:	4d0b      	ldr	r5, [pc, #44]	@ (80070e8 <__libc_init_array+0x40>)
 80070ba:	4c0c      	ldr	r4, [pc, #48]	@ (80070ec <__libc_init_array+0x44>)
 80070bc:	f000 f826 	bl	800710c <_init>
 80070c0:	1b64      	subs	r4, r4, r5
 80070c2:	10a4      	asrs	r4, r4, #2
 80070c4:	2600      	movs	r6, #0
 80070c6:	42a6      	cmp	r6, r4
 80070c8:	d105      	bne.n	80070d6 <__libc_init_array+0x2e>
 80070ca:	bd70      	pop	{r4, r5, r6, pc}
 80070cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80070d0:	4798      	blx	r3
 80070d2:	3601      	adds	r6, #1
 80070d4:	e7ee      	b.n	80070b4 <__libc_init_array+0xc>
 80070d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80070da:	4798      	blx	r3
 80070dc:	3601      	adds	r6, #1
 80070de:	e7f2      	b.n	80070c6 <__libc_init_array+0x1e>
 80070e0:	08007144 	.word	0x08007144
 80070e4:	08007144 	.word	0x08007144
 80070e8:	08007144 	.word	0x08007144
 80070ec:	08007148 	.word	0x08007148

080070f0 <memcpy>:
 80070f0:	440a      	add	r2, r1
 80070f2:	4291      	cmp	r1, r2
 80070f4:	f100 33ff 	add.w	r3, r0, #4294967295
 80070f8:	d100      	bne.n	80070fc <memcpy+0xc>
 80070fa:	4770      	bx	lr
 80070fc:	b510      	push	{r4, lr}
 80070fe:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007102:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007106:	4291      	cmp	r1, r2
 8007108:	d1f9      	bne.n	80070fe <memcpy+0xe>
 800710a:	bd10      	pop	{r4, pc}

0800710c <_init>:
 800710c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800710e:	bf00      	nop
 8007110:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007112:	bc08      	pop	{r3}
 8007114:	469e      	mov	lr, r3
 8007116:	4770      	bx	lr

08007118 <_fini>:
 8007118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800711a:	bf00      	nop
 800711c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800711e:	bc08      	pop	{r3}
 8007120:	469e      	mov	lr, r3
 8007122:	4770      	bx	lr
